Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OBJECT
    TLIST

Grammar

Rule 0     S' -> capi
Rule 1     capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 2     capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 3     capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 4     capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 5     capi_action1 -> <empty>
Rule 6     capi_action2 -> <empty>
Rule 7     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 8     start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 9     start_action1 -> <empty>
Rule 10    run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 11    run_action1 -> <empty>
Rule 12    main_cont -> <empty>
Rule 13    vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 14    vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 15    vars -> VAR recids COLON type SEMICOLON vars
Rule 16    vars -> VAR recids COLON type SEMICOLON
Rule 17    recids -> ID
Rule 18    recids -> ID COMMA recids
Rule 19    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 20    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 21    recstatement -> statement recstatement
Rule 22    recstatement -> statement
Rule 23    statement -> assign SEMICOLON
Rule 24    statement -> condition
Rule 25    statement -> vars
Rule 26    statement -> loop
Rule 27    statement -> write SEMICOLON
Rule 28    statement -> return SEMICOLON
Rule 29    statement -> functioncall SEMICOLON
Rule 30    statement -> nestedassign SEMICOLON
Rule 31    statement -> specialfunction SEMICOLON
Rule 32    specialfunction -> draw
Rule 33    specialfunction -> size
Rule 34    specialfunction -> head
Rule 35    specialfunction -> tail
Rule 36    specialfunction -> last
Rule 37    specialfunction -> set_title
Rule 38    specialfunction -> set_dimension
Rule 39    specialfunction -> set_color
Rule 40    specialfunction -> create_object
Rule 41    specialfunction -> create_text
Rule 42    draw -> DRAW LEFTPAR recfuncexp RIGHTPAR
Rule 43    size -> SIZE LEFTPAR RIGHTPAR
Rule 44    head -> HEAD LEFTPAR RIGHTPAR
Rule 45    tail -> TAIL LEFTPAR RIGHTPAR
Rule 46    last -> LAST LEFTPAR RIGHTPAR
Rule 47    set_title -> SET_TITLE LEFTPAR expression RIGHTPAR
Rule 48    set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 49    set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 50    create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
Rule 51    create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR
Rule 52    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 53    assign_action1 -> <empty>
Rule 54    assign_action2 -> <empty>
Rule 55    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 56    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 57    condition_action1 -> <empty>
Rule 58    condition_action2 -> <empty>
Rule 59    condition_action3 -> <empty>
Rule 60    loop -> for
Rule 61    loop -> while
Rule 62    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 63    for_action1 -> <empty>
Rule 64    for_action2 -> <empty>
Rule 65    for_action3 -> <empty>
Rule 66    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 67    while_action1 -> <empty>
Rule 68    while_action2 -> <empty>
Rule 69    while_action3 -> <empty>
Rule 70    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 71    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 72    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 73    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 74    startscope_action -> <empty>
Rule 75    function_action1 -> <empty>
Rule 76    function_action2 -> <empty>
Rule 77    function_action3 -> <empty>
Rule 78    recparams -> ID COLON type
Rule 79    recparams -> ID COLON type COMMA recparams
Rule 80    recfunc -> function recfunc
Rule 81    recfunc -> function
Rule 82    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 83    recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 84    recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 85    recwrite -> expression action_recwrite_exp
Rule 86    recwrite -> STRING action_recwrite_cte
Rule 87    action_recwrite_exp -> <empty>
Rule 88    action_recwrite_cte -> <empty>
Rule 89    return -> RETURN expression
Rule 90    functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
Rule 91    functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
Rule 92    function_call_action1 -> <empty>
Rule 93    function_call_action2 -> <empty>
Rule 94    recfuncexp -> expression COMMA recfuncexp
Rule 95    recfuncexp -> expression recfunc_action1
Rule 96    recfunc_action1 -> <empty>
Rule 97    expression -> exp RELOP relop_action1 exp relop_action2
Rule 98    expression -> exp LOGIC logic_action1 exp logic_action2
Rule 99    expression -> exp
Rule 100   relop_action1 -> <empty>
Rule 101   relop_action2 -> <empty>
Rule 102   logic_action1 -> <empty>
Rule 103   logic_action2 -> <empty>
Rule 104   exp -> term exp_action recexp
Rule 105   exp -> term exp_action
Rule 106   exp_action -> <empty>
Rule 107   recexp -> EX add_operator exp
Rule 108   term -> factor term_action recterm
Rule 109   term -> factor term_action
Rule 110   term_action -> <empty>
Rule 111   recterm -> TERMS add_operator term
Rule 112   add_operator -> <empty>
Rule 113   factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2
Rule 114   factor -> EX cte
Rule 115   factor -> cte
Rule 116   factor_action1 -> <empty>
Rule 117   factor_action2 -> <empty>
Rule 118   type -> primitivetype
Rule 119   type -> LIST LEFTHAT primitivetype RIGHTHAT
Rule 120   primitivetype -> TINT
Rule 121   primitivetype -> TFLOAT
Rule 122   primitivetype -> TSTRING
Rule 123   primitivetype -> TBOOL
Rule 124   primitivetype -> TOBJECT
Rule 125   listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
Rule 126   nestedvalue -> ID DOT ID
Rule 127   nestedassign -> nestedvalue EQUAL expression
Rule 128   cte -> <empty>
Rule 129   cte -> id
Rule 130   cte -> int
Rule 131   cte -> float
Rule 132   cte -> bool
Rule 133   cte -> string
Rule 134   cte -> nestedvalue
Rule 135   cte -> functioncall
Rule 136   cte -> listaccess
Rule 137   cte -> specialfunction
Rule 138   id -> ID
Rule 139   string -> STRING
Rule 140   int -> INT
Rule 141   float -> FLOAT
Rule 142   bool -> TRUE
Rule 143   bool -> FALSE

Terminals, with rules where they appear

COLON                : 1 2 3 4 7 13 14 15 16 19 20 78 79
COMMA                : 18 48 49 49 79 83 84 94
COMMENT              : 
CREATE_OBJECT        : 50
CREATE_TEXT          : 51
DOT                  : 126
DRAW                 : 42
ELSE                 : 56
EQUAL                : 13 14 52 127
EX                   : 107 114
FALSE                : 143
FLOAT                : 141
FOR                  : 62
FUNC                 : 8 10 70 71 72 73
GLOBAL               : 7
HEAD                 : 44
ID                   : 17 18 52 70 71 72 73 78 79 90 91 125 126 126 138
IF                   : 55 56
INT                  : 140
LAST                 : 46
LEFTBRACKET          : 125
LEFTHAT              : 119
LEFTKEY              : 1 2 3 4 7 19 20
LEFTPAR              : 8 10 42 43 44 45 46 47 48 49 50 51 55 56 62 66 70 71 72 73 82 90 91 113
LIST                 : 119
LOGIC                : 98
MAIN                 : 1 2 3 4
OBJECT               : 
PRINT                : 82
RELOP                : 97
RETURN               : 89
RIGHTBRACKET         : 125
RIGHTHAT             : 119
RIGHTKEY             : 1 2 3 4 7 19 20
RIGHTPAR             : 8 10 42 43 44 45 46 47 48 49 50 51 55 56 62 66 70 71 72 73 82 90 91 113
RUN                  : 10
SEMICOLON            : 1 2 3 4 7 13 14 15 16 19 20 23 27 28 29 30 31 62 62 62 125
SET_COLOR            : 49
SET_DIMENSION        : 48
SET_TITLE            : 47
SIZE                 : 43
START                : 8
STRING               : 84 86 139
TAIL                 : 45
TBOOL                : 123
TERMS                : 111
TFLOAT               : 121
TINT                 : 120
TLIST                : 
TOBJECT              : 124
TRUE                 : 142
TSTRING              : 122
VAR                  : 13 14 15 16
VOID                 : 8 10 72 73
WHILE                : 66
error                : 

Nonterminals, with rules where they appear

action_recwrite_cte  : 84 86
action_recwrite_exp  : 83 85
add_operator         : 107 111
assign               : 23 62 62
assign_action1       : 52
assign_action2       : 52
block                : 8 10 55 56 56 62 66 70 71 72 73
bool                 : 132
capi                 : 0
capi_action1         : 1 2 3 4
capi_action2         : 1 2 3 4
condition            : 24
condition_action1    : 55 56
condition_action2    : 55 56
condition_action3    : 56
create_object        : 40
create_text          : 41
cte                  : 114 115
draw                 : 32
exp                  : 97 97 98 98 99 107
exp_action           : 104 105
expression           : 13 14 47 48 48 49 49 49 52 55 56 62 66 83 85 89 94 95 113 125 127
factor               : 108 109
factor_action1       : 113
factor_action2       : 113
float                : 131
for                  : 60
for_action1          : 62
for_action2          : 62
for_action3          : 62
function             : 80 81
function_action1     : 70 72
function_action2     : 70 72
function_action3     : 70 71 72 73
function_call_action1 : 90 91
function_call_action2 : 90 91
functioncall         : 29 135
global               : 1 3
head                 : 34
id                   : 129
int                  : 130
last                 : 36
listaccess           : 136
logic_action1        : 98
logic_action2        : 98
loop                 : 26
main_cont            : 8 10
nestedassign         : 30
nestedvalue          : 127 134
primitivetype        : 118 119
recexp               : 104
recfunc              : 1 2 80
recfunc_action1      : 95
recfuncexp           : 42 50 51 90 94
recids               : 13 14 15 16 18
recparams            : 70 72 79
recstatement         : 19 21
recterm              : 108
recwrite             : 82 83 84
relop_action1        : 97
relop_action2        : 97
return               : 28
run                  : 1 2 3 4
run_action1          : 10
set_color            : 39
set_dimension        : 38
set_title            : 37
size                 : 33
specialfunction      : 31 137
start                : 1 2 3 4
start_action1        : 8
startscope_action    : 8 10 62 66 70 71 72 73
statement            : 21 22
string               : 133
tail                 : 35
term                 : 104 105 111
term_action          : 108 109
type                 : 13 14 15 16 70 71 78 79
vars                 : 7 13 15 25
while                : 61
while_action1        : 66
while_action2        : 66
while_action3        : 66
write                : 27

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> . capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> . capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> . capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (5) capi_action1 -> .

    MAIN            reduce using rule 5 (capi_action1 -> .)
    GLOBAL          reduce using rule 5 (capi_action1 -> .)
    VOID            reduce using rule 5 (capi_action1 -> .)
    LIST            reduce using rule 5 (capi_action1 -> .)
    TINT            reduce using rule 5 (capi_action1 -> .)
    TFLOAT          reduce using rule 5 (capi_action1 -> .)
    TSTRING         reduce using rule 5 (capi_action1 -> .)
    TBOOL           reduce using rule 5 (capi_action1 -> .)
    TOBJECT         reduce using rule 5 (capi_action1 -> .)

    capi                           shift and go to state 1
    capi_action1                   shift and go to state 2

state 1

    (0) S' -> capi .



state 2

    (1) capi -> capi_action1 . global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> capi_action1 . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 . global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> capi_action1 . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (7) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (80) recfunc -> . function recfunc
    (81) recfunc -> . function
    (70) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (71) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (72) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (73) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (118) type -> . primitivetype
    (119) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (120) primitivetype -> . TINT
    (121) primitivetype -> . TFLOAT
    (122) primitivetype -> . TSTRING
    (123) primitivetype -> . TBOOL
    (124) primitivetype -> . TOBJECT

    MAIN            shift and go to state 5
    GLOBAL          shift and go to state 6
    VOID            shift and go to state 9
    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    global                         shift and go to state 3
    recfunc                        shift and go to state 4
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 3

    (1) capi -> capi_action1 global . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 global . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (80) recfunc -> . function recfunc
    (81) recfunc -> . function
    (70) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (71) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (72) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (73) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (118) type -> . primitivetype
    (119) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (120) primitivetype -> . TINT
    (121) primitivetype -> . TFLOAT
    (122) primitivetype -> . TSTRING
    (123) primitivetype -> . TBOOL
    (124) primitivetype -> . TOBJECT

    MAIN            shift and go to state 18
    VOID            shift and go to state 9
    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    recfunc                        shift and go to state 17
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 4

    (2) capi -> capi_action1 recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 19


state 5

    (4) capi -> capi_action1 MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 6

    (7) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 21


state 7

    (80) recfunc -> function . recfunc
    (81) recfunc -> function .
    (80) recfunc -> . function recfunc
    (81) recfunc -> . function
    (70) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (71) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (72) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (73) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (118) type -> . primitivetype
    (119) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (120) primitivetype -> . TINT
    (121) primitivetype -> . TFLOAT
    (122) primitivetype -> . TSTRING
    (123) primitivetype -> . TBOOL
    (124) primitivetype -> . TOBJECT

    MAIN            reduce using rule 81 (recfunc -> function .)
    VOID            shift and go to state 9
    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    function                       shift and go to state 7
    recfunc                        shift and go to state 22
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 8

    (70) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (71) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 9

    (72) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (73) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 24


state 10

    (118) type -> primitivetype .

    FUNC            reduce using rule 118 (type -> primitivetype .)
    EQUAL           reduce using rule 118 (type -> primitivetype .)
    SEMICOLON       reduce using rule 118 (type -> primitivetype .)
    COMMA           reduce using rule 118 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 118 (type -> primitivetype .)


state 11

    (119) type -> LIST . LEFTHAT primitivetype RIGHTHAT

    LEFTHAT         shift and go to state 25


state 12

    (120) primitivetype -> TINT .

    FUNC            reduce using rule 120 (primitivetype -> TINT .)
    RIGHTHAT        reduce using rule 120 (primitivetype -> TINT .)
    EQUAL           reduce using rule 120 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 120 (primitivetype -> TINT .)
    COMMA           reduce using rule 120 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 120 (primitivetype -> TINT .)


state 13

    (121) primitivetype -> TFLOAT .

    FUNC            reduce using rule 121 (primitivetype -> TFLOAT .)
    RIGHTHAT        reduce using rule 121 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 121 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 121 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 121 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 121 (primitivetype -> TFLOAT .)


state 14

    (122) primitivetype -> TSTRING .

    FUNC            reduce using rule 122 (primitivetype -> TSTRING .)
    RIGHTHAT        reduce using rule 122 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 122 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 122 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 122 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 122 (primitivetype -> TSTRING .)


state 15

    (123) primitivetype -> TBOOL .

    FUNC            reduce using rule 123 (primitivetype -> TBOOL .)
    RIGHTHAT        reduce using rule 123 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 123 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 123 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 123 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 123 (primitivetype -> TBOOL .)


state 16

    (124) primitivetype -> TOBJECT .

    FUNC            reduce using rule 124 (primitivetype -> TOBJECT .)
    RIGHTHAT        reduce using rule 124 (primitivetype -> TOBJECT .)
    EQUAL           reduce using rule 124 (primitivetype -> TOBJECT .)
    SEMICOLON       reduce using rule 124 (primitivetype -> TOBJECT .)
    COMMA           reduce using rule 124 (primitivetype -> TOBJECT .)
    RIGHTPAR        reduce using rule 124 (primitivetype -> TOBJECT .)


state 17

    (1) capi -> capi_action1 global recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 26


state 18

    (3) capi -> capi_action1 global MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (2) capi -> capi_action1 recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 28


state 20

    (4) capi -> capi_action1 MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (7) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 30


state 22

    (80) recfunc -> function recfunc .

    MAIN            reduce using rule 80 (recfunc -> function recfunc .)


state 23

    (70) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (71) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (72) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (73) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 32


state 25

    (119) type -> LIST LEFTHAT . primitivetype RIGHTHAT
    (120) primitivetype -> . TINT
    (121) primitivetype -> . TFLOAT
    (122) primitivetype -> . TSTRING
    (123) primitivetype -> . TBOOL
    (124) primitivetype -> . TOBJECT

    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    primitivetype                  shift and go to state 33

state 26

    (1) capi -> capi_action1 global recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 34


state 27

    (3) capi -> capi_action1 global MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (2) capi -> capi_action1 recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 36


state 29

    (4) capi -> capi_action1 MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 37

state 30

    (7) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 40

    vars                           shift and go to state 39

state 31

    (70) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (71) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (74) startscope_action -> .

    LEFTPAR         reduce using rule 74 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (72) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (73) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (74) startscope_action -> .

    LEFTPAR         reduce using rule 74 (startscope_action -> .)

    startscope_action              shift and go to state 42

state 33

    (119) type -> LIST LEFTHAT primitivetype . RIGHTHAT

    RIGHTHAT        shift and go to state 43


state 34

    (1) capi -> capi_action1 global recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 44


state 35

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 45

state 36

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 46

state 37

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 47

state 38

    (8) start -> VOID . FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 48


state 39

    (7) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 49


state 40

    (13) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR . recids COLON type SEMICOLON vars
    (16) vars -> VAR . recids COLON type SEMICOLON
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 50

state 41

    (70) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (71) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 42

    (72) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (73) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 53


state 43

    (119) type -> LIST LEFTHAT primitivetype RIGHTHAT .

    FUNC            reduce using rule 119 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    EQUAL           reduce using rule 119 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    SEMICOLON       reduce using rule 119 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    COMMA           reduce using rule 119 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    RIGHTPAR        reduce using rule 119 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)


state 44

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 54

state 45

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 55

state 46

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 56

state 47

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 57

state 48

    (8) start -> VOID FUNC . start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
    (9) start_action1 -> .

    START           reduce using rule 9 (start_action1 -> .)

    start_action1                  shift and go to state 59

state 49

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 60


state 50

    (13) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR recids . COLON type SEMICOLON vars
    (16) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 61


state 51

    (17) recids -> ID .
    (18) recids -> ID . COMMA recids

    COLON           reduce using rule 17 (recids -> ID .)
    COMMA           shift and go to state 62


state 52

    (70) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (71) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (78) recparams -> . ID COLON type
    (79) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 65
    ID              shift and go to state 63

    recparams                      shift and go to state 64

state 53

    (72) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (73) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (78) recparams -> . ID COLON type
    (79) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 67
    ID              shift and go to state 63

    recparams                      shift and go to state 66

state 54

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 68

state 55

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 69

state 56

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 70

state 57

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 71


state 58

    (10) run -> VOID . FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 72


state 59

    (8) start -> VOID FUNC start_action1 . START startscope_action LEFTPAR RIGHTPAR main_cont block

    START           shift and go to state 73


state 60

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 61

    (13) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON . type SEMICOLON vars
    (16) vars -> VAR recids COLON . type SEMICOLON
    (118) type -> . primitivetype
    (119) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (120) primitivetype -> . TINT
    (121) primitivetype -> . TFLOAT
    (122) primitivetype -> . TSTRING
    (123) primitivetype -> . TBOOL
    (124) primitivetype -> . TOBJECT

    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 74
    primitivetype                  shift and go to state 10

state 62

    (18) recids -> ID COMMA . recids
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 75

state 63

    (78) recparams -> ID . COLON type
    (79) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 76


state 64

    (70) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (75) function_action1 -> .

    RIGHTPAR        reduce using rule 75 (function_action1 -> .)

    function_action1               shift and go to state 77

state 65

    (71) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (77) function_action3 -> .

    COLON           reduce using rule 77 (function_action3 -> .)

    function_action3               shift and go to state 78

state 66

    (72) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (75) function_action1 -> .

    RIGHTPAR        reduce using rule 75 (function_action1 -> .)

    function_action1               shift and go to state 79

state 67

    (73) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (77) function_action3 -> .

    COLON           reduce using rule 77 (function_action3 -> .)

    function_action3               shift and go to state 80

state 68

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 81

state 69

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 82


state 70

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 83


state 71

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 84


state 72

    (10) run -> VOID FUNC . run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
    (11) run_action1 -> .

    RUN             reduce using rule 11 (run_action1 -> .)

    run_action1                    shift and go to state 85

state 73

    (8) start -> VOID FUNC start_action1 START . startscope_action LEFTPAR RIGHTPAR main_cont block
    (74) startscope_action -> .

    LEFTPAR         reduce using rule 74 (startscope_action -> .)

    startscope_action              shift and go to state 86

state 74

    (13) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON type . SEMICOLON vars
    (16) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 87
    SEMICOLON       shift and go to state 88


state 75

    (18) recids -> ID COMMA recids .

    COLON           reduce using rule 18 (recids -> ID COMMA recids .)


state 76

    (78) recparams -> ID COLON . type
    (79) recparams -> ID COLON . type COMMA recparams
    (118) type -> . primitivetype
    (119) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (120) primitivetype -> . TINT
    (121) primitivetype -> . TFLOAT
    (122) primitivetype -> . TSTRING
    (123) primitivetype -> . TBOOL
    (124) primitivetype -> . TOBJECT

    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 89
    primitivetype                  shift and go to state 10

state 77

    (70) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 90


state 78

    (71) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 91

state 79

    (72) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 93


state 80

    (73) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 94

state 81

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 95


state 82

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 96


state 83

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 97


state 84

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 85

    (10) run -> VOID FUNC run_action1 . RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    RUN             shift and go to state 98


state 86

    (8) start -> VOID FUNC start_action1 START startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 99


state 87

    (13) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 100
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 88

    (15) vars -> VAR recids COLON type SEMICOLON . vars
    (16) vars -> VAR recids COLON type SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    DRAW            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SIZE            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    HEAD            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    TAIL            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    LAST            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_TITLE       reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_DIMENSION   reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_COLOR       reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_OBJECT   reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 142

state 89

    (78) recparams -> ID COLON type .
    (79) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 78 (recparams -> ID COLON type .)
    COMMA           shift and go to state 143


state 90

    (70) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (76) function_action2 -> .

    COLON           reduce using rule 76 (function_action2 -> .)

    function_action2               shift and go to state 144

state 91

    (71) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    LIST            reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 92

    (19) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 145


state 93

    (72) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (76) function_action2 -> .

    COLON           reduce using rule 76 (function_action2 -> .)

    function_action2               shift and go to state 146

state 94

    (73) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    LIST            reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 95

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 147


state 96

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 97

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 98

    (10) run -> VOID FUNC run_action1 RUN . startscope_action LEFTPAR RIGHTPAR main_cont block
    (74) startscope_action -> .

    LEFTPAR         reduce using rule 74 (startscope_action -> .)

    startscope_action              shift and go to state 148

state 99

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 149


state 100

    (13) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 150


state 101

    (97) expression -> exp . RELOP relop_action1 exp relop_action2
    (98) expression -> exp . LOGIC logic_action1 exp logic_action2
    (99) expression -> exp .

    RELOP           shift and go to state 151
    LOGIC           shift and go to state 152
    SEMICOLON       reduce using rule 99 (expression -> exp .)
    RIGHTPAR        reduce using rule 99 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 99 (expression -> exp .)
    COMMA           reduce using rule 99 (expression -> exp .)


state 102

    (104) exp -> term . exp_action recexp
    (105) exp -> term . exp_action
    (106) exp_action -> .

    EX              reduce using rule 106 (exp_action -> .)
    RELOP           reduce using rule 106 (exp_action -> .)
    LOGIC           reduce using rule 106 (exp_action -> .)
    SEMICOLON       reduce using rule 106 (exp_action -> .)
    RIGHTPAR        reduce using rule 106 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 106 (exp_action -> .)
    COMMA           reduce using rule 106 (exp_action -> .)

    exp_action                     shift and go to state 153

state 103

    (108) term -> factor . term_action recterm
    (109) term -> factor . term_action
    (110) term_action -> .

    TERMS           reduce using rule 110 (term_action -> .)
    EX              reduce using rule 110 (term_action -> .)
    RELOP           reduce using rule 110 (term_action -> .)
    LOGIC           reduce using rule 110 (term_action -> .)
    SEMICOLON       reduce using rule 110 (term_action -> .)
    RIGHTPAR        reduce using rule 110 (term_action -> .)
    RIGHTBRACKET    reduce using rule 110 (term_action -> .)
    COMMA           reduce using rule 110 (term_action -> .)

    term_action                    shift and go to state 154

state 104

    (113) factor -> factor_action1 . LEFTPAR expression RIGHTPAR factor_action2

    LEFTPAR         shift and go to state 155


state 105

    (114) factor -> EX . cte
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    TERMS           reduce using rule 128 (cte -> .)
    EX              reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    RIGHTBRACKET    reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

    cte                            shift and go to state 156
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 106

    (115) factor -> cte .

    TERMS           reduce using rule 115 (factor -> cte .)
    EX              reduce using rule 115 (factor -> cte .)
    RELOP           reduce using rule 115 (factor -> cte .)
    LOGIC           reduce using rule 115 (factor -> cte .)
    SEMICOLON       reduce using rule 115 (factor -> cte .)
    RIGHTPAR        reduce using rule 115 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 115 (factor -> cte .)
    COMMA           reduce using rule 115 (factor -> cte .)


state 107

    (129) cte -> id .

    TERMS           reduce using rule 129 (cte -> id .)
    EX              reduce using rule 129 (cte -> id .)
    RELOP           reduce using rule 129 (cte -> id .)
    LOGIC           reduce using rule 129 (cte -> id .)
    SEMICOLON       reduce using rule 129 (cte -> id .)
    RIGHTPAR        reduce using rule 129 (cte -> id .)
    RIGHTBRACKET    reduce using rule 129 (cte -> id .)
    COMMA           reduce using rule 129 (cte -> id .)


state 108

    (130) cte -> int .

    TERMS           reduce using rule 130 (cte -> int .)
    EX              reduce using rule 130 (cte -> int .)
    RELOP           reduce using rule 130 (cte -> int .)
    LOGIC           reduce using rule 130 (cte -> int .)
    SEMICOLON       reduce using rule 130 (cte -> int .)
    RIGHTPAR        reduce using rule 130 (cte -> int .)
    RIGHTBRACKET    reduce using rule 130 (cte -> int .)
    COMMA           reduce using rule 130 (cte -> int .)


state 109

    (131) cte -> float .

    TERMS           reduce using rule 131 (cte -> float .)
    EX              reduce using rule 131 (cte -> float .)
    RELOP           reduce using rule 131 (cte -> float .)
    LOGIC           reduce using rule 131 (cte -> float .)
    SEMICOLON       reduce using rule 131 (cte -> float .)
    RIGHTPAR        reduce using rule 131 (cte -> float .)
    RIGHTBRACKET    reduce using rule 131 (cte -> float .)
    COMMA           reduce using rule 131 (cte -> float .)


state 110

    (132) cte -> bool .

    TERMS           reduce using rule 132 (cte -> bool .)
    EX              reduce using rule 132 (cte -> bool .)
    RELOP           reduce using rule 132 (cte -> bool .)
    LOGIC           reduce using rule 132 (cte -> bool .)
    SEMICOLON       reduce using rule 132 (cte -> bool .)
    RIGHTPAR        reduce using rule 132 (cte -> bool .)
    RIGHTBRACKET    reduce using rule 132 (cte -> bool .)
    COMMA           reduce using rule 132 (cte -> bool .)


state 111

    (133) cte -> string .

    TERMS           reduce using rule 133 (cte -> string .)
    EX              reduce using rule 133 (cte -> string .)
    RELOP           reduce using rule 133 (cte -> string .)
    LOGIC           reduce using rule 133 (cte -> string .)
    SEMICOLON       reduce using rule 133 (cte -> string .)
    RIGHTPAR        reduce using rule 133 (cte -> string .)
    RIGHTBRACKET    reduce using rule 133 (cte -> string .)
    COMMA           reduce using rule 133 (cte -> string .)


state 112

    (134) cte -> nestedvalue .

    TERMS           reduce using rule 134 (cte -> nestedvalue .)
    EX              reduce using rule 134 (cte -> nestedvalue .)
    RELOP           reduce using rule 134 (cte -> nestedvalue .)
    LOGIC           reduce using rule 134 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 134 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 134 (cte -> nestedvalue .)
    RIGHTBRACKET    reduce using rule 134 (cte -> nestedvalue .)
    COMMA           reduce using rule 134 (cte -> nestedvalue .)


state 113

    (135) cte -> functioncall .

    TERMS           reduce using rule 135 (cte -> functioncall .)
    EX              reduce using rule 135 (cte -> functioncall .)
    RELOP           reduce using rule 135 (cte -> functioncall .)
    LOGIC           reduce using rule 135 (cte -> functioncall .)
    SEMICOLON       reduce using rule 135 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 135 (cte -> functioncall .)
    RIGHTBRACKET    reduce using rule 135 (cte -> functioncall .)
    COMMA           reduce using rule 135 (cte -> functioncall .)


state 114

    (136) cte -> listaccess .

    TERMS           reduce using rule 136 (cte -> listaccess .)
    EX              reduce using rule 136 (cte -> listaccess .)
    RELOP           reduce using rule 136 (cte -> listaccess .)
    LOGIC           reduce using rule 136 (cte -> listaccess .)
    SEMICOLON       reduce using rule 136 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 136 (cte -> listaccess .)
    RIGHTBRACKET    reduce using rule 136 (cte -> listaccess .)
    COMMA           reduce using rule 136 (cte -> listaccess .)


state 115

    (137) cte -> specialfunction .

    TERMS           reduce using rule 137 (cte -> specialfunction .)
    EX              reduce using rule 137 (cte -> specialfunction .)
    RELOP           reduce using rule 137 (cte -> specialfunction .)
    LOGIC           reduce using rule 137 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 137 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 137 (cte -> specialfunction .)
    RIGHTBRACKET    reduce using rule 137 (cte -> specialfunction .)
    COMMA           reduce using rule 137 (cte -> specialfunction .)


state 116

    (138) id -> ID .
    (126) nestedvalue -> ID . DOT ID
    (90) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> ID . LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (92) function_call_action1 -> .

    TERMS           reduce using rule 138 (id -> ID .)
    EX              reduce using rule 138 (id -> ID .)
    RELOP           reduce using rule 138 (id -> ID .)
    LOGIC           reduce using rule 138 (id -> ID .)
    SEMICOLON       reduce using rule 138 (id -> ID .)
    RIGHTPAR        reduce using rule 138 (id -> ID .)
    RIGHTBRACKET    reduce using rule 138 (id -> ID .)
    COMMA           reduce using rule 138 (id -> ID .)
    DOT             shift and go to state 157
    LEFTBRACKET     shift and go to state 159
    LEFTPAR         reduce using rule 92 (function_call_action1 -> .)

    function_call_action1          shift and go to state 158

state 117

    (140) int -> INT .

    TERMS           reduce using rule 140 (int -> INT .)
    EX              reduce using rule 140 (int -> INT .)
    RELOP           reduce using rule 140 (int -> INT .)
    LOGIC           reduce using rule 140 (int -> INT .)
    SEMICOLON       reduce using rule 140 (int -> INT .)
    RIGHTPAR        reduce using rule 140 (int -> INT .)
    RIGHTBRACKET    reduce using rule 140 (int -> INT .)
    COMMA           reduce using rule 140 (int -> INT .)


state 118

    (141) float -> FLOAT .

    TERMS           reduce using rule 141 (float -> FLOAT .)
    EX              reduce using rule 141 (float -> FLOAT .)
    RELOP           reduce using rule 141 (float -> FLOAT .)
    LOGIC           reduce using rule 141 (float -> FLOAT .)
    SEMICOLON       reduce using rule 141 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 141 (float -> FLOAT .)
    RIGHTBRACKET    reduce using rule 141 (float -> FLOAT .)
    COMMA           reduce using rule 141 (float -> FLOAT .)


state 119

    (142) bool -> TRUE .

    TERMS           reduce using rule 142 (bool -> TRUE .)
    EX              reduce using rule 142 (bool -> TRUE .)
    RELOP           reduce using rule 142 (bool -> TRUE .)
    LOGIC           reduce using rule 142 (bool -> TRUE .)
    SEMICOLON       reduce using rule 142 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 142 (bool -> TRUE .)
    RIGHTBRACKET    reduce using rule 142 (bool -> TRUE .)
    COMMA           reduce using rule 142 (bool -> TRUE .)


state 120

    (143) bool -> FALSE .

    TERMS           reduce using rule 143 (bool -> FALSE .)
    EX              reduce using rule 143 (bool -> FALSE .)
    RELOP           reduce using rule 143 (bool -> FALSE .)
    LOGIC           reduce using rule 143 (bool -> FALSE .)
    SEMICOLON       reduce using rule 143 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 143 (bool -> FALSE .)
    RIGHTBRACKET    reduce using rule 143 (bool -> FALSE .)
    COMMA           reduce using rule 143 (bool -> FALSE .)


state 121

    (139) string -> STRING .

    TERMS           reduce using rule 139 (string -> STRING .)
    EX              reduce using rule 139 (string -> STRING .)
    RELOP           reduce using rule 139 (string -> STRING .)
    LOGIC           reduce using rule 139 (string -> STRING .)
    SEMICOLON       reduce using rule 139 (string -> STRING .)
    RIGHTPAR        reduce using rule 139 (string -> STRING .)
    RIGHTBRACKET    reduce using rule 139 (string -> STRING .)
    COMMA           reduce using rule 139 (string -> STRING .)


state 122

    (32) specialfunction -> draw .

    TERMS           reduce using rule 32 (specialfunction -> draw .)
    EX              reduce using rule 32 (specialfunction -> draw .)
    RELOP           reduce using rule 32 (specialfunction -> draw .)
    LOGIC           reduce using rule 32 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 32 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> draw .)
    RIGHTBRACKET    reduce using rule 32 (specialfunction -> draw .)
    COMMA           reduce using rule 32 (specialfunction -> draw .)


state 123

    (33) specialfunction -> size .

    TERMS           reduce using rule 33 (specialfunction -> size .)
    EX              reduce using rule 33 (specialfunction -> size .)
    RELOP           reduce using rule 33 (specialfunction -> size .)
    LOGIC           reduce using rule 33 (specialfunction -> size .)
    SEMICOLON       reduce using rule 33 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> size .)
    RIGHTBRACKET    reduce using rule 33 (specialfunction -> size .)
    COMMA           reduce using rule 33 (specialfunction -> size .)


state 124

    (34) specialfunction -> head .

    TERMS           reduce using rule 34 (specialfunction -> head .)
    EX              reduce using rule 34 (specialfunction -> head .)
    RELOP           reduce using rule 34 (specialfunction -> head .)
    LOGIC           reduce using rule 34 (specialfunction -> head .)
    SEMICOLON       reduce using rule 34 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> head .)
    RIGHTBRACKET    reduce using rule 34 (specialfunction -> head .)
    COMMA           reduce using rule 34 (specialfunction -> head .)


state 125

    (35) specialfunction -> tail .

    TERMS           reduce using rule 35 (specialfunction -> tail .)
    EX              reduce using rule 35 (specialfunction -> tail .)
    RELOP           reduce using rule 35 (specialfunction -> tail .)
    LOGIC           reduce using rule 35 (specialfunction -> tail .)
    SEMICOLON       reduce using rule 35 (specialfunction -> tail .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> tail .)
    RIGHTBRACKET    reduce using rule 35 (specialfunction -> tail .)
    COMMA           reduce using rule 35 (specialfunction -> tail .)


state 126

    (36) specialfunction -> last .

    TERMS           reduce using rule 36 (specialfunction -> last .)
    EX              reduce using rule 36 (specialfunction -> last .)
    RELOP           reduce using rule 36 (specialfunction -> last .)
    LOGIC           reduce using rule 36 (specialfunction -> last .)
    SEMICOLON       reduce using rule 36 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> last .)
    RIGHTBRACKET    reduce using rule 36 (specialfunction -> last .)
    COMMA           reduce using rule 36 (specialfunction -> last .)


state 127

    (37) specialfunction -> set_title .

    TERMS           reduce using rule 37 (specialfunction -> set_title .)
    EX              reduce using rule 37 (specialfunction -> set_title .)
    RELOP           reduce using rule 37 (specialfunction -> set_title .)
    LOGIC           reduce using rule 37 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 37 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 37 (specialfunction -> set_title .)
    RIGHTBRACKET    reduce using rule 37 (specialfunction -> set_title .)
    COMMA           reduce using rule 37 (specialfunction -> set_title .)


state 128

    (38) specialfunction -> set_dimension .

    TERMS           reduce using rule 38 (specialfunction -> set_dimension .)
    EX              reduce using rule 38 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 38 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 38 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 38 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 38 (specialfunction -> set_dimension .)
    RIGHTBRACKET    reduce using rule 38 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 38 (specialfunction -> set_dimension .)


state 129

    (39) specialfunction -> set_color .

    TERMS           reduce using rule 39 (specialfunction -> set_color .)
    EX              reduce using rule 39 (specialfunction -> set_color .)
    RELOP           reduce using rule 39 (specialfunction -> set_color .)
    LOGIC           reduce using rule 39 (specialfunction -> set_color .)
    SEMICOLON       reduce using rule 39 (specialfunction -> set_color .)
    RIGHTPAR        reduce using rule 39 (specialfunction -> set_color .)
    RIGHTBRACKET    reduce using rule 39 (specialfunction -> set_color .)
    COMMA           reduce using rule 39 (specialfunction -> set_color .)


state 130

    (40) specialfunction -> create_object .

    TERMS           reduce using rule 40 (specialfunction -> create_object .)
    EX              reduce using rule 40 (specialfunction -> create_object .)
    RELOP           reduce using rule 40 (specialfunction -> create_object .)
    LOGIC           reduce using rule 40 (specialfunction -> create_object .)
    SEMICOLON       reduce using rule 40 (specialfunction -> create_object .)
    RIGHTPAR        reduce using rule 40 (specialfunction -> create_object .)
    RIGHTBRACKET    reduce using rule 40 (specialfunction -> create_object .)
    COMMA           reduce using rule 40 (specialfunction -> create_object .)


state 131

    (41) specialfunction -> create_text .

    TERMS           reduce using rule 41 (specialfunction -> create_text .)
    EX              reduce using rule 41 (specialfunction -> create_text .)
    RELOP           reduce using rule 41 (specialfunction -> create_text .)
    LOGIC           reduce using rule 41 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 41 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 41 (specialfunction -> create_text .)
    RIGHTBRACKET    reduce using rule 41 (specialfunction -> create_text .)
    COMMA           reduce using rule 41 (specialfunction -> create_text .)


state 132

    (42) draw -> DRAW . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 160


state 133

    (43) size -> SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 161


state 134

    (44) head -> HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 162


state 135

    (45) tail -> TAIL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 163


state 136

    (46) last -> LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 164


state 137

    (47) set_title -> SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 165


state 138

    (48) set_dimension -> SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 166


state 139

    (49) set_color -> SET_COLOR . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 167


state 140

    (50) create_object -> CREATE_OBJECT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 168


state 141

    (51) create_text -> CREATE_TEXT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 169


state 142

    (15) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    DRAW            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SIZE            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    HEAD            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    TAIL            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    LAST            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_TITLE       reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_COLOR       reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)


state 143

    (79) recparams -> ID COLON type COMMA . recparams
    (78) recparams -> . ID COLON type
    (79) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 63

    recparams                      shift and go to state 170

state 144

    (70) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (77) function_action3 -> .

    COLON           reduce using rule 77 (function_action3 -> .)

    function_action3               shift and go to state 171

state 145

    (19) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (52) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (55) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (56) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (60) loop -> . for
    (61) loop -> . while
    (82) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (89) return -> . RETURN expression
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (127) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (62) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (66) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (126) nestedvalue -> . ID DOT ID
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        shift and go to state 173
    ID              shift and go to state 184
    IF              shift and go to state 185
    VAR             shift and go to state 40
    PRINT           shift and go to state 188
    RETURN          shift and go to state 189
    FOR             shift and go to state 191
    WHILE           shift and go to state 192
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

    recstatement                   shift and go to state 172
    statement                      shift and go to state 174
    assign                         shift and go to state 175
    condition                      shift and go to state 176
    vars                           shift and go to state 177
    loop                           shift and go to state 178
    write                          shift and go to state 179
    return                         shift and go to state 180
    functioncall                   shift and go to state 181
    nestedassign                   shift and go to state 182
    specialfunction                shift and go to state 183
    for                            shift and go to state 186
    while                          shift and go to state 187
    nestedvalue                    shift and go to state 190
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 146

    (72) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (77) function_action3 -> .

    COLON           reduce using rule 77 (function_action3 -> .)

    function_action3               shift and go to state 193

state 147

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 148

    (10) run -> VOID FUNC run_action1 RUN startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 194


state 149

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 195

state 150

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (14) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    DRAW            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SIZE            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    HEAD            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    TAIL            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    LAST            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_TITLE       reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_DIMENSION   reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_COLOR       reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_OBJECT   reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 196

state 151

    (97) expression -> exp RELOP . relop_action1 exp relop_action2
    (100) relop_action1 -> .

    EX              reduce using rule 100 (relop_action1 -> .)
    ID              reduce using rule 100 (relop_action1 -> .)
    INT             reduce using rule 100 (relop_action1 -> .)
    FLOAT           reduce using rule 100 (relop_action1 -> .)
    TRUE            reduce using rule 100 (relop_action1 -> .)
    FALSE           reduce using rule 100 (relop_action1 -> .)
    STRING          reduce using rule 100 (relop_action1 -> .)
    DRAW            reduce using rule 100 (relop_action1 -> .)
    SIZE            reduce using rule 100 (relop_action1 -> .)
    HEAD            reduce using rule 100 (relop_action1 -> .)
    TAIL            reduce using rule 100 (relop_action1 -> .)
    LAST            reduce using rule 100 (relop_action1 -> .)
    SET_TITLE       reduce using rule 100 (relop_action1 -> .)
    SET_DIMENSION   reduce using rule 100 (relop_action1 -> .)
    SET_COLOR       reduce using rule 100 (relop_action1 -> .)
    CREATE_OBJECT   reduce using rule 100 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 100 (relop_action1 -> .)
    TERMS           reduce using rule 100 (relop_action1 -> .)
    LEFTPAR         reduce using rule 100 (relop_action1 -> .)
    SEMICOLON       reduce using rule 100 (relop_action1 -> .)
    RIGHTPAR        reduce using rule 100 (relop_action1 -> .)
    RIGHTBRACKET    reduce using rule 100 (relop_action1 -> .)
    COMMA           reduce using rule 100 (relop_action1 -> .)

    relop_action1                  shift and go to state 197

state 152

    (98) expression -> exp LOGIC . logic_action1 exp logic_action2
    (102) logic_action1 -> .

    EX              reduce using rule 102 (logic_action1 -> .)
    ID              reduce using rule 102 (logic_action1 -> .)
    INT             reduce using rule 102 (logic_action1 -> .)
    FLOAT           reduce using rule 102 (logic_action1 -> .)
    TRUE            reduce using rule 102 (logic_action1 -> .)
    FALSE           reduce using rule 102 (logic_action1 -> .)
    STRING          reduce using rule 102 (logic_action1 -> .)
    DRAW            reduce using rule 102 (logic_action1 -> .)
    SIZE            reduce using rule 102 (logic_action1 -> .)
    HEAD            reduce using rule 102 (logic_action1 -> .)
    TAIL            reduce using rule 102 (logic_action1 -> .)
    LAST            reduce using rule 102 (logic_action1 -> .)
    SET_TITLE       reduce using rule 102 (logic_action1 -> .)
    SET_DIMENSION   reduce using rule 102 (logic_action1 -> .)
    SET_COLOR       reduce using rule 102 (logic_action1 -> .)
    CREATE_OBJECT   reduce using rule 102 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 102 (logic_action1 -> .)
    TERMS           reduce using rule 102 (logic_action1 -> .)
    LEFTPAR         reduce using rule 102 (logic_action1 -> .)
    SEMICOLON       reduce using rule 102 (logic_action1 -> .)
    RIGHTPAR        reduce using rule 102 (logic_action1 -> .)
    RIGHTBRACKET    reduce using rule 102 (logic_action1 -> .)
    COMMA           reduce using rule 102 (logic_action1 -> .)

    logic_action1                  shift and go to state 198

state 153

    (104) exp -> term exp_action . recexp
    (105) exp -> term exp_action .
    (107) recexp -> . EX add_operator exp

    RELOP           reduce using rule 105 (exp -> term exp_action .)
    LOGIC           reduce using rule 105 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 105 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 105 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 105 (exp -> term exp_action .)
    COMMA           reduce using rule 105 (exp -> term exp_action .)
    EX              shift and go to state 200

    recexp                         shift and go to state 199

state 154

    (108) term -> factor term_action . recterm
    (109) term -> factor term_action .
    (111) recterm -> . TERMS add_operator term

    EX              reduce using rule 109 (term -> factor term_action .)
    RELOP           reduce using rule 109 (term -> factor term_action .)
    LOGIC           reduce using rule 109 (term -> factor term_action .)
    SEMICOLON       reduce using rule 109 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 109 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 109 (term -> factor term_action .)
    COMMA           reduce using rule 109 (term -> factor term_action .)
    TERMS           shift and go to state 202

    recterm                        shift and go to state 201

state 155

    (113) factor -> factor_action1 LEFTPAR . expression RIGHTPAR factor_action2
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    factor_action1                 shift and go to state 104
    expression                     shift and go to state 203
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 156

    (114) factor -> EX cte .

    TERMS           reduce using rule 114 (factor -> EX cte .)
    EX              reduce using rule 114 (factor -> EX cte .)
    RELOP           reduce using rule 114 (factor -> EX cte .)
    LOGIC           reduce using rule 114 (factor -> EX cte .)
    SEMICOLON       reduce using rule 114 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 114 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 114 (factor -> EX cte .)
    COMMA           reduce using rule 114 (factor -> EX cte .)


state 157

    (126) nestedvalue -> ID DOT . ID

    ID              shift and go to state 204


state 158

    (90) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 RIGHTPAR

    LEFTPAR         shift and go to state 205


state 159

    (125) listaccess -> ID LEFTBRACKET . expression RIGHTBRACKET SEMICOLON
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    RIGHTBRACKET    reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 206
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 160

    (42) draw -> DRAW LEFTPAR . recfuncexp RIGHTPAR
    (94) recfuncexp -> . expression COMMA recfuncexp
    (95) recfuncexp -> . expression recfunc_action1
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    recfuncexp                     shift and go to state 207
    expression                     shift and go to state 208
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 161

    (43) size -> SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 209


state 162

    (44) head -> HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 210


state 163

    (45) tail -> TAIL LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 211


state 164

    (46) last -> LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 212


state 165

    (47) set_title -> SET_TITLE LEFTPAR . expression RIGHTPAR
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 213
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 166

    (48) set_dimension -> SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 214
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 167

    (49) set_color -> SET_COLOR LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 215
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 168

    (50) create_object -> CREATE_OBJECT LEFTPAR . recfuncexp RIGHTPAR
    (94) recfuncexp -> . expression COMMA recfuncexp
    (95) recfuncexp -> . expression recfunc_action1
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    recfuncexp                     shift and go to state 216
    expression                     shift and go to state 208
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 169

    (51) create_text -> CREATE_TEXT LEFTPAR . recfuncexp RIGHTPAR
    (94) recfuncexp -> . expression COMMA recfuncexp
    (95) recfuncexp -> . expression recfunc_action1
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    recfuncexp                     shift and go to state 217
    expression                     shift and go to state 208
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 170

    (79) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 79 (recparams -> ID COLON type COMMA recparams .)


state 171

    (70) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 218

state 172

    (19) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 219


state 173

    (20) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 220


state 174

    (21) recstatement -> statement . recstatement
    (22) recstatement -> statement .
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (52) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (55) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (56) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (60) loop -> . for
    (61) loop -> . while
    (82) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (89) return -> . RETURN expression
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (127) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (62) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (66) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (126) nestedvalue -> . ID DOT ID
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        reduce using rule 22 (recstatement -> statement .)
    ID              shift and go to state 184
    IF              shift and go to state 185
    VAR             shift and go to state 40
    PRINT           shift and go to state 188
    RETURN          shift and go to state 189
    FOR             shift and go to state 191
    WHILE           shift and go to state 192
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

    statement                      shift and go to state 174
    recstatement                   shift and go to state 221
    assign                         shift and go to state 175
    condition                      shift and go to state 176
    vars                           shift and go to state 177
    loop                           shift and go to state 178
    write                          shift and go to state 179
    return                         shift and go to state 180
    functioncall                   shift and go to state 181
    nestedassign                   shift and go to state 182
    specialfunction                shift and go to state 183
    for                            shift and go to state 186
    while                          shift and go to state 187
    nestedvalue                    shift and go to state 190
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 175

    (23) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 222


state 176

    (24) statement -> condition .

    ID              reduce using rule 24 (statement -> condition .)
    IF              reduce using rule 24 (statement -> condition .)
    VAR             reduce using rule 24 (statement -> condition .)
    PRINT           reduce using rule 24 (statement -> condition .)
    RETURN          reduce using rule 24 (statement -> condition .)
    FOR             reduce using rule 24 (statement -> condition .)
    WHILE           reduce using rule 24 (statement -> condition .)
    DRAW            reduce using rule 24 (statement -> condition .)
    SIZE            reduce using rule 24 (statement -> condition .)
    HEAD            reduce using rule 24 (statement -> condition .)
    TAIL            reduce using rule 24 (statement -> condition .)
    LAST            reduce using rule 24 (statement -> condition .)
    SET_TITLE       reduce using rule 24 (statement -> condition .)
    SET_DIMENSION   reduce using rule 24 (statement -> condition .)
    SET_COLOR       reduce using rule 24 (statement -> condition .)
    CREATE_OBJECT   reduce using rule 24 (statement -> condition .)
    CREATE_TEXT     reduce using rule 24 (statement -> condition .)
    RIGHTKEY        reduce using rule 24 (statement -> condition .)


state 177

    (25) statement -> vars .

    ID              reduce using rule 25 (statement -> vars .)
    IF              reduce using rule 25 (statement -> vars .)
    VAR             reduce using rule 25 (statement -> vars .)
    PRINT           reduce using rule 25 (statement -> vars .)
    RETURN          reduce using rule 25 (statement -> vars .)
    FOR             reduce using rule 25 (statement -> vars .)
    WHILE           reduce using rule 25 (statement -> vars .)
    DRAW            reduce using rule 25 (statement -> vars .)
    SIZE            reduce using rule 25 (statement -> vars .)
    HEAD            reduce using rule 25 (statement -> vars .)
    TAIL            reduce using rule 25 (statement -> vars .)
    LAST            reduce using rule 25 (statement -> vars .)
    SET_TITLE       reduce using rule 25 (statement -> vars .)
    SET_DIMENSION   reduce using rule 25 (statement -> vars .)
    SET_COLOR       reduce using rule 25 (statement -> vars .)
    CREATE_OBJECT   reduce using rule 25 (statement -> vars .)
    CREATE_TEXT     reduce using rule 25 (statement -> vars .)
    RIGHTKEY        reduce using rule 25 (statement -> vars .)


state 178

    (26) statement -> loop .

    ID              reduce using rule 26 (statement -> loop .)
    IF              reduce using rule 26 (statement -> loop .)
    VAR             reduce using rule 26 (statement -> loop .)
    PRINT           reduce using rule 26 (statement -> loop .)
    RETURN          reduce using rule 26 (statement -> loop .)
    FOR             reduce using rule 26 (statement -> loop .)
    WHILE           reduce using rule 26 (statement -> loop .)
    DRAW            reduce using rule 26 (statement -> loop .)
    SIZE            reduce using rule 26 (statement -> loop .)
    HEAD            reduce using rule 26 (statement -> loop .)
    TAIL            reduce using rule 26 (statement -> loop .)
    LAST            reduce using rule 26 (statement -> loop .)
    SET_TITLE       reduce using rule 26 (statement -> loop .)
    SET_DIMENSION   reduce using rule 26 (statement -> loop .)
    SET_COLOR       reduce using rule 26 (statement -> loop .)
    CREATE_OBJECT   reduce using rule 26 (statement -> loop .)
    CREATE_TEXT     reduce using rule 26 (statement -> loop .)
    RIGHTKEY        reduce using rule 26 (statement -> loop .)


state 179

    (27) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 223


state 180

    (28) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 224


state 181

    (29) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 225


state 182

    (30) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 226


state 183

    (31) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 227


state 184

    (52) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (90) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (126) nestedvalue -> ID . DOT ID
    (53) assign_action1 -> .
    (92) function_call_action1 -> .

    DOT             shift and go to state 157
    EQUAL           reduce using rule 53 (assign_action1 -> .)
    LEFTPAR         reduce using rule 92 (function_call_action1 -> .)

    assign_action1                 shift and go to state 228
    function_call_action1          shift and go to state 158

state 185

    (55) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (56) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 229


state 186

    (60) loop -> for .

    ID              reduce using rule 60 (loop -> for .)
    IF              reduce using rule 60 (loop -> for .)
    VAR             reduce using rule 60 (loop -> for .)
    PRINT           reduce using rule 60 (loop -> for .)
    RETURN          reduce using rule 60 (loop -> for .)
    FOR             reduce using rule 60 (loop -> for .)
    WHILE           reduce using rule 60 (loop -> for .)
    DRAW            reduce using rule 60 (loop -> for .)
    SIZE            reduce using rule 60 (loop -> for .)
    HEAD            reduce using rule 60 (loop -> for .)
    TAIL            reduce using rule 60 (loop -> for .)
    LAST            reduce using rule 60 (loop -> for .)
    SET_TITLE       reduce using rule 60 (loop -> for .)
    SET_DIMENSION   reduce using rule 60 (loop -> for .)
    SET_COLOR       reduce using rule 60 (loop -> for .)
    CREATE_OBJECT   reduce using rule 60 (loop -> for .)
    CREATE_TEXT     reduce using rule 60 (loop -> for .)
    RIGHTKEY        reduce using rule 60 (loop -> for .)


state 187

    (61) loop -> while .

    ID              reduce using rule 61 (loop -> while .)
    IF              reduce using rule 61 (loop -> while .)
    VAR             reduce using rule 61 (loop -> while .)
    PRINT           reduce using rule 61 (loop -> while .)
    RETURN          reduce using rule 61 (loop -> while .)
    FOR             reduce using rule 61 (loop -> while .)
    WHILE           reduce using rule 61 (loop -> while .)
    DRAW            reduce using rule 61 (loop -> while .)
    SIZE            reduce using rule 61 (loop -> while .)
    HEAD            reduce using rule 61 (loop -> while .)
    TAIL            reduce using rule 61 (loop -> while .)
    LAST            reduce using rule 61 (loop -> while .)
    SET_TITLE       reduce using rule 61 (loop -> while .)
    SET_DIMENSION   reduce using rule 61 (loop -> while .)
    SET_COLOR       reduce using rule 61 (loop -> while .)
    CREATE_OBJECT   reduce using rule 61 (loop -> while .)
    CREATE_TEXT     reduce using rule 61 (loop -> while .)
    RIGHTKEY        reduce using rule 61 (loop -> while .)


state 188

    (82) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 230


state 189

    (89) return -> RETURN . expression
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 231
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 190

    (127) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 232


state 191

    (62) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (74) startscope_action -> .

    LEFTPAR         reduce using rule 74 (startscope_action -> .)

    startscope_action              shift and go to state 233

state 192

    (66) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (74) startscope_action -> .

    LEFTPAR         reduce using rule 74 (startscope_action -> .)

    startscope_action              shift and go to state 234

state 193

    (72) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 235

state 194

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 236


state 195

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 237

state 196

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    DRAW            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SIZE            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    HEAD            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    TAIL            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    LAST            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_TITLE       reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_COLOR       reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 197

    (97) expression -> exp RELOP relop_action1 . exp relop_action2
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    RIGHTBRACKET    reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    exp                            shift and go to state 238
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 198

    (98) expression -> exp LOGIC logic_action1 . exp logic_action2
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    RIGHTBRACKET    reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    exp                            shift and go to state 239
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 199

    (104) exp -> term exp_action recexp .

    RELOP           reduce using rule 104 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 104 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 104 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 104 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 104 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 104 (exp -> term exp_action recexp .)


state 200

    (107) recexp -> EX . add_operator exp
    (112) add_operator -> .

    EX              reduce using rule 112 (add_operator -> .)
    ID              reduce using rule 112 (add_operator -> .)
    INT             reduce using rule 112 (add_operator -> .)
    FLOAT           reduce using rule 112 (add_operator -> .)
    TRUE            reduce using rule 112 (add_operator -> .)
    FALSE           reduce using rule 112 (add_operator -> .)
    STRING          reduce using rule 112 (add_operator -> .)
    DRAW            reduce using rule 112 (add_operator -> .)
    SIZE            reduce using rule 112 (add_operator -> .)
    HEAD            reduce using rule 112 (add_operator -> .)
    TAIL            reduce using rule 112 (add_operator -> .)
    LAST            reduce using rule 112 (add_operator -> .)
    SET_TITLE       reduce using rule 112 (add_operator -> .)
    SET_DIMENSION   reduce using rule 112 (add_operator -> .)
    SET_COLOR       reduce using rule 112 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 112 (add_operator -> .)
    CREATE_TEXT     reduce using rule 112 (add_operator -> .)
    TERMS           reduce using rule 112 (add_operator -> .)
    LEFTPAR         reduce using rule 112 (add_operator -> .)
    RELOP           reduce using rule 112 (add_operator -> .)
    LOGIC           reduce using rule 112 (add_operator -> .)
    SEMICOLON       reduce using rule 112 (add_operator -> .)
    RIGHTPAR        reduce using rule 112 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 112 (add_operator -> .)
    COMMA           reduce using rule 112 (add_operator -> .)

    add_operator                   shift and go to state 240

state 201

    (108) term -> factor term_action recterm .

    EX              reduce using rule 108 (term -> factor term_action recterm .)
    RELOP           reduce using rule 108 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 108 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 108 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 108 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 108 (term -> factor term_action recterm .)
    COMMA           reduce using rule 108 (term -> factor term_action recterm .)


state 202

    (111) recterm -> TERMS . add_operator term
    (112) add_operator -> .

    EX              reduce using rule 112 (add_operator -> .)
    ID              reduce using rule 112 (add_operator -> .)
    INT             reduce using rule 112 (add_operator -> .)
    FLOAT           reduce using rule 112 (add_operator -> .)
    TRUE            reduce using rule 112 (add_operator -> .)
    FALSE           reduce using rule 112 (add_operator -> .)
    STRING          reduce using rule 112 (add_operator -> .)
    DRAW            reduce using rule 112 (add_operator -> .)
    SIZE            reduce using rule 112 (add_operator -> .)
    HEAD            reduce using rule 112 (add_operator -> .)
    TAIL            reduce using rule 112 (add_operator -> .)
    LAST            reduce using rule 112 (add_operator -> .)
    SET_TITLE       reduce using rule 112 (add_operator -> .)
    SET_DIMENSION   reduce using rule 112 (add_operator -> .)
    SET_COLOR       reduce using rule 112 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 112 (add_operator -> .)
    CREATE_TEXT     reduce using rule 112 (add_operator -> .)
    TERMS           reduce using rule 112 (add_operator -> .)
    LEFTPAR         reduce using rule 112 (add_operator -> .)
    RELOP           reduce using rule 112 (add_operator -> .)
    LOGIC           reduce using rule 112 (add_operator -> .)
    SEMICOLON       reduce using rule 112 (add_operator -> .)
    RIGHTPAR        reduce using rule 112 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 112 (add_operator -> .)
    COMMA           reduce using rule 112 (add_operator -> .)

    add_operator                   shift and go to state 241

state 203

    (113) factor -> factor_action1 LEFTPAR expression . RIGHTPAR factor_action2

    RIGHTPAR        shift and go to state 242


state 204

    (126) nestedvalue -> ID DOT ID .

    TERMS           reduce using rule 126 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 126 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 126 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 126 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 126 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 126 (nestedvalue -> ID DOT ID .)
    RIGHTBRACKET    reduce using rule 126 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 126 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 126 (nestedvalue -> ID DOT ID .)


state 205

    (90) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 RIGHTPAR
    (93) function_call_action2 -> .

    RIGHTPAR        reduce using rule 93 (function_call_action2 -> .)
    EX              reduce using rule 93 (function_call_action2 -> .)
    ID              reduce using rule 93 (function_call_action2 -> .)
    INT             reduce using rule 93 (function_call_action2 -> .)
    FLOAT           reduce using rule 93 (function_call_action2 -> .)
    TRUE            reduce using rule 93 (function_call_action2 -> .)
    FALSE           reduce using rule 93 (function_call_action2 -> .)
    STRING          reduce using rule 93 (function_call_action2 -> .)
    DRAW            reduce using rule 93 (function_call_action2 -> .)
    SIZE            reduce using rule 93 (function_call_action2 -> .)
    HEAD            reduce using rule 93 (function_call_action2 -> .)
    TAIL            reduce using rule 93 (function_call_action2 -> .)
    LAST            reduce using rule 93 (function_call_action2 -> .)
    SET_TITLE       reduce using rule 93 (function_call_action2 -> .)
    SET_DIMENSION   reduce using rule 93 (function_call_action2 -> .)
    SET_COLOR       reduce using rule 93 (function_call_action2 -> .)
    CREATE_OBJECT   reduce using rule 93 (function_call_action2 -> .)
    CREATE_TEXT     reduce using rule 93 (function_call_action2 -> .)
    COMMA           reduce using rule 93 (function_call_action2 -> .)
    RELOP           reduce using rule 93 (function_call_action2 -> .)
    LOGIC           reduce using rule 93 (function_call_action2 -> .)
    TERMS           reduce using rule 93 (function_call_action2 -> .)
    LEFTPAR         reduce using rule 93 (function_call_action2 -> .)

    function_call_action2          shift and go to state 243

state 206

    (125) listaccess -> ID LEFTBRACKET expression . RIGHTBRACKET SEMICOLON

    RIGHTBRACKET    shift and go to state 244


state 207

    (42) draw -> DRAW LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 245


state 208

    (94) recfuncexp -> expression . COMMA recfuncexp
    (95) recfuncexp -> expression . recfunc_action1
    (96) recfunc_action1 -> .

    COMMA           shift and go to state 246
    RIGHTPAR        reduce using rule 96 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 247

state 209

    (43) size -> SIZE LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)


state 210

    (44) head -> HEAD LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)


state 211

    (45) tail -> TAIL LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    EX              reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)


state 212

    (46) last -> LAST LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)


state 213

    (47) set_title -> SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 248


state 214

    (48) set_dimension -> SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 249


state 215

    (49) set_color -> SET_COLOR LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 250


state 216

    (50) create_object -> CREATE_OBJECT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 251


state 217

    (51) create_text -> CREATE_TEXT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 252


state 218

    (70) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 70 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    LIST            reduce using rule 70 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 70 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 70 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 70 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 70 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 70 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 70 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 219

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 253


state 220

    (20) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 221

    (21) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 21 (recstatement -> statement recstatement .)


state 222

    (23) statement -> assign SEMICOLON .

    ID              reduce using rule 23 (statement -> assign SEMICOLON .)
    IF              reduce using rule 23 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 23 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 23 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> assign SEMICOLON .)
    DRAW            reduce using rule 23 (statement -> assign SEMICOLON .)
    SIZE            reduce using rule 23 (statement -> assign SEMICOLON .)
    HEAD            reduce using rule 23 (statement -> assign SEMICOLON .)
    TAIL            reduce using rule 23 (statement -> assign SEMICOLON .)
    LAST            reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_TITLE       reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_DIMENSION   reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_COLOR       reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> assign SEMICOLON .)


state 223

    (27) statement -> write SEMICOLON .

    ID              reduce using rule 27 (statement -> write SEMICOLON .)
    IF              reduce using rule 27 (statement -> write SEMICOLON .)
    VAR             reduce using rule 27 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> write SEMICOLON .)
    FOR             reduce using rule 27 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> write SEMICOLON .)
    DRAW            reduce using rule 27 (statement -> write SEMICOLON .)
    SIZE            reduce using rule 27 (statement -> write SEMICOLON .)
    HEAD            reduce using rule 27 (statement -> write SEMICOLON .)
    TAIL            reduce using rule 27 (statement -> write SEMICOLON .)
    LAST            reduce using rule 27 (statement -> write SEMICOLON .)
    SET_TITLE       reduce using rule 27 (statement -> write SEMICOLON .)
    SET_DIMENSION   reduce using rule 27 (statement -> write SEMICOLON .)
    SET_COLOR       reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_OBJECT   reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 27 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 27 (statement -> write SEMICOLON .)


state 224

    (28) statement -> return SEMICOLON .

    ID              reduce using rule 28 (statement -> return SEMICOLON .)
    IF              reduce using rule 28 (statement -> return SEMICOLON .)
    VAR             reduce using rule 28 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 28 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> return SEMICOLON .)
    FOR             reduce using rule 28 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> return SEMICOLON .)
    DRAW            reduce using rule 28 (statement -> return SEMICOLON .)
    SIZE            reduce using rule 28 (statement -> return SEMICOLON .)
    HEAD            reduce using rule 28 (statement -> return SEMICOLON .)
    TAIL            reduce using rule 28 (statement -> return SEMICOLON .)
    LAST            reduce using rule 28 (statement -> return SEMICOLON .)
    SET_TITLE       reduce using rule 28 (statement -> return SEMICOLON .)
    SET_DIMENSION   reduce using rule 28 (statement -> return SEMICOLON .)
    SET_COLOR       reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_OBJECT   reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 28 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 28 (statement -> return SEMICOLON .)


state 225

    (29) statement -> functioncall SEMICOLON .

    ID              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    DRAW            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SIZE            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    HEAD            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    TAIL            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    LAST            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_TITLE       reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_DIMENSION   reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_COLOR       reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_OBJECT   reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 29 (statement -> functioncall SEMICOLON .)


state 226

    (30) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    DRAW            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SIZE            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    HEAD            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    TAIL            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    LAST            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_TITLE       reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_DIMENSION   reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_COLOR       reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 30 (statement -> nestedassign SEMICOLON .)


state 227

    (31) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    DRAW            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SIZE            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    HEAD            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    TAIL            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    LAST            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_TITLE       reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_DIMENSION   reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_COLOR       reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_OBJECT   reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 31 (statement -> specialfunction SEMICOLON .)


state 228

    (52) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 254


state 229

    (55) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (56) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 255
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 230

    (82) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (83) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (84) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (85) recwrite -> . expression action_recwrite_exp
    (86) recwrite -> . STRING action_recwrite_cte
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 258
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    recwrite                       shift and go to state 256
    expression                     shift and go to state 257
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 231

    (89) return -> RETURN expression .

    SEMICOLON       reduce using rule 89 (return -> RETURN expression .)


state 232

    (127) nestedassign -> nestedvalue EQUAL . expression
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    nestedvalue                    shift and go to state 112
    expression                     shift and go to state 259
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 233

    (62) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 260


state 234

    (66) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (67) while_action1 -> .

    LEFTPAR         reduce using rule 67 (while_action1 -> .)

    while_action1                  shift and go to state 261

state 235

    (72) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 72 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    LIST            reduce using rule 72 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 72 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 72 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 72 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 72 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 72 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 72 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 236

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 262

state 237

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .

    VOID            reduce using rule 8 (start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 238

    (97) expression -> exp RELOP relop_action1 exp . relop_action2
    (101) relop_action2 -> .

    SEMICOLON       reduce using rule 101 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 101 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 101 (relop_action2 -> .)
    COMMA           reduce using rule 101 (relop_action2 -> .)

    relop_action2                  shift and go to state 263

state 239

    (98) expression -> exp LOGIC logic_action1 exp . logic_action2
    (103) logic_action2 -> .

    SEMICOLON       reduce using rule 103 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 103 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 103 (logic_action2 -> .)
    COMMA           reduce using rule 103 (logic_action2 -> .)

    logic_action2                  shift and go to state 264

state 240

    (107) recexp -> EX add_operator . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    RIGHTBRACKET    reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    exp                            shift and go to state 265
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 241

    (111) recterm -> TERMS add_operator . term
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    RIGHTBRACKET    reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    term                           shift and go to state 266
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 242

    (113) factor -> factor_action1 LEFTPAR expression RIGHTPAR . factor_action2
    (117) factor_action2 -> .

    TERMS           reduce using rule 117 (factor_action2 -> .)
    EX              reduce using rule 117 (factor_action2 -> .)
    RELOP           reduce using rule 117 (factor_action2 -> .)
    LOGIC           reduce using rule 117 (factor_action2 -> .)
    SEMICOLON       reduce using rule 117 (factor_action2 -> .)
    RIGHTPAR        reduce using rule 117 (factor_action2 -> .)
    RIGHTBRACKET    reduce using rule 117 (factor_action2 -> .)
    COMMA           reduce using rule 117 (factor_action2 -> .)

    factor_action2                 shift and go to state 267

state 243

    (90) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . recfuncexp RIGHTPAR
    (91) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . RIGHTPAR
    (94) recfuncexp -> . expression COMMA recfuncexp
    (95) recfuncexp -> . expression recfunc_action1
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
  ! shift/reduce conflict for RIGHTPAR resolved as shift
    RIGHTPAR        shift and go to state 269
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]
  ! RIGHTPAR        [ reduce using rule 128 (cte -> .) ]

    recfuncexp                     shift and go to state 268
    expression                     shift and go to state 208
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 244

    (125) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 270


state 245

    (42) draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)


state 246

    (94) recfuncexp -> expression COMMA . recfuncexp
    (94) recfuncexp -> . expression COMMA recfuncexp
    (95) recfuncexp -> . expression recfunc_action1
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 208
    recfuncexp                     shift and go to state 271
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 247

    (95) recfuncexp -> expression recfunc_action1 .

    RIGHTPAR        reduce using rule 95 (recfuncexp -> expression recfunc_action1 .)


state 248

    (47) set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .

    TERMS           reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)


state 249

    (48) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 272
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 250

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 273
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 251

    (50) create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)


state 252

    (51) create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)


state 253

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 254

    (52) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (54) assign_action2 -> .

    EX              reduce using rule 54 (assign_action2 -> .)
    ID              reduce using rule 54 (assign_action2 -> .)
    INT             reduce using rule 54 (assign_action2 -> .)
    FLOAT           reduce using rule 54 (assign_action2 -> .)
    TRUE            reduce using rule 54 (assign_action2 -> .)
    FALSE           reduce using rule 54 (assign_action2 -> .)
    STRING          reduce using rule 54 (assign_action2 -> .)
    DRAW            reduce using rule 54 (assign_action2 -> .)
    SIZE            reduce using rule 54 (assign_action2 -> .)
    HEAD            reduce using rule 54 (assign_action2 -> .)
    TAIL            reduce using rule 54 (assign_action2 -> .)
    LAST            reduce using rule 54 (assign_action2 -> .)
    SET_TITLE       reduce using rule 54 (assign_action2 -> .)
    SET_DIMENSION   reduce using rule 54 (assign_action2 -> .)
    SET_COLOR       reduce using rule 54 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 54 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 54 (assign_action2 -> .)
    RELOP           reduce using rule 54 (assign_action2 -> .)
    LOGIC           reduce using rule 54 (assign_action2 -> .)
    TERMS           reduce using rule 54 (assign_action2 -> .)
    LEFTPAR         reduce using rule 54 (assign_action2 -> .)
    SEMICOLON       reduce using rule 54 (assign_action2 -> .)

    assign_action2                 shift and go to state 274

state 255

    (55) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (56) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (57) condition_action1 -> .

    RIGHTPAR        reduce using rule 57 (condition_action1 -> .)

    condition_action1              shift and go to state 275

state 256

    (82) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 276


state 257

    (83) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (85) recwrite -> expression . action_recwrite_exp
    (87) action_recwrite_exp -> .

    COMMA           reduce using rule 87 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 87 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 277

state 258

    (84) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (86) recwrite -> STRING . action_recwrite_cte
    (139) string -> STRING .
    (88) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 88 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 88 (action_recwrite_cte -> .)
    TERMS           reduce using rule 139 (string -> STRING .)
    EX              reduce using rule 139 (string -> STRING .)
    RELOP           reduce using rule 139 (string -> STRING .)
    LOGIC           reduce using rule 139 (string -> STRING .)
    COMMA           reduce using rule 88 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 88 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 139 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 139 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 278

state 259

    (127) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 127 (nestedassign -> nestedvalue EQUAL expression .)


state 260

    (62) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (52) assign -> . ID assign_action1 EQUAL assign_action2 expression

    ID              shift and go to state 280

    assign                         shift and go to state 279

state 261

    (66) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 281


state 262

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 282

state 263

    (97) expression -> exp RELOP relop_action1 exp relop_action2 .

    SEMICOLON       reduce using rule 97 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 97 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 97 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    COMMA           reduce using rule 97 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 264

    (98) expression -> exp LOGIC logic_action1 exp logic_action2 .

    SEMICOLON       reduce using rule 98 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 98 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 98 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    COMMA           reduce using rule 98 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 265

    (107) recexp -> EX add_operator exp .

    RELOP           reduce using rule 107 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 107 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 107 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 107 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 107 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 107 (recexp -> EX add_operator exp .)


state 266

    (111) recterm -> TERMS add_operator term .

    EX              reduce using rule 111 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 111 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 111 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 111 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 111 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 111 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 111 (recterm -> TERMS add_operator term .)


state 267

    (113) factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .

    TERMS           reduce using rule 113 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    EX              reduce using rule 113 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RELOP           reduce using rule 113 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    LOGIC           reduce using rule 113 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    SEMICOLON       reduce using rule 113 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTPAR        reduce using rule 113 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTBRACKET    reduce using rule 113 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    COMMA           reduce using rule 113 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)


state 268

    (90) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 283


state 269

    (91) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .

    TERMS           reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    EX              reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RELOP           reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    LOGIC           reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    SEMICOLON       reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTPAR        reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    COMMA           reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)


state 270

    (125) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .

    TERMS           reduce using rule 125 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    EX              reduce using rule 125 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RELOP           reduce using rule 125 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    LOGIC           reduce using rule 125 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 125 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTPAR        reduce using rule 125 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTBRACKET    reduce using rule 125 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    COMMA           reduce using rule 125 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)


state 271

    (94) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 94 (recfuncexp -> expression COMMA recfuncexp .)


state 272

    (48) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 284


state 273

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 285


state 274

    (52) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 286
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 275

    (55) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (56) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 287


state 276

    (82) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 82 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 277

    (83) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (85) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 288
    RIGHTPAR        reduce using rule 85 (recwrite -> expression action_recwrite_exp .)


state 278

    (84) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (86) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 289
    RIGHTPAR        reduce using rule 86 (recwrite -> STRING action_recwrite_cte .)


state 279

    (62) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 290


state 280

    (52) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (53) assign_action1 -> .

    EQUAL           reduce using rule 53 (assign_action1 -> .)

    assign_action1                 shift and go to state 228

state 281

    (66) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 291
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 282

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .

    RIGHTKEY        reduce using rule 10 (run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 283

    (90) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .

    TERMS           reduce using rule 90 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    EX              reduce using rule 90 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 90 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 90 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 90 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 90 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 90 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 90 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)


state 284

    (48) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 285

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 292
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 286

    (52) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 52 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 287

    (55) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (56) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 293

state 288

    (83) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (83) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (84) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (85) recwrite -> . expression action_recwrite_exp
    (86) recwrite -> . STRING action_recwrite_cte
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 258
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 257
    recwrite                       shift and go to state 294
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 289

    (84) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (83) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (84) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (85) recwrite -> . expression action_recwrite_exp
    (86) recwrite -> . STRING action_recwrite_cte
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 258
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    COMMA           reduce using rule 128 (cte -> .)
    RIGHTPAR        reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    recwrite                       shift and go to state 295
    expression                     shift and go to state 257
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 290

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (63) for_action1 -> .

    EX              reduce using rule 63 (for_action1 -> .)
    ID              reduce using rule 63 (for_action1 -> .)
    INT             reduce using rule 63 (for_action1 -> .)
    FLOAT           reduce using rule 63 (for_action1 -> .)
    TRUE            reduce using rule 63 (for_action1 -> .)
    FALSE           reduce using rule 63 (for_action1 -> .)
    STRING          reduce using rule 63 (for_action1 -> .)
    DRAW            reduce using rule 63 (for_action1 -> .)
    SIZE            reduce using rule 63 (for_action1 -> .)
    HEAD            reduce using rule 63 (for_action1 -> .)
    TAIL            reduce using rule 63 (for_action1 -> .)
    LAST            reduce using rule 63 (for_action1 -> .)
    SET_TITLE       reduce using rule 63 (for_action1 -> .)
    SET_DIMENSION   reduce using rule 63 (for_action1 -> .)
    SET_COLOR       reduce using rule 63 (for_action1 -> .)
    CREATE_OBJECT   reduce using rule 63 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 63 (for_action1 -> .)
    SEMICOLON       reduce using rule 63 (for_action1 -> .)
    RELOP           reduce using rule 63 (for_action1 -> .)
    LOGIC           reduce using rule 63 (for_action1 -> .)
    TERMS           reduce using rule 63 (for_action1 -> .)
    LEFTPAR         reduce using rule 63 (for_action1 -> .)

    for_action1                    shift and go to state 296

state 291

    (66) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (68) while_action2 -> .

    RIGHTPAR        reduce using rule 68 (while_action2 -> .)

    while_action2                  shift and go to state 297

state 292

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 298


state 293

    (55) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (56) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (58) condition_action2 -> .
    (59) condition_action3 -> .

    ID              reduce using rule 58 (condition_action2 -> .)
    IF              reduce using rule 58 (condition_action2 -> .)
    VAR             reduce using rule 58 (condition_action2 -> .)
    PRINT           reduce using rule 58 (condition_action2 -> .)
    RETURN          reduce using rule 58 (condition_action2 -> .)
    FOR             reduce using rule 58 (condition_action2 -> .)
    WHILE           reduce using rule 58 (condition_action2 -> .)
    DRAW            reduce using rule 58 (condition_action2 -> .)
    SIZE            reduce using rule 58 (condition_action2 -> .)
    HEAD            reduce using rule 58 (condition_action2 -> .)
    TAIL            reduce using rule 58 (condition_action2 -> .)
    LAST            reduce using rule 58 (condition_action2 -> .)
    SET_TITLE       reduce using rule 58 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 58 (condition_action2 -> .)
    SET_COLOR       reduce using rule 58 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 58 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 58 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 58 (condition_action2 -> .)
    ELSE            reduce using rule 59 (condition_action3 -> .)

    condition_action2              shift and go to state 299
    condition_action3              shift and go to state 300

state 294

    (83) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 83 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 295

    (84) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 84 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 296

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (97) expression -> . exp RELOP relop_action1 exp relop_action2
    (98) expression -> . exp LOGIC logic_action1 exp logic_action2
    (99) expression -> . exp
    (104) exp -> . term exp_action recexp
    (105) exp -> . term exp_action
    (108) term -> . factor term_action recterm
    (109) term -> . factor term_action
    (113) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (114) factor -> . EX cte
    (115) factor -> . cte
    (116) factor_action1 -> .
    (128) cte -> .
    (129) cte -> . id
    (130) cte -> . int
    (131) cte -> . float
    (132) cte -> . bool
    (133) cte -> . string
    (134) cte -> . nestedvalue
    (135) cte -> . functioncall
    (136) cte -> . listaccess
    (137) cte -> . specialfunction
    (138) id -> . ID
    (140) int -> . INT
    (141) float -> . FLOAT
    (142) bool -> . TRUE
    (143) bool -> . FALSE
    (139) string -> . STRING
    (126) nestedvalue -> . ID DOT ID
    (90) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (125) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 105
    LEFTPAR         reduce using rule 116 (factor_action1 -> .)
    TERMS           reduce using rule 128 (cte -> .)
    RELOP           reduce using rule 128 (cte -> .)
    LOGIC           reduce using rule 128 (cte -> .)
    SEMICOLON       reduce using rule 128 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 128 (cte -> .) ]

    expression                     shift and go to state 301
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    factor_action1                 shift and go to state 104
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 297

    (66) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 302


state 298

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 299

    (55) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    DRAW            reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SIZE            reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    HEAD            reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    TAIL            reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    LAST            reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_TITLE       reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_DIMENSION   reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_COLOR       reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_OBJECT   reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 55 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 300

    (56) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 303


state 301

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (64) for_action2 -> .

    SEMICOLON       reduce using rule 64 (for_action2 -> .)

    for_action2                    shift and go to state 304

state 302

    (66) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 305

state 303

    (56) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 306

state 304

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 307


state 305

    (66) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (69) while_action3 -> .

    ID              reduce using rule 69 (while_action3 -> .)
    IF              reduce using rule 69 (while_action3 -> .)
    VAR             reduce using rule 69 (while_action3 -> .)
    PRINT           reduce using rule 69 (while_action3 -> .)
    RETURN          reduce using rule 69 (while_action3 -> .)
    FOR             reduce using rule 69 (while_action3 -> .)
    WHILE           reduce using rule 69 (while_action3 -> .)
    DRAW            reduce using rule 69 (while_action3 -> .)
    SIZE            reduce using rule 69 (while_action3 -> .)
    HEAD            reduce using rule 69 (while_action3 -> .)
    TAIL            reduce using rule 69 (while_action3 -> .)
    LAST            reduce using rule 69 (while_action3 -> .)
    SET_TITLE       reduce using rule 69 (while_action3 -> .)
    SET_DIMENSION   reduce using rule 69 (while_action3 -> .)
    SET_COLOR       reduce using rule 69 (while_action3 -> .)
    CREATE_OBJECT   reduce using rule 69 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 69 (while_action3 -> .)
    RIGHTKEY        reduce using rule 69 (while_action3 -> .)

    while_action3                  shift and go to state 308

state 306

    (56) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (58) condition_action2 -> .

    ID              reduce using rule 58 (condition_action2 -> .)
    IF              reduce using rule 58 (condition_action2 -> .)
    VAR             reduce using rule 58 (condition_action2 -> .)
    PRINT           reduce using rule 58 (condition_action2 -> .)
    RETURN          reduce using rule 58 (condition_action2 -> .)
    FOR             reduce using rule 58 (condition_action2 -> .)
    WHILE           reduce using rule 58 (condition_action2 -> .)
    DRAW            reduce using rule 58 (condition_action2 -> .)
    SIZE            reduce using rule 58 (condition_action2 -> .)
    HEAD            reduce using rule 58 (condition_action2 -> .)
    TAIL            reduce using rule 58 (condition_action2 -> .)
    LAST            reduce using rule 58 (condition_action2 -> .)
    SET_TITLE       reduce using rule 58 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 58 (condition_action2 -> .)
    SET_COLOR       reduce using rule 58 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 58 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 58 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 58 (condition_action2 -> .)

    condition_action2              shift and go to state 309

state 307

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (52) assign -> . ID assign_action1 EQUAL assign_action2 expression

    ID              shift and go to state 280

    assign                         shift and go to state 310

state 308

    (66) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    DRAW            reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SIZE            reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    HEAD            reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    TAIL            reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    LAST            reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_TITLE       reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_DIMENSION   reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_COLOR       reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_OBJECT   reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 66 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 309

    (56) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    DRAW            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SIZE            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    HEAD            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    TAIL            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    LAST            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_TITLE       reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_DIMENSION   reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_COLOR       reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_OBJECT   reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 310

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 311


state 311

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 312


state 312

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 313

state 313

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (65) for_action3 -> .

    ID              reduce using rule 65 (for_action3 -> .)
    IF              reduce using rule 65 (for_action3 -> .)
    VAR             reduce using rule 65 (for_action3 -> .)
    PRINT           reduce using rule 65 (for_action3 -> .)
    RETURN          reduce using rule 65 (for_action3 -> .)
    FOR             reduce using rule 65 (for_action3 -> .)
    WHILE           reduce using rule 65 (for_action3 -> .)
    DRAW            reduce using rule 65 (for_action3 -> .)
    SIZE            reduce using rule 65 (for_action3 -> .)
    HEAD            reduce using rule 65 (for_action3 -> .)
    TAIL            reduce using rule 65 (for_action3 -> .)
    LAST            reduce using rule 65 (for_action3 -> .)
    SET_TITLE       reduce using rule 65 (for_action3 -> .)
    SET_DIMENSION   reduce using rule 65 (for_action3 -> .)
    SET_COLOR       reduce using rule 65 (for_action3 -> .)
    CREATE_OBJECT   reduce using rule 65 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 65 (for_action3 -> .)
    RIGHTKEY        reduce using rule 65 (for_action3 -> .)

    for_action3                    shift and go to state 314

state 314

    (62) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    DRAW            reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SIZE            reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    HEAD            reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    TAIL            reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    LAST            reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_TITLE       reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_DIMENSION   reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_COLOR       reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_OBJECT   reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 62 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EX in state 87 resolved as shift
WARNING: shift/reduce conflict for VAR in state 88 resolved as shift
WARNING: shift/reduce conflict for VAR in state 150 resolved as shift
WARNING: shift/reduce conflict for EX in state 155 resolved as shift
WARNING: shift/reduce conflict for EX in state 159 resolved as shift
WARNING: shift/reduce conflict for EX in state 160 resolved as shift
WARNING: shift/reduce conflict for EX in state 165 resolved as shift
WARNING: shift/reduce conflict for EX in state 166 resolved as shift
WARNING: shift/reduce conflict for EX in state 167 resolved as shift
WARNING: shift/reduce conflict for EX in state 168 resolved as shift
WARNING: shift/reduce conflict for EX in state 169 resolved as shift
WARNING: shift/reduce conflict for EX in state 189 resolved as shift
WARNING: shift/reduce conflict for EX in state 197 resolved as shift
WARNING: shift/reduce conflict for EX in state 198 resolved as shift
WARNING: shift/reduce conflict for EX in state 229 resolved as shift
WARNING: shift/reduce conflict for EX in state 230 resolved as shift
WARNING: shift/reduce conflict for EX in state 232 resolved as shift
WARNING: shift/reduce conflict for EX in state 240 resolved as shift
WARNING: shift/reduce conflict for EX in state 241 resolved as shift
WARNING: shift/reduce conflict for EX in state 243 resolved as shift
WARNING: shift/reduce conflict for RIGHTPAR in state 243 resolved as shift
WARNING: shift/reduce conflict for EX in state 246 resolved as shift
WARNING: shift/reduce conflict for EX in state 249 resolved as shift
WARNING: shift/reduce conflict for EX in state 250 resolved as shift
WARNING: shift/reduce conflict for EX in state 274 resolved as shift
WARNING: shift/reduce conflict for EX in state 281 resolved as shift
WARNING: shift/reduce conflict for EX in state 285 resolved as shift
WARNING: shift/reduce conflict for EX in state 288 resolved as shift
WARNING: shift/reduce conflict for EX in state 289 resolved as shift
WARNING: shift/reduce conflict for EX in state 296 resolved as shift
WARNING: reduce/reduce conflict in state 258 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 258
