Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    LIST
    OBJECT

Grammar

Rule 0     S' -> capi
Rule 1     capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 2     capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 3     capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 4     capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 5     capi_action1 -> <empty>
Rule 6     capi_action2 -> <empty>
Rule 7     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 8     start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 9     start_action1 -> <empty>
Rule 10    run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 11    run_action1 -> <empty>
Rule 12    main_cont -> <empty>
Rule 13    vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 14    vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 15    vars -> VAR recids COLON type SEMICOLON vars
Rule 16    vars -> VAR recids COLON type SEMICOLON
Rule 17    recids -> ID
Rule 18    recids -> ID COMMA recids
Rule 19    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 20    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 21    recstatement -> statement recstatement
Rule 22    recstatement -> statement
Rule 23    statement -> assign SEMICOLON
Rule 24    statement -> condition
Rule 25    statement -> vars
Rule 26    statement -> loop
Rule 27    statement -> write SEMICOLON
Rule 28    statement -> return SEMICOLON
Rule 29    statement -> functioncall SEMICOLON
Rule 30    statement -> nestedassign SEMICOLON
Rule 31    statement -> specialfunction SEMICOLON
Rule 32    specialfunction -> draw
Rule 33    specialfunction -> init
Rule 34    specialfunction -> size
Rule 35    specialfunction -> head
Rule 36    specialfunction -> tail
Rule 37    specialfunction -> last
Rule 38    specialfunction -> set_fill
Rule 39    specialfunction -> set_title
Rule 40    specialfunction -> get_event
Rule 41    specialfunction -> update
Rule 42    specialfunction -> set_dimension
Rule 43    specialfunction -> set_color
Rule 44    specialfunction -> create_object
Rule 45    specialfunction -> create_text
Rule 46    draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 47    init -> INIT LEFTPAR RIGHTPAR
Rule 48    size -> ID DOT SIZE LEFTPAR RIGHTPAR
Rule 49    head -> ID DOT HEAD LEFTPAR RIGHTPAR
Rule 50    tail -> TAIL LEFTPAR RIGHTPAR
Rule 51    last -> LAST LEFTPAR RIGHTPAR
Rule 52    set_title -> SET_TITLE LEFTPAR expression RIGHTPAR
Rule 53    set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 54    set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 55    update -> UPDATE LEFTPAR RIGHTPAR
Rule 56    get_event -> GET_EVENT LEFTPAR RIGHTPAR
Rule 57    set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 58    create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
Rule 59    create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR
Rule 60    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 61    assign -> assign_list EQUAL assign_action2 expression
Rule 62    assign_action1 -> <empty>
Rule 63    assign_action2 -> <empty>
Rule 64    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 65    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 66    condition_action1 -> <empty>
Rule 67    condition_action2 -> <empty>
Rule 68    condition_action3 -> <empty>
Rule 69    loop -> for
Rule 70    loop -> while
Rule 71    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 72    for_action1 -> <empty>
Rule 73    for_action2 -> <empty>
Rule 74    for_action3 -> <empty>
Rule 75    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 76    while_action1 -> <empty>
Rule 77    while_action2 -> <empty>
Rule 78    while_action3 -> <empty>
Rule 79    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 80    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 81    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 82    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 83    startscope_action -> <empty>
Rule 84    function_action1 -> <empty>
Rule 85    function_action2 -> <empty>
Rule 86    function_action3 -> <empty>
Rule 87    recparams -> ID COLON type
Rule 88    recparams -> ID COLON type COMMA recparams
Rule 89    recfunc -> function recfunc
Rule 90    recfunc -> function
Rule 91    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 92    recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 93    recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 94    recwrite -> expression action_recwrite_exp
Rule 95    recwrite -> STRING action_recwrite_cte
Rule 96    action_recwrite_exp -> <empty>
Rule 97    action_recwrite_cte -> <empty>
Rule 98    return -> RETURN expression
Rule 99    functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
Rule 100   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
Rule 101   function_call_action1 -> <empty>
Rule 102   function_call_action2 -> <empty>
Rule 103   recfuncexp -> expression COMMA recfuncexp
Rule 104   recfuncexp -> expression recfunc_action1
Rule 105   recfunc_action1 -> <empty>
Rule 106   expression -> exp RELOP relop_action1 exp relop_action2
Rule 107   expression -> exp LOGIC logic_action1 exp logic_action2
Rule 108   expression -> exp
Rule 109   relop_action1 -> <empty>
Rule 110   relop_action2 -> <empty>
Rule 111   logic_action1 -> <empty>
Rule 112   logic_action2 -> <empty>
Rule 113   exp -> term exp_action recexp
Rule 114   exp -> term exp_action
Rule 115   exp_action -> <empty>
Rule 116   recexp -> EX add_operator exp
Rule 117   term -> factor term_action recterm
Rule 118   term -> factor term_action
Rule 119   term_action -> <empty>
Rule 120   recterm -> TERMS add_operator term
Rule 121   add_operator -> <empty>
Rule 122   factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2
Rule 123   factor -> EX cte
Rule 124   factor -> cte
Rule 125   factor_action1 -> <empty>
Rule 126   factor_action2 -> <empty>
Rule 127   type -> primitivetype
Rule 128   type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
Rule 129   action_list1 -> <empty>
Rule 130   primitivetype -> TINT
Rule 131   primitivetype -> TFLOAT
Rule 132   primitivetype -> TSTRING
Rule 133   primitivetype -> TBOOL
Rule 134   primitivetype -> TOBJECT
Rule 135   assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 136   listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 137   list_action1 -> <empty>
Rule 138   list_action_3 -> <empty>
Rule 139   nestedvalue -> ID DOT ID
Rule 140   nestedassign -> nestedvalue EQUAL expression
Rule 141   cte -> <empty>
Rule 142   cte -> id
Rule 143   cte -> int
Rule 144   cte -> float
Rule 145   cte -> bool
Rule 146   cte -> string
Rule 147   cte -> nestedvalue
Rule 148   cte -> functioncall
Rule 149   cte -> listaccess
Rule 150   cte -> specialfunction
Rule 151   id -> ID
Rule 152   string -> STRING
Rule 153   int -> INT
Rule 154   float -> FLOAT
Rule 155   bool -> TRUE
Rule 156   bool -> FALSE

Terminals, with rules where they appear

BAR                  : 128 128
COLON                : 1 2 3 4 7 13 14 15 16 19 20 87 88
COMMA                : 18 46 46 46 46 53 53 54 57 57 88 92 93 103
COMMENT              : 
CREATE_OBJECT        : 58
CREATE_TEXT          : 59
DOT                  : 48 49 139
DRAW                 : 46
ELSE                 : 65
EQUAL                : 13 14 60 61 140
EX                   : 116 123
FALSE                : 156
FLOAT                : 154
FOR                  : 71
FUNC                 : 8 10 79 80 81 82
GET_EVENT            : 56
GLOBAL               : 7
HEAD                 : 49
ID                   : 17 18 48 49 60 79 80 81 82 87 88 99 100 135 136 139 139 151
IF                   : 64 65
INIT                 : 47
INT                  : 153
LAST                 : 51
LEFTBRACKET          : 128 135 136
LEFTKEY              : 1 2 3 4 7 19 20
LEFTPAR              : 8 10 46 47 48 49 50 51 52 53 54 55 56 57 58 59 64 65 71 75 79 80 81 82 91 99 100 122
LIST                 : 
LOGIC                : 107
MAIN                 : 1 2 3 4
OBJECT               : 
PRINT                : 91
RELOP                : 106
RETURN               : 98
RIGHTBRACKET         : 128 135 136
RIGHTKEY             : 1 2 3 4 7 19 20
RIGHTPAR             : 8 10 46 47 48 49 50 51 52 53 54 55 56 57 58 59 64 65 71 75 79 80 81 82 91 99 100 122
RUN                  : 10
SEMICOLON            : 1 2 3 4 7 13 14 15 16 19 20 23 27 28 29 30 31 71 71 71
SET_COLOR            : 57
SET_DIMENSION        : 54
SET_FILL             : 53
SET_TITLE            : 52
SIZE                 : 48
START                : 8
STRING               : 93 95 152
TAIL                 : 50
TBOOL                : 133
TERMS                : 120
TFLOAT               : 131
TINT                 : 130
TLIST                : 128
TOBJECT              : 134
TRUE                 : 155
TSTRING              : 132
UPDATE               : 55
VAR                  : 13 14 15 16
VOID                 : 8 10 81 82
WHILE                : 75
error                : 

Nonterminals, with rules where they appear

action_list1         : 128
action_recwrite_cte  : 93 95
action_recwrite_exp  : 92 94
add_operator         : 116 120
assign               : 23 71 71
assign_action1       : 60
assign_action2       : 60 61
assign_list          : 61
block                : 8 10 64 65 65 71 75 79 80 81 82
bool                 : 145
capi                 : 0
capi_action1         : 1 2 3 4
capi_action2         : 1 2 3 4
condition            : 24
condition_action1    : 64 65
condition_action2    : 64 65
condition_action3    : 65
create_object        : 44
create_text          : 45
cte                  : 123 124 128
draw                 : 32
exp                  : 106 106 107 107 108 116
exp_action           : 113 114
expression           : 13 14 46 46 46 46 46 52 53 53 53 54 54 57 57 57 60 61 64 65 71 75 92 94 98 103 104 122 135 136 140
factor               : 117 118
factor_action1       : 122
factor_action2       : 122
float                : 144
for                  : 69
for_action1          : 71
for_action2          : 71
for_action3          : 71
function             : 89 90
function_action1     : 79 81
function_action2     : 79 81
function_action3     : 79 80 81 82
function_call_action1 : 99 100
function_call_action2 : 99 100
functioncall         : 29 148
get_event            : 40
global               : 1 3
head                 : 35
id                   : 142
init                 : 33
int                  : 143
last                 : 37
list_action1         : 135 136
list_action_3        : 135 136
listaccess           : 149
logic_action1        : 107
logic_action2        : 107
loop                 : 26
main_cont            : 8 10
nestedassign         : 30
nestedvalue          : 140 147
primitivetype        : 127 128
recexp               : 113
recfunc              : 1 2 89
recfunc_action1      : 104
recfuncexp           : 58 59 99 103
recids               : 13 14 15 16 18
recparams            : 79 81 88
recstatement         : 19 21
recterm              : 117
recwrite             : 91 92 93
relop_action1        : 106
relop_action2        : 106
return               : 28
run                  : 1 2 3 4
run_action1          : 10
set_color            : 43
set_dimension        : 42
set_fill             : 38
set_title            : 39
size                 : 34
specialfunction      : 31 150
start                : 1 2 3 4
start_action1        : 8
startscope_action    : 8 10 71 75 79 80 81 82
statement            : 21 22
string               : 146
tail                 : 36
term                 : 113 114 120
term_action          : 117 118
type                 : 13 14 15 16 79 80 87 88
update               : 41
vars                 : 7 13 15 25
while                : 70
while_action1        : 75
while_action2        : 75
while_action3        : 75
write                : 27

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> . capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> . capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> . capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (5) capi_action1 -> .

    MAIN            reduce using rule 5 (capi_action1 -> .)
    GLOBAL          reduce using rule 5 (capi_action1 -> .)
    VOID            reduce using rule 5 (capi_action1 -> .)
    TLIST           reduce using rule 5 (capi_action1 -> .)
    TINT            reduce using rule 5 (capi_action1 -> .)
    TFLOAT          reduce using rule 5 (capi_action1 -> .)
    TSTRING         reduce using rule 5 (capi_action1 -> .)
    TBOOL           reduce using rule 5 (capi_action1 -> .)
    TOBJECT         reduce using rule 5 (capi_action1 -> .)

    capi                           shift and go to state 1
    capi_action1                   shift and go to state 2

state 1

    (0) S' -> capi .



state 2

    (1) capi -> capi_action1 . global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> capi_action1 . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 . global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> capi_action1 . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (7) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (89) recfunc -> . function recfunc
    (90) recfunc -> . function
    (79) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (80) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (81) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (82) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (127) type -> . primitivetype
    (128) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (130) primitivetype -> . TINT
    (131) primitivetype -> . TFLOAT
    (132) primitivetype -> . TSTRING
    (133) primitivetype -> . TBOOL
    (134) primitivetype -> . TOBJECT

    MAIN            shift and go to state 5
    GLOBAL          shift and go to state 6
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    global                         shift and go to state 3
    recfunc                        shift and go to state 4
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 3

    (1) capi -> capi_action1 global . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 global . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (89) recfunc -> . function recfunc
    (90) recfunc -> . function
    (79) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (80) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (81) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (82) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (127) type -> . primitivetype
    (128) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (130) primitivetype -> . TINT
    (131) primitivetype -> . TFLOAT
    (132) primitivetype -> . TSTRING
    (133) primitivetype -> . TBOOL
    (134) primitivetype -> . TOBJECT

    MAIN            shift and go to state 18
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    recfunc                        shift and go to state 17
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 4

    (2) capi -> capi_action1 recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 19


state 5

    (4) capi -> capi_action1 MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 6

    (7) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 21


state 7

    (89) recfunc -> function . recfunc
    (90) recfunc -> function .
    (89) recfunc -> . function recfunc
    (90) recfunc -> . function
    (79) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (80) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (81) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (82) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (127) type -> . primitivetype
    (128) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (130) primitivetype -> . TINT
    (131) primitivetype -> . TFLOAT
    (132) primitivetype -> . TSTRING
    (133) primitivetype -> . TBOOL
    (134) primitivetype -> . TOBJECT

    MAIN            reduce using rule 90 (recfunc -> function .)
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    function                       shift and go to state 7
    recfunc                        shift and go to state 22
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 8

    (79) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (80) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 9

    (81) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (82) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 24


state 10

    (127) type -> primitivetype .

    FUNC            reduce using rule 127 (type -> primitivetype .)
    EQUAL           reduce using rule 127 (type -> primitivetype .)
    SEMICOLON       reduce using rule 127 (type -> primitivetype .)
    COMMA           reduce using rule 127 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 127 (type -> primitivetype .)


state 11

    (128) type -> TLIST . BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 25


state 12

    (130) primitivetype -> TINT .

    FUNC            reduce using rule 130 (primitivetype -> TINT .)
    BAR             reduce using rule 130 (primitivetype -> TINT .)
    EQUAL           reduce using rule 130 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 130 (primitivetype -> TINT .)
    COMMA           reduce using rule 130 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 130 (primitivetype -> TINT .)


state 13

    (131) primitivetype -> TFLOAT .

    FUNC            reduce using rule 131 (primitivetype -> TFLOAT .)
    BAR             reduce using rule 131 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 131 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 131 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 131 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 131 (primitivetype -> TFLOAT .)


state 14

    (132) primitivetype -> TSTRING .

    FUNC            reduce using rule 132 (primitivetype -> TSTRING .)
    BAR             reduce using rule 132 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 132 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 132 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 132 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 132 (primitivetype -> TSTRING .)


state 15

    (133) primitivetype -> TBOOL .

    FUNC            reduce using rule 133 (primitivetype -> TBOOL .)
    BAR             reduce using rule 133 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 133 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 133 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 133 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 133 (primitivetype -> TBOOL .)


state 16

    (134) primitivetype -> TOBJECT .

    FUNC            reduce using rule 134 (primitivetype -> TOBJECT .)
    BAR             reduce using rule 134 (primitivetype -> TOBJECT .)
    EQUAL           reduce using rule 134 (primitivetype -> TOBJECT .)
    SEMICOLON       reduce using rule 134 (primitivetype -> TOBJECT .)
    COMMA           reduce using rule 134 (primitivetype -> TOBJECT .)
    RIGHTPAR        reduce using rule 134 (primitivetype -> TOBJECT .)


state 17

    (1) capi -> capi_action1 global recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 26


state 18

    (3) capi -> capi_action1 global MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (2) capi -> capi_action1 recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 28


state 20

    (4) capi -> capi_action1 MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (7) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 30


state 22

    (89) recfunc -> function recfunc .

    MAIN            reduce using rule 89 (recfunc -> function recfunc .)


state 23

    (79) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (80) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (81) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (82) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 32


state 25

    (128) type -> TLIST BAR . primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (130) primitivetype -> . TINT
    (131) primitivetype -> . TFLOAT
    (132) primitivetype -> . TSTRING
    (133) primitivetype -> . TBOOL
    (134) primitivetype -> . TOBJECT

    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    primitivetype                  shift and go to state 33

state 26

    (1) capi -> capi_action1 global recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 34


state 27

    (3) capi -> capi_action1 global MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (2) capi -> capi_action1 recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 36


state 29

    (4) capi -> capi_action1 MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 37

state 30

    (7) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 40

    vars                           shift and go to state 39

state 31

    (79) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (80) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (83) startscope_action -> .

    LEFTPAR         reduce using rule 83 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (81) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (82) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (83) startscope_action -> .

    LEFTPAR         reduce using rule 83 (startscope_action -> .)

    startscope_action              shift and go to state 42

state 33

    (128) type -> TLIST BAR primitivetype . BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 43


state 34

    (1) capi -> capi_action1 global recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 44


state 35

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 45

state 36

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 46

state 37

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 47

state 38

    (8) start -> VOID . FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 48


state 39

    (7) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 49


state 40

    (13) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR . recids COLON type SEMICOLON vars
    (16) vars -> VAR . recids COLON type SEMICOLON
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 50

state 41

    (79) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (80) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 42

    (81) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (82) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 53


state 43

    (128) type -> TLIST BAR primitivetype BAR . LEFTBRACKET cte RIGHTBRACKET action_list1

    LEFTBRACKET     shift and go to state 54


state 44

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 55

state 45

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 56

state 46

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 57

state 47

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 58

state 48

    (8) start -> VOID FUNC . start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
    (9) start_action1 -> .

    START           reduce using rule 9 (start_action1 -> .)

    start_action1                  shift and go to state 60

state 49

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 61


state 50

    (13) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR recids . COLON type SEMICOLON vars
    (16) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 62


state 51

    (17) recids -> ID .
    (18) recids -> ID . COMMA recids

    COLON           reduce using rule 17 (recids -> ID .)
    COMMA           shift and go to state 63


state 52

    (79) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (80) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (87) recparams -> . ID COLON type
    (88) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 66
    ID              shift and go to state 64

    recparams                      shift and go to state 65

state 53

    (81) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (82) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (87) recparams -> . ID COLON type
    (88) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 68
    ID              shift and go to state 64

    recparams                      shift and go to state 67

state 54

    (128) type -> TLIST BAR primitivetype BAR LEFTBRACKET . cte RIGHTBRACKET action_list1
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTBRACKET    reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

    cte                            shift and go to state 69
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 55

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 111

state 56

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 112

state 57

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 113

state 58

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 114


state 59

    (10) run -> VOID . FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 115


state 60

    (8) start -> VOID FUNC start_action1 . START startscope_action LEFTPAR RIGHTPAR main_cont block

    START           shift and go to state 116


state 61

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 62

    (13) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON . type SEMICOLON vars
    (16) vars -> VAR recids COLON . type SEMICOLON
    (127) type -> . primitivetype
    (128) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (130) primitivetype -> . TINT
    (131) primitivetype -> . TFLOAT
    (132) primitivetype -> . TSTRING
    (133) primitivetype -> . TBOOL
    (134) primitivetype -> . TOBJECT

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 117
    primitivetype                  shift and go to state 10

state 63

    (18) recids -> ID COMMA . recids
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 118

state 64

    (87) recparams -> ID . COLON type
    (88) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 119


state 65

    (79) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function_action1 -> .

    RIGHTPAR        reduce using rule 84 (function_action1 -> .)

    function_action1               shift and go to state 120

state 66

    (80) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (86) function_action3 -> .

    COLON           reduce using rule 86 (function_action3 -> .)

    function_action3               shift and go to state 121

state 67

    (81) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function_action1 -> .

    RIGHTPAR        reduce using rule 84 (function_action1 -> .)

    function_action1               shift and go to state 122

state 68

    (82) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (86) function_action3 -> .

    COLON           reduce using rule 86 (function_action3 -> .)

    function_action3               shift and go to state 123

state 69

    (128) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte . RIGHTBRACKET action_list1

    RIGHTBRACKET    shift and go to state 124


state 70

    (142) cte -> id .

    RIGHTBRACKET    reduce using rule 142 (cte -> id .)
    TERMS           reduce using rule 142 (cte -> id .)
    EX              reduce using rule 142 (cte -> id .)
    RELOP           reduce using rule 142 (cte -> id .)
    LOGIC           reduce using rule 142 (cte -> id .)
    COMMA           reduce using rule 142 (cte -> id .)
    RIGHTPAR        reduce using rule 142 (cte -> id .)
    SEMICOLON       reduce using rule 142 (cte -> id .)


state 71

    (143) cte -> int .

    RIGHTBRACKET    reduce using rule 143 (cte -> int .)
    TERMS           reduce using rule 143 (cte -> int .)
    EX              reduce using rule 143 (cte -> int .)
    RELOP           reduce using rule 143 (cte -> int .)
    LOGIC           reduce using rule 143 (cte -> int .)
    COMMA           reduce using rule 143 (cte -> int .)
    RIGHTPAR        reduce using rule 143 (cte -> int .)
    SEMICOLON       reduce using rule 143 (cte -> int .)


state 72

    (144) cte -> float .

    RIGHTBRACKET    reduce using rule 144 (cte -> float .)
    TERMS           reduce using rule 144 (cte -> float .)
    EX              reduce using rule 144 (cte -> float .)
    RELOP           reduce using rule 144 (cte -> float .)
    LOGIC           reduce using rule 144 (cte -> float .)
    COMMA           reduce using rule 144 (cte -> float .)
    RIGHTPAR        reduce using rule 144 (cte -> float .)
    SEMICOLON       reduce using rule 144 (cte -> float .)


state 73

    (145) cte -> bool .

    RIGHTBRACKET    reduce using rule 145 (cte -> bool .)
    TERMS           reduce using rule 145 (cte -> bool .)
    EX              reduce using rule 145 (cte -> bool .)
    RELOP           reduce using rule 145 (cte -> bool .)
    LOGIC           reduce using rule 145 (cte -> bool .)
    COMMA           reduce using rule 145 (cte -> bool .)
    RIGHTPAR        reduce using rule 145 (cte -> bool .)
    SEMICOLON       reduce using rule 145 (cte -> bool .)


state 74

    (146) cte -> string .

    RIGHTBRACKET    reduce using rule 146 (cte -> string .)
    TERMS           reduce using rule 146 (cte -> string .)
    EX              reduce using rule 146 (cte -> string .)
    RELOP           reduce using rule 146 (cte -> string .)
    LOGIC           reduce using rule 146 (cte -> string .)
    COMMA           reduce using rule 146 (cte -> string .)
    RIGHTPAR        reduce using rule 146 (cte -> string .)
    SEMICOLON       reduce using rule 146 (cte -> string .)


state 75

    (147) cte -> nestedvalue .

    RIGHTBRACKET    reduce using rule 147 (cte -> nestedvalue .)
    TERMS           reduce using rule 147 (cte -> nestedvalue .)
    EX              reduce using rule 147 (cte -> nestedvalue .)
    RELOP           reduce using rule 147 (cte -> nestedvalue .)
    LOGIC           reduce using rule 147 (cte -> nestedvalue .)
    COMMA           reduce using rule 147 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 147 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 147 (cte -> nestedvalue .)


state 76

    (148) cte -> functioncall .

    RIGHTBRACKET    reduce using rule 148 (cte -> functioncall .)
    TERMS           reduce using rule 148 (cte -> functioncall .)
    EX              reduce using rule 148 (cte -> functioncall .)
    RELOP           reduce using rule 148 (cte -> functioncall .)
    LOGIC           reduce using rule 148 (cte -> functioncall .)
    COMMA           reduce using rule 148 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 148 (cte -> functioncall .)
    SEMICOLON       reduce using rule 148 (cte -> functioncall .)


state 77

    (149) cte -> listaccess .

    RIGHTBRACKET    reduce using rule 149 (cte -> listaccess .)
    TERMS           reduce using rule 149 (cte -> listaccess .)
    EX              reduce using rule 149 (cte -> listaccess .)
    RELOP           reduce using rule 149 (cte -> listaccess .)
    LOGIC           reduce using rule 149 (cte -> listaccess .)
    COMMA           reduce using rule 149 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 149 (cte -> listaccess .)
    SEMICOLON       reduce using rule 149 (cte -> listaccess .)


state 78

    (150) cte -> specialfunction .

    RIGHTBRACKET    reduce using rule 150 (cte -> specialfunction .)
    TERMS           reduce using rule 150 (cte -> specialfunction .)
    EX              reduce using rule 150 (cte -> specialfunction .)
    RELOP           reduce using rule 150 (cte -> specialfunction .)
    LOGIC           reduce using rule 150 (cte -> specialfunction .)
    COMMA           reduce using rule 150 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 150 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 150 (cte -> specialfunction .)


state 79

    (151) id -> ID .
    (139) nestedvalue -> ID . DOT ID
    (99) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (48) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (101) function_call_action1 -> .
    (137) list_action1 -> .

    RIGHTBRACKET    reduce using rule 151 (id -> ID .)
    TERMS           reduce using rule 151 (id -> ID .)
    EX              reduce using rule 151 (id -> ID .)
    RELOP           reduce using rule 151 (id -> ID .)
    LOGIC           reduce using rule 151 (id -> ID .)
    COMMA           reduce using rule 151 (id -> ID .)
    RIGHTPAR        reduce using rule 151 (id -> ID .)
    SEMICOLON       reduce using rule 151 (id -> ID .)
    DOT             shift and go to state 125
    LEFTPAR         reduce using rule 101 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 137 (list_action1 -> .)

    function_call_action1          shift and go to state 126
    list_action1                   shift and go to state 127

state 80

    (153) int -> INT .

    RIGHTBRACKET    reduce using rule 153 (int -> INT .)
    TERMS           reduce using rule 153 (int -> INT .)
    EX              reduce using rule 153 (int -> INT .)
    RELOP           reduce using rule 153 (int -> INT .)
    LOGIC           reduce using rule 153 (int -> INT .)
    COMMA           reduce using rule 153 (int -> INT .)
    RIGHTPAR        reduce using rule 153 (int -> INT .)
    SEMICOLON       reduce using rule 153 (int -> INT .)


state 81

    (154) float -> FLOAT .

    RIGHTBRACKET    reduce using rule 154 (float -> FLOAT .)
    TERMS           reduce using rule 154 (float -> FLOAT .)
    EX              reduce using rule 154 (float -> FLOAT .)
    RELOP           reduce using rule 154 (float -> FLOAT .)
    LOGIC           reduce using rule 154 (float -> FLOAT .)
    COMMA           reduce using rule 154 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 154 (float -> FLOAT .)
    SEMICOLON       reduce using rule 154 (float -> FLOAT .)


state 82

    (155) bool -> TRUE .

    RIGHTBRACKET    reduce using rule 155 (bool -> TRUE .)
    TERMS           reduce using rule 155 (bool -> TRUE .)
    EX              reduce using rule 155 (bool -> TRUE .)
    RELOP           reduce using rule 155 (bool -> TRUE .)
    LOGIC           reduce using rule 155 (bool -> TRUE .)
    COMMA           reduce using rule 155 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 155 (bool -> TRUE .)
    SEMICOLON       reduce using rule 155 (bool -> TRUE .)


state 83

    (156) bool -> FALSE .

    RIGHTBRACKET    reduce using rule 156 (bool -> FALSE .)
    TERMS           reduce using rule 156 (bool -> FALSE .)
    EX              reduce using rule 156 (bool -> FALSE .)
    RELOP           reduce using rule 156 (bool -> FALSE .)
    LOGIC           reduce using rule 156 (bool -> FALSE .)
    COMMA           reduce using rule 156 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 156 (bool -> FALSE .)
    SEMICOLON       reduce using rule 156 (bool -> FALSE .)


state 84

    (152) string -> STRING .

    RIGHTBRACKET    reduce using rule 152 (string -> STRING .)
    TERMS           reduce using rule 152 (string -> STRING .)
    EX              reduce using rule 152 (string -> STRING .)
    RELOP           reduce using rule 152 (string -> STRING .)
    LOGIC           reduce using rule 152 (string -> STRING .)
    COMMA           reduce using rule 152 (string -> STRING .)
    RIGHTPAR        reduce using rule 152 (string -> STRING .)
    SEMICOLON       reduce using rule 152 (string -> STRING .)


state 85

    (32) specialfunction -> draw .

    RIGHTBRACKET    reduce using rule 32 (specialfunction -> draw .)
    TERMS           reduce using rule 32 (specialfunction -> draw .)
    EX              reduce using rule 32 (specialfunction -> draw .)
    RELOP           reduce using rule 32 (specialfunction -> draw .)
    LOGIC           reduce using rule 32 (specialfunction -> draw .)
    COMMA           reduce using rule 32 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 32 (specialfunction -> draw .)


state 86

    (33) specialfunction -> init .

    RIGHTBRACKET    reduce using rule 33 (specialfunction -> init .)
    TERMS           reduce using rule 33 (specialfunction -> init .)
    EX              reduce using rule 33 (specialfunction -> init .)
    RELOP           reduce using rule 33 (specialfunction -> init .)
    LOGIC           reduce using rule 33 (specialfunction -> init .)
    COMMA           reduce using rule 33 (specialfunction -> init .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> init .)
    SEMICOLON       reduce using rule 33 (specialfunction -> init .)


state 87

    (34) specialfunction -> size .

    RIGHTBRACKET    reduce using rule 34 (specialfunction -> size .)
    TERMS           reduce using rule 34 (specialfunction -> size .)
    EX              reduce using rule 34 (specialfunction -> size .)
    RELOP           reduce using rule 34 (specialfunction -> size .)
    LOGIC           reduce using rule 34 (specialfunction -> size .)
    COMMA           reduce using rule 34 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> size .)
    SEMICOLON       reduce using rule 34 (specialfunction -> size .)


state 88

    (35) specialfunction -> head .

    RIGHTBRACKET    reduce using rule 35 (specialfunction -> head .)
    TERMS           reduce using rule 35 (specialfunction -> head .)
    EX              reduce using rule 35 (specialfunction -> head .)
    RELOP           reduce using rule 35 (specialfunction -> head .)
    LOGIC           reduce using rule 35 (specialfunction -> head .)
    COMMA           reduce using rule 35 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> head .)
    SEMICOLON       reduce using rule 35 (specialfunction -> head .)


state 89

    (36) specialfunction -> tail .

    RIGHTBRACKET    reduce using rule 36 (specialfunction -> tail .)
    TERMS           reduce using rule 36 (specialfunction -> tail .)
    EX              reduce using rule 36 (specialfunction -> tail .)
    RELOP           reduce using rule 36 (specialfunction -> tail .)
    LOGIC           reduce using rule 36 (specialfunction -> tail .)
    COMMA           reduce using rule 36 (specialfunction -> tail .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> tail .)
    SEMICOLON       reduce using rule 36 (specialfunction -> tail .)


state 90

    (37) specialfunction -> last .

    RIGHTBRACKET    reduce using rule 37 (specialfunction -> last .)
    TERMS           reduce using rule 37 (specialfunction -> last .)
    EX              reduce using rule 37 (specialfunction -> last .)
    RELOP           reduce using rule 37 (specialfunction -> last .)
    LOGIC           reduce using rule 37 (specialfunction -> last .)
    COMMA           reduce using rule 37 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 37 (specialfunction -> last .)
    SEMICOLON       reduce using rule 37 (specialfunction -> last .)


state 91

    (38) specialfunction -> set_fill .

    RIGHTBRACKET    reduce using rule 38 (specialfunction -> set_fill .)
    TERMS           reduce using rule 38 (specialfunction -> set_fill .)
    EX              reduce using rule 38 (specialfunction -> set_fill .)
    RELOP           reduce using rule 38 (specialfunction -> set_fill .)
    LOGIC           reduce using rule 38 (specialfunction -> set_fill .)
    COMMA           reduce using rule 38 (specialfunction -> set_fill .)
    RIGHTPAR        reduce using rule 38 (specialfunction -> set_fill .)
    SEMICOLON       reduce using rule 38 (specialfunction -> set_fill .)


state 92

    (39) specialfunction -> set_title .

    RIGHTBRACKET    reduce using rule 39 (specialfunction -> set_title .)
    TERMS           reduce using rule 39 (specialfunction -> set_title .)
    EX              reduce using rule 39 (specialfunction -> set_title .)
    RELOP           reduce using rule 39 (specialfunction -> set_title .)
    LOGIC           reduce using rule 39 (specialfunction -> set_title .)
    COMMA           reduce using rule 39 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 39 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 39 (specialfunction -> set_title .)


state 93

    (40) specialfunction -> get_event .

    RIGHTBRACKET    reduce using rule 40 (specialfunction -> get_event .)
    TERMS           reduce using rule 40 (specialfunction -> get_event .)
    EX              reduce using rule 40 (specialfunction -> get_event .)
    RELOP           reduce using rule 40 (specialfunction -> get_event .)
    LOGIC           reduce using rule 40 (specialfunction -> get_event .)
    COMMA           reduce using rule 40 (specialfunction -> get_event .)
    RIGHTPAR        reduce using rule 40 (specialfunction -> get_event .)
    SEMICOLON       reduce using rule 40 (specialfunction -> get_event .)


state 94

    (41) specialfunction -> update .

    RIGHTBRACKET    reduce using rule 41 (specialfunction -> update .)
    TERMS           reduce using rule 41 (specialfunction -> update .)
    EX              reduce using rule 41 (specialfunction -> update .)
    RELOP           reduce using rule 41 (specialfunction -> update .)
    LOGIC           reduce using rule 41 (specialfunction -> update .)
    COMMA           reduce using rule 41 (specialfunction -> update .)
    RIGHTPAR        reduce using rule 41 (specialfunction -> update .)
    SEMICOLON       reduce using rule 41 (specialfunction -> update .)


state 95

    (42) specialfunction -> set_dimension .

    RIGHTBRACKET    reduce using rule 42 (specialfunction -> set_dimension .)
    TERMS           reduce using rule 42 (specialfunction -> set_dimension .)
    EX              reduce using rule 42 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 42 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 42 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 42 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 42 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 42 (specialfunction -> set_dimension .)


state 96

    (43) specialfunction -> set_color .

    RIGHTBRACKET    reduce using rule 43 (specialfunction -> set_color .)
    TERMS           reduce using rule 43 (specialfunction -> set_color .)
    EX              reduce using rule 43 (specialfunction -> set_color .)
    RELOP           reduce using rule 43 (specialfunction -> set_color .)
    LOGIC           reduce using rule 43 (specialfunction -> set_color .)
    COMMA           reduce using rule 43 (specialfunction -> set_color .)
    RIGHTPAR        reduce using rule 43 (specialfunction -> set_color .)
    SEMICOLON       reduce using rule 43 (specialfunction -> set_color .)


state 97

    (44) specialfunction -> create_object .

    RIGHTBRACKET    reduce using rule 44 (specialfunction -> create_object .)
    TERMS           reduce using rule 44 (specialfunction -> create_object .)
    EX              reduce using rule 44 (specialfunction -> create_object .)
    RELOP           reduce using rule 44 (specialfunction -> create_object .)
    LOGIC           reduce using rule 44 (specialfunction -> create_object .)
    COMMA           reduce using rule 44 (specialfunction -> create_object .)
    RIGHTPAR        reduce using rule 44 (specialfunction -> create_object .)
    SEMICOLON       reduce using rule 44 (specialfunction -> create_object .)


state 98

    (45) specialfunction -> create_text .

    RIGHTBRACKET    reduce using rule 45 (specialfunction -> create_text .)
    TERMS           reduce using rule 45 (specialfunction -> create_text .)
    EX              reduce using rule 45 (specialfunction -> create_text .)
    RELOP           reduce using rule 45 (specialfunction -> create_text .)
    LOGIC           reduce using rule 45 (specialfunction -> create_text .)
    COMMA           reduce using rule 45 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 45 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 45 (specialfunction -> create_text .)


state 99

    (46) draw -> DRAW . LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 128


state 100

    (47) init -> INIT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 129


state 101

    (50) tail -> TAIL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 130


state 102

    (51) last -> LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 131


state 103

    (53) set_fill -> SET_FILL . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 132


state 104

    (52) set_title -> SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 133


state 105

    (56) get_event -> GET_EVENT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 134


state 106

    (55) update -> UPDATE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 135


state 107

    (54) set_dimension -> SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 136


state 108

    (57) set_color -> SET_COLOR . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 137


state 109

    (58) create_object -> CREATE_OBJECT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 138


state 110

    (59) create_text -> CREATE_TEXT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 139


state 111

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 140

state 112

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 141


state 113

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 142


state 114

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 143


state 115

    (10) run -> VOID FUNC . run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
    (11) run_action1 -> .

    RUN             reduce using rule 11 (run_action1 -> .)

    run_action1                    shift and go to state 144

state 116

    (8) start -> VOID FUNC start_action1 START . startscope_action LEFTPAR RIGHTPAR main_cont block
    (83) startscope_action -> .

    LEFTPAR         reduce using rule 83 (startscope_action -> .)

    startscope_action              shift and go to state 145

state 117

    (13) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON type . SEMICOLON vars
    (16) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 146
    SEMICOLON       shift and go to state 147


state 118

    (18) recids -> ID COMMA recids .

    COLON           reduce using rule 18 (recids -> ID COMMA recids .)


state 119

    (87) recparams -> ID COLON . type
    (88) recparams -> ID COLON . type COMMA recparams
    (127) type -> . primitivetype
    (128) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (130) primitivetype -> . TINT
    (131) primitivetype -> . TFLOAT
    (132) primitivetype -> . TSTRING
    (133) primitivetype -> . TBOOL
    (134) primitivetype -> . TOBJECT

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 148
    primitivetype                  shift and go to state 10

state 120

    (79) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 149


state 121

    (80) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 150

state 122

    (81) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 152


state 123

    (82) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 153

state 124

    (128) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET . action_list1
    (129) action_list1 -> .

    FUNC            reduce using rule 129 (action_list1 -> .)
    EQUAL           reduce using rule 129 (action_list1 -> .)
    SEMICOLON       reduce using rule 129 (action_list1 -> .)
    COMMA           reduce using rule 129 (action_list1 -> .)
    RIGHTPAR        reduce using rule 129 (action_list1 -> .)

    action_list1                   shift and go to state 154

state 125

    (139) nestedvalue -> ID DOT . ID
    (48) size -> ID DOT . SIZE LEFTPAR RIGHTPAR
    (49) head -> ID DOT . HEAD LEFTPAR RIGHTPAR

    ID              shift and go to state 155
    SIZE            shift and go to state 156
    HEAD            shift and go to state 157


state 126

    (99) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 RIGHTPAR

    LEFTPAR         shift and go to state 158


state 127

    (136) listaccess -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 159


state 128

    (46) draw -> DRAW LEFTPAR . expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 160
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 129

    (47) init -> INIT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 167


state 130

    (50) tail -> TAIL LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 168


state 131

    (51) last -> LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 169


state 132

    (53) set_fill -> SET_FILL LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 170
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 133

    (52) set_title -> SET_TITLE LEFTPAR . expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 171
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 134

    (56) get_event -> GET_EVENT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 172


state 135

    (55) update -> UPDATE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 173


state 136

    (54) set_dimension -> SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 174
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 137

    (57) set_color -> SET_COLOR LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 175
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 138

    (58) create_object -> CREATE_OBJECT LEFTPAR . recfuncexp RIGHTPAR
    (103) recfuncexp -> . expression COMMA recfuncexp
    (104) recfuncexp -> . expression recfunc_action1
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    recfuncexp                     shift and go to state 176
    expression                     shift and go to state 177
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 139

    (59) create_text -> CREATE_TEXT LEFTPAR . recfuncexp RIGHTPAR
    (103) recfuncexp -> . expression COMMA recfuncexp
    (104) recfuncexp -> . expression recfunc_action1
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    recfuncexp                     shift and go to state 178
    expression                     shift and go to state 177
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 140

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 179


state 141

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 180


state 142

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 181


state 143

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 144

    (10) run -> VOID FUNC run_action1 . RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    RUN             shift and go to state 182


state 145

    (8) start -> VOID FUNC start_action1 START startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 183


state 146

    (13) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 184
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 147

    (15) vars -> VAR recids COLON type SEMICOLON . vars
    (16) vars -> VAR recids COLON type SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    DRAW            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    INIT            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    TAIL            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    LAST            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_FILL        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_TITLE       reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    GET_EVENT       reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    UPDATE          reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_DIMENSION   reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_COLOR       reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_OBJECT   reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 185

state 148

    (87) recparams -> ID COLON type .
    (88) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 87 (recparams -> ID COLON type .)
    COMMA           shift and go to state 186


state 149

    (79) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (85) function_action2 -> .

    COLON           reduce using rule 85 (function_action2 -> .)

    function_action2               shift and go to state 187

state 150

    (80) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 80 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 80 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 80 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 80 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 80 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 80 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 80 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 80 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 151

    (19) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 188


state 152

    (81) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (85) function_action2 -> .

    COLON           reduce using rule 85 (function_action2 -> .)

    function_action2               shift and go to state 189

state 153

    (82) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 82 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 82 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 82 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 82 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 82 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 82 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 82 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 82 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 154

    (128) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .

    FUNC            reduce using rule 128 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    EQUAL           reduce using rule 128 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    SEMICOLON       reduce using rule 128 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    COMMA           reduce using rule 128 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    RIGHTPAR        reduce using rule 128 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)


state 155

    (139) nestedvalue -> ID DOT ID .

    RIGHTBRACKET    reduce using rule 139 (nestedvalue -> ID DOT ID .)
    TERMS           reduce using rule 139 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 139 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 139 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 139 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 139 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 139 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 139 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 139 (nestedvalue -> ID DOT ID .)


state 156

    (48) size -> ID DOT SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 190


state 157

    (49) head -> ID DOT HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 191


state 158

    (99) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 RIGHTPAR
    (102) function_call_action2 -> .

    RIGHTPAR        reduce using rule 102 (function_call_action2 -> .)
    EX              reduce using rule 102 (function_call_action2 -> .)
    ID              reduce using rule 102 (function_call_action2 -> .)
    INT             reduce using rule 102 (function_call_action2 -> .)
    FLOAT           reduce using rule 102 (function_call_action2 -> .)
    TRUE            reduce using rule 102 (function_call_action2 -> .)
    FALSE           reduce using rule 102 (function_call_action2 -> .)
    STRING          reduce using rule 102 (function_call_action2 -> .)
    DRAW            reduce using rule 102 (function_call_action2 -> .)
    INIT            reduce using rule 102 (function_call_action2 -> .)
    TAIL            reduce using rule 102 (function_call_action2 -> .)
    LAST            reduce using rule 102 (function_call_action2 -> .)
    SET_FILL        reduce using rule 102 (function_call_action2 -> .)
    SET_TITLE       reduce using rule 102 (function_call_action2 -> .)
    GET_EVENT       reduce using rule 102 (function_call_action2 -> .)
    UPDATE          reduce using rule 102 (function_call_action2 -> .)
    SET_DIMENSION   reduce using rule 102 (function_call_action2 -> .)
    SET_COLOR       reduce using rule 102 (function_call_action2 -> .)
    CREATE_OBJECT   reduce using rule 102 (function_call_action2 -> .)
    CREATE_TEXT     reduce using rule 102 (function_call_action2 -> .)
    COMMA           reduce using rule 102 (function_call_action2 -> .)
    RELOP           reduce using rule 102 (function_call_action2 -> .)
    LOGIC           reduce using rule 102 (function_call_action2 -> .)
    TERMS           reduce using rule 102 (function_call_action2 -> .)
    LEFTPAR         reduce using rule 102 (function_call_action2 -> .)

    function_call_action2          shift and go to state 192

state 159

    (136) listaccess -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTBRACKET    reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 193
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 160

    (46) draw -> DRAW LEFTPAR expression . COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 194


state 161

    (106) expression -> exp . RELOP relop_action1 exp relop_action2
    (107) expression -> exp . LOGIC logic_action1 exp logic_action2
    (108) expression -> exp .

    RELOP           shift and go to state 195
    LOGIC           shift and go to state 196
    COMMA           reduce using rule 108 (expression -> exp .)
    RIGHTPAR        reduce using rule 108 (expression -> exp .)
    SEMICOLON       reduce using rule 108 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 108 (expression -> exp .)


state 162

    (113) exp -> term . exp_action recexp
    (114) exp -> term . exp_action
    (115) exp_action -> .

    EX              reduce using rule 115 (exp_action -> .)
    RELOP           reduce using rule 115 (exp_action -> .)
    LOGIC           reduce using rule 115 (exp_action -> .)
    COMMA           reduce using rule 115 (exp_action -> .)
    RIGHTPAR        reduce using rule 115 (exp_action -> .)
    SEMICOLON       reduce using rule 115 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 115 (exp_action -> .)

    exp_action                     shift and go to state 197

state 163

    (117) term -> factor . term_action recterm
    (118) term -> factor . term_action
    (119) term_action -> .

    TERMS           reduce using rule 119 (term_action -> .)
    EX              reduce using rule 119 (term_action -> .)
    RELOP           reduce using rule 119 (term_action -> .)
    LOGIC           reduce using rule 119 (term_action -> .)
    COMMA           reduce using rule 119 (term_action -> .)
    RIGHTPAR        reduce using rule 119 (term_action -> .)
    SEMICOLON       reduce using rule 119 (term_action -> .)
    RIGHTBRACKET    reduce using rule 119 (term_action -> .)

    term_action                    shift and go to state 198

state 164

    (122) factor -> factor_action1 . LEFTPAR expression RIGHTPAR factor_action2

    LEFTPAR         shift and go to state 199


state 165

    (123) factor -> EX . cte
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    TERMS           reduce using rule 141 (cte -> .)
    EX              reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    RIGHTBRACKET    reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

    cte                            shift and go to state 200
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 166

    (124) factor -> cte .

    TERMS           reduce using rule 124 (factor -> cte .)
    EX              reduce using rule 124 (factor -> cte .)
    RELOP           reduce using rule 124 (factor -> cte .)
    LOGIC           reduce using rule 124 (factor -> cte .)
    COMMA           reduce using rule 124 (factor -> cte .)
    RIGHTPAR        reduce using rule 124 (factor -> cte .)
    SEMICOLON       reduce using rule 124 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 124 (factor -> cte .)


state 167

    (47) init -> INIT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 47 (init -> INIT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 47 (init -> INIT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 47 (init -> INIT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 47 (init -> INIT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 47 (init -> INIT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 47 (init -> INIT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 47 (init -> INIT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 47 (init -> INIT LEFTPAR RIGHTPAR .)


state 168

    (50) tail -> TAIL LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 50 (tail -> TAIL LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 50 (tail -> TAIL LEFTPAR RIGHTPAR .)
    EX              reduce using rule 50 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 50 (tail -> TAIL LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 50 (tail -> TAIL LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 50 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 50 (tail -> TAIL LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 50 (tail -> TAIL LEFTPAR RIGHTPAR .)


state 169

    (51) last -> LAST LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 51 (last -> LAST LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 51 (last -> LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 51 (last -> LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 51 (last -> LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 51 (last -> LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 51 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 51 (last -> LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 51 (last -> LAST LEFTPAR RIGHTPAR .)


state 170

    (53) set_fill -> SET_FILL LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 201


state 171

    (52) set_title -> SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 202


state 172

    (56) get_event -> GET_EVENT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 56 (get_event -> GET_EVENT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 56 (get_event -> GET_EVENT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 56 (get_event -> GET_EVENT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 56 (get_event -> GET_EVENT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 56 (get_event -> GET_EVENT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 56 (get_event -> GET_EVENT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 56 (get_event -> GET_EVENT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 56 (get_event -> GET_EVENT LEFTPAR RIGHTPAR .)


state 173

    (55) update -> UPDATE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 55 (update -> UPDATE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 55 (update -> UPDATE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 55 (update -> UPDATE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 55 (update -> UPDATE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 55 (update -> UPDATE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 55 (update -> UPDATE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 55 (update -> UPDATE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 55 (update -> UPDATE LEFTPAR RIGHTPAR .)


state 174

    (54) set_dimension -> SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 203


state 175

    (57) set_color -> SET_COLOR LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 204


state 176

    (58) create_object -> CREATE_OBJECT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 205


state 177

    (103) recfuncexp -> expression . COMMA recfuncexp
    (104) recfuncexp -> expression . recfunc_action1
    (105) recfunc_action1 -> .

    COMMA           shift and go to state 206
    RIGHTPAR        reduce using rule 105 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 207

state 178

    (59) create_text -> CREATE_TEXT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 208


state 179

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 209


state 180

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 181

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 182

    (10) run -> VOID FUNC run_action1 RUN . startscope_action LEFTPAR RIGHTPAR main_cont block
    (83) startscope_action -> .

    LEFTPAR         reduce using rule 83 (startscope_action -> .)

    startscope_action              shift and go to state 210

state 183

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 211


state 184

    (13) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 212


state 185

    (15) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    DRAW            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    INIT            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    TAIL            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    LAST            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_FILL        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_TITLE       reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    GET_EVENT       reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    UPDATE          reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_COLOR       reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)


state 186

    (88) recparams -> ID COLON type COMMA . recparams
    (87) recparams -> . ID COLON type
    (88) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 64

    recparams                      shift and go to state 213

state 187

    (79) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (86) function_action3 -> .

    COLON           reduce using rule 86 (function_action3 -> .)

    function_action3               shift and go to state 214

state 188

    (19) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (60) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (61) assign -> . assign_list EQUAL assign_action2 expression
    (64) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (65) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (69) loop -> . for
    (70) loop -> . while
    (91) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (98) return -> . RETURN expression
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (135) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (71) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (75) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (139) nestedvalue -> . ID DOT ID
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        shift and go to state 216
    ID              shift and go to state 227
    IF              shift and go to state 229
    VAR             shift and go to state 40
    PRINT           shift and go to state 232
    RETURN          shift and go to state 233
    FOR             shift and go to state 235
    WHILE           shift and go to state 236
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

    recstatement                   shift and go to state 215
    statement                      shift and go to state 217
    assign                         shift and go to state 218
    condition                      shift and go to state 219
    vars                           shift and go to state 220
    loop                           shift and go to state 221
    write                          shift and go to state 222
    return                         shift and go to state 223
    functioncall                   shift and go to state 224
    nestedassign                   shift and go to state 225
    specialfunction                shift and go to state 226
    assign_list                    shift and go to state 228
    for                            shift and go to state 230
    while                          shift and go to state 231
    nestedvalue                    shift and go to state 234
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 189

    (81) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (86) function_action3 -> .

    COLON           reduce using rule 86 (function_action3 -> .)

    function_action3               shift and go to state 237

state 190

    (48) size -> ID DOT SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 238


state 191

    (49) head -> ID DOT HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 239


state 192

    (99) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . recfuncexp RIGHTPAR
    (100) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . RIGHTPAR
    (103) recfuncexp -> . expression COMMA recfuncexp
    (104) recfuncexp -> . expression recfunc_action1
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
  ! shift/reduce conflict for RIGHTPAR resolved as shift
    RIGHTPAR        shift and go to state 241
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]
  ! RIGHTPAR        [ reduce using rule 141 (cte -> .) ]

    recfuncexp                     shift and go to state 240
    expression                     shift and go to state 177
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 193

    (136) listaccess -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (138) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 138 (list_action_3 -> .)

    list_action_3                  shift and go to state 242

state 194

    (46) draw -> DRAW LEFTPAR expression COMMA . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 243
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 195

    (106) expression -> exp RELOP . relop_action1 exp relop_action2
    (109) relop_action1 -> .

    EX              reduce using rule 109 (relop_action1 -> .)
    ID              reduce using rule 109 (relop_action1 -> .)
    INT             reduce using rule 109 (relop_action1 -> .)
    FLOAT           reduce using rule 109 (relop_action1 -> .)
    TRUE            reduce using rule 109 (relop_action1 -> .)
    FALSE           reduce using rule 109 (relop_action1 -> .)
    STRING          reduce using rule 109 (relop_action1 -> .)
    DRAW            reduce using rule 109 (relop_action1 -> .)
    INIT            reduce using rule 109 (relop_action1 -> .)
    TAIL            reduce using rule 109 (relop_action1 -> .)
    LAST            reduce using rule 109 (relop_action1 -> .)
    SET_FILL        reduce using rule 109 (relop_action1 -> .)
    SET_TITLE       reduce using rule 109 (relop_action1 -> .)
    GET_EVENT       reduce using rule 109 (relop_action1 -> .)
    UPDATE          reduce using rule 109 (relop_action1 -> .)
    SET_DIMENSION   reduce using rule 109 (relop_action1 -> .)
    SET_COLOR       reduce using rule 109 (relop_action1 -> .)
    CREATE_OBJECT   reduce using rule 109 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 109 (relop_action1 -> .)
    TERMS           reduce using rule 109 (relop_action1 -> .)
    LEFTPAR         reduce using rule 109 (relop_action1 -> .)
    COMMA           reduce using rule 109 (relop_action1 -> .)
    RIGHTPAR        reduce using rule 109 (relop_action1 -> .)
    SEMICOLON       reduce using rule 109 (relop_action1 -> .)
    RIGHTBRACKET    reduce using rule 109 (relop_action1 -> .)

    relop_action1                  shift and go to state 244

state 196

    (107) expression -> exp LOGIC . logic_action1 exp logic_action2
    (111) logic_action1 -> .

    EX              reduce using rule 111 (logic_action1 -> .)
    ID              reduce using rule 111 (logic_action1 -> .)
    INT             reduce using rule 111 (logic_action1 -> .)
    FLOAT           reduce using rule 111 (logic_action1 -> .)
    TRUE            reduce using rule 111 (logic_action1 -> .)
    FALSE           reduce using rule 111 (logic_action1 -> .)
    STRING          reduce using rule 111 (logic_action1 -> .)
    DRAW            reduce using rule 111 (logic_action1 -> .)
    INIT            reduce using rule 111 (logic_action1 -> .)
    TAIL            reduce using rule 111 (logic_action1 -> .)
    LAST            reduce using rule 111 (logic_action1 -> .)
    SET_FILL        reduce using rule 111 (logic_action1 -> .)
    SET_TITLE       reduce using rule 111 (logic_action1 -> .)
    GET_EVENT       reduce using rule 111 (logic_action1 -> .)
    UPDATE          reduce using rule 111 (logic_action1 -> .)
    SET_DIMENSION   reduce using rule 111 (logic_action1 -> .)
    SET_COLOR       reduce using rule 111 (logic_action1 -> .)
    CREATE_OBJECT   reduce using rule 111 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 111 (logic_action1 -> .)
    TERMS           reduce using rule 111 (logic_action1 -> .)
    LEFTPAR         reduce using rule 111 (logic_action1 -> .)
    COMMA           reduce using rule 111 (logic_action1 -> .)
    RIGHTPAR        reduce using rule 111 (logic_action1 -> .)
    SEMICOLON       reduce using rule 111 (logic_action1 -> .)
    RIGHTBRACKET    reduce using rule 111 (logic_action1 -> .)

    logic_action1                  shift and go to state 245

state 197

    (113) exp -> term exp_action . recexp
    (114) exp -> term exp_action .
    (116) recexp -> . EX add_operator exp

    RELOP           reduce using rule 114 (exp -> term exp_action .)
    LOGIC           reduce using rule 114 (exp -> term exp_action .)
    COMMA           reduce using rule 114 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 114 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 114 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 114 (exp -> term exp_action .)
    EX              shift and go to state 247

    recexp                         shift and go to state 246

state 198

    (117) term -> factor term_action . recterm
    (118) term -> factor term_action .
    (120) recterm -> . TERMS add_operator term

    EX              reduce using rule 118 (term -> factor term_action .)
    RELOP           reduce using rule 118 (term -> factor term_action .)
    LOGIC           reduce using rule 118 (term -> factor term_action .)
    COMMA           reduce using rule 118 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 118 (term -> factor term_action .)
    SEMICOLON       reduce using rule 118 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 118 (term -> factor term_action .)
    TERMS           shift and go to state 249

    recterm                        shift and go to state 248

state 199

    (122) factor -> factor_action1 LEFTPAR . expression RIGHTPAR factor_action2
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    factor_action1                 shift and go to state 164
    expression                     shift and go to state 250
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 200

    (123) factor -> EX cte .

    TERMS           reduce using rule 123 (factor -> EX cte .)
    EX              reduce using rule 123 (factor -> EX cte .)
    RELOP           reduce using rule 123 (factor -> EX cte .)
    LOGIC           reduce using rule 123 (factor -> EX cte .)
    COMMA           reduce using rule 123 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 123 (factor -> EX cte .)
    SEMICOLON       reduce using rule 123 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 123 (factor -> EX cte .)


state 201

    (53) set_fill -> SET_FILL LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 251
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 202

    (52) set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 52 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 52 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 52 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 52 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 52 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 52 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 52 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 52 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)


state 203

    (54) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 252
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 204

    (57) set_color -> SET_COLOR LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 253
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 205

    (58) create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 58 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 58 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 58 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 58 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 58 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 58 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 58 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 58 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)


state 206

    (103) recfuncexp -> expression COMMA . recfuncexp
    (103) recfuncexp -> . expression COMMA recfuncexp
    (104) recfuncexp -> . expression recfunc_action1
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 177
    recfuncexp                     shift and go to state 254
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 207

    (104) recfuncexp -> expression recfunc_action1 .

    RIGHTPAR        reduce using rule 104 (recfuncexp -> expression recfunc_action1 .)


state 208

    (59) create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 59 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 59 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 59 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 59 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 59 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 59 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 59 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 59 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)


state 209

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 210

    (10) run -> VOID FUNC run_action1 RUN startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 255


state 211

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 256

state 212

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (14) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    DRAW            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    INIT            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    TAIL            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    LAST            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_FILL        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_TITLE       reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    GET_EVENT       reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    UPDATE          reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_DIMENSION   reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_COLOR       reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_OBJECT   reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 257

state 213

    (88) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 88 (recparams -> ID COLON type COMMA recparams .)


state 214

    (79) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 258

state 215

    (19) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 259


state 216

    (20) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 260


state 217

    (21) recstatement -> statement . recstatement
    (22) recstatement -> statement .
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (60) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (61) assign -> . assign_list EQUAL assign_action2 expression
    (64) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (65) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (69) loop -> . for
    (70) loop -> . while
    (91) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (98) return -> . RETURN expression
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (135) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (71) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (75) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (139) nestedvalue -> . ID DOT ID
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        reduce using rule 22 (recstatement -> statement .)
    ID              shift and go to state 227
    IF              shift and go to state 229
    VAR             shift and go to state 40
    PRINT           shift and go to state 232
    RETURN          shift and go to state 233
    FOR             shift and go to state 235
    WHILE           shift and go to state 236
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

    statement                      shift and go to state 217
    recstatement                   shift and go to state 261
    assign                         shift and go to state 218
    condition                      shift and go to state 219
    vars                           shift and go to state 220
    loop                           shift and go to state 221
    write                          shift and go to state 222
    return                         shift and go to state 223
    functioncall                   shift and go to state 224
    nestedassign                   shift and go to state 225
    specialfunction                shift and go to state 226
    assign_list                    shift and go to state 228
    for                            shift and go to state 230
    while                          shift and go to state 231
    nestedvalue                    shift and go to state 234
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 218

    (23) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 262


state 219

    (24) statement -> condition .

    ID              reduce using rule 24 (statement -> condition .)
    IF              reduce using rule 24 (statement -> condition .)
    VAR             reduce using rule 24 (statement -> condition .)
    PRINT           reduce using rule 24 (statement -> condition .)
    RETURN          reduce using rule 24 (statement -> condition .)
    FOR             reduce using rule 24 (statement -> condition .)
    WHILE           reduce using rule 24 (statement -> condition .)
    DRAW            reduce using rule 24 (statement -> condition .)
    INIT            reduce using rule 24 (statement -> condition .)
    TAIL            reduce using rule 24 (statement -> condition .)
    LAST            reduce using rule 24 (statement -> condition .)
    SET_FILL        reduce using rule 24 (statement -> condition .)
    SET_TITLE       reduce using rule 24 (statement -> condition .)
    GET_EVENT       reduce using rule 24 (statement -> condition .)
    UPDATE          reduce using rule 24 (statement -> condition .)
    SET_DIMENSION   reduce using rule 24 (statement -> condition .)
    SET_COLOR       reduce using rule 24 (statement -> condition .)
    CREATE_OBJECT   reduce using rule 24 (statement -> condition .)
    CREATE_TEXT     reduce using rule 24 (statement -> condition .)
    RIGHTKEY        reduce using rule 24 (statement -> condition .)


state 220

    (25) statement -> vars .

    ID              reduce using rule 25 (statement -> vars .)
    IF              reduce using rule 25 (statement -> vars .)
    VAR             reduce using rule 25 (statement -> vars .)
    PRINT           reduce using rule 25 (statement -> vars .)
    RETURN          reduce using rule 25 (statement -> vars .)
    FOR             reduce using rule 25 (statement -> vars .)
    WHILE           reduce using rule 25 (statement -> vars .)
    DRAW            reduce using rule 25 (statement -> vars .)
    INIT            reduce using rule 25 (statement -> vars .)
    TAIL            reduce using rule 25 (statement -> vars .)
    LAST            reduce using rule 25 (statement -> vars .)
    SET_FILL        reduce using rule 25 (statement -> vars .)
    SET_TITLE       reduce using rule 25 (statement -> vars .)
    GET_EVENT       reduce using rule 25 (statement -> vars .)
    UPDATE          reduce using rule 25 (statement -> vars .)
    SET_DIMENSION   reduce using rule 25 (statement -> vars .)
    SET_COLOR       reduce using rule 25 (statement -> vars .)
    CREATE_OBJECT   reduce using rule 25 (statement -> vars .)
    CREATE_TEXT     reduce using rule 25 (statement -> vars .)
    RIGHTKEY        reduce using rule 25 (statement -> vars .)


state 221

    (26) statement -> loop .

    ID              reduce using rule 26 (statement -> loop .)
    IF              reduce using rule 26 (statement -> loop .)
    VAR             reduce using rule 26 (statement -> loop .)
    PRINT           reduce using rule 26 (statement -> loop .)
    RETURN          reduce using rule 26 (statement -> loop .)
    FOR             reduce using rule 26 (statement -> loop .)
    WHILE           reduce using rule 26 (statement -> loop .)
    DRAW            reduce using rule 26 (statement -> loop .)
    INIT            reduce using rule 26 (statement -> loop .)
    TAIL            reduce using rule 26 (statement -> loop .)
    LAST            reduce using rule 26 (statement -> loop .)
    SET_FILL        reduce using rule 26 (statement -> loop .)
    SET_TITLE       reduce using rule 26 (statement -> loop .)
    GET_EVENT       reduce using rule 26 (statement -> loop .)
    UPDATE          reduce using rule 26 (statement -> loop .)
    SET_DIMENSION   reduce using rule 26 (statement -> loop .)
    SET_COLOR       reduce using rule 26 (statement -> loop .)
    CREATE_OBJECT   reduce using rule 26 (statement -> loop .)
    CREATE_TEXT     reduce using rule 26 (statement -> loop .)
    RIGHTKEY        reduce using rule 26 (statement -> loop .)


state 222

    (27) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 263


state 223

    (28) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 264


state 224

    (29) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 265


state 225

    (30) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 266


state 226

    (31) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 267


state 227

    (60) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (99) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (135) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (139) nestedvalue -> ID . DOT ID
    (48) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (62) assign_action1 -> .
    (101) function_call_action1 -> .
    (137) list_action1 -> .

    DOT             shift and go to state 125
    EQUAL           reduce using rule 62 (assign_action1 -> .)
    LEFTPAR         reduce using rule 101 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 137 (list_action1 -> .)

    assign_action1                 shift and go to state 268
    function_call_action1          shift and go to state 126
    list_action1                   shift and go to state 269

state 228

    (61) assign -> assign_list . EQUAL assign_action2 expression

    EQUAL           shift and go to state 270


state 229

    (64) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (65) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 271


state 230

    (69) loop -> for .

    ID              reduce using rule 69 (loop -> for .)
    IF              reduce using rule 69 (loop -> for .)
    VAR             reduce using rule 69 (loop -> for .)
    PRINT           reduce using rule 69 (loop -> for .)
    RETURN          reduce using rule 69 (loop -> for .)
    FOR             reduce using rule 69 (loop -> for .)
    WHILE           reduce using rule 69 (loop -> for .)
    DRAW            reduce using rule 69 (loop -> for .)
    INIT            reduce using rule 69 (loop -> for .)
    TAIL            reduce using rule 69 (loop -> for .)
    LAST            reduce using rule 69 (loop -> for .)
    SET_FILL        reduce using rule 69 (loop -> for .)
    SET_TITLE       reduce using rule 69 (loop -> for .)
    GET_EVENT       reduce using rule 69 (loop -> for .)
    UPDATE          reduce using rule 69 (loop -> for .)
    SET_DIMENSION   reduce using rule 69 (loop -> for .)
    SET_COLOR       reduce using rule 69 (loop -> for .)
    CREATE_OBJECT   reduce using rule 69 (loop -> for .)
    CREATE_TEXT     reduce using rule 69 (loop -> for .)
    RIGHTKEY        reduce using rule 69 (loop -> for .)


state 231

    (70) loop -> while .

    ID              reduce using rule 70 (loop -> while .)
    IF              reduce using rule 70 (loop -> while .)
    VAR             reduce using rule 70 (loop -> while .)
    PRINT           reduce using rule 70 (loop -> while .)
    RETURN          reduce using rule 70 (loop -> while .)
    FOR             reduce using rule 70 (loop -> while .)
    WHILE           reduce using rule 70 (loop -> while .)
    DRAW            reduce using rule 70 (loop -> while .)
    INIT            reduce using rule 70 (loop -> while .)
    TAIL            reduce using rule 70 (loop -> while .)
    LAST            reduce using rule 70 (loop -> while .)
    SET_FILL        reduce using rule 70 (loop -> while .)
    SET_TITLE       reduce using rule 70 (loop -> while .)
    GET_EVENT       reduce using rule 70 (loop -> while .)
    UPDATE          reduce using rule 70 (loop -> while .)
    SET_DIMENSION   reduce using rule 70 (loop -> while .)
    SET_COLOR       reduce using rule 70 (loop -> while .)
    CREATE_OBJECT   reduce using rule 70 (loop -> while .)
    CREATE_TEXT     reduce using rule 70 (loop -> while .)
    RIGHTKEY        reduce using rule 70 (loop -> while .)


state 232

    (91) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 272


state 233

    (98) return -> RETURN . expression
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 273
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 234

    (140) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 274


state 235

    (71) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (83) startscope_action -> .

    LEFTPAR         reduce using rule 83 (startscope_action -> .)

    startscope_action              shift and go to state 275

state 236

    (75) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (83) startscope_action -> .

    LEFTPAR         reduce using rule 83 (startscope_action -> .)

    startscope_action              shift and go to state 276

state 237

    (81) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 277

state 238

    (48) size -> ID DOT SIZE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 48 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 48 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 48 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 48 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 48 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 48 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 48 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 48 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)


state 239

    (49) head -> ID DOT HEAD LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 49 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 49 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 49 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 49 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 49 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 49 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 49 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 49 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)


state 240

    (99) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 278


state 241

    (100) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .

    RIGHTBRACKET    reduce using rule 100 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    TERMS           reduce using rule 100 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    EX              reduce using rule 100 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RELOP           reduce using rule 100 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    LOGIC           reduce using rule 100 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    COMMA           reduce using rule 100 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTPAR        reduce using rule 100 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    SEMICOLON       reduce using rule 100 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)


state 242

    (136) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 279


state 243

    (46) draw -> DRAW LEFTPAR expression COMMA expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 280


state 244

    (106) expression -> exp RELOP relop_action1 . exp relop_action2
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    RIGHTBRACKET    reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    exp                            shift and go to state 281
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 245

    (107) expression -> exp LOGIC logic_action1 . exp logic_action2
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    RIGHTBRACKET    reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    exp                            shift and go to state 282
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 246

    (113) exp -> term exp_action recexp .

    RELOP           reduce using rule 113 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 113 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 113 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 113 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 113 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 113 (exp -> term exp_action recexp .)


state 247

    (116) recexp -> EX . add_operator exp
    (121) add_operator -> .

    EX              reduce using rule 121 (add_operator -> .)
    ID              reduce using rule 121 (add_operator -> .)
    INT             reduce using rule 121 (add_operator -> .)
    FLOAT           reduce using rule 121 (add_operator -> .)
    TRUE            reduce using rule 121 (add_operator -> .)
    FALSE           reduce using rule 121 (add_operator -> .)
    STRING          reduce using rule 121 (add_operator -> .)
    DRAW            reduce using rule 121 (add_operator -> .)
    INIT            reduce using rule 121 (add_operator -> .)
    TAIL            reduce using rule 121 (add_operator -> .)
    LAST            reduce using rule 121 (add_operator -> .)
    SET_FILL        reduce using rule 121 (add_operator -> .)
    SET_TITLE       reduce using rule 121 (add_operator -> .)
    GET_EVENT       reduce using rule 121 (add_operator -> .)
    UPDATE          reduce using rule 121 (add_operator -> .)
    SET_DIMENSION   reduce using rule 121 (add_operator -> .)
    SET_COLOR       reduce using rule 121 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 121 (add_operator -> .)
    CREATE_TEXT     reduce using rule 121 (add_operator -> .)
    TERMS           reduce using rule 121 (add_operator -> .)
    LEFTPAR         reduce using rule 121 (add_operator -> .)
    RELOP           reduce using rule 121 (add_operator -> .)
    LOGIC           reduce using rule 121 (add_operator -> .)
    COMMA           reduce using rule 121 (add_operator -> .)
    RIGHTPAR        reduce using rule 121 (add_operator -> .)
    SEMICOLON       reduce using rule 121 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 121 (add_operator -> .)

    add_operator                   shift and go to state 283

state 248

    (117) term -> factor term_action recterm .

    EX              reduce using rule 117 (term -> factor term_action recterm .)
    RELOP           reduce using rule 117 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 117 (term -> factor term_action recterm .)
    COMMA           reduce using rule 117 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 117 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 117 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 117 (term -> factor term_action recterm .)


state 249

    (120) recterm -> TERMS . add_operator term
    (121) add_operator -> .

    EX              reduce using rule 121 (add_operator -> .)
    ID              reduce using rule 121 (add_operator -> .)
    INT             reduce using rule 121 (add_operator -> .)
    FLOAT           reduce using rule 121 (add_operator -> .)
    TRUE            reduce using rule 121 (add_operator -> .)
    FALSE           reduce using rule 121 (add_operator -> .)
    STRING          reduce using rule 121 (add_operator -> .)
    DRAW            reduce using rule 121 (add_operator -> .)
    INIT            reduce using rule 121 (add_operator -> .)
    TAIL            reduce using rule 121 (add_operator -> .)
    LAST            reduce using rule 121 (add_operator -> .)
    SET_FILL        reduce using rule 121 (add_operator -> .)
    SET_TITLE       reduce using rule 121 (add_operator -> .)
    GET_EVENT       reduce using rule 121 (add_operator -> .)
    UPDATE          reduce using rule 121 (add_operator -> .)
    SET_DIMENSION   reduce using rule 121 (add_operator -> .)
    SET_COLOR       reduce using rule 121 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 121 (add_operator -> .)
    CREATE_TEXT     reduce using rule 121 (add_operator -> .)
    TERMS           reduce using rule 121 (add_operator -> .)
    LEFTPAR         reduce using rule 121 (add_operator -> .)
    RELOP           reduce using rule 121 (add_operator -> .)
    LOGIC           reduce using rule 121 (add_operator -> .)
    COMMA           reduce using rule 121 (add_operator -> .)
    RIGHTPAR        reduce using rule 121 (add_operator -> .)
    SEMICOLON       reduce using rule 121 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 121 (add_operator -> .)

    add_operator                   shift and go to state 284

state 250

    (122) factor -> factor_action1 LEFTPAR expression . RIGHTPAR factor_action2

    RIGHTPAR        shift and go to state 285


state 251

    (53) set_fill -> SET_FILL LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 286


state 252

    (54) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 287


state 253

    (57) set_color -> SET_COLOR LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 288


state 254

    (103) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 103 (recfuncexp -> expression COMMA recfuncexp .)


state 255

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 289


state 256

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 290

state 257

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    DRAW            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    INIT            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    TAIL            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    LAST            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_FILL        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_TITLE       reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    GET_EVENT       reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    UPDATE          reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_COLOR       reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 258

    (79) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 79 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 79 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 79 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 79 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 79 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 79 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 79 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 79 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 259

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 291


state 260

    (20) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    INIT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_FILL        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    GET_EVENT       reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    UPDATE          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 261

    (21) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 21 (recstatement -> statement recstatement .)


state 262

    (23) statement -> assign SEMICOLON .

    ID              reduce using rule 23 (statement -> assign SEMICOLON .)
    IF              reduce using rule 23 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 23 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 23 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> assign SEMICOLON .)
    DRAW            reduce using rule 23 (statement -> assign SEMICOLON .)
    INIT            reduce using rule 23 (statement -> assign SEMICOLON .)
    TAIL            reduce using rule 23 (statement -> assign SEMICOLON .)
    LAST            reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_FILL        reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_TITLE       reduce using rule 23 (statement -> assign SEMICOLON .)
    GET_EVENT       reduce using rule 23 (statement -> assign SEMICOLON .)
    UPDATE          reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_DIMENSION   reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_COLOR       reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> assign SEMICOLON .)


state 263

    (27) statement -> write SEMICOLON .

    ID              reduce using rule 27 (statement -> write SEMICOLON .)
    IF              reduce using rule 27 (statement -> write SEMICOLON .)
    VAR             reduce using rule 27 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> write SEMICOLON .)
    FOR             reduce using rule 27 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> write SEMICOLON .)
    DRAW            reduce using rule 27 (statement -> write SEMICOLON .)
    INIT            reduce using rule 27 (statement -> write SEMICOLON .)
    TAIL            reduce using rule 27 (statement -> write SEMICOLON .)
    LAST            reduce using rule 27 (statement -> write SEMICOLON .)
    SET_FILL        reduce using rule 27 (statement -> write SEMICOLON .)
    SET_TITLE       reduce using rule 27 (statement -> write SEMICOLON .)
    GET_EVENT       reduce using rule 27 (statement -> write SEMICOLON .)
    UPDATE          reduce using rule 27 (statement -> write SEMICOLON .)
    SET_DIMENSION   reduce using rule 27 (statement -> write SEMICOLON .)
    SET_COLOR       reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_OBJECT   reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 27 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 27 (statement -> write SEMICOLON .)


state 264

    (28) statement -> return SEMICOLON .

    ID              reduce using rule 28 (statement -> return SEMICOLON .)
    IF              reduce using rule 28 (statement -> return SEMICOLON .)
    VAR             reduce using rule 28 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 28 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> return SEMICOLON .)
    FOR             reduce using rule 28 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> return SEMICOLON .)
    DRAW            reduce using rule 28 (statement -> return SEMICOLON .)
    INIT            reduce using rule 28 (statement -> return SEMICOLON .)
    TAIL            reduce using rule 28 (statement -> return SEMICOLON .)
    LAST            reduce using rule 28 (statement -> return SEMICOLON .)
    SET_FILL        reduce using rule 28 (statement -> return SEMICOLON .)
    SET_TITLE       reduce using rule 28 (statement -> return SEMICOLON .)
    GET_EVENT       reduce using rule 28 (statement -> return SEMICOLON .)
    UPDATE          reduce using rule 28 (statement -> return SEMICOLON .)
    SET_DIMENSION   reduce using rule 28 (statement -> return SEMICOLON .)
    SET_COLOR       reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_OBJECT   reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 28 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 28 (statement -> return SEMICOLON .)


state 265

    (29) statement -> functioncall SEMICOLON .

    ID              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    DRAW            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    INIT            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    TAIL            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    LAST            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_FILL        reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_TITLE       reduce using rule 29 (statement -> functioncall SEMICOLON .)
    GET_EVENT       reduce using rule 29 (statement -> functioncall SEMICOLON .)
    UPDATE          reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_DIMENSION   reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_COLOR       reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_OBJECT   reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 29 (statement -> functioncall SEMICOLON .)


state 266

    (30) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    DRAW            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    INIT            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    TAIL            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    LAST            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_FILL        reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_TITLE       reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    GET_EVENT       reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    UPDATE          reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_DIMENSION   reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_COLOR       reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 30 (statement -> nestedassign SEMICOLON .)


state 267

    (31) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    DRAW            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    INIT            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    TAIL            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    LAST            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_FILL        reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_TITLE       reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    GET_EVENT       reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    UPDATE          reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_DIMENSION   reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_COLOR       reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_OBJECT   reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 31 (statement -> specialfunction SEMICOLON .)


state 268

    (60) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 292


state 269

    (135) assign_list -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 293


state 270

    (61) assign -> assign_list EQUAL . assign_action2 expression
    (63) assign_action2 -> .

    EX              reduce using rule 63 (assign_action2 -> .)
    ID              reduce using rule 63 (assign_action2 -> .)
    INT             reduce using rule 63 (assign_action2 -> .)
    FLOAT           reduce using rule 63 (assign_action2 -> .)
    TRUE            reduce using rule 63 (assign_action2 -> .)
    FALSE           reduce using rule 63 (assign_action2 -> .)
    STRING          reduce using rule 63 (assign_action2 -> .)
    DRAW            reduce using rule 63 (assign_action2 -> .)
    INIT            reduce using rule 63 (assign_action2 -> .)
    TAIL            reduce using rule 63 (assign_action2 -> .)
    LAST            reduce using rule 63 (assign_action2 -> .)
    SET_FILL        reduce using rule 63 (assign_action2 -> .)
    SET_TITLE       reduce using rule 63 (assign_action2 -> .)
    GET_EVENT       reduce using rule 63 (assign_action2 -> .)
    UPDATE          reduce using rule 63 (assign_action2 -> .)
    SET_DIMENSION   reduce using rule 63 (assign_action2 -> .)
    SET_COLOR       reduce using rule 63 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 63 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 63 (assign_action2 -> .)
    RELOP           reduce using rule 63 (assign_action2 -> .)
    LOGIC           reduce using rule 63 (assign_action2 -> .)
    TERMS           reduce using rule 63 (assign_action2 -> .)
    LEFTPAR         reduce using rule 63 (assign_action2 -> .)
    SEMICOLON       reduce using rule 63 (assign_action2 -> .)

    assign_action2                 shift and go to state 294

state 271

    (64) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (65) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 295
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 272

    (91) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (92) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (93) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (94) recwrite -> . expression action_recwrite_exp
    (95) recwrite -> . STRING action_recwrite_cte
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 298
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    recwrite                       shift and go to state 296
    expression                     shift and go to state 297
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 273

    (98) return -> RETURN expression .

    SEMICOLON       reduce using rule 98 (return -> RETURN expression .)


state 274

    (140) nestedassign -> nestedvalue EQUAL . expression
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    nestedvalue                    shift and go to state 75
    expression                     shift and go to state 299
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 275

    (71) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 300


state 276

    (75) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (76) while_action1 -> .

    LEFTPAR         reduce using rule 76 (while_action1 -> .)

    while_action1                  shift and go to state 301

state 277

    (81) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 81 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 81 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 81 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 81 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 81 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 81 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 81 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 81 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 278

    (99) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 99 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 99 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    EX              reduce using rule 99 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 99 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 99 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 99 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 99 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 99 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)


state 279

    (136) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    RIGHTBRACKET    reduce using rule 136 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    TERMS           reduce using rule 136 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    EX              reduce using rule 136 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RELOP           reduce using rule 136 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    LOGIC           reduce using rule 136 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    COMMA           reduce using rule 136 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RIGHTPAR        reduce using rule 136 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    SEMICOLON       reduce using rule 136 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 280

    (46) draw -> DRAW LEFTPAR expression COMMA expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 302
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 281

    (106) expression -> exp RELOP relop_action1 exp . relop_action2
    (110) relop_action2 -> .

    COMMA           reduce using rule 110 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 110 (relop_action2 -> .)
    SEMICOLON       reduce using rule 110 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 110 (relop_action2 -> .)

    relop_action2                  shift and go to state 303

state 282

    (107) expression -> exp LOGIC logic_action1 exp . logic_action2
    (112) logic_action2 -> .

    COMMA           reduce using rule 112 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 112 (logic_action2 -> .)
    SEMICOLON       reduce using rule 112 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 112 (logic_action2 -> .)

    logic_action2                  shift and go to state 304

state 283

    (116) recexp -> EX add_operator . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    RIGHTBRACKET    reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    exp                            shift and go to state 305
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 284

    (120) recterm -> TERMS add_operator . term
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    RIGHTBRACKET    reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    term                           shift and go to state 306
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 285

    (122) factor -> factor_action1 LEFTPAR expression RIGHTPAR . factor_action2
    (126) factor_action2 -> .

    TERMS           reduce using rule 126 (factor_action2 -> .)
    EX              reduce using rule 126 (factor_action2 -> .)
    RELOP           reduce using rule 126 (factor_action2 -> .)
    LOGIC           reduce using rule 126 (factor_action2 -> .)
    COMMA           reduce using rule 126 (factor_action2 -> .)
    RIGHTPAR        reduce using rule 126 (factor_action2 -> .)
    SEMICOLON       reduce using rule 126 (factor_action2 -> .)
    RIGHTBRACKET    reduce using rule 126 (factor_action2 -> .)

    factor_action2                 shift and go to state 307

state 286

    (53) set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 308
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 287

    (54) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 54 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 54 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 54 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 54 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 54 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 54 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 54 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 54 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 288

    (57) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 309
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 289

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 310

state 290

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .

    VOID            reduce using rule 8 (start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 291

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    INIT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_FILL        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    GET_EVENT       reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    UPDATE          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 292

    (60) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (63) assign_action2 -> .

    EX              reduce using rule 63 (assign_action2 -> .)
    ID              reduce using rule 63 (assign_action2 -> .)
    INT             reduce using rule 63 (assign_action2 -> .)
    FLOAT           reduce using rule 63 (assign_action2 -> .)
    TRUE            reduce using rule 63 (assign_action2 -> .)
    FALSE           reduce using rule 63 (assign_action2 -> .)
    STRING          reduce using rule 63 (assign_action2 -> .)
    DRAW            reduce using rule 63 (assign_action2 -> .)
    INIT            reduce using rule 63 (assign_action2 -> .)
    TAIL            reduce using rule 63 (assign_action2 -> .)
    LAST            reduce using rule 63 (assign_action2 -> .)
    SET_FILL        reduce using rule 63 (assign_action2 -> .)
    SET_TITLE       reduce using rule 63 (assign_action2 -> .)
    GET_EVENT       reduce using rule 63 (assign_action2 -> .)
    UPDATE          reduce using rule 63 (assign_action2 -> .)
    SET_DIMENSION   reduce using rule 63 (assign_action2 -> .)
    SET_COLOR       reduce using rule 63 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 63 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 63 (assign_action2 -> .)
    RELOP           reduce using rule 63 (assign_action2 -> .)
    LOGIC           reduce using rule 63 (assign_action2 -> .)
    TERMS           reduce using rule 63 (assign_action2 -> .)
    LEFTPAR         reduce using rule 63 (assign_action2 -> .)
    SEMICOLON       reduce using rule 63 (assign_action2 -> .)

    assign_action2                 shift and go to state 311

state 293

    (135) assign_list -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTBRACKET    reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 312
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 294

    (61) assign -> assign_list EQUAL assign_action2 . expression
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 313
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 295

    (64) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (65) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (66) condition_action1 -> .

    RIGHTPAR        reduce using rule 66 (condition_action1 -> .)

    condition_action1              shift and go to state 314

state 296

    (91) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 315


state 297

    (92) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (94) recwrite -> expression . action_recwrite_exp
    (96) action_recwrite_exp -> .

    COMMA           reduce using rule 96 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 96 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 316

state 298

    (93) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (95) recwrite -> STRING . action_recwrite_cte
    (152) string -> STRING .
    (97) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 97 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 97 (action_recwrite_cte -> .)
    TERMS           reduce using rule 152 (string -> STRING .)
    EX              reduce using rule 152 (string -> STRING .)
    RELOP           reduce using rule 152 (string -> STRING .)
    LOGIC           reduce using rule 152 (string -> STRING .)
    COMMA           reduce using rule 97 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 97 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 152 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 152 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 317

state 299

    (140) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 140 (nestedassign -> nestedvalue EQUAL expression .)


state 300

    (71) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (60) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (61) assign -> . assign_list EQUAL assign_action2 expression
    (135) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 319

    assign                         shift and go to state 318
    assign_list                    shift and go to state 228

state 301

    (75) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 320


state 302

    (46) draw -> DRAW LEFTPAR expression COMMA expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 321


state 303

    (106) expression -> exp RELOP relop_action1 exp relop_action2 .

    COMMA           reduce using rule 106 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 106 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    SEMICOLON       reduce using rule 106 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 106 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 304

    (107) expression -> exp LOGIC logic_action1 exp logic_action2 .

    COMMA           reduce using rule 107 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 107 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    SEMICOLON       reduce using rule 107 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 107 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 305

    (116) recexp -> EX add_operator exp .

    RELOP           reduce using rule 116 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 116 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 116 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 116 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 116 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 116 (recexp -> EX add_operator exp .)


state 306

    (120) recterm -> TERMS add_operator term .

    EX              reduce using rule 120 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 120 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 120 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 120 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 120 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 120 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 120 (recterm -> TERMS add_operator term .)


state 307

    (122) factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .

    TERMS           reduce using rule 122 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    EX              reduce using rule 122 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RELOP           reduce using rule 122 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    LOGIC           reduce using rule 122 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    COMMA           reduce using rule 122 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTPAR        reduce using rule 122 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    SEMICOLON       reduce using rule 122 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTBRACKET    reduce using rule 122 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)


state 308

    (53) set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 322


state 309

    (57) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 323


state 310

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 324

state 311

    (60) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 325
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 312

    (135) assign_list -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (138) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 138 (list_action_3 -> .)

    list_action_3                  shift and go to state 326

state 313

    (61) assign -> assign_list EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 61 (assign -> assign_list EQUAL assign_action2 expression .)


state 314

    (64) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (65) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 327


state 315

    (91) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 91 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 316

    (92) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (94) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 328
    RIGHTPAR        reduce using rule 94 (recwrite -> expression action_recwrite_exp .)


state 317

    (93) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (95) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 329
    RIGHTPAR        reduce using rule 95 (recwrite -> STRING action_recwrite_cte .)


state 318

    (71) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 330


state 319

    (60) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (135) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (62) assign_action1 -> .
    (137) list_action1 -> .

    EQUAL           reduce using rule 62 (assign_action1 -> .)
    LEFTBRACKET     reduce using rule 137 (list_action1 -> .)

    assign_action1                 shift and go to state 268
    list_action1                   shift and go to state 269

state 320

    (75) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 331
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 321

    (46) draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 332
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 322

    (53) set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 53 (set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 53 (set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 53 (set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 53 (set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 53 (set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 53 (set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 53 (set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 53 (set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 323

    (57) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 57 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 57 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 57 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 57 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 57 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 57 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 57 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 57 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 324

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .

    RIGHTKEY        reduce using rule 10 (run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 325

    (60) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 60 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 326

    (135) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 333


state 327

    (64) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (65) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 334

state 328

    (92) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (92) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (93) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (94) recwrite -> . expression action_recwrite_exp
    (95) recwrite -> . STRING action_recwrite_cte
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 298
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 297
    recwrite                       shift and go to state 335
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 329

    (93) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (92) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (93) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (94) recwrite -> . expression action_recwrite_exp
    (95) recwrite -> . STRING action_recwrite_cte
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 298
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    COMMA           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    recwrite                       shift and go to state 336
    expression                     shift and go to state 297
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 330

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (72) for_action1 -> .

    EX              reduce using rule 72 (for_action1 -> .)
    ID              reduce using rule 72 (for_action1 -> .)
    INT             reduce using rule 72 (for_action1 -> .)
    FLOAT           reduce using rule 72 (for_action1 -> .)
    TRUE            reduce using rule 72 (for_action1 -> .)
    FALSE           reduce using rule 72 (for_action1 -> .)
    STRING          reduce using rule 72 (for_action1 -> .)
    DRAW            reduce using rule 72 (for_action1 -> .)
    INIT            reduce using rule 72 (for_action1 -> .)
    TAIL            reduce using rule 72 (for_action1 -> .)
    LAST            reduce using rule 72 (for_action1 -> .)
    SET_FILL        reduce using rule 72 (for_action1 -> .)
    SET_TITLE       reduce using rule 72 (for_action1 -> .)
    GET_EVENT       reduce using rule 72 (for_action1 -> .)
    UPDATE          reduce using rule 72 (for_action1 -> .)
    SET_DIMENSION   reduce using rule 72 (for_action1 -> .)
    SET_COLOR       reduce using rule 72 (for_action1 -> .)
    CREATE_OBJECT   reduce using rule 72 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 72 (for_action1 -> .)
    SEMICOLON       reduce using rule 72 (for_action1 -> .)
    RELOP           reduce using rule 72 (for_action1 -> .)
    LOGIC           reduce using rule 72 (for_action1 -> .)
    TERMS           reduce using rule 72 (for_action1 -> .)
    LEFTPAR         reduce using rule 72 (for_action1 -> .)

    for_action1                    shift and go to state 337

state 331

    (75) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (77) while_action2 -> .

    RIGHTPAR        reduce using rule 77 (while_action2 -> .)

    while_action2                  shift and go to state 338

state 332

    (46) draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 339


state 333

    (135) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    EQUAL           reduce using rule 135 (assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 334

    (64) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (65) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (67) condition_action2 -> .
    (68) condition_action3 -> .

    ID              reduce using rule 67 (condition_action2 -> .)
    IF              reduce using rule 67 (condition_action2 -> .)
    VAR             reduce using rule 67 (condition_action2 -> .)
    PRINT           reduce using rule 67 (condition_action2 -> .)
    RETURN          reduce using rule 67 (condition_action2 -> .)
    FOR             reduce using rule 67 (condition_action2 -> .)
    WHILE           reduce using rule 67 (condition_action2 -> .)
    DRAW            reduce using rule 67 (condition_action2 -> .)
    INIT            reduce using rule 67 (condition_action2 -> .)
    TAIL            reduce using rule 67 (condition_action2 -> .)
    LAST            reduce using rule 67 (condition_action2 -> .)
    SET_FILL        reduce using rule 67 (condition_action2 -> .)
    SET_TITLE       reduce using rule 67 (condition_action2 -> .)
    GET_EVENT       reduce using rule 67 (condition_action2 -> .)
    UPDATE          reduce using rule 67 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 67 (condition_action2 -> .)
    SET_COLOR       reduce using rule 67 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 67 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 67 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 67 (condition_action2 -> .)
    ELSE            reduce using rule 68 (condition_action3 -> .)

    condition_action2              shift and go to state 340
    condition_action3              shift and go to state 341

state 335

    (92) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 92 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 336

    (93) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 93 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 337

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    SEMICOLON       reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 342
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 338

    (75) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 343


state 339

    (46) draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (106) expression -> . exp RELOP relop_action1 exp relop_action2
    (107) expression -> . exp LOGIC logic_action1 exp logic_action2
    (108) expression -> . exp
    (113) exp -> . term exp_action recexp
    (114) exp -> . term exp_action
    (117) term -> . factor term_action recterm
    (118) term -> . factor term_action
    (122) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (123) factor -> . EX cte
    (124) factor -> . cte
    (125) factor_action1 -> .
    (141) cte -> .
    (142) cte -> . id
    (143) cte -> . int
    (144) cte -> . float
    (145) cte -> . bool
    (146) cte -> . string
    (147) cte -> . nestedvalue
    (148) cte -> . functioncall
    (149) cte -> . listaccess
    (150) cte -> . specialfunction
    (151) id -> . ID
    (153) int -> . INT
    (154) float -> . FLOAT
    (155) bool -> . TRUE
    (156) bool -> . FALSE
    (152) string -> . STRING
    (139) nestedvalue -> . ID DOT ID
    (99) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (100) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (136) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . set_dimension
    (43) specialfunction -> . set_color
    (44) specialfunction -> . create_object
    (45) specialfunction -> . create_text
    (46) draw -> . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (47) init -> . INIT LEFTPAR RIGHTPAR
    (48) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (49) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (50) tail -> . TAIL LEFTPAR RIGHTPAR
    (51) last -> . LAST LEFTPAR RIGHTPAR
    (53) set_fill -> . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (52) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (56) get_event -> . GET_EVENT LEFTPAR RIGHTPAR
    (55) update -> . UPDATE LEFTPAR RIGHTPAR
    (54) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (57) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (58) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (59) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 125 (factor_action1 -> .)
    TERMS           reduce using rule 141 (cte -> .)
    RELOP           reduce using rule 141 (cte -> .)
    LOGIC           reduce using rule 141 (cte -> .)
    RIGHTPAR        reduce using rule 141 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 99
    INIT            shift and go to state 100
    TAIL            shift and go to state 101
    LAST            shift and go to state 102
    SET_FILL        shift and go to state 103
    SET_TITLE       shift and go to state 104
    GET_EVENT       shift and go to state 105
    UPDATE          shift and go to state 106
    SET_DIMENSION   shift and go to state 107
    SET_COLOR       shift and go to state 108
    CREATE_OBJECT   shift and go to state 109
    CREATE_TEXT     shift and go to state 110

  ! EX              [ reduce using rule 141 (cte -> .) ]

    expression                     shift and go to state 344
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    set_dimension                  shift and go to state 95
    set_color                      shift and go to state 96
    create_object                  shift and go to state 97
    create_text                    shift and go to state 98

state 340

    (64) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    DRAW            reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    INIT            reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    TAIL            reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    LAST            reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_FILL        reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_TITLE       reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    GET_EVENT       reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    UPDATE          reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_DIMENSION   reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_COLOR       reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_OBJECT   reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 64 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 341

    (65) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 345


state 342

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (73) for_action2 -> .

    SEMICOLON       reduce using rule 73 (for_action2 -> .)

    for_action2                    shift and go to state 346

state 343

    (75) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 347

state 344

    (46) draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 348


state 345

    (65) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 349

state 346

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 350


state 347

    (75) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (78) while_action3 -> .

    ID              reduce using rule 78 (while_action3 -> .)
    IF              reduce using rule 78 (while_action3 -> .)
    VAR             reduce using rule 78 (while_action3 -> .)
    PRINT           reduce using rule 78 (while_action3 -> .)
    RETURN          reduce using rule 78 (while_action3 -> .)
    FOR             reduce using rule 78 (while_action3 -> .)
    WHILE           reduce using rule 78 (while_action3 -> .)
    DRAW            reduce using rule 78 (while_action3 -> .)
    INIT            reduce using rule 78 (while_action3 -> .)
    TAIL            reduce using rule 78 (while_action3 -> .)
    LAST            reduce using rule 78 (while_action3 -> .)
    SET_FILL        reduce using rule 78 (while_action3 -> .)
    SET_TITLE       reduce using rule 78 (while_action3 -> .)
    GET_EVENT       reduce using rule 78 (while_action3 -> .)
    UPDATE          reduce using rule 78 (while_action3 -> .)
    SET_DIMENSION   reduce using rule 78 (while_action3 -> .)
    SET_COLOR       reduce using rule 78 (while_action3 -> .)
    CREATE_OBJECT   reduce using rule 78 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 78 (while_action3 -> .)
    RIGHTKEY        reduce using rule 78 (while_action3 -> .)

    while_action3                  shift and go to state 351

state 348

    (46) draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 46 (draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 46 (draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 46 (draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 46 (draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 46 (draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 46 (draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 46 (draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 46 (draw -> DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 349

    (65) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (67) condition_action2 -> .

    ID              reduce using rule 67 (condition_action2 -> .)
    IF              reduce using rule 67 (condition_action2 -> .)
    VAR             reduce using rule 67 (condition_action2 -> .)
    PRINT           reduce using rule 67 (condition_action2 -> .)
    RETURN          reduce using rule 67 (condition_action2 -> .)
    FOR             reduce using rule 67 (condition_action2 -> .)
    WHILE           reduce using rule 67 (condition_action2 -> .)
    DRAW            reduce using rule 67 (condition_action2 -> .)
    INIT            reduce using rule 67 (condition_action2 -> .)
    TAIL            reduce using rule 67 (condition_action2 -> .)
    LAST            reduce using rule 67 (condition_action2 -> .)
    SET_FILL        reduce using rule 67 (condition_action2 -> .)
    SET_TITLE       reduce using rule 67 (condition_action2 -> .)
    GET_EVENT       reduce using rule 67 (condition_action2 -> .)
    UPDATE          reduce using rule 67 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 67 (condition_action2 -> .)
    SET_COLOR       reduce using rule 67 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 67 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 67 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 67 (condition_action2 -> .)

    condition_action2              shift and go to state 352

state 350

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (60) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (61) assign -> . assign_list EQUAL assign_action2 expression
    (135) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 319

    assign                         shift and go to state 353
    assign_list                    shift and go to state 228

state 351

    (75) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    DRAW            reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    INIT            reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    TAIL            reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    LAST            reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_FILL        reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_TITLE       reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    GET_EVENT       reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    UPDATE          reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_DIMENSION   reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_COLOR       reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_OBJECT   reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 75 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 352

    (65) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    DRAW            reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    INIT            reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    TAIL            reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    LAST            reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_FILL        reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_TITLE       reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    GET_EVENT       reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    UPDATE          reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_DIMENSION   reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_COLOR       reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_OBJECT   reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 65 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 353

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 354


state 354

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 355


state 355

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 151

    block                          shift and go to state 356

state 356

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (74) for_action3 -> .

    ID              reduce using rule 74 (for_action3 -> .)
    IF              reduce using rule 74 (for_action3 -> .)
    VAR             reduce using rule 74 (for_action3 -> .)
    PRINT           reduce using rule 74 (for_action3 -> .)
    RETURN          reduce using rule 74 (for_action3 -> .)
    FOR             reduce using rule 74 (for_action3 -> .)
    WHILE           reduce using rule 74 (for_action3 -> .)
    DRAW            reduce using rule 74 (for_action3 -> .)
    INIT            reduce using rule 74 (for_action3 -> .)
    TAIL            reduce using rule 74 (for_action3 -> .)
    LAST            reduce using rule 74 (for_action3 -> .)
    SET_FILL        reduce using rule 74 (for_action3 -> .)
    SET_TITLE       reduce using rule 74 (for_action3 -> .)
    GET_EVENT       reduce using rule 74 (for_action3 -> .)
    UPDATE          reduce using rule 74 (for_action3 -> .)
    SET_DIMENSION   reduce using rule 74 (for_action3 -> .)
    SET_COLOR       reduce using rule 74 (for_action3 -> .)
    CREATE_OBJECT   reduce using rule 74 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 74 (for_action3 -> .)
    RIGHTKEY        reduce using rule 74 (for_action3 -> .)

    for_action3                    shift and go to state 357

state 357

    (71) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    DRAW            reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    INIT            reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    TAIL            reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    LAST            reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_FILL        reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_TITLE       reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    GET_EVENT       reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    UPDATE          reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_DIMENSION   reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_COLOR       reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_OBJECT   reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 71 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EX in state 128 resolved as shift
WARNING: shift/reduce conflict for EX in state 132 resolved as shift
WARNING: shift/reduce conflict for EX in state 133 resolved as shift
WARNING: shift/reduce conflict for EX in state 136 resolved as shift
WARNING: shift/reduce conflict for EX in state 137 resolved as shift
WARNING: shift/reduce conflict for EX in state 138 resolved as shift
WARNING: shift/reduce conflict for EX in state 139 resolved as shift
WARNING: shift/reduce conflict for EX in state 146 resolved as shift
WARNING: shift/reduce conflict for VAR in state 147 resolved as shift
WARNING: shift/reduce conflict for EX in state 159 resolved as shift
WARNING: shift/reduce conflict for EX in state 192 resolved as shift
WARNING: shift/reduce conflict for RIGHTPAR in state 192 resolved as shift
WARNING: shift/reduce conflict for EX in state 194 resolved as shift
WARNING: shift/reduce conflict for EX in state 199 resolved as shift
WARNING: shift/reduce conflict for EX in state 201 resolved as shift
WARNING: shift/reduce conflict for EX in state 203 resolved as shift
WARNING: shift/reduce conflict for EX in state 204 resolved as shift
WARNING: shift/reduce conflict for EX in state 206 resolved as shift
WARNING: shift/reduce conflict for VAR in state 212 resolved as shift
WARNING: shift/reduce conflict for EX in state 233 resolved as shift
WARNING: shift/reduce conflict for EX in state 244 resolved as shift
WARNING: shift/reduce conflict for EX in state 245 resolved as shift
WARNING: shift/reduce conflict for EX in state 271 resolved as shift
WARNING: shift/reduce conflict for EX in state 272 resolved as shift
WARNING: shift/reduce conflict for EX in state 274 resolved as shift
WARNING: shift/reduce conflict for EX in state 280 resolved as shift
WARNING: shift/reduce conflict for EX in state 283 resolved as shift
WARNING: shift/reduce conflict for EX in state 284 resolved as shift
WARNING: shift/reduce conflict for EX in state 286 resolved as shift
WARNING: shift/reduce conflict for EX in state 288 resolved as shift
WARNING: shift/reduce conflict for EX in state 293 resolved as shift
WARNING: shift/reduce conflict for EX in state 294 resolved as shift
WARNING: shift/reduce conflict for EX in state 311 resolved as shift
WARNING: shift/reduce conflict for EX in state 320 resolved as shift
WARNING: shift/reduce conflict for EX in state 321 resolved as shift
WARNING: shift/reduce conflict for EX in state 328 resolved as shift
WARNING: shift/reduce conflict for EX in state 329 resolved as shift
WARNING: shift/reduce conflict for EX in state 337 resolved as shift
WARNING: shift/reduce conflict for EX in state 339 resolved as shift
WARNING: reduce/reduce conflict in state 298 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 298
