
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BAR COLON COMMA COMMENT CREATE_OBJECT CREATE_TEXT DOT DRAW ELSE EQUAL EX FALSE FLOAT FOR FUNC GET_EVENT GLOBAL HEAD ID IF INIT INT LAST LEFTBRACKET LEFTKEY LEFTPAR LIST LOGIC MAIN OBJECT PRINT RELOP RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR RUN SEMICOLON SET_COLOR SET_DIMENSION SET_FILL SET_TITLE SIZE START STRING TAIL TBOOL TERMS TFLOAT TINT TLIST TOBJECT TRUE TSTRING UPDATE VAR VOID WHILE \n    capi : capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n    \n    capi_action1 :\n    \n    capi_action2 :\n    \n    global : GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON\n    \n    start : VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    start_action1 :\n    \n    run : VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    run_action1 :\n    \n    main_cont :\n     \n    vars :    VAR recids COLON type EQUAL expression SEMICOLON vars \n            | VAR recids COLON type EQUAL expression SEMICOLON\n            | VAR recids COLON type SEMICOLON vars\n            | VAR recids COLON type SEMICOLON\n     \n    recids : ID \n           | ID COMMA recids \n    \n    block : COLON LEFTKEY recstatement RIGHTKEY SEMICOLON\n          | COLON LEFTKEY RIGHTKEY SEMICOLON\n     \n    recstatement : statement recstatement  \n                 | statement  \n    \n    statement : assign SEMICOLON\n              | condition\n              | vars\n              | loop\n              | write SEMICOLON\n              | return SEMICOLON\n              | functioncall SEMICOLON\n              | nestedassign SEMICOLON\n              | specialfunction SEMICOLON\n    \n    specialfunction : draw\n                    | init\n                    | size\n                    | head\n                    | tail\n                    | last\n                    | set_fill\n                    | set_title\n                    | get_event\n                    | update\n                    | set_dimension\n                    | set_color\n                    | create_object\n                    | create_text\n    \n    draw : DRAW LEFTPAR recfuncexp RIGHTPAR\n        \n    \n    init : INIT LEFTPAR RIGHTPAR\n    \n    size : ID DOT SIZE LEFTPAR RIGHTPAR\n    \n    head : ID DOT HEAD LEFTPAR RIGHTPAR\n    \n    tail : TAIL LEFTPAR RIGHTPAR\n    \n    last : LAST LEFTPAR RIGHTPAR\n    \n    set_title : SET_TITLE LEFTPAR expression RIGHTPAR\n    \n    set_fill : SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    set_dimension : SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR\n    \n    update : UPDATE LEFTPAR RIGHTPAR\n    \n    get_event : GET_EVENT LEFTPAR RIGHTPAR\n    \n    set_color : SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    create_object : CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR\n    \n    create_text : CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR\n    \n    assign : ID assign_action1 EQUAL assign_action2 expression \n           | assign_list EQUAL assign_action2 expression\n    \n    assign_action1 : \n    \n    assign_action2 : \n     condition : IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action2\n                  | IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action3 ELSE  block condition_action2\n     \n    condition_action1 :\n    \n    condition_action2 :\n    \n    condition_action3 :\n    \n    loop : for\n        | while\n    \n    for : FOR startscope_action LEFTPAR  assign  SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3\n    \n    for_action1 : \n    \n    for_action2 : \n    \n    for_action3 : \n    \n    while : WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3\n    \n    while_action1 :\n    \n    while_action2 :\n    \n    while_action3 :\n    \n    function : type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n    \n    startscope_action : \n    \n    function_action1 :\n    \n    function_action2 :\n    \n    function_action3 :\n    \n    recparams : ID COLON type\n              | ID COLON type COMMA recparams\n    \n    recfunc : function recfunc\n            | function\n     \n    write : PRINT LEFTPAR recwrite RIGHTPAR \n     \n    recwrite : expression action_recwrite_exp COMMA recwrite \n               | STRING action_recwrite_cte COMMA  recwrite \n               | expression action_recwrite_exp \n               | STRING action_recwrite_cte\n    \n    action_recwrite_exp :\n    \n    action_recwrite_cte : \n    \n     return : RETURN expression\n    \n    functioncall : ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR \n                 | ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR \n    \n    function_call_action1 : \n    \n    function_call_action2 : \n    \n    recfuncexp : expression COMMA recfuncexp\n               | expression recfunc_action1\n    \n    recfunc_action1 :\n    \n    expression : exp RELOP relop_action1 exp relop_action2\n               | exp LOGIC logic_action1 exp logic_action2\n               | exp\n    \n    relop_action1 : \n    \n    relop_action2 : \n    \n    logic_action1 : \n    \n    logic_action2 : \n     \n    exp : term exp_action recexp\n        | term exp_action \n        \n    exp_action :\n     \n    recexp : EX add_operator exp \n     \n    term : factor term_action recterm \n         | factor term_action \n    \n    term_action :\n     \n    recterm : TERMS add_operator term\n    \n    add_operator :\n     factor : factor_action1 LEFTPAR expression RIGHTPAR factor_action2 \n               | EX cte \n               | cte \n    \n    factor_action1 :\n    \n    factor_action2 :\n    \n    type : primitivetype\n        | TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1\n    \n    action_list1 :\n    \n    primitivetype : TINT\n                  | TFLOAT\n                  | TSTRING\n                  | TBOOL\n                  | TOBJECT\n    \n    assign_list : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    listaccess : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    list_action1 :\n    \n    list_action_3 :\n    \n    nestedvalue : ID DOT ID\n    \n    nestedassign : nestedvalue EQUAL expression\n    \n    cte :    \n        | id\n        | int\n        | float\n        | bool\n        | string\n        | nestedvalue\n        | functioncall\n        | listaccess\n        | specialfunction\n    \n    id : ID\n    \n    string : STRING\n    \n    int : INT\n    \n    float : FLOAT\n    \n    bool : TRUE \n         | FALSE\n    '
    
_lr_action_items = {'MAIN':([0,2,3,4,7,17,22,61,150,153,257,259,276,289,],[-5,5,18,19,-90,26,-89,-7,-80,-82,-79,-20,-81,-19,]),'GLOBAL':([0,2,],[-5,6,]),'VOID':([0,2,3,7,29,35,36,37,44,45,46,47,55,56,57,61,111,150,153,257,259,276,288,289,],[-5,9,9,9,38,38,38,-6,38,-6,-6,59,-6,59,59,-7,59,-80,-82,-79,-20,-81,-8,-19,]),'TLIST':([0,2,3,7,61,62,119,150,153,257,259,276,289,],[-5,11,11,11,-7,11,11,-80,-82,-79,-20,-81,-19,]),'TINT':([0,2,3,7,25,61,62,119,150,153,257,259,276,289,],[-5,12,12,12,12,-7,12,12,-80,-82,-79,-20,-81,-19,]),'TFLOAT':([0,2,3,7,25,61,62,119,150,153,257,259,276,289,],[-5,13,13,13,13,-7,13,13,-80,-82,-79,-20,-81,-19,]),'TSTRING':([0,2,3,7,25,61,62,119,150,153,257,259,276,289,],[-5,14,14,14,14,-7,14,14,-80,-82,-79,-20,-81,-19,]),'TBOOL':([0,2,3,7,25,61,62,119,150,153,257,259,276,289,],[-5,15,15,15,15,-7,15,15,-80,-82,-79,-20,-81,-19,]),'TOBJECT':([0,2,3,7,25,61,62,119,150,153,257,259,276,289,],[-5,16,16,16,16,-7,16,16,-80,-82,-79,-20,-81,-19,]),'$end':([1,143,180,181,209,],[0,-4,-3,-2,-1,]),'COLON':([5,6,18,19,26,50,51,64,66,68,118,121,123,149,152,187,189,211,214,237,255,287,307,323,337,338,347,],[20,21,27,28,34,62,-17,119,-86,-86,-18,151,151,-85,-85,-86,-86,-12,151,151,151,-12,151,151,151,151,151,]),'FUNC':([8,9,10,12,13,14,15,16,38,59,124,154,],[23,24,-127,-130,-131,-132,-133,-134,48,115,-129,-128,]),'EQUAL':([10,12,13,14,15,16,117,124,154,155,227,228,234,267,316,328,],[-127,-130,-131,-132,-133,-134,146,-129,-128,-139,-62,269,273,290,-62,-135,]),'SEMICOLON':([10,12,13,14,15,16,49,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,114,117,124,141,142,146,154,155,162,163,164,166,167,168,169,170,173,174,179,184,194,197,198,199,200,202,204,207,208,216,218,222,223,224,225,226,233,238,239,241,244,245,246,247,248,249,258,269,272,273,277,278,279,280,281,282,283,285,290,292,297,300,301,302,303,304,308,310,312,315,318,319,321,326,332,336,339,345,],[-127,-130,-131,-132,-133,-134,61,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-153,-154,-155,-156,-152,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,143,147,-129,180,181,-141,-128,-139,-108,-115,-119,-141,-124,-47,-50,-51,-56,-55,209,212,-46,-109,-111,-114,-118,-123,-52,-58,-59,259,261,262,263,264,265,266,-141,-48,-49,-100,-141,-141,-113,-121,-117,-121,289,-63,-98,-141,-99,-136,-110,-112,-141,-141,-126,-54,-63,-141,-140,-106,-107,-116,-120,-122,-141,-61,-91,326,-53,-57,-60,-72,-141,-73,342,346,]),'COMMA':([10,12,13,14,15,16,51,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,124,128,132,136,137,138,139,148,154,155,158,161,162,163,164,166,167,168,169,170,171,173,174,175,176,192,194,195,197,198,199,200,202,203,204,206,207,208,238,239,241,244,245,246,247,248,249,251,253,271,277,278,279,280,281,282,283,285,295,296,300,301,302,303,304,313,314,318,319,324,325,],[-127,-130,-131,-132,-133,-134,63,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-153,-154,-155,-156,-152,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-129,-141,-141,-141,-141,-141,-141,186,-128,-139,-102,195,-108,-115,-119,-141,-124,-47,-50,-51,203,-56,-55,205,206,-141,-46,-141,-109,-111,-114,-118,-123,-141,-52,-141,-58,-59,-48,-49,-100,-141,-141,-113,-121,-117,-121,284,286,-141,-99,-136,-110,-112,-141,-141,-126,-54,-96,-97,-106,-107,-116,-120,-122,324,325,-53,-57,-141,-141,]),'RIGHTPAR':([10,12,13,14,15,16,52,53,65,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,120,122,124,128,129,130,131,133,134,135,138,139,148,154,155,158,160,161,162,163,164,166,167,168,169,170,172,173,174,177,178,183,190,191,192,194,195,196,197,198,199,200,201,202,204,205,207,208,213,238,239,240,241,243,244,245,246,247,248,249,250,252,254,270,271,277,278,279,280,281,282,283,284,285,286,293,294,295,296,300,301,302,303,304,305,306,311,313,314,317,318,319,324,325,327,330,331,333,346,],[-127,-130,-131,-132,-133,-134,66,68,-84,-84,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-153,-154,-155,-156,-152,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,149,152,-129,-141,168,169,170,-141,173,174,-141,-141,-87,-128,-139,-102,194,-105,-108,-115,-119,-141,-124,-47,-50,-51,204,-56,-55,207,208,211,238,239,241,-46,-141,-104,-109,-111,-114,-118,-141,-123,-52,-141,-58,-59,-88,-48,-49,277,-100,-103,-141,-141,-113,-121,-117,-121,283,285,287,-141,-141,-99,-136,-110,-112,-141,-141,-126,-141,-54,-141,-66,312,-96,-97,-106,-107,-116,-120,-122,318,319,323,-94,-95,-141,-53,-57,-141,-141,-77,-92,-93,337,347,]),'BAR':([11,12,13,14,15,16,33,],[25,-130,-131,-132,-133,-134,43,]),'LEFTKEY':([20,21,27,28,34,151,],[29,30,35,36,44,188,]),'ID':([23,24,40,52,53,54,63,125,128,132,133,136,137,138,139,146,147,158,159,166,185,186,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,298,308,317,324,325,326,329,332,334,340,341,342,343,344,348,349,],[31,32,51,64,64,79,51,155,79,79,79,79,79,79,79,79,-16,-102,79,79,-15,64,227,79,79,-109,-111,79,79,79,79,-14,227,-24,-25,-26,-69,-70,79,79,79,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,79,79,79,79,79,79,79,-19,-63,79,79,316,79,79,79,79,-72,-67,79,-64,-78,-67,316,-75,-65,-74,-71,]),'VAR':([30,147,185,188,212,217,219,220,221,230,231,256,259,261,262,263,264,265,266,289,329,334,340,341,343,344,348,349,],[40,40,-15,40,40,40,-24,-25,-26,-69,-70,-13,-20,-23,-27,-28,-29,-30,-31,-19,-67,-64,-78,-67,-75,-65,-74,-71,]),'LEFTPAR':([31,32,41,42,79,99,100,101,102,103,104,105,106,107,108,109,110,116,126,128,132,133,136,137,138,139,145,146,156,157,158,159,165,182,192,195,197,198,201,203,205,206,210,227,229,232,233,235,236,244,245,247,249,269,270,271,273,274,275,281,282,284,286,290,291,292,299,308,317,324,325,326,332,],[-83,-83,52,53,-101,128,129,130,131,132,133,134,135,136,137,138,139,-83,158,-125,-125,-125,-125,-125,-125,-125,183,-125,190,191,-102,-125,201,-83,-125,-125,-109,-111,-125,-125,-125,-125,254,-101,270,271,-125,-83,-83,-125,-125,-121,-121,-63,-125,-125,-125,298,-76,-125,-125,-125,-125,-63,-125,-125,317,-125,-125,-125,-125,-72,-125,]),'RIGHTKEY':([39,58,112,113,140,147,185,188,212,215,217,219,220,221,230,231,256,259,260,261,262,263,264,265,266,289,320,329,334,340,341,343,344,348,349,],[49,114,141,142,179,-16,-15,216,-14,258,-22,-24,-25,-26,-69,-70,-13,-20,-21,-23,-27,-28,-29,-30,-31,-19,-10,-67,-64,-78,-67,-75,-65,-74,-71,]),'LEFTBRACKET':([43,79,127,227,268,316,],[54,-137,159,-137,291,-137,]),'START':([48,60,],[-9,116,]),'RIGHTBRACKET':([54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,155,159,162,163,164,166,167,168,169,170,173,174,193,194,197,198,199,200,202,204,207,208,238,239,241,242,244,245,246,247,248,249,277,278,279,280,281,282,283,285,291,300,301,302,303,304,309,318,319,322,],[-141,124,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-153,-154,-155,-156,-152,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-139,-141,-108,-115,-119,-141,-124,-47,-50,-51,-56,-55,-138,-46,-109,-111,-114,-118,-123,-52,-58,-59,-48,-49,-100,278,-141,-141,-113,-121,-117,-121,-99,-136,-110,-112,-141,-141,-126,-54,-141,-106,-107,-116,-120,-122,-138,-53,-57,328,]),'INT':([54,128,132,133,136,137,138,139,146,158,159,166,192,195,197,198,201,203,205,206,233,244,245,247,249,269,270,271,273,281,282,284,286,290,291,292,308,317,324,325,326,332,],[80,80,80,80,80,80,80,80,80,-102,80,80,80,80,-109,-111,80,80,80,80,80,80,80,-121,-121,-63,80,80,80,80,80,80,80,-63,80,80,80,80,80,80,-72,80,]),'FLOAT':([54,128,132,133,136,137,138,139,146,158,159,166,192,195,197,198,201,203,205,206,233,244,245,247,249,269,270,271,273,281,282,284,286,290,291,292,308,317,324,325,326,332,],[81,81,81,81,81,81,81,81,81,-102,81,81,81,81,-109,-111,81,81,81,81,81,81,81,-121,-121,-63,81,81,81,81,81,81,81,-63,81,81,81,81,81,81,-72,81,]),'TRUE':([54,128,132,133,136,137,138,139,146,158,159,166,192,195,197,198,201,203,205,206,233,244,245,247,249,269,270,271,273,281,282,284,286,290,291,292,308,317,324,325,326,332,],[82,82,82,82,82,82,82,82,82,-102,82,82,82,82,-109,-111,82,82,82,82,82,82,82,-121,-121,-63,82,82,82,82,82,82,82,-63,82,82,82,82,82,82,-72,82,]),'FALSE':([54,128,132,133,136,137,138,139,146,158,159,166,192,195,197,198,201,203,205,206,233,244,245,247,249,269,270,271,273,281,282,284,286,290,291,292,308,317,324,325,326,332,],[83,83,83,83,83,83,83,83,83,-102,83,83,83,83,-109,-111,83,83,83,83,83,83,83,-121,-121,-63,83,83,83,83,83,83,83,-63,83,83,83,83,83,83,-72,83,]),'STRING':([54,128,132,133,136,137,138,139,146,158,159,166,192,195,197,198,201,203,205,206,233,244,245,247,249,269,270,271,273,281,282,284,286,290,291,292,308,317,324,325,326,332,],[84,84,84,84,84,84,84,84,84,-102,84,84,84,84,-109,-111,84,84,84,84,84,84,84,-121,-121,-63,84,296,84,84,84,84,84,-63,84,84,84,84,296,296,-72,84,]),'DRAW':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[99,99,99,99,99,99,99,99,99,-16,-102,99,99,-15,99,99,99,-109,-111,99,99,99,99,-14,99,-24,-25,-26,-69,-70,99,99,99,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,99,99,99,99,99,99,99,-19,-63,99,99,99,99,99,99,-72,-67,99,-64,-78,-67,-75,-65,-74,-71,]),'INIT':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[100,100,100,100,100,100,100,100,100,-16,-102,100,100,-15,100,100,100,-109,-111,100,100,100,100,-14,100,-24,-25,-26,-69,-70,100,100,100,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,100,100,100,100,100,100,100,-19,-63,100,100,100,100,100,100,-72,-67,100,-64,-78,-67,-75,-65,-74,-71,]),'TAIL':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[101,101,101,101,101,101,101,101,101,-16,-102,101,101,-15,101,101,101,-109,-111,101,101,101,101,-14,101,-24,-25,-26,-69,-70,101,101,101,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,101,101,101,101,101,101,101,-19,-63,101,101,101,101,101,101,-72,-67,101,-64,-78,-67,-75,-65,-74,-71,]),'LAST':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[102,102,102,102,102,102,102,102,102,-16,-102,102,102,-15,102,102,102,-109,-111,102,102,102,102,-14,102,-24,-25,-26,-69,-70,102,102,102,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,102,102,102,102,102,102,102,-19,-63,102,102,102,102,102,102,-72,-67,102,-64,-78,-67,-75,-65,-74,-71,]),'SET_FILL':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[103,103,103,103,103,103,103,103,103,-16,-102,103,103,-15,103,103,103,-109,-111,103,103,103,103,-14,103,-24,-25,-26,-69,-70,103,103,103,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,103,103,103,103,103,103,103,-19,-63,103,103,103,103,103,103,-72,-67,103,-64,-78,-67,-75,-65,-74,-71,]),'SET_TITLE':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[104,104,104,104,104,104,104,104,104,-16,-102,104,104,-15,104,104,104,-109,-111,104,104,104,104,-14,104,-24,-25,-26,-69,-70,104,104,104,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,104,104,104,104,104,104,104,-19,-63,104,104,104,104,104,104,-72,-67,104,-64,-78,-67,-75,-65,-74,-71,]),'GET_EVENT':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[105,105,105,105,105,105,105,105,105,-16,-102,105,105,-15,105,105,105,-109,-111,105,105,105,105,-14,105,-24,-25,-26,-69,-70,105,105,105,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,105,105,105,105,105,105,105,-19,-63,105,105,105,105,105,105,-72,-67,105,-64,-78,-67,-75,-65,-74,-71,]),'UPDATE':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[106,106,106,106,106,106,106,106,106,-16,-102,106,106,-15,106,106,106,-109,-111,106,106,106,106,-14,106,-24,-25,-26,-69,-70,106,106,106,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,106,106,106,106,106,106,106,-19,-63,106,106,106,106,106,106,-72,-67,106,-64,-78,-67,-75,-65,-74,-71,]),'SET_DIMENSION':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[107,107,107,107,107,107,107,107,107,-16,-102,107,107,-15,107,107,107,-109,-111,107,107,107,107,-14,107,-24,-25,-26,-69,-70,107,107,107,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,107,107,107,107,107,107,107,-19,-63,107,107,107,107,107,107,-72,-67,107,-64,-78,-67,-75,-65,-74,-71,]),'SET_COLOR':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[108,108,108,108,108,108,108,108,108,-16,-102,108,108,-15,108,108,108,-109,-111,108,108,108,108,-14,108,-24,-25,-26,-69,-70,108,108,108,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,108,108,108,108,108,108,108,-19,-63,108,108,108,108,108,108,-72,-67,108,-64,-78,-67,-75,-65,-74,-71,]),'CREATE_OBJECT':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[109,109,109,109,109,109,109,109,109,-16,-102,109,109,-15,109,109,109,-109,-111,109,109,109,109,-14,109,-24,-25,-26,-69,-70,109,109,109,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,109,109,109,109,109,109,109,-19,-63,109,109,109,109,109,109,-72,-67,109,-64,-78,-67,-75,-65,-74,-71,]),'CREATE_TEXT':([54,128,132,133,136,137,138,139,146,147,158,159,166,185,188,192,195,197,198,201,203,205,206,212,217,219,220,221,230,231,233,244,245,247,249,256,259,261,262,263,264,265,266,269,270,271,273,281,282,284,286,289,290,291,292,308,317,324,325,326,329,332,334,340,341,343,344,348,349,],[110,110,110,110,110,110,110,110,110,-16,-102,110,110,-15,110,110,110,-109,-111,110,110,110,110,-14,110,-24,-25,-26,-69,-70,110,110,110,-121,-121,-13,-20,-23,-27,-28,-29,-30,-31,-63,110,110,110,110,110,110,110,-19,-63,110,110,110,110,110,110,-72,-67,110,-64,-78,-67,-75,-65,-74,-71,]),'TERMS':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,128,132,133,136,137,138,139,146,155,158,159,164,166,167,168,169,170,173,174,192,194,195,197,198,200,201,202,203,204,205,206,207,208,233,238,239,241,244,245,247,249,269,270,271,273,277,278,281,282,283,284,285,286,290,291,292,296,304,308,317,318,319,324,325,326,332,],[-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-153,-154,-155,-156,-152,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-141,-141,-141,-141,-141,-141,-141,-141,-139,-102,-141,-119,-141,-124,-47,-50,-51,-56,-55,-141,-46,-141,-109,-111,249,-141,-123,-141,-52,-141,-141,-58,-59,-141,-48,-49,-100,-141,-141,-121,-121,-63,-141,-141,-141,-99,-136,-141,-141,-126,-141,-54,-141,-63,-141,-141,-152,-122,-141,-141,-53,-57,-141,-141,-72,-141,]),'EX':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,128,132,133,136,137,138,139,146,155,158,159,163,164,166,167,168,169,170,173,174,192,194,195,197,198,199,200,201,202,203,204,205,206,207,208,233,238,239,241,244,245,247,248,249,269,270,271,273,277,278,281,282,283,284,285,286,290,291,292,296,303,304,308,317,318,319,324,325,326,332,],[-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-153,-154,-155,-156,-152,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,166,166,166,166,166,166,166,166,-139,-102,166,-115,-119,-141,-124,-47,-50,-51,-56,-55,166,-46,166,-109,-111,247,-118,166,-123,166,-52,166,166,-58,-59,166,-48,-49,-100,166,166,-121,-117,-121,-63,166,166,166,-99,-136,166,166,-126,166,-54,166,-63,166,166,-152,-120,-122,166,166,-53,-57,166,166,-72,166,]),'RELOP':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,128,132,133,136,137,138,139,146,155,158,159,162,163,164,166,167,168,169,170,173,174,192,194,195,199,200,201,202,203,204,205,206,207,208,233,238,239,241,246,247,248,249,269,270,271,273,277,278,281,282,283,284,285,286,290,291,292,296,302,303,304,308,317,318,319,324,325,326,332,],[-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-153,-154,-155,-156,-152,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-141,-141,-141,-141,-141,-141,-141,-141,-139,-102,-141,197,-115,-119,-141,-124,-47,-50,-51,-56,-55,-141,-46,-141,-114,-118,-141,-123,-141,-52,-141,-141,-58,-59,-141,-48,-49,-100,-113,-121,-117,-121,-63,-141,-141,-141,-99,-136,-141,-141,-126,-141,-54,-141,-63,-141,-141,-152,-116,-120,-122,-141,-141,-53,-57,-141,-141,-72,-141,]),'LOGIC':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,128,132,133,136,137,138,139,146,155,158,159,162,163,164,166,167,168,169,170,173,174,192,194,195,199,200,201,202,203,204,205,206,207,208,233,238,239,241,246,247,248,249,269,270,271,273,277,278,281,282,283,284,285,286,290,291,292,296,302,303,304,308,317,318,319,324,325,326,332,],[-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-153,-154,-155,-156,-152,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-141,-141,-141,-141,-141,-141,-141,-141,-139,-102,-141,198,-115,-119,-141,-124,-47,-50,-51,-56,-55,-141,-46,-141,-114,-118,-141,-123,-141,-52,-141,-141,-58,-59,-141,-48,-49,-100,-113,-121,-117,-121,-63,-141,-141,-141,-99,-136,-141,-141,-126,-141,-54,-141,-63,-141,-141,-152,-116,-120,-122,-141,-141,-53,-57,-141,-141,-72,-141,]),'DOT':([79,227,],[125,125,]),'RUN':([115,144,],[-11,182,]),'SIZE':([125,],[156,]),'HEAD':([125,],[157,]),'IF':([147,185,188,212,217,219,220,221,230,231,256,259,261,262,263,264,265,266,289,329,334,340,341,343,344,348,349,],[-16,-15,229,-14,229,-24,-25,-26,-69,-70,-13,-20,-23,-27,-28,-29,-30,-31,-19,-67,-64,-78,-67,-75,-65,-74,-71,]),'PRINT':([147,185,188,212,217,219,220,221,230,231,256,259,261,262,263,264,265,266,289,329,334,340,341,343,344,348,349,],[-16,-15,232,-14,232,-24,-25,-26,-69,-70,-13,-20,-23,-27,-28,-29,-30,-31,-19,-67,-64,-78,-67,-75,-65,-74,-71,]),'RETURN':([147,185,188,212,217,219,220,221,230,231,256,259,261,262,263,264,265,266,289,329,334,340,341,343,344,348,349,],[-16,-15,233,-14,233,-24,-25,-26,-69,-70,-13,-20,-23,-27,-28,-29,-30,-31,-19,-67,-64,-78,-67,-75,-65,-74,-71,]),'FOR':([147,185,188,212,217,219,220,221,230,231,256,259,261,262,263,264,265,266,289,329,334,340,341,343,344,348,349,],[-16,-15,235,-14,235,-24,-25,-26,-69,-70,-13,-20,-23,-27,-28,-29,-30,-31,-19,-67,-64,-78,-67,-75,-65,-74,-71,]),'WHILE':([147,185,188,212,217,219,220,221,230,231,256,259,261,262,263,264,265,266,289,329,334,340,341,343,344,348,349,],[-16,-15,236,-14,236,-24,-25,-26,-69,-70,-13,-20,-23,-27,-28,-29,-30,-31,-19,-67,-64,-78,-67,-75,-65,-74,-71,]),'ELSE':([259,289,329,335,],[-20,-19,-68,338,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'capi':([0,],[1,]),'capi_action1':([0,],[2,]),'global':([2,],[3,]),'recfunc':([2,3,7,],[4,17,22,]),'function':([2,3,7,],[7,7,7,]),'type':([2,3,7,62,119,],[8,8,8,117,148,]),'primitivetype':([2,3,7,25,62,119,],[10,10,10,33,10,10,]),'start':([29,35,36,44,],[37,45,46,55,]),'vars':([30,147,188,212,217,],[39,185,220,256,220,]),'startscope_action':([31,32,116,182,235,236,],[41,42,145,210,274,275,]),'capi_action2':([37,45,46,55,],[47,56,57,111,]),'recids':([40,63,],[50,118,]),'run':([47,56,57,111,],[58,112,113,140,]),'start_action1':([48,],[60,]),'recparams':([52,53,186,],[65,67,213,]),'cte':([54,128,132,133,136,137,138,139,146,159,166,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[69,167,167,167,167,167,167,167,167,167,202,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'id':([54,128,132,133,136,137,138,139,146,159,166,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'int':([54,128,132,133,136,137,138,139,146,159,166,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'float':([54,128,132,133,136,137,138,139,146,159,166,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'bool':([54,128,132,133,136,137,138,139,146,159,166,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'string':([54,128,132,133,136,137,138,139,146,159,166,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'nestedvalue':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[75,75,75,75,75,75,75,75,75,75,75,234,75,75,75,75,75,75,234,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'functioncall':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[76,76,76,76,76,76,76,76,76,76,76,224,76,76,76,76,76,76,224,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'listaccess':([54,128,132,133,136,137,138,139,146,159,166,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'specialfunction':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[78,78,78,78,78,78,78,78,78,78,78,226,78,78,78,78,78,78,226,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'draw':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'init':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'size':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'head':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'tail':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'last':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'set_fill':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'set_title':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'get_event':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'update':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'set_dimension':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'set_color':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'create_object':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'create_text':([54,128,132,133,136,137,138,139,146,159,166,188,192,195,201,203,205,206,217,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'function_action1':([65,67,],[120,122,]),'function_action3':([66,68,187,189,],[121,123,214,237,]),'function_call_action1':([79,227,],[126,126,]),'list_action1':([79,227,316,],[127,268,268,]),'run_action1':([115,],[144,]),'block':([121,123,214,237,255,307,323,337,338,347,],[150,153,257,276,288,320,329,340,341,348,]),'action_list1':([124,],[154,]),'recfuncexp':([128,138,139,192,195,],[160,177,178,240,243,]),'expression':([128,132,133,136,137,138,139,146,159,192,195,201,203,205,206,233,270,271,273,284,286,291,292,308,317,324,325,332,],[161,171,172,175,176,161,161,184,193,161,161,250,251,252,253,272,293,295,297,305,306,309,310,321,327,295,295,336,]),'exp':([128,132,133,136,137,138,139,146,159,192,195,201,203,205,206,233,244,245,270,271,273,281,284,286,291,292,308,317,324,325,332,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,279,280,162,162,162,302,162,162,162,162,162,162,162,162,162,]),'term':([128,132,133,136,137,138,139,146,159,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,303,163,163,163,163,163,163,163,163,163,]),'factor':([128,132,133,136,137,138,139,146,159,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'factor_action1':([128,132,133,136,137,138,139,146,159,192,195,201,203,205,206,233,244,245,270,271,273,281,282,284,286,291,292,308,317,324,325,332,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'function_action2':([149,152,],[187,189,]),'function_call_action2':([158,],[192,]),'recfunc_action1':([161,],[196,]),'exp_action':([163,],[199,]),'term_action':([164,],[200,]),'recstatement':([188,217,],[215,260,]),'statement':([188,217,],[217,217,]),'assign':([188,217,298,342,],[218,218,315,345,]),'condition':([188,217,],[219,219,]),'loop':([188,217,],[221,221,]),'write':([188,217,],[222,222,]),'return':([188,217,],[223,223,]),'nestedassign':([188,217,],[225,225,]),'assign_list':([188,217,298,342,],[228,228,228,228,]),'for':([188,217,],[230,230,]),'while':([188,217,],[231,231,]),'list_action_3':([193,309,],[242,322,]),'relop_action1':([197,],[244,]),'logic_action1':([198,],[245,]),'recexp':([199,],[246,]),'recterm':([200,],[248,]),'main_cont':([211,287,],[255,307,]),'assign_action1':([227,316,],[267,267,]),'add_operator':([247,249,],[281,282,]),'assign_action2':([269,290,],[292,308,]),'recwrite':([271,324,325,],[294,330,331,]),'while_action1':([275,],[299,]),'relop_action2':([279,],[300,]),'logic_action2':([280,],[301,]),'factor_action2':([283,],[304,]),'condition_action1':([293,],[311,]),'action_recwrite_exp':([295,],[313,]),'action_recwrite_cte':([296,],[314,]),'for_action1':([326,],[332,]),'while_action2':([327,],[333,]),'condition_action2':([329,341,],[334,344,]),'condition_action3':([329,],[335,]),'for_action2':([336,],[339,]),'while_action3':([340,],[343,]),'for_action3':([348,],[349,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> capi","S'",1,None,None,None),
  ('capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',11,'p_capi','capi.py',252),
  ('capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',253),
  ('capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',254),
  ('capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',9,'p_capi','capi.py',255),
  ('capi_action1 -> <empty>','capi_action1',0,'p_capi_action1','capi.py',260),
  ('capi_action2 -> <empty>','capi_action2',0,'p_capi_action2','capi.py',268),
  ('global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON','global',6,'p_global','capi.py',274),
  ('start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block','start',9,'p_start','capi.py',283),
  ('start_action1 -> <empty>','start_action1',0,'p_start_action1','capi.py',300),
  ('run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block','run',9,'p_run','capi.py',307),
  ('run_action1 -> <empty>','run_action1',0,'p_run_action1','capi.py',323),
  ('main_cont -> <empty>','main_cont',0,'p_main_cont','capi.py',330),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON vars','vars',8,'p_vars','capi.py',336),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON','vars',7,'p_vars','capi.py',337),
  ('vars -> VAR recids COLON type SEMICOLON vars','vars',6,'p_vars','capi.py',338),
  ('vars -> VAR recids COLON type SEMICOLON','vars',5,'p_vars','capi.py',339),
  ('recids -> ID','recids',1,'p_recids','capi.py',373),
  ('recids -> ID COMMA recids','recids',3,'p_recids','capi.py',374),
  ('block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON','block',5,'p_block','capi.py',384),
  ('block -> COLON LEFTKEY RIGHTKEY SEMICOLON','block',4,'p_block','capi.py',385),
  ('recstatement -> statement recstatement','recstatement',2,'p_recstatement','capi.py',390),
  ('recstatement -> statement','recstatement',1,'p_recstatement','capi.py',391),
  ('statement -> assign SEMICOLON','statement',2,'p_statement','capi.py',397),
  ('statement -> condition','statement',1,'p_statement','capi.py',398),
  ('statement -> vars','statement',1,'p_statement','capi.py',399),
  ('statement -> loop','statement',1,'p_statement','capi.py',400),
  ('statement -> write SEMICOLON','statement',2,'p_statement','capi.py',401),
  ('statement -> return SEMICOLON','statement',2,'p_statement','capi.py',402),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement','capi.py',403),
  ('statement -> nestedassign SEMICOLON','statement',2,'p_statement','capi.py',404),
  ('statement -> specialfunction SEMICOLON','statement',2,'p_statement','capi.py',405),
  ('specialfunction -> draw','specialfunction',1,'p_specialfunction','capi.py',412),
  ('specialfunction -> init','specialfunction',1,'p_specialfunction','capi.py',413),
  ('specialfunction -> size','specialfunction',1,'p_specialfunction','capi.py',414),
  ('specialfunction -> head','specialfunction',1,'p_specialfunction','capi.py',415),
  ('specialfunction -> tail','specialfunction',1,'p_specialfunction','capi.py',416),
  ('specialfunction -> last','specialfunction',1,'p_specialfunction','capi.py',417),
  ('specialfunction -> set_fill','specialfunction',1,'p_specialfunction','capi.py',418),
  ('specialfunction -> set_title','specialfunction',1,'p_specialfunction','capi.py',419),
  ('specialfunction -> get_event','specialfunction',1,'p_specialfunction','capi.py',420),
  ('specialfunction -> update','specialfunction',1,'p_specialfunction','capi.py',421),
  ('specialfunction -> set_dimension','specialfunction',1,'p_specialfunction','capi.py',422),
  ('specialfunction -> set_color','specialfunction',1,'p_specialfunction','capi.py',423),
  ('specialfunction -> create_object','specialfunction',1,'p_specialfunction','capi.py',424),
  ('specialfunction -> create_text','specialfunction',1,'p_specialfunction','capi.py',425),
  ('draw -> DRAW LEFTPAR recfuncexp RIGHTPAR','draw',4,'p_draw','capi.py',431),
  ('init -> INIT LEFTPAR RIGHTPAR','init',3,'p_init','capi.py',439),
  ('size -> ID DOT SIZE LEFTPAR RIGHTPAR','size',5,'p_size','capi.py',445),
  ('head -> ID DOT HEAD LEFTPAR RIGHTPAR','head',5,'p_head','capi.py',473),
  ('tail -> TAIL LEFTPAR RIGHTPAR','tail',3,'p_tail','capi.py',501),
  ('last -> LAST LEFTPAR RIGHTPAR','last',3,'p_last','capi.py',506),
  ('set_title -> SET_TITLE LEFTPAR expression RIGHTPAR','set_title',4,'p_set_title','capi.py',511),
  ('set_fill -> SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_fill',8,'p_set_fill','capi.py',524),
  ('set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR','set_dimension',6,'p_set_dimension','capi.py',535),
  ('update -> UPDATE LEFTPAR RIGHTPAR','update',3,'p_update','capi.py',546),
  ('get_event -> GET_EVENT LEFTPAR RIGHTPAR','get_event',3,'p_get_event','capi.py',552),
  ('set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_color',8,'p_set_color','capi.py',559),
  ('create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR','create_object',4,'p_create_object','capi.py',564),
  ('create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR','create_text',4,'p_create_text','capi.py',569),
  ('assign -> ID assign_action1 EQUAL assign_action2 expression','assign',5,'p_assign','capi.py',574),
  ('assign -> assign_list EQUAL assign_action2 expression','assign',4,'p_assign','capi.py',575),
  ('assign_action1 -> <empty>','assign_action1',0,'p_assign_action1','capi.py',636),
  ('assign_action2 -> <empty>','assign_action2',0,'p_assign_action2','capi.py',645),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2','condition',7,'p_condition','capi.py',651),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2','condition',10,'p_condition','capi.py',652),
  ('condition_action1 -> <empty>','condition_action1',0,'p_condition_action1','capi.py',657),
  ('condition_action2 -> <empty>','condition_action2',0,'p_condition_action2','capi.py',670),
  ('condition_action3 -> <empty>','condition_action3',0,'p_condition_action3','capi.py',677),
  ('loop -> for','loop',1,'p_loop','capi.py',687),
  ('loop -> while','loop',1,'p_loop','capi.py',688),
  ('for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3','for',14,'p_for','capi.py',693),
  ('for_action1 -> <empty>','for_action1',0,'p_for_action1','capi.py',701),
  ('for_action2 -> <empty>','for_action2',0,'p_for_action2','capi.py',709),
  ('for_action3 -> <empty>','for_action3',0,'p_for_action3','capi.py',723),
  ('while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3','while',9,'p_while','capi.py',737),
  ('while_action1 -> <empty>','while_action1',0,'p_while_action1','capi.py',746),
  ('while_action2 -> <empty>','while_action2',0,'p_while_action2','capi.py',752),
  ('while_action3 -> <empty>','while_action3',0,'p_while_action3','capi.py',766),
  ('function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',776),
  ('function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',777),
  ('function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',778),
  ('function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',779),
  ('startscope_action -> <empty>','startscope_action',0,'p_startscope_action','capi.py',805),
  ('function_action1 -> <empty>','function_action1',0,'p_function_action1','capi.py',824),
  ('function_action2 -> <empty>','function_action2',0,'p_function_action2','capi.py',830),
  ('function_action3 -> <empty>','function_action3',0,'p_function_action3','capi.py',841),
  ('recparams -> ID COLON type','recparams',3,'p_recparams','capi.py',850),
  ('recparams -> ID COLON type COMMA recparams','recparams',5,'p_recparams','capi.py',851),
  ('recfunc -> function recfunc','recfunc',2,'p_recfunc','capi.py',864),
  ('recfunc -> function','recfunc',1,'p_recfunc','capi.py',865),
  ('write -> PRINT LEFTPAR recwrite RIGHTPAR','write',4,'p_write','capi.py',870),
  ('recwrite -> expression action_recwrite_exp COMMA recwrite','recwrite',4,'p_recwrite','capi.py',875),
  ('recwrite -> STRING action_recwrite_cte COMMA recwrite','recwrite',4,'p_recwrite','capi.py',876),
  ('recwrite -> expression action_recwrite_exp','recwrite',2,'p_recwrite','capi.py',877),
  ('recwrite -> STRING action_recwrite_cte','recwrite',2,'p_recwrite','capi.py',878),
  ('action_recwrite_exp -> <empty>','action_recwrite_exp',0,'p_action_recwrite_exp','capi.py',882),
  ('action_recwrite_cte -> <empty>','action_recwrite_cte',0,'p_action_recwrite_cte','capi.py',891),
  ('return -> RETURN expression','return',2,'p_return','capi.py',898),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR','functioncall',6,'p_functioncall','capi.py',926),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR','functioncall',5,'p_functioncall','capi.py',927),
  ('function_call_action1 -> <empty>','function_call_action1',0,'p_function_call_action1','capi.py',960),
  ('function_call_action2 -> <empty>','function_call_action2',0,'p_function_call_action2','capi.py',971),
  ('recfuncexp -> expression COMMA recfuncexp','recfuncexp',3,'p_recfuncexp','capi.py',980),
  ('recfuncexp -> expression recfunc_action1','recfuncexp',2,'p_recfuncexp','capi.py',981),
  ('recfunc_action1 -> <empty>','recfunc_action1',0,'p_recfunc_action1','capi.py',992),
  ('expression -> exp RELOP relop_action1 exp relop_action2','expression',5,'p_expression','capi.py',1033),
  ('expression -> exp LOGIC logic_action1 exp logic_action2','expression',5,'p_expression','capi.py',1034),
  ('expression -> exp','expression',1,'p_expression','capi.py',1035),
  ('relop_action1 -> <empty>','relop_action1',0,'p_relop_action1','capi.py',1040),
  ('relop_action2 -> <empty>','relop_action2',0,'p_relop_action2','capi.py',1046),
  ('logic_action1 -> <empty>','logic_action1',0,'p_logic_action1','capi.py',1069),
  ('logic_action2 -> <empty>','logic_action2',0,'p_logic_action2','capi.py',1075),
  ('exp -> term exp_action recexp','exp',3,'p_exp','capi.py',1098),
  ('exp -> term exp_action','exp',2,'p_exp','capi.py',1099),
  ('exp_action -> <empty>','exp_action',0,'p_exp_action','capi.py',1104),
  ('recexp -> EX add_operator exp','recexp',3,'p_recexp','capi.py',1128),
  ('term -> factor term_action recterm','term',3,'p_term','capi.py',1133),
  ('term -> factor term_action','term',2,'p_term','capi.py',1134),
  ('term_action -> <empty>','term_action',0,'p_term_action','capi.py',1139),
  ('recterm -> TERMS add_operator term','recterm',3,'p_recterm','capi.py',1162),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','capi.py',1167),
  ('factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2','factor',5,'p_factor','capi.py',1173),
  ('factor -> EX cte','factor',2,'p_factor','capi.py',1174),
  ('factor -> cte','factor',1,'p_factor','capi.py',1175),
  ('factor_action1 -> <empty>','factor_action1',0,'p_factor_action1','capi.py',1189),
  ('factor_action2 -> <empty>','factor_action2',0,'p_factor_action2','capi.py',1195),
  ('type -> primitivetype','type',1,'p_type','capi.py',1201),
  ('type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1','type',8,'p_type','capi.py',1202),
  ('action_list1 -> <empty>','action_list1',0,'p_action_list1','capi.py',1211),
  ('primitivetype -> TINT','primitivetype',1,'p_primitivetype','capi.py',1220),
  ('primitivetype -> TFLOAT','primitivetype',1,'p_primitivetype','capi.py',1221),
  ('primitivetype -> TSTRING','primitivetype',1,'p_primitivetype','capi.py',1222),
  ('primitivetype -> TBOOL','primitivetype',1,'p_primitivetype','capi.py',1223),
  ('primitivetype -> TOBJECT','primitivetype',1,'p_primitivetype','capi.py',1224),
  ('assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','assign_list',6,'p_assign_list','capi.py',1231),
  ('listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','listaccess',6,'p_listaccess','capi.py',1243),
  ('list_action1 -> <empty>','list_action1',0,'p_list_action1','capi.py',1256),
  ('list_action_3 -> <empty>','list_action_3',0,'p_list_action_3','capi.py',1265),
  ('nestedvalue -> ID DOT ID','nestedvalue',3,'p_nestedvalue','capi.py',1287),
  ('nestedassign -> nestedvalue EQUAL expression','nestedassign',3,'p_nestedassign','capi.py',1292),
  ('cte -> <empty>','cte',0,'p_cte','capi.py',1297),
  ('cte -> id','cte',1,'p_cte','capi.py',1298),
  ('cte -> int','cte',1,'p_cte','capi.py',1299),
  ('cte -> float','cte',1,'p_cte','capi.py',1300),
  ('cte -> bool','cte',1,'p_cte','capi.py',1301),
  ('cte -> string','cte',1,'p_cte','capi.py',1302),
  ('cte -> nestedvalue','cte',1,'p_cte','capi.py',1303),
  ('cte -> functioncall','cte',1,'p_cte','capi.py',1304),
  ('cte -> listaccess','cte',1,'p_cte','capi.py',1305),
  ('cte -> specialfunction','cte',1,'p_cte','capi.py',1306),
  ('id -> ID','id',1,'p_id','capi.py',1312),
  ('string -> STRING','string',1,'p_string','capi.py',1332),
  ('int -> INT','int',1,'p_int','capi.py',1339),
  ('float -> FLOAT','float',1,'p_float','capi.py',1346),
  ('bool -> TRUE','bool',1,'p_bool','capi.py',1353),
  ('bool -> FALSE','bool',1,'p_bool','capi.py',1354),
]
