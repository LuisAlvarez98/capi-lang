
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BAR COLON COMMA COMMENT CREATE_OBJECT CREATE_TEXT DOT DRAW ELSE EQUAL EX FALSE FLOAT FOR FUNC GLOBAL HEAD ID IF INT LAST LEFTBRACKET LEFTKEY LEFTPAR LIST LOGIC MAIN OBJECT PRINT RELOP RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR RUN SEMICOLON SET_COLOR SET_DIMENSION SET_TITLE SIZE START STRING TAIL TBOOL TERMS TFLOAT TINT TLIST TOBJECT TRUE TSTRING VAR VOID WHILE \n    capi : capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n    \n    capi_action1 :\n    \n    capi_action2 :\n    \n    global : GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON\n    \n    start : VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    start_action1 :\n    \n    run : VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    run_action1 :\n    \n    main_cont :\n     \n    vars :    VAR recids COLON type EQUAL expression SEMICOLON vars \n            | VAR recids COLON type EQUAL expression SEMICOLON\n            | VAR recids COLON type SEMICOLON vars\n            | VAR recids COLON type SEMICOLON\n     \n    recids : ID \n           | ID COMMA recids \n    \n    block : COLON LEFTKEY recstatement RIGHTKEY SEMICOLON\n          | COLON LEFTKEY RIGHTKEY SEMICOLON\n     \n    recstatement : statement recstatement  \n                 | statement  \n    \n    statement : assign SEMICOLON\n              | condition\n              | vars\n              | loop\n              | write SEMICOLON\n              | return SEMICOLON\n              | functioncall SEMICOLON\n              | nestedassign SEMICOLON\n              | specialfunction SEMICOLON\n    \n    specialfunction : draw\n                    | size\n                    | head\n                    | tail\n                    | last\n                    | set_title\n                    | set_dimension\n                    | set_color\n                    | create_object\n                    | create_text\n    \n    draw : DRAW LEFTPAR recfuncexp RIGHTPAR\n        \n    \n    size : SIZE LEFTPAR RIGHTPAR\n    \n    head : HEAD LEFTPAR RIGHTPAR\n    \n    tail : TAIL LEFTPAR RIGHTPAR\n    \n    last : LAST LEFTPAR RIGHTPAR\n    \n    set_title : SET_TITLE LEFTPAR expression RIGHTPAR\n    \n    set_dimension : SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR\n    \n    set_color : SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    create_object : CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR\n    \n    create_text : CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR\n    \n    assign : ID assign_action1 EQUAL assign_action2 expression \n    \n    assign_action1 : \n    \n    assign_action2 : \n     condition : IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action2\n                  | IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action3 ELSE  block condition_action2\n     \n    condition_action1 :\n    \n    condition_action2 :\n    \n    condition_action3 :\n    \n    loop : for\n        | while\n    \n    for : FOR startscope_action LEFTPAR  assign  SEMICOLON for_action1 expression for_action2 SEMICOLON  assign  SEMICOLON RIGHTPAR block for_action3\n    \n    for_action1 : \n    \n    for_action2 : \n    \n    for_action3 : \n    \n    while : WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3\n    \n    while_action1 :\n    \n    while_action2 :\n    \n    while_action3 :\n    \n    function : type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n    \n    startscope_action : \n    \n    function_action1 :\n    \n    function_action2 :\n    \n    function_action3 :\n    \n    recparams : ID COLON type\n              | ID COLON type COMMA recparams\n    \n    recfunc : function recfunc\n            | function\n     \n    write : PRINT LEFTPAR recwrite RIGHTPAR \n     \n    recwrite : expression action_recwrite_exp COMMA recwrite \n               | STRING action_recwrite_cte COMMA  recwrite \n               | expression action_recwrite_exp \n               | STRING action_recwrite_cte\n    \n    action_recwrite_exp :\n    \n    action_recwrite_cte : \n    \n     return : RETURN expression\n    \n    functioncall : ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR \n                 | ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR \n    \n    function_call_action1 : \n    \n    function_call_action2 : \n    \n    recfuncexp : expression COMMA recfuncexp\n               | expression recfunc_action1\n    \n    recfunc_action1 :\n    \n    expression : exp RELOP relop_action1 exp relop_action2\n               | exp LOGIC logic_action1 exp logic_action2\n               | exp\n    \n    relop_action1 : \n    \n    relop_action2 : \n    \n    logic_action1 : \n    \n    logic_action2 : \n     \n    exp : term exp_action recexp\n        | term exp_action \n        \n    exp_action :\n     \n    recexp : EX add_operator exp \n     \n    term : factor term_action recterm \n         | factor term_action \n    \n    term_action :\n     \n    recterm : TERMS add_operator term\n    \n    add_operator :\n     factor : factor_action1 LEFTPAR expression RIGHTPAR factor_action2 \n               | EX cte \n               | cte \n    \n    factor_action1 :\n    \n    factor_action2 :\n    \n    type : primitivetype\n        | TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1\n    \n    action_list1 :\n    \n    primitivetype : TINT\n                  | TFLOAT\n                  | TSTRING\n                  | TBOOL\n                  | TOBJECT\n    \n    listaccess : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    list_action1 :\n    \n    list_action_3 :\n    \n    nestedvalue : ID DOT ID\n    \n    nestedassign : nestedvalue EQUAL expression\n    \n    cte :    \n        | id\n        | int\n        | float\n        | bool\n        | string\n        | nestedvalue\n        | functioncall\n        | listaccess\n        | specialfunction\n    \n    id : ID\n    \n    string : STRING\n    \n    int : INT\n    \n    float : FLOAT\n    \n    bool : TRUE \n         | FALSE\n    '
    
_lr_action_items = {'MAIN':([0,2,3,4,7,17,22,61,142,145,238,240,255,267,],[-5,5,18,19,-81,26,-80,-7,-71,-73,-70,-20,-72,-19,]),'GLOBAL':([0,2,],[-5,6,]),'VOID':([0,2,3,7,29,35,36,37,44,45,46,47,55,56,57,61,105,142,145,238,240,255,266,267,],[-5,9,9,9,38,38,38,-6,38,-6,-6,59,-6,59,59,-7,59,-71,-73,-70,-20,-72,-8,-19,]),'TLIST':([0,2,3,7,61,62,113,142,145,238,240,255,267,],[-5,11,11,11,-7,11,11,-71,-73,-70,-20,-72,-19,]),'TINT':([0,2,3,7,25,61,62,113,142,145,238,240,255,267,],[-5,12,12,12,12,-7,12,12,-71,-73,-70,-20,-72,-19,]),'TFLOAT':([0,2,3,7,25,61,62,113,142,145,238,240,255,267,],[-5,13,13,13,13,-7,13,13,-71,-73,-70,-20,-72,-19,]),'TSTRING':([0,2,3,7,25,61,62,113,142,145,238,240,255,267,],[-5,14,14,14,14,-7,14,14,-71,-73,-70,-20,-72,-19,]),'TBOOL':([0,2,3,7,25,61,62,113,142,145,238,240,255,267,],[-5,15,15,15,15,-7,15,15,-71,-73,-70,-20,-72,-19,]),'TOBJECT':([0,2,3,7,25,61,62,113,142,145,238,240,255,267,],[-5,16,16,16,16,-7,16,16,-71,-73,-70,-20,-72,-19,]),'$end':([1,135,168,169,194,],[0,-4,-3,-2,-1,]),'COLON':([5,6,18,19,26,50,51,64,66,68,112,115,117,141,144,175,177,196,199,221,236,265,282,294,307,308,317,],[20,21,27,28,34,62,-17,113,-77,-77,-18,143,143,-76,-76,-77,-77,-12,143,143,143,-12,143,143,143,143,143,]),'FUNC':([8,9,10,12,13,14,15,16,38,59,118,146,],[23,24,-118,-121,-122,-123,-124,-125,48,109,-120,-119,]),'EQUAL':([10,12,13,14,15,16,111,118,146,147,212,218,248,289,],[-118,-121,-122,-123,-124,-125,138,-120,-119,-129,-53,252,268,-53,]),'SEMICOLON':([10,12,13,14,15,16,49,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,108,111,118,133,134,138,146,147,152,153,154,156,157,158,159,160,161,167,172,180,183,184,185,186,188,189,192,193,201,203,207,208,209,210,211,217,223,226,227,228,229,230,231,239,251,252,256,257,258,259,260,261,262,263,268,273,276,277,278,279,280,283,285,288,291,293,297,302,306,309,315,],[-118,-121,-122,-123,-124,-125,61,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-143,-144,-145,-146,-142,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,135,139,-120,168,169,-131,-119,-129,-99,-106,-110,-131,-115,-43,-44,-45,-46,194,197,-42,-100,-102,-105,-109,-114,-47,-50,-51,240,242,243,244,245,246,247,-131,-91,-131,-131,-104,-112,-108,-112,267,-89,-131,-90,-126,-101,-103,-131,-131,-117,-48,-54,-130,-97,-98,-107,-111,-113,-131,-82,297,-49,-52,-63,-131,-64,312,316,]),'COMMA':([10,12,13,14,15,16,51,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,118,122,128,129,130,131,140,146,147,148,151,152,153,154,156,157,158,159,160,161,163,164,178,180,181,183,184,185,186,188,189,191,192,193,223,226,227,228,229,230,231,234,250,256,257,258,259,260,261,262,263,271,272,276,277,278,279,280,286,287,291,295,296,],[-118,-121,-122,-123,-124,-125,63,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-143,-144,-145,-146,-142,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-120,-131,-131,-131,-131,-131,174,-119,-129,-93,181,-99,-106,-110,-131,-115,-43,-44,-45,-46,190,191,-131,-42,-131,-100,-102,-105,-109,-114,-47,-131,-50,-51,-91,-131,-131,-104,-112,-108,-112,264,-131,-90,-126,-101,-103,-131,-131,-117,-48,-87,-88,-97,-98,-107,-111,-113,295,296,-49,-131,-131,]),'RIGHTPAR':([10,12,13,14,15,16,52,53,65,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,114,116,118,122,123,124,125,126,127,130,131,140,146,147,148,150,151,152,153,154,156,157,158,159,160,161,162,165,166,171,178,180,181,182,183,184,185,186,187,188,189,190,192,193,198,222,223,225,226,227,228,229,230,231,232,233,235,249,250,256,257,258,259,260,261,262,263,264,269,270,271,272,276,277,278,279,280,281,284,286,287,290,291,295,296,298,300,301,303,316,],[-118,-121,-122,-123,-124,-125,66,68,-75,-75,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-143,-144,-145,-146,-142,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,141,144,-120,-131,158,159,160,161,-131,-131,-131,-78,-119,-129,-93,180,-96,-99,-106,-110,-131,-115,-43,-44,-45,-46,189,192,193,196,223,-42,-131,-95,-100,-102,-105,-109,-131,-114,-47,-131,-50,-51,-79,256,-91,-94,-131,-131,-104,-112,-108,-112,262,263,265,-131,-131,-90,-126,-101,-103,-131,-131,-117,-48,-131,-57,285,-87,-88,-97,-98,-107,-111,-113,291,294,-85,-86,-131,-49,-131,-131,-68,-83,-84,307,317,]),'BAR':([11,12,13,14,15,16,33,],[25,-121,-122,-123,-124,-125,43,]),'LEFTKEY':([20,21,27,28,34,143,],[29,30,35,36,44,176,]),'ID':([23,24,40,52,53,54,63,119,122,127,128,129,130,131,138,139,148,149,156,173,174,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,274,283,290,295,296,297,299,302,304,310,311,312,313,314,318,319,],[31,32,51,64,64,79,51,147,79,79,79,79,79,79,79,-16,-93,79,79,-15,64,212,79,79,-100,-102,79,79,79,-14,212,-24,-25,-26,-60,-61,79,79,79,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,79,79,79,79,79,79,-19,-54,289,79,79,79,79,-63,-58,79,-55,-69,-58,289,-66,-56,-65,-62,]),'VAR':([30,139,173,176,197,202,204,205,206,214,215,237,240,242,243,244,245,246,247,267,299,304,310,311,313,314,318,319,],[40,40,-15,40,40,40,-24,-25,-26,-60,-61,-13,-20,-23,-27,-28,-29,-30,-31,-19,-58,-55,-69,-58,-66,-56,-65,-62,]),'LEFTPAR':([31,32,41,42,79,95,96,97,98,99,100,101,102,103,104,110,120,122,127,128,129,130,131,137,138,148,149,155,170,178,181,183,184,187,190,191,195,212,213,216,217,219,220,226,227,229,231,249,250,252,253,254,260,261,264,268,275,283,290,295,296,297,302,],[-74,-74,52,53,-92,122,123,124,125,126,127,128,129,130,131,-74,148,-116,-116,-116,-116,-116,-116,171,-116,-93,-116,187,-74,-116,-116,-100,-102,-116,-116,-116,235,-92,249,250,-116,-74,-74,-116,-116,-112,-112,-116,-116,-116,274,-67,-116,-116,-116,-54,290,-116,-116,-116,-116,-63,-116,]),'RIGHTKEY':([39,58,106,107,132,139,173,176,197,200,202,204,205,206,214,215,237,240,241,242,243,244,245,246,247,267,292,299,304,310,311,313,314,318,319,],[49,108,133,134,167,-16,-15,201,-14,239,-22,-24,-25,-26,-60,-61,-13,-20,-21,-23,-27,-28,-29,-30,-31,-19,-10,-58,-55,-69,-58,-66,-56,-65,-62,]),'LEFTBRACKET':([43,79,121,],[54,-127,149,]),'START':([48,60,],[-9,110,]),'RIGHTBRACKET':([54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,147,149,152,153,154,156,157,158,159,160,161,179,180,183,184,185,186,188,189,192,193,223,224,226,227,228,229,230,231,256,257,258,259,260,261,262,263,276,277,278,279,280,291,],[-131,118,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-143,-144,-145,-146,-142,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-129,-131,-99,-106,-110,-131,-115,-43,-44,-45,-46,-128,-42,-100,-102,-105,-109,-114,-47,-50,-51,-91,257,-131,-131,-104,-112,-108,-112,-90,-126,-101,-103,-131,-131,-117,-48,-97,-98,-107,-111,-113,-49,]),'INT':([54,122,127,128,129,130,131,138,148,149,156,178,181,183,184,187,190,191,217,226,227,229,231,249,250,252,260,261,264,268,283,290,295,296,297,302,],[80,80,80,80,80,80,80,80,-93,80,80,80,80,-100,-102,80,80,80,80,80,80,-112,-112,80,80,80,80,80,80,-54,80,80,80,80,-63,80,]),'FLOAT':([54,122,127,128,129,130,131,138,148,149,156,178,181,183,184,187,190,191,217,226,227,229,231,249,250,252,260,261,264,268,283,290,295,296,297,302,],[81,81,81,81,81,81,81,81,-93,81,81,81,81,-100,-102,81,81,81,81,81,81,-112,-112,81,81,81,81,81,81,-54,81,81,81,81,-63,81,]),'TRUE':([54,122,127,128,129,130,131,138,148,149,156,178,181,183,184,187,190,191,217,226,227,229,231,249,250,252,260,261,264,268,283,290,295,296,297,302,],[82,82,82,82,82,82,82,82,-93,82,82,82,82,-100,-102,82,82,82,82,82,82,-112,-112,82,82,82,82,82,82,-54,82,82,82,82,-63,82,]),'FALSE':([54,122,127,128,129,130,131,138,148,149,156,178,181,183,184,187,190,191,217,226,227,229,231,249,250,252,260,261,264,268,283,290,295,296,297,302,],[83,83,83,83,83,83,83,83,-93,83,83,83,83,-100,-102,83,83,83,83,83,83,-112,-112,83,83,83,83,83,83,-54,83,83,83,83,-63,83,]),'STRING':([54,122,127,128,129,130,131,138,148,149,156,178,181,183,184,187,190,191,217,226,227,229,231,249,250,252,260,261,264,268,283,290,295,296,297,302,],[84,84,84,84,84,84,84,84,-93,84,84,84,84,-100,-102,84,84,84,84,84,84,-112,-112,84,272,84,84,84,84,-54,84,84,272,272,-63,84,]),'DRAW':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[95,95,95,95,95,95,95,95,-16,-93,95,95,-15,95,95,95,-100,-102,95,95,95,-14,95,-24,-25,-26,-60,-61,95,95,95,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,95,95,95,95,95,95,-19,-54,95,95,95,95,-63,-58,95,-55,-69,-58,-66,-56,-65,-62,]),'SIZE':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[96,96,96,96,96,96,96,96,-16,-93,96,96,-15,96,96,96,-100,-102,96,96,96,-14,96,-24,-25,-26,-60,-61,96,96,96,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,96,96,96,96,96,96,-19,-54,96,96,96,96,-63,-58,96,-55,-69,-58,-66,-56,-65,-62,]),'HEAD':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[97,97,97,97,97,97,97,97,-16,-93,97,97,-15,97,97,97,-100,-102,97,97,97,-14,97,-24,-25,-26,-60,-61,97,97,97,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,97,97,97,97,97,97,-19,-54,97,97,97,97,-63,-58,97,-55,-69,-58,-66,-56,-65,-62,]),'TAIL':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[98,98,98,98,98,98,98,98,-16,-93,98,98,-15,98,98,98,-100,-102,98,98,98,-14,98,-24,-25,-26,-60,-61,98,98,98,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,98,98,98,98,98,98,-19,-54,98,98,98,98,-63,-58,98,-55,-69,-58,-66,-56,-65,-62,]),'LAST':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[99,99,99,99,99,99,99,99,-16,-93,99,99,-15,99,99,99,-100,-102,99,99,99,-14,99,-24,-25,-26,-60,-61,99,99,99,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,99,99,99,99,99,99,-19,-54,99,99,99,99,-63,-58,99,-55,-69,-58,-66,-56,-65,-62,]),'SET_TITLE':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[100,100,100,100,100,100,100,100,-16,-93,100,100,-15,100,100,100,-100,-102,100,100,100,-14,100,-24,-25,-26,-60,-61,100,100,100,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,100,100,100,100,100,100,-19,-54,100,100,100,100,-63,-58,100,-55,-69,-58,-66,-56,-65,-62,]),'SET_DIMENSION':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[101,101,101,101,101,101,101,101,-16,-93,101,101,-15,101,101,101,-100,-102,101,101,101,-14,101,-24,-25,-26,-60,-61,101,101,101,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,101,101,101,101,101,101,-19,-54,101,101,101,101,-63,-58,101,-55,-69,-58,-66,-56,-65,-62,]),'SET_COLOR':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[102,102,102,102,102,102,102,102,-16,-93,102,102,-15,102,102,102,-100,-102,102,102,102,-14,102,-24,-25,-26,-60,-61,102,102,102,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,102,102,102,102,102,102,-19,-54,102,102,102,102,-63,-58,102,-55,-69,-58,-66,-56,-65,-62,]),'CREATE_OBJECT':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[103,103,103,103,103,103,103,103,-16,-93,103,103,-15,103,103,103,-100,-102,103,103,103,-14,103,-24,-25,-26,-60,-61,103,103,103,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,103,103,103,103,103,103,-19,-54,103,103,103,103,-63,-58,103,-55,-69,-58,-66,-56,-65,-62,]),'CREATE_TEXT':([54,122,127,128,129,130,131,138,139,148,149,156,173,176,178,181,183,184,187,190,191,197,202,204,205,206,214,215,217,226,227,229,231,237,240,242,243,244,245,246,247,249,250,252,260,261,264,267,268,283,290,295,296,297,299,302,304,310,311,313,314,318,319,],[104,104,104,104,104,104,104,104,-16,-93,104,104,-15,104,104,104,-100,-102,104,104,104,-14,104,-24,-25,-26,-60,-61,104,104,104,-112,-112,-13,-20,-23,-27,-28,-29,-30,-31,104,104,104,104,104,104,-19,-54,104,104,104,104,-63,-58,104,-55,-69,-58,-66,-56,-65,-62,]),'TERMS':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,122,127,128,129,130,131,138,147,148,149,154,156,157,158,159,160,161,178,180,181,183,184,186,187,188,189,190,191,192,193,217,223,226,227,229,231,249,250,252,256,257,260,261,262,263,264,268,272,280,283,290,291,295,296,297,302,],[-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-143,-144,-145,-146,-142,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-131,-131,-131,-131,-131,-131,-131,-129,-93,-131,-110,-131,-115,-43,-44,-45,-46,-131,-42,-131,-100,-102,231,-131,-114,-47,-131,-131,-50,-51,-131,-91,-131,-131,-112,-112,-131,-131,-131,-90,-126,-131,-131,-117,-48,-131,-54,-142,-113,-131,-131,-49,-131,-131,-63,-131,]),'EX':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,122,127,128,129,130,131,138,147,148,149,153,154,156,157,158,159,160,161,178,180,181,183,184,185,186,187,188,189,190,191,192,193,217,223,226,227,229,230,231,249,250,252,256,257,260,261,262,263,264,268,272,279,280,283,290,291,295,296,297,302,],[-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-143,-144,-145,-146,-142,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,156,156,156,156,156,156,156,-129,-93,156,-106,-110,-131,-115,-43,-44,-45,-46,156,-42,156,-100,-102,229,-109,156,-114,-47,156,156,-50,-51,156,-91,156,156,-112,-108,-112,156,156,156,-90,-126,156,156,-117,-48,156,-54,-142,-111,-113,156,156,-49,156,156,-63,156,]),'RELOP':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,122,127,128,129,130,131,138,147,148,149,152,153,154,156,157,158,159,160,161,178,180,181,185,186,187,188,189,190,191,192,193,217,223,228,229,230,231,249,250,252,256,257,260,261,262,263,264,268,272,278,279,280,283,290,291,295,296,297,302,],[-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-143,-144,-145,-146,-142,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-131,-131,-131,-131,-131,-131,-131,-129,-93,-131,183,-106,-110,-131,-115,-43,-44,-45,-46,-131,-42,-131,-105,-109,-131,-114,-47,-131,-131,-50,-51,-131,-91,-104,-112,-108,-112,-131,-131,-131,-90,-126,-131,-131,-117,-48,-131,-54,-142,-107,-111,-113,-131,-131,-49,-131,-131,-63,-131,]),'LOGIC':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,122,127,128,129,130,131,138,147,148,149,152,153,154,156,157,158,159,160,161,178,180,181,185,186,187,188,189,190,191,192,193,217,223,228,229,230,231,249,250,252,256,257,260,261,262,263,264,268,272,278,279,280,283,290,291,295,296,297,302,],[-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-143,-144,-145,-146,-142,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-131,-131,-131,-131,-131,-131,-131,-129,-93,-131,184,-106,-110,-131,-115,-43,-44,-45,-46,-131,-42,-131,-105,-109,-131,-114,-47,-131,-131,-50,-51,-131,-91,-104,-112,-108,-112,-131,-131,-131,-90,-126,-131,-131,-117,-48,-131,-54,-142,-107,-111,-113,-131,-131,-49,-131,-131,-63,-131,]),'DOT':([79,212,],[119,119,]),'RUN':([109,136,],[-11,170,]),'IF':([139,173,176,197,202,204,205,206,214,215,237,240,242,243,244,245,246,247,267,299,304,310,311,313,314,318,319,],[-16,-15,213,-14,213,-24,-25,-26,-60,-61,-13,-20,-23,-27,-28,-29,-30,-31,-19,-58,-55,-69,-58,-66,-56,-65,-62,]),'PRINT':([139,173,176,197,202,204,205,206,214,215,237,240,242,243,244,245,246,247,267,299,304,310,311,313,314,318,319,],[-16,-15,216,-14,216,-24,-25,-26,-60,-61,-13,-20,-23,-27,-28,-29,-30,-31,-19,-58,-55,-69,-58,-66,-56,-65,-62,]),'RETURN':([139,173,176,197,202,204,205,206,214,215,237,240,242,243,244,245,246,247,267,299,304,310,311,313,314,318,319,],[-16,-15,217,-14,217,-24,-25,-26,-60,-61,-13,-20,-23,-27,-28,-29,-30,-31,-19,-58,-55,-69,-58,-66,-56,-65,-62,]),'FOR':([139,173,176,197,202,204,205,206,214,215,237,240,242,243,244,245,246,247,267,299,304,310,311,313,314,318,319,],[-16,-15,219,-14,219,-24,-25,-26,-60,-61,-13,-20,-23,-27,-28,-29,-30,-31,-19,-58,-55,-69,-58,-66,-56,-65,-62,]),'WHILE':([139,173,176,197,202,204,205,206,214,215,237,240,242,243,244,245,246,247,267,299,304,310,311,313,314,318,319,],[-16,-15,220,-14,220,-24,-25,-26,-60,-61,-13,-20,-23,-27,-28,-29,-30,-31,-19,-58,-55,-69,-58,-66,-56,-65,-62,]),'ELSE':([240,267,299,305,],[-20,-19,-59,308,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'capi':([0,],[1,]),'capi_action1':([0,],[2,]),'global':([2,],[3,]),'recfunc':([2,3,7,],[4,17,22,]),'function':([2,3,7,],[7,7,7,]),'type':([2,3,7,62,113,],[8,8,8,111,140,]),'primitivetype':([2,3,7,25,62,113,],[10,10,10,33,10,10,]),'start':([29,35,36,44,],[37,45,46,55,]),'vars':([30,139,176,197,202,],[39,173,205,237,205,]),'startscope_action':([31,32,110,170,219,220,],[41,42,137,195,253,254,]),'capi_action2':([37,45,46,55,],[47,56,57,105,]),'recids':([40,63,],[50,112,]),'run':([47,56,57,105,],[58,106,107,132,]),'start_action1':([48,],[60,]),'recparams':([52,53,174,],[65,67,198,]),'cte':([54,122,127,128,129,130,131,138,149,156,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[69,157,157,157,157,157,157,157,157,188,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'id':([54,122,127,128,129,130,131,138,149,156,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'int':([54,122,127,128,129,130,131,138,149,156,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'float':([54,122,127,128,129,130,131,138,149,156,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'bool':([54,122,127,128,129,130,131,138,149,156,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'string':([54,122,127,128,129,130,131,138,149,156,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'nestedvalue':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[75,75,75,75,75,75,75,75,75,75,218,75,75,75,75,75,218,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'functioncall':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[76,76,76,76,76,76,76,76,76,76,209,76,76,76,76,76,209,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'listaccess':([54,122,127,128,129,130,131,138,149,156,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'specialfunction':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[78,78,78,78,78,78,78,78,78,78,211,78,78,78,78,78,211,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'draw':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'size':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'head':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'tail':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'last':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'set_title':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'set_dimension':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'set_color':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'create_object':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'create_text':([54,122,127,128,129,130,131,138,149,156,176,178,181,187,190,191,202,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'function_action1':([65,67,],[114,116,]),'function_action3':([66,68,175,177,],[115,117,199,221,]),'function_call_action1':([79,212,],[120,120,]),'list_action1':([79,],[121,]),'run_action1':([109,],[136,]),'block':([115,117,199,221,236,282,294,307,308,317,],[142,145,238,255,266,292,299,310,311,318,]),'action_list1':([118,],[146,]),'recfuncexp':([122,130,131,178,181,],[150,165,166,222,225,]),'expression':([122,127,128,129,130,131,138,149,178,181,187,190,191,217,249,250,252,264,283,290,295,296,302,],[151,162,163,164,151,151,172,179,151,151,232,233,234,251,269,271,273,281,293,298,271,271,306,]),'exp':([122,127,128,129,130,131,138,149,178,181,187,190,191,217,226,227,249,250,252,260,264,283,290,295,296,302,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,258,259,152,152,152,278,152,152,152,152,152,152,]),'term':([122,127,128,129,130,131,138,149,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,279,153,153,153,153,153,153,]),'factor':([122,127,128,129,130,131,138,149,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'factor_action1':([122,127,128,129,130,131,138,149,178,181,187,190,191,217,226,227,249,250,252,260,261,264,283,290,295,296,302,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'function_action2':([141,144,],[175,177,]),'function_call_action2':([148,],[178,]),'recfunc_action1':([151,],[182,]),'exp_action':([153,],[185,]),'term_action':([154,],[186,]),'recstatement':([176,202,],[200,241,]),'statement':([176,202,],[202,202,]),'assign':([176,202,274,312,],[203,203,288,315,]),'condition':([176,202,],[204,204,]),'loop':([176,202,],[206,206,]),'write':([176,202,],[207,207,]),'return':([176,202,],[208,208,]),'nestedassign':([176,202,],[210,210,]),'for':([176,202,],[214,214,]),'while':([176,202,],[215,215,]),'list_action_3':([179,],[224,]),'relop_action1':([183,],[226,]),'logic_action1':([184,],[227,]),'recexp':([185,],[228,]),'recterm':([186,],[230,]),'main_cont':([196,265,],[236,282,]),'assign_action1':([212,289,],[248,248,]),'add_operator':([229,231,],[260,261,]),'recwrite':([250,295,296,],[270,300,301,]),'while_action1':([254,],[275,]),'relop_action2':([258,],[276,]),'logic_action2':([259,],[277,]),'factor_action2':([262,],[280,]),'assign_action2':([268,],[283,]),'condition_action1':([269,],[284,]),'action_recwrite_exp':([271,],[286,]),'action_recwrite_cte':([272,],[287,]),'for_action1':([297,],[302,]),'while_action2':([298,],[303,]),'condition_action2':([299,311,],[304,314,]),'condition_action3':([299,],[305,]),'for_action2':([306,],[309,]),'while_action3':([310,],[313,]),'for_action3':([318,],[319,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> capi","S'",1,None,None,None),
  ('capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',11,'p_capi','capi.py',247),
  ('capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',248),
  ('capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',249),
  ('capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',9,'p_capi','capi.py',250),
  ('capi_action1 -> <empty>','capi_action1',0,'p_capi_action1','capi.py',255),
  ('capi_action2 -> <empty>','capi_action2',0,'p_capi_action2','capi.py',262),
  ('global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON','global',6,'p_global','capi.py',268),
  ('start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block','start',9,'p_start','capi.py',277),
  ('start_action1 -> <empty>','start_action1',0,'p_start_action1','capi.py',293),
  ('run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block','run',9,'p_run','capi.py',300),
  ('run_action1 -> <empty>','run_action1',0,'p_run_action1','capi.py',315),
  ('main_cont -> <empty>','main_cont',0,'p_main_cont','capi.py',321),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON vars','vars',8,'p_vars','capi.py',327),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON','vars',7,'p_vars','capi.py',328),
  ('vars -> VAR recids COLON type SEMICOLON vars','vars',6,'p_vars','capi.py',329),
  ('vars -> VAR recids COLON type SEMICOLON','vars',5,'p_vars','capi.py',330),
  ('recids -> ID','recids',1,'p_recids','capi.py',363),
  ('recids -> ID COMMA recids','recids',3,'p_recids','capi.py',364),
  ('block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON','block',5,'p_block','capi.py',374),
  ('block -> COLON LEFTKEY RIGHTKEY SEMICOLON','block',4,'p_block','capi.py',375),
  ('recstatement -> statement recstatement','recstatement',2,'p_recstatement','capi.py',380),
  ('recstatement -> statement','recstatement',1,'p_recstatement','capi.py',381),
  ('statement -> assign SEMICOLON','statement',2,'p_statement','capi.py',387),
  ('statement -> condition','statement',1,'p_statement','capi.py',388),
  ('statement -> vars','statement',1,'p_statement','capi.py',389),
  ('statement -> loop','statement',1,'p_statement','capi.py',390),
  ('statement -> write SEMICOLON','statement',2,'p_statement','capi.py',391),
  ('statement -> return SEMICOLON','statement',2,'p_statement','capi.py',392),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement','capi.py',393),
  ('statement -> nestedassign SEMICOLON','statement',2,'p_statement','capi.py',394),
  ('statement -> specialfunction SEMICOLON','statement',2,'p_statement','capi.py',395),
  ('specialfunction -> draw','specialfunction',1,'p_specialfunction','capi.py',402),
  ('specialfunction -> size','specialfunction',1,'p_specialfunction','capi.py',403),
  ('specialfunction -> head','specialfunction',1,'p_specialfunction','capi.py',404),
  ('specialfunction -> tail','specialfunction',1,'p_specialfunction','capi.py',405),
  ('specialfunction -> last','specialfunction',1,'p_specialfunction','capi.py',406),
  ('specialfunction -> set_title','specialfunction',1,'p_specialfunction','capi.py',407),
  ('specialfunction -> set_dimension','specialfunction',1,'p_specialfunction','capi.py',408),
  ('specialfunction -> set_color','specialfunction',1,'p_specialfunction','capi.py',409),
  ('specialfunction -> create_object','specialfunction',1,'p_specialfunction','capi.py',410),
  ('specialfunction -> create_text','specialfunction',1,'p_specialfunction','capi.py',411),
  ('draw -> DRAW LEFTPAR recfuncexp RIGHTPAR','draw',4,'p_draw','capi.py',416),
  ('size -> SIZE LEFTPAR RIGHTPAR','size',3,'p_size','capi.py',422),
  ('head -> HEAD LEFTPAR RIGHTPAR','head',3,'p_head','capi.py',427),
  ('tail -> TAIL LEFTPAR RIGHTPAR','tail',3,'p_tail','capi.py',432),
  ('last -> LAST LEFTPAR RIGHTPAR','last',3,'p_last','capi.py',437),
  ('set_title -> SET_TITLE LEFTPAR expression RIGHTPAR','set_title',4,'p_set_title','capi.py',442),
  ('set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR','set_dimension',6,'p_set_dimension','capi.py',447),
  ('set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_color',8,'p_set_color','capi.py',452),
  ('create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR','create_object',4,'p_create_object','capi.py',457),
  ('create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR','create_text',4,'p_create_text','capi.py',462),
  ('assign -> ID assign_action1 EQUAL assign_action2 expression','assign',5,'p_assign','capi.py',467),
  ('assign_action1 -> <empty>','assign_action1',0,'p_assign_action1','capi.py',497),
  ('assign_action2 -> <empty>','assign_action2',0,'p_assign_action2','capi.py',506),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2','condition',7,'p_condition','capi.py',512),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2','condition',10,'p_condition','capi.py',513),
  ('condition_action1 -> <empty>','condition_action1',0,'p_condition_action1','capi.py',521),
  ('condition_action2 -> <empty>','condition_action2',0,'p_condition_action2','capi.py',533),
  ('condition_action3 -> <empty>','condition_action3',0,'p_condition_action3','capi.py',540),
  ('loop -> for','loop',1,'p_loop','capi.py',549),
  ('loop -> while','loop',1,'p_loop','capi.py',550),
  ('for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3','for',14,'p_for','capi.py',555),
  ('for_action1 -> <empty>','for_action1',0,'p_for_action1','capi.py',563),
  ('for_action2 -> <empty>','for_action2',0,'p_for_action2','capi.py',569),
  ('for_action3 -> <empty>','for_action3',0,'p_for_action3','capi.py',582),
  ('while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3','while',9,'p_while','capi.py',592),
  ('while_action1 -> <empty>','while_action1',0,'p_while_action1','capi.py',601),
  ('while_action2 -> <empty>','while_action2',0,'p_while_action2','capi.py',607),
  ('while_action3 -> <empty>','while_action3',0,'p_while_action3','capi.py',620),
  ('function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',629),
  ('function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',630),
  ('function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',631),
  ('function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',632),
  ('startscope_action -> <empty>','startscope_action',0,'p_startscope_action','capi.py',658),
  ('function_action1 -> <empty>','function_action1',0,'p_function_action1','capi.py',672),
  ('function_action2 -> <empty>','function_action2',0,'p_function_action2','capi.py',678),
  ('function_action3 -> <empty>','function_action3',0,'p_function_action3','capi.py',689),
  ('recparams -> ID COLON type','recparams',3,'p_recparams','capi.py',695),
  ('recparams -> ID COLON type COMMA recparams','recparams',5,'p_recparams','capi.py',696),
  ('recfunc -> function recfunc','recfunc',2,'p_recfunc','capi.py',709),
  ('recfunc -> function','recfunc',1,'p_recfunc','capi.py',710),
  ('write -> PRINT LEFTPAR recwrite RIGHTPAR','write',4,'p_write','capi.py',715),
  ('recwrite -> expression action_recwrite_exp COMMA recwrite','recwrite',4,'p_recwrite','capi.py',720),
  ('recwrite -> STRING action_recwrite_cte COMMA recwrite','recwrite',4,'p_recwrite','capi.py',721),
  ('recwrite -> expression action_recwrite_exp','recwrite',2,'p_recwrite','capi.py',722),
  ('recwrite -> STRING action_recwrite_cte','recwrite',2,'p_recwrite','capi.py',723),
  ('action_recwrite_exp -> <empty>','action_recwrite_exp',0,'p_action_recwrite_exp','capi.py',727),
  ('action_recwrite_cte -> <empty>','action_recwrite_cte',0,'p_action_recwrite_cte','capi.py',736),
  ('return -> RETURN expression','return',2,'p_return','capi.py',743),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR','functioncall',6,'p_functioncall','capi.py',770),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR','functioncall',5,'p_functioncall','capi.py',771),
  ('function_call_action1 -> <empty>','function_call_action1',0,'p_function_call_action1','capi.py',804),
  ('function_call_action2 -> <empty>','function_call_action2',0,'p_function_call_action2','capi.py',815),
  ('recfuncexp -> expression COMMA recfuncexp','recfuncexp',3,'p_recfuncexp','capi.py',824),
  ('recfuncexp -> expression recfunc_action1','recfuncexp',2,'p_recfuncexp','capi.py',825),
  ('recfunc_action1 -> <empty>','recfunc_action1',0,'p_recfunc_action1','capi.py',836),
  ('expression -> exp RELOP relop_action1 exp relop_action2','expression',5,'p_expression','capi.py',877),
  ('expression -> exp LOGIC logic_action1 exp logic_action2','expression',5,'p_expression','capi.py',878),
  ('expression -> exp','expression',1,'p_expression','capi.py',879),
  ('relop_action1 -> <empty>','relop_action1',0,'p_relop_action1','capi.py',884),
  ('relop_action2 -> <empty>','relop_action2',0,'p_relop_action2','capi.py',890),
  ('logic_action1 -> <empty>','logic_action1',0,'p_logic_action1','capi.py',913),
  ('logic_action2 -> <empty>','logic_action2',0,'p_logic_action2','capi.py',919),
  ('exp -> term exp_action recexp','exp',3,'p_exp','capi.py',942),
  ('exp -> term exp_action','exp',2,'p_exp','capi.py',943),
  ('exp_action -> <empty>','exp_action',0,'p_exp_action','capi.py',948),
  ('recexp -> EX add_operator exp','recexp',3,'p_recexp','capi.py',972),
  ('term -> factor term_action recterm','term',3,'p_term','capi.py',977),
  ('term -> factor term_action','term',2,'p_term','capi.py',978),
  ('term_action -> <empty>','term_action',0,'p_term_action','capi.py',983),
  ('recterm -> TERMS add_operator term','recterm',3,'p_recterm','capi.py',1006),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','capi.py',1011),
  ('factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2','factor',5,'p_factor','capi.py',1017),
  ('factor -> EX cte','factor',2,'p_factor','capi.py',1018),
  ('factor -> cte','factor',1,'p_factor','capi.py',1019),
  ('factor_action1 -> <empty>','factor_action1',0,'p_factor_action1','capi.py',1033),
  ('factor_action2 -> <empty>','factor_action2',0,'p_factor_action2','capi.py',1039),
  ('type -> primitivetype','type',1,'p_type','capi.py',1045),
  ('type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1','type',8,'p_type','capi.py',1046),
  ('action_list1 -> <empty>','action_list1',0,'p_action_list1','capi.py',1055),
  ('primitivetype -> TINT','primitivetype',1,'p_primitivetype','capi.py',1064),
  ('primitivetype -> TFLOAT','primitivetype',1,'p_primitivetype','capi.py',1065),
  ('primitivetype -> TSTRING','primitivetype',1,'p_primitivetype','capi.py',1066),
  ('primitivetype -> TBOOL','primitivetype',1,'p_primitivetype','capi.py',1067),
  ('primitivetype -> TOBJECT','primitivetype',1,'p_primitivetype','capi.py',1068),
  ('listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','listaccess',6,'p_listaccess','capi.py',1074),
  ('list_action1 -> <empty>','list_action1',0,'p_list_action1','capi.py',1079),
  ('list_action_3 -> <empty>','list_action_3',0,'p_list_action_3','capi.py',1097),
  ('nestedvalue -> ID DOT ID','nestedvalue',3,'p_nestedvalue','capi.py',1118),
  ('nestedassign -> nestedvalue EQUAL expression','nestedassign',3,'p_nestedassign','capi.py',1123),
  ('cte -> <empty>','cte',0,'p_cte','capi.py',1128),
  ('cte -> id','cte',1,'p_cte','capi.py',1129),
  ('cte -> int','cte',1,'p_cte','capi.py',1130),
  ('cte -> float','cte',1,'p_cte','capi.py',1131),
  ('cte -> bool','cte',1,'p_cte','capi.py',1132),
  ('cte -> string','cte',1,'p_cte','capi.py',1133),
  ('cte -> nestedvalue','cte',1,'p_cte','capi.py',1134),
  ('cte -> functioncall','cte',1,'p_cte','capi.py',1135),
  ('cte -> listaccess','cte',1,'p_cte','capi.py',1136),
  ('cte -> specialfunction','cte',1,'p_cte','capi.py',1137),
  ('id -> ID','id',1,'p_id','capi.py',1143),
  ('string -> STRING','string',1,'p_string','capi.py',1163),
  ('int -> INT','int',1,'p_int','capi.py',1170),
  ('float -> FLOAT','float',1,'p_float','capi.py',1177),
  ('bool -> TRUE','bool',1,'p_bool','capi.py',1184),
  ('bool -> FALSE','bool',1,'p_bool','capi.py',1185),
]
