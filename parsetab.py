
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BAR CAPIGAME COLON COMMA COMMENT CREATE_TEXT DOT DRAW ELSE EQUAL EX FALSE FLOAT FOR FUNC GET_EVENT GLOBAL HEAD ID IF INIT INT LAST LEFTBRACKET LEFTKEY LEFTPAR LIST LOGIC MAIN OBJECT POW PRINT RELOP RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR RUN SEMICOLON SET_DIMENSION SET_FILL SET_TITLE SIZE SQRT START STRING TAIL TBOOL TERMS TFLOAT TINT TLIST TOBJECT TRUE TSTRING UPDATE VAR VOID WHILE WINDOW_H WINDOW_W \n    capi : capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n    \n    capi_action1 :\n    \n    capi_action2 :\n    \n    global : GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON\n    \n    start : VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    start_action1 :\n    \n    run : VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    run_action1 :\n    \n    main_cont :\n     \n    vars :    VAR recids COLON type EQUAL expression SEMICOLON vars \n            | VAR recids COLON type EQUAL expression SEMICOLON\n            | VAR recids COLON type SEMICOLON vars\n            | VAR recids COLON type SEMICOLON\n     \n    recids : ID \n           | ID COMMA recids \n    \n    block : COLON LEFTKEY recstatement RIGHTKEY SEMICOLON\n          | COLON LEFTKEY RIGHTKEY SEMICOLON\n     \n    recstatement : statement recstatement  \n                 | statement  \n    \n    statement : assign SEMICOLON\n              | condition\n              | vars\n              | loop\n              | write SEMICOLON\n              | return SEMICOLON\n              | functioncall SEMICOLON\n              | nestedassign SEMICOLON\n              | specialfunction SEMICOLON\n    \n    specialfunction : draw\n                    | init\n                    | size\n                    | head\n                    | tail\n                    | last\n                    | set_fill\n                    | set_title\n                    | get_event\n                    | update\n                    | window_h\n                    | window_w\n                    | set_dimension\n                    | create_text\n                    | pow\n                    | sqrt\n    \n    pow : POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR\n    \n    pow_action1 :\n    \n    sqrt : SQRT LEFTPAR expression RIGHTPAR\n    \n    draw : CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    init : CAPIGAME DOT INIT LEFTPAR RIGHTPAR\n    \n    size : ID DOT SIZE LEFTPAR RIGHTPAR\n    \n    head : ID DOT HEAD LEFTPAR RIGHTPAR\n    \n    window_h : CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR\n    \n    window_w : CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR\n    \n    tail : TAIL LEFTPAR RIGHTPAR\n    \n    last : LAST LEFTPAR RIGHTPAR\n    \n    set_title : CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR\n    \n    set_fill : CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    set_dimension : CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR\n    \n    update : CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR\n    \n    get_event : CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR\n    \n    create_text : CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    assign : ID assign_action1 EQUAL assign_action2 expression \n           | assign_list EQUAL assign_action2 expression\n    \n    assign_action1 : \n    \n    assign_action2 : \n     condition : IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action2\n                  | IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action3 ELSE  block condition_action2\n     \n    condition_action1 :\n    \n    condition_action2 :\n    \n    condition_action3 :\n    \n    loop : for\n        | while\n    \n    for : FOR startscope_action LEFTPAR  assign  SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3\n    \n    for_action1 : \n    \n    for_action2 : \n    \n    for_action3 : \n    \n    while : WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3\n    \n    while_action1 :\n    \n    while_action2 :\n    \n    while_action3 :\n    \n    function : type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n    \n    startscope_action : \n    \n    function_action1 :\n    \n    function_action2 :\n    \n    function_action3 :\n    \n    recparams : ID COLON type\n              | ID COLON type COMMA recparams\n    \n    recfunc : function recfunc\n            | function\n     \n    write : PRINT LEFTPAR recwrite RIGHTPAR \n     \n    recwrite : expression action_recwrite_exp COMMA recwrite \n               | STRING action_recwrite_cte COMMA  recwrite \n               | expression action_recwrite_exp \n               | STRING action_recwrite_cte\n    \n    action_recwrite_exp :\n    \n    action_recwrite_cte : \n    \n     return : RETURN expression\n    \n    functioncall : ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR \n                 | ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR \n    \n    function_call_action1 : \n    \n    function_call_action2 : \n    \n    recfuncexp : expression COMMA recfuncexp\n               | expression recfunc_action1\n    \n    recfunc_action1 :\n    \n    expression : exp RELOP relop_action1 exp relop_action2\n               | exp LOGIC logic_action1 exp logic_action2\n               | exp\n    \n    relop_action1 : \n    \n    relop_action2 : \n    \n    logic_action1 : \n    \n    logic_action2 : \n     \n    exp : term exp_action recexp\n        | term exp_action \n        \n    exp_action :\n     \n    recexp : EX add_operator exp \n     \n    term : factor term_action recterm \n         | factor term_action \n    \n    term_action :\n     \n    recterm : TERMS add_operator term\n    \n    add_operator :\n     factor : factor_action1 LEFTPAR expression RIGHTPAR factor_action2 \n               | EX cte \n               | cte \n    \n    factor_action1 :\n    \n    factor_action2 :\n    \n    type : primitivetype\n        | TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1\n    \n    action_list1 :\n    \n    primitivetype : TINT\n                  | TFLOAT\n                  | TSTRING\n                  | TBOOL\n                  | TOBJECT\n    \n    assign_list : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    listaccess : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    list_action1 :\n    \n    list_action_3 :\n    \n    nestedvalue : ID DOT ID\n    \n    nestedassign : nestedvalue EQUAL expression\n    \n    cte :    \n        | id\n        | int\n        | float\n        | bool\n        | string\n        | nestedvalue\n        | functioncall\n        | listaccess\n        | specialfunction\n    \n    id : ID\n    \n    string : STRING\n    \n    int : INT\n    \n    float : FLOAT\n    \n    bool : TRUE \n         | FALSE\n    '
    
_lr_action_items = {'MAIN':([0,2,3,4,7,17,22,61,140,143,259,261,278,296,],[-5,5,18,19,-95,26,-94,-7,-85,-87,-84,-20,-86,-19,]),'GLOBAL':([0,2,],[-5,6,]),'VOID':([0,2,3,7,29,35,36,37,44,45,46,47,55,56,57,61,107,140,143,259,261,278,295,296,],[-5,9,9,9,38,38,38,-6,38,-6,-6,59,-6,59,59,-7,59,-85,-87,-84,-20,-86,-8,-19,]),'TLIST':([0,2,3,7,61,62,115,140,143,259,261,278,296,],[-5,11,11,11,-7,11,11,-85,-87,-84,-20,-86,-19,]),'TINT':([0,2,3,7,25,61,62,115,140,143,259,261,278,296,],[-5,12,12,12,12,-7,12,12,-85,-87,-84,-20,-86,-19,]),'TFLOAT':([0,2,3,7,25,61,62,115,140,143,259,261,278,296,],[-5,13,13,13,13,-7,13,13,-85,-87,-84,-20,-86,-19,]),'TSTRING':([0,2,3,7,25,61,62,115,140,143,259,261,278,296,],[-5,14,14,14,14,-7,14,14,-85,-87,-84,-20,-86,-19,]),'TBOOL':([0,2,3,7,25,61,62,115,140,143,259,261,278,296,],[-5,15,15,15,15,-7,15,15,-85,-87,-84,-20,-86,-19,]),'TOBJECT':([0,2,3,7,25,61,62,115,140,143,259,261,278,296,],[-5,16,16,16,16,-7,16,16,-85,-87,-84,-20,-86,-19,]),'$end':([1,133,171,172,203,],[0,-4,-3,-2,-1,]),'COLON':([5,6,18,19,26,50,51,64,66,68,114,117,119,139,142,178,180,205,208,231,257,294,318,336,356,358,370,],[20,21,27,28,34,62,-17,115,-91,-91,-18,141,141,-90,-90,-91,-91,-12,141,141,141,-12,141,141,141,141,141,]),'FUNC':([8,9,10,12,13,14,15,16,38,59,120,144,],[23,24,-132,-135,-136,-137,-138,-139,48,111,-134,-133,]),'EQUAL':([10,12,13,14,15,16,113,120,144,145,221,222,228,269,327,344,],[-132,-135,-136,-137,-138,-139,136,-134,-133,-144,-67,271,275,297,-67,-140,]),'SEMICOLON':([10,12,13,14,15,16,49,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,110,113,120,131,132,136,144,145,159,160,162,163,164,166,167,170,175,195,196,197,198,200,202,210,212,216,217,218,219,220,227,232,233,235,239,242,243,244,245,248,249,250,251,252,253,260,271,274,275,279,282,285,288,289,290,291,292,297,299,304,312,313,314,315,316,317,319,321,323,326,331,334,339,348,351,352,355,359,367,368,],[-132,-135,-136,-137,-138,-139,61,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,133,137,-134,171,172,-146,-133,-144,-57,-58,-113,-120,-124,-146,-129,203,206,-114,-116,-119,-123,-128,-50,261,263,264,265,266,267,268,-146,-53,-54,-105,-52,-63,-62,-55,-56,-146,-146,-118,-126,-122,-126,296,-68,-103,-146,-104,-141,-59,-115,-117,-146,-146,-131,-68,-146,-145,-111,-112,-121,-125,-127,-48,-146,-66,-96,339,-61,-65,-77,-146,-60,-64,-78,363,369,-51,]),'COMMA':([10,12,13,14,15,16,51,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,120,127,138,144,145,148,159,160,161,162,163,164,166,167,168,183,185,187,193,194,195,196,197,198,200,201,202,232,233,235,236,238,239,240,242,243,244,245,246,247,248,249,250,251,252,253,273,279,280,282,283,284,285,287,288,289,290,291,292,302,303,308,309,311,312,313,314,315,316,317,324,325,329,331,337,338,341,350,351,352,357,368,],[-132,-135,-136,-137,-138,-139,63,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-134,-146,177,-133,-144,-107,-57,-58,194,-113,-120,-124,-146,-129,-146,-146,-146,-146,-146,-146,-114,-116,-119,-123,-128,255,-50,-53,-54,-105,280,283,-52,284,-63,-62,-55,-56,286,287,-146,-146,-118,-126,-122,-126,-146,-104,-146,-141,-146,-146,-59,-146,-115,-117,-146,-146,-131,-101,-102,329,330,332,-111,-112,-121,-125,-127,-48,337,338,-146,-61,-146,-146,350,-146,-60,-64,361,-51,]),'RIGHTPAR':([10,12,13,14,15,16,52,53,65,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,116,118,120,125,126,129,138,144,145,148,159,160,162,163,164,166,167,169,174,181,182,183,186,188,189,190,191,192,195,196,197,198,199,200,202,207,232,233,234,235,236,239,241,242,243,244,245,248,249,250,251,252,253,254,255,256,272,273,279,280,281,282,285,286,288,289,290,291,292,293,300,301,302,303,307,310,312,313,314,315,316,317,322,324,325,328,330,331,332,337,338,340,342,343,346,347,349,351,352,361,365,368,369,],[-132,-135,-136,-137,-138,-139,66,68,-89,-89,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,139,142,-134,159,160,-146,-92,-133,-144,-107,-57,-58,-113,-120,-124,-146,-129,202,205,232,233,235,239,-146,242,243,244,245,-114,-116,-119,-123,-146,-128,-50,-93,-53,-54,279,-105,-110,-52,285,-63,-62,-55,-56,-146,-146,-118,-126,-122,-126,292,-146,294,-146,-146,-104,-146,-109,-141,-59,-146,-115,-117,-146,-146,-131,317,-71,323,-101,-102,-108,331,-111,-112,-121,-125,-127,-48,336,-99,-100,-146,-146,-61,-146,-146,-146,-82,351,352,-97,-98,356,-60,-64,-146,368,-51,370,]),'BAR':([11,12,13,14,15,16,33,],[25,-135,-136,-137,-138,-139,43,]),'LEFTKEY':([20,21,27,28,34,141,],[29,30,35,36,44,179,]),'ID':([23,24,40,52,53,54,63,121,127,129,136,137,148,149,166,168,176,177,179,183,185,187,188,193,194,195,196,199,206,211,213,214,215,224,225,227,248,249,251,253,255,258,261,263,264,265,266,267,268,271,272,273,275,280,283,284,286,287,290,291,296,297,298,299,305,319,328,329,330,332,337,338,339,345,348,350,353,360,361,362,363,364,366,371,372,],[31,32,51,64,64,79,51,145,79,79,79,-16,-107,79,79,79,-15,64,221,79,79,79,79,79,79,-114,-116,79,-14,221,-24,-25,-26,-74,-75,79,79,79,-126,-126,79,-13,-20,-23,-27,-28,-29,-30,-31,-68,79,79,79,79,79,79,79,79,79,79,-19,-68,79,79,327,79,79,79,79,79,79,79,-77,-72,79,79,-69,-83,79,-72,327,-80,-70,-79,-76,]),'VAR':([30,137,176,179,206,211,213,214,215,224,225,258,261,263,264,265,266,267,268,296,345,353,360,362,364,366,371,372,],[40,40,-15,40,40,40,-24,-25,-26,-74,-75,-13,-20,-23,-27,-28,-29,-30,-31,-19,-72,-69,-83,-72,-80,-70,-79,-76,]),'LEFTPAR':([31,32,41,42,79,102,103,104,105,106,112,122,127,128,129,135,136,146,147,148,149,150,151,152,153,154,155,156,157,158,165,168,173,183,185,187,188,193,194,195,196,199,204,221,223,226,227,229,230,248,249,251,253,255,271,272,273,275,276,277,280,283,284,286,287,290,291,297,298,299,306,319,328,329,330,332,337,338,339,348,350,361,],[-88,-88,52,53,-106,125,126,127,-49,129,-88,148,-130,168,-130,174,-130,181,182,-107,-130,185,186,187,188,189,190,191,192,193,199,-130,-88,-130,-130,-130,-130,-130,-130,-114,-116,-130,256,-106,272,273,-130,-88,-88,-130,-130,-126,-126,-130,-68,-130,-130,-130,305,-81,-130,-130,-130,-130,-130,-130,-130,-68,-130,-130,328,-130,-130,-130,-130,-130,-130,-130,-77,-130,-130,-130,]),'RIGHTKEY':([39,58,108,109,130,137,176,179,206,209,211,213,214,215,224,225,258,261,262,263,264,265,266,267,268,296,333,345,353,360,362,364,366,371,372,],[49,110,131,132,170,-16,-15,210,-14,260,-22,-24,-25,-26,-74,-75,-13,-20,-21,-23,-27,-28,-29,-30,-31,-19,-10,-72,-69,-83,-72,-80,-70,-79,-76,]),'LEFTBRACKET':([43,79,123,221,270,327,],[54,-142,149,-142,298,-142,]),'START':([48,60,],[-9,112,]),'RIGHTBRACKET':([54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,145,149,159,160,162,163,164,166,167,184,195,196,197,198,200,202,232,233,235,237,239,242,243,244,245,248,249,250,251,252,253,279,282,285,288,289,290,291,292,298,312,313,314,315,316,317,320,331,335,351,352,368,],[-146,120,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-144,-146,-57,-58,-113,-120,-124,-146,-129,-143,-114,-116,-119,-123,-128,-50,-53,-54,-105,282,-52,-63,-62,-55,-56,-146,-146,-118,-126,-122,-126,-104,-141,-59,-115,-117,-146,-146,-131,-146,-111,-112,-121,-125,-127,-48,-143,-61,344,-60,-64,-51,]),'INT':([54,127,129,136,148,149,166,168,183,185,187,188,193,194,195,196,199,227,248,249,251,253,255,271,272,273,275,280,283,284,286,287,290,291,297,298,299,319,328,329,330,332,337,338,339,348,350,361,],[80,80,80,80,-107,80,80,80,80,80,80,80,80,80,-114,-116,80,80,80,80,-126,-126,80,-68,80,80,80,80,80,80,80,80,80,80,-68,80,80,80,80,80,80,80,80,80,-77,80,80,80,]),'FLOAT':([54,127,129,136,148,149,166,168,183,185,187,188,193,194,195,196,199,227,248,249,251,253,255,271,272,273,275,280,283,284,286,287,290,291,297,298,299,319,328,329,330,332,337,338,339,348,350,361,],[81,81,81,81,-107,81,81,81,81,81,81,81,81,81,-114,-116,81,81,81,81,-126,-126,81,-68,81,81,81,81,81,81,81,81,81,81,-68,81,81,81,81,81,81,81,81,81,-77,81,81,81,]),'TRUE':([54,127,129,136,148,149,166,168,183,185,187,188,193,194,195,196,199,227,248,249,251,253,255,271,272,273,275,280,283,284,286,287,290,291,297,298,299,319,328,329,330,332,337,338,339,348,350,361,],[82,82,82,82,-107,82,82,82,82,82,82,82,82,82,-114,-116,82,82,82,82,-126,-126,82,-68,82,82,82,82,82,82,82,82,82,82,-68,82,82,82,82,82,82,82,82,82,-77,82,82,82,]),'FALSE':([54,127,129,136,148,149,166,168,183,185,187,188,193,194,195,196,199,227,248,249,251,253,255,271,272,273,275,280,283,284,286,287,290,291,297,298,299,319,328,329,330,332,337,338,339,348,350,361,],[83,83,83,83,-107,83,83,83,83,83,83,83,83,83,-114,-116,83,83,83,83,-126,-126,83,-68,83,83,83,83,83,83,83,83,83,83,-68,83,83,83,83,83,83,83,83,83,-77,83,83,83,]),'STRING':([54,127,129,136,148,149,166,168,183,185,187,188,193,194,195,196,199,227,248,249,251,253,255,271,272,273,275,280,283,284,286,287,290,291,297,298,299,319,328,329,330,332,337,338,339,348,350,361,],[84,84,84,84,-107,84,84,84,84,84,84,84,84,84,-114,-116,84,84,84,84,-126,-126,84,-68,84,303,84,84,84,84,84,84,84,84,-68,84,84,84,84,84,84,84,303,303,-77,84,84,84,]),'CAPIGAME':([54,127,129,136,137,148,149,166,168,176,179,183,185,187,188,193,194,195,196,199,206,211,213,214,215,224,225,227,248,249,251,253,255,258,261,263,264,265,266,267,268,271,272,273,275,280,283,284,286,287,290,291,296,297,298,299,319,328,329,330,332,337,338,339,345,348,350,353,360,361,362,364,366,371,372,],[101,101,101,101,-16,-107,101,101,101,-15,101,101,101,101,101,101,101,-114,-116,101,-14,101,-24,-25,-26,-74,-75,101,101,101,-126,-126,101,-13,-20,-23,-27,-28,-29,-30,-31,-68,101,101,101,101,101,101,101,101,101,101,-19,-68,101,101,101,101,101,101,101,101,101,-77,-72,101,101,-69,-83,101,-72,-80,-70,-79,-76,]),'TAIL':([54,127,129,136,137,148,149,166,168,176,179,183,185,187,188,193,194,195,196,199,206,211,213,214,215,224,225,227,248,249,251,253,255,258,261,263,264,265,266,267,268,271,272,273,275,280,283,284,286,287,290,291,296,297,298,299,319,328,329,330,332,337,338,339,345,348,350,353,360,361,362,364,366,371,372,],[102,102,102,102,-16,-107,102,102,102,-15,102,102,102,102,102,102,102,-114,-116,102,-14,102,-24,-25,-26,-74,-75,102,102,102,-126,-126,102,-13,-20,-23,-27,-28,-29,-30,-31,-68,102,102,102,102,102,102,102,102,102,102,-19,-68,102,102,102,102,102,102,102,102,102,-77,-72,102,102,-69,-83,102,-72,-80,-70,-79,-76,]),'LAST':([54,127,129,136,137,148,149,166,168,176,179,183,185,187,188,193,194,195,196,199,206,211,213,214,215,224,225,227,248,249,251,253,255,258,261,263,264,265,266,267,268,271,272,273,275,280,283,284,286,287,290,291,296,297,298,299,319,328,329,330,332,337,338,339,345,348,350,353,360,361,362,364,366,371,372,],[103,103,103,103,-16,-107,103,103,103,-15,103,103,103,103,103,103,103,-114,-116,103,-14,103,-24,-25,-26,-74,-75,103,103,103,-126,-126,103,-13,-20,-23,-27,-28,-29,-30,-31,-68,103,103,103,103,103,103,103,103,103,103,-19,-68,103,103,103,103,103,103,103,103,103,-77,-72,103,103,-69,-83,103,-72,-80,-70,-79,-76,]),'CREATE_TEXT':([54,127,129,136,137,148,149,166,168,176,179,183,185,187,188,193,194,195,196,199,206,211,213,214,215,224,225,227,248,249,251,253,255,258,261,263,264,265,266,267,268,271,272,273,275,280,283,284,286,287,290,291,296,297,298,299,319,328,329,330,332,337,338,339,345,348,350,353,360,361,362,364,366,371,372,],[104,104,104,104,-16,-107,104,104,104,-15,104,104,104,104,104,104,104,-114,-116,104,-14,104,-24,-25,-26,-74,-75,104,104,104,-126,-126,104,-13,-20,-23,-27,-28,-29,-30,-31,-68,104,104,104,104,104,104,104,104,104,104,-19,-68,104,104,104,104,104,104,104,104,104,-77,-72,104,104,-69,-83,104,-72,-80,-70,-79,-76,]),'POW':([54,127,129,136,137,148,149,166,168,176,179,183,185,187,188,193,194,195,196,199,206,211,213,214,215,224,225,227,248,249,251,253,255,258,261,263,264,265,266,267,268,271,272,273,275,280,283,284,286,287,290,291,296,297,298,299,319,328,329,330,332,337,338,339,345,348,350,353,360,361,362,364,366,371,372,],[105,105,105,105,-16,-107,105,105,105,-15,105,105,105,105,105,105,105,-114,-116,105,-14,105,-24,-25,-26,-74,-75,105,105,105,-126,-126,105,-13,-20,-23,-27,-28,-29,-30,-31,-68,105,105,105,105,105,105,105,105,105,105,-19,-68,105,105,105,105,105,105,105,105,105,-77,-72,105,105,-69,-83,105,-72,-80,-70,-79,-76,]),'SQRT':([54,127,129,136,137,148,149,166,168,176,179,183,185,187,188,193,194,195,196,199,206,211,213,214,215,224,225,227,248,249,251,253,255,258,261,263,264,265,266,267,268,271,272,273,275,280,283,284,286,287,290,291,296,297,298,299,319,328,329,330,332,337,338,339,345,348,350,353,360,361,362,364,366,371,372,],[106,106,106,106,-16,-107,106,106,106,-15,106,106,106,106,106,106,106,-114,-116,106,-14,106,-24,-25,-26,-74,-75,106,106,106,-126,-126,106,-13,-20,-23,-27,-28,-29,-30,-31,-68,106,106,106,106,106,106,106,106,106,106,-19,-68,106,106,106,106,106,106,106,106,106,-77,-72,106,106,-69,-83,106,-72,-80,-70,-79,-76,]),'TERMS':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,127,129,136,145,148,149,159,160,164,166,167,168,183,185,187,188,193,194,195,196,198,199,200,202,227,232,233,235,239,242,243,244,245,248,249,251,253,255,271,272,273,275,279,280,282,283,284,285,286,287,290,291,292,297,298,299,303,316,317,319,328,329,330,331,332,337,338,339,348,350,351,352,361,368,],[-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-146,-146,-146,-144,-107,-146,-57,-58,-124,-146,-129,-146,-146,-146,-146,-146,-146,-146,-114,-116,253,-146,-128,-50,-146,-53,-54,-105,-52,-63,-62,-55,-56,-146,-146,-126,-126,-146,-68,-146,-146,-146,-104,-146,-141,-146,-146,-59,-146,-146,-146,-146,-131,-68,-146,-146,-157,-127,-48,-146,-146,-146,-146,-61,-146,-146,-146,-77,-146,-146,-60,-64,-146,-51,]),'EX':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,127,129,136,145,148,149,159,160,163,164,166,167,168,183,185,187,188,193,194,195,196,197,198,199,200,202,227,232,233,235,239,242,243,244,245,248,249,251,252,253,255,271,272,273,275,279,280,282,283,284,285,286,287,290,291,292,297,298,299,303,315,316,317,319,328,329,330,331,332,337,338,339,348,350,351,352,361,368,],[-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,166,166,166,-144,-107,166,-57,-58,-120,-124,-146,-129,166,166,166,166,166,166,166,-114,-116,251,-123,166,-128,-50,166,-53,-54,-105,-52,-63,-62,-55,-56,166,166,-126,-122,-126,166,-68,166,166,166,-104,166,-141,166,166,-59,166,166,166,166,-131,-68,166,166,-157,-125,-127,-48,166,166,166,166,-61,166,166,166,-77,166,166,-60,-64,166,-51,]),'RELOP':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,127,129,136,145,148,149,159,160,162,163,164,166,167,168,183,185,187,188,193,194,197,198,199,200,202,227,232,233,235,239,242,243,244,245,250,251,252,253,255,271,272,273,275,279,280,282,283,284,285,286,287,290,291,292,297,298,299,303,314,315,316,317,319,328,329,330,331,332,337,338,339,348,350,351,352,361,368,],[-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-146,-146,-146,-144,-107,-146,-57,-58,195,-120,-124,-146,-129,-146,-146,-146,-146,-146,-146,-146,-119,-123,-146,-128,-50,-146,-53,-54,-105,-52,-63,-62,-55,-56,-118,-126,-122,-126,-146,-68,-146,-146,-146,-104,-146,-141,-146,-146,-59,-146,-146,-146,-146,-131,-68,-146,-146,-157,-121,-125,-127,-48,-146,-146,-146,-146,-61,-146,-146,-146,-77,-146,-146,-60,-64,-146,-51,]),'LOGIC':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,127,129,136,145,148,149,159,160,162,163,164,166,167,168,183,185,187,188,193,194,197,198,199,200,202,227,232,233,235,239,242,243,244,245,250,251,252,253,255,271,272,273,275,279,280,282,283,284,285,286,287,290,291,292,297,298,299,303,314,315,316,317,319,328,329,330,331,332,337,338,339,348,350,351,352,361,368,],[-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-146,-146,-146,-144,-107,-146,-57,-58,196,-120,-124,-146,-129,-146,-146,-146,-146,-146,-146,-146,-119,-123,-146,-128,-50,-146,-53,-54,-105,-52,-63,-62,-55,-56,-118,-126,-122,-126,-146,-68,-146,-146,-146,-104,-146,-141,-146,-146,-59,-146,-146,-146,-146,-131,-68,-146,-146,-157,-121,-125,-127,-48,-146,-146,-146,-146,-61,-146,-146,-146,-77,-146,-146,-60,-64,-146,-51,]),'DOT':([79,101,221,],[121,124,121,]),'RUN':([111,134,],[-11,173,]),'SIZE':([121,],[146,]),'HEAD':([121,],[147,]),'DRAW':([124,],[150,]),'INIT':([124,],[151,]),'SET_FILL':([124,],[152,]),'SET_TITLE':([124,],[153,]),'GET_EVENT':([124,],[154,]),'UPDATE':([124,],[155,]),'WINDOW_H':([124,],[156,]),'WINDOW_W':([124,],[157,]),'SET_DIMENSION':([124,],[158,]),'IF':([137,176,179,206,211,213,214,215,224,225,258,261,263,264,265,266,267,268,296,345,353,360,362,364,366,371,372,],[-16,-15,223,-14,223,-24,-25,-26,-74,-75,-13,-20,-23,-27,-28,-29,-30,-31,-19,-72,-69,-83,-72,-80,-70,-79,-76,]),'PRINT':([137,176,179,206,211,213,214,215,224,225,258,261,263,264,265,266,267,268,296,345,353,360,362,364,366,371,372,],[-16,-15,226,-14,226,-24,-25,-26,-74,-75,-13,-20,-23,-27,-28,-29,-30,-31,-19,-72,-69,-83,-72,-80,-70,-79,-76,]),'RETURN':([137,176,179,206,211,213,214,215,224,225,258,261,263,264,265,266,267,268,296,345,353,360,362,364,366,371,372,],[-16,-15,227,-14,227,-24,-25,-26,-74,-75,-13,-20,-23,-27,-28,-29,-30,-31,-19,-72,-69,-83,-72,-80,-70,-79,-76,]),'FOR':([137,176,179,206,211,213,214,215,224,225,258,261,263,264,265,266,267,268,296,345,353,360,362,364,366,371,372,],[-16,-15,229,-14,229,-24,-25,-26,-74,-75,-13,-20,-23,-27,-28,-29,-30,-31,-19,-72,-69,-83,-72,-80,-70,-79,-76,]),'WHILE':([137,176,179,206,211,213,214,215,224,225,258,261,263,264,265,266,267,268,296,345,353,360,362,364,366,371,372,],[-16,-15,230,-14,230,-24,-25,-26,-74,-75,-13,-20,-23,-27,-28,-29,-30,-31,-19,-72,-69,-83,-72,-80,-70,-79,-76,]),'ELSE':([261,296,345,354,],[-20,-19,-73,358,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'capi':([0,],[1,]),'capi_action1':([0,],[2,]),'global':([2,],[3,]),'recfunc':([2,3,7,],[4,17,22,]),'function':([2,3,7,],[7,7,7,]),'type':([2,3,7,62,115,],[8,8,8,113,138,]),'primitivetype':([2,3,7,25,62,115,],[10,10,10,33,10,10,]),'start':([29,35,36,44,],[37,45,46,55,]),'vars':([30,137,179,206,211,],[39,176,214,258,214,]),'startscope_action':([31,32,112,173,229,230,],[41,42,135,204,276,277,]),'capi_action2':([37,45,46,55,],[47,56,57,107,]),'recids':([40,63,],[50,114,]),'run':([47,56,57,107,],[58,108,109,130,]),'start_action1':([48,],[60,]),'recparams':([52,53,177,],[65,67,207,]),'cte':([54,127,129,136,149,166,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[69,167,167,167,167,200,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'id':([54,127,129,136,149,166,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'int':([54,127,129,136,149,166,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'float':([54,127,129,136,149,166,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'bool':([54,127,129,136,149,166,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'string':([54,127,129,136,149,166,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'nestedvalue':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[75,75,75,75,75,75,75,228,75,75,75,75,75,75,75,228,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'functioncall':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[76,76,76,76,76,76,76,218,76,76,76,76,76,76,76,218,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'listaccess':([54,127,129,136,149,166,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'specialfunction':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[78,78,78,78,78,78,78,220,78,78,78,78,78,78,78,220,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'draw':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'init':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'size':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'head':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'tail':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'last':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'set_fill':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'set_title':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'get_event':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'update':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'window_h':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'window_w':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'set_dimension':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'create_text':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'pow':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'sqrt':([54,127,129,136,149,166,168,179,183,185,187,188,193,194,199,211,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'function_action1':([65,67,],[116,118,]),'function_action3':([66,68,178,180,],[117,119,208,231,]),'function_call_action1':([79,221,],[122,122,]),'list_action1':([79,221,327,],[123,270,270,]),'pow_action1':([105,],[128,]),'run_action1':([111,],[134,]),'block':([117,119,208,231,257,318,336,356,358,370,],[140,143,259,278,295,333,345,360,362,371,]),'action_list1':([120,],[144,]),'expression':([127,129,136,149,168,183,185,187,188,193,194,199,227,255,272,273,275,280,283,284,286,287,298,299,319,328,329,330,332,337,338,348,350,361,],[161,169,175,184,201,236,238,240,241,246,247,254,274,293,300,302,304,236,308,309,310,311,320,321,334,340,341,342,343,302,302,355,357,365,]),'exp':([127,129,136,149,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,298,299,319,328,329,330,332,337,338,348,350,361,],[162,162,162,162,162,162,162,162,162,162,162,162,162,288,289,162,162,162,162,162,162,162,162,162,314,162,162,162,162,162,162,162,162,162,162,162,162,]),'term':([127,129,136,149,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,315,163,163,163,163,163,163,163,163,163,163,163,163,]),'factor':([127,129,136,149,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'factor_action1':([127,129,136,149,168,183,185,187,188,193,194,199,227,248,249,255,272,273,275,280,283,284,286,287,290,291,298,299,319,328,329,330,332,337,338,348,350,361,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'function_action2':([139,142,],[178,180,]),'function_call_action2':([148,],[183,]),'exp_action':([163,],[197,]),'term_action':([164,],[198,]),'recstatement':([179,211,],[209,262,]),'statement':([179,211,],[211,211,]),'assign':([179,211,305,363,],[212,212,326,367,]),'condition':([179,211,],[213,213,]),'loop':([179,211,],[215,215,]),'write':([179,211,],[216,216,]),'return':([179,211,],[217,217,]),'nestedassign':([179,211,],[219,219,]),'assign_list':([179,211,305,363,],[222,222,222,222,]),'for':([179,211,],[224,224,]),'while':([179,211,],[225,225,]),'recfuncexp':([183,280,],[234,307,]),'list_action_3':([184,320,],[237,335,]),'relop_action1':([195,],[248,]),'logic_action1':([196,],[249,]),'recexp':([197,],[250,]),'recterm':([198,],[252,]),'main_cont':([205,294,],[257,318,]),'assign_action1':([221,327,],[269,269,]),'recfunc_action1':([236,],[281,]),'add_operator':([251,253,],[290,291,]),'assign_action2':([271,297,],[299,319,]),'recwrite':([273,337,338,],[301,346,347,]),'while_action1':([277,],[306,]),'relop_action2':([288,],[312,]),'logic_action2':([289,],[313,]),'factor_action2':([292,],[316,]),'condition_action1':([300,],[322,]),'action_recwrite_exp':([302,],[324,]),'action_recwrite_cte':([303,],[325,]),'for_action1':([339,],[348,]),'while_action2':([340,],[349,]),'condition_action2':([345,362,],[353,366,]),'condition_action3':([345,],[354,]),'for_action2':([355,],[359,]),'while_action3':([360,],[364,]),'for_action3':([371,],[372,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> capi","S'",1,None,None,None),
  ('capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',11,'p_capi','capi.py',255),
  ('capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',256),
  ('capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',257),
  ('capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',9,'p_capi','capi.py',258),
  ('capi_action1 -> <empty>','capi_action1',0,'p_capi_action1','capi.py',263),
  ('capi_action2 -> <empty>','capi_action2',0,'p_capi_action2','capi.py',271),
  ('global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON','global',6,'p_global','capi.py',277),
  ('start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block','start',9,'p_start','capi.py',286),
  ('start_action1 -> <empty>','start_action1',0,'p_start_action1','capi.py',303),
  ('run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block','run',9,'p_run','capi.py',310),
  ('run_action1 -> <empty>','run_action1',0,'p_run_action1','capi.py',326),
  ('main_cont -> <empty>','main_cont',0,'p_main_cont','capi.py',334),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON vars','vars',8,'p_vars','capi.py',340),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON','vars',7,'p_vars','capi.py',341),
  ('vars -> VAR recids COLON type SEMICOLON vars','vars',6,'p_vars','capi.py',342),
  ('vars -> VAR recids COLON type SEMICOLON','vars',5,'p_vars','capi.py',343),
  ('recids -> ID','recids',1,'p_recids','capi.py',377),
  ('recids -> ID COMMA recids','recids',3,'p_recids','capi.py',378),
  ('block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON','block',5,'p_block','capi.py',388),
  ('block -> COLON LEFTKEY RIGHTKEY SEMICOLON','block',4,'p_block','capi.py',389),
  ('recstatement -> statement recstatement','recstatement',2,'p_recstatement','capi.py',394),
  ('recstatement -> statement','recstatement',1,'p_recstatement','capi.py',395),
  ('statement -> assign SEMICOLON','statement',2,'p_statement','capi.py',401),
  ('statement -> condition','statement',1,'p_statement','capi.py',402),
  ('statement -> vars','statement',1,'p_statement','capi.py',403),
  ('statement -> loop','statement',1,'p_statement','capi.py',404),
  ('statement -> write SEMICOLON','statement',2,'p_statement','capi.py',405),
  ('statement -> return SEMICOLON','statement',2,'p_statement','capi.py',406),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement','capi.py',407),
  ('statement -> nestedassign SEMICOLON','statement',2,'p_statement','capi.py',408),
  ('statement -> specialfunction SEMICOLON','statement',2,'p_statement','capi.py',409),
  ('specialfunction -> draw','specialfunction',1,'p_specialfunction','capi.py',416),
  ('specialfunction -> init','specialfunction',1,'p_specialfunction','capi.py',417),
  ('specialfunction -> size','specialfunction',1,'p_specialfunction','capi.py',418),
  ('specialfunction -> head','specialfunction',1,'p_specialfunction','capi.py',419),
  ('specialfunction -> tail','specialfunction',1,'p_specialfunction','capi.py',420),
  ('specialfunction -> last','specialfunction',1,'p_specialfunction','capi.py',421),
  ('specialfunction -> set_fill','specialfunction',1,'p_specialfunction','capi.py',422),
  ('specialfunction -> set_title','specialfunction',1,'p_specialfunction','capi.py',423),
  ('specialfunction -> get_event','specialfunction',1,'p_specialfunction','capi.py',424),
  ('specialfunction -> update','specialfunction',1,'p_specialfunction','capi.py',425),
  ('specialfunction -> window_h','specialfunction',1,'p_specialfunction','capi.py',426),
  ('specialfunction -> window_w','specialfunction',1,'p_specialfunction','capi.py',427),
  ('specialfunction -> set_dimension','specialfunction',1,'p_specialfunction','capi.py',428),
  ('specialfunction -> create_text','specialfunction',1,'p_specialfunction','capi.py',429),
  ('specialfunction -> pow','specialfunction',1,'p_specialfunction','capi.py',430),
  ('specialfunction -> sqrt','specialfunction',1,'p_specialfunction','capi.py',431),
  ('pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR','pow',7,'p_pow','capi.py',437),
  ('pow_action1 -> <empty>','pow_action1',0,'p_pow_action1','capi.py',450),
  ('sqrt -> SQRT LEFTPAR expression RIGHTPAR','sqrt',4,'p_sqrt','capi.py',455),
  ('draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR','draw',14,'p_draw','capi.py',462),
  ('init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR','init',5,'p_init','capi.py',479),
  ('size -> ID DOT SIZE LEFTPAR RIGHTPAR','size',5,'p_size','capi.py',485),
  ('head -> ID DOT HEAD LEFTPAR RIGHTPAR','head',5,'p_head','capi.py',513),
  ('window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR','window_h',5,'p_window_h','capi.py',543),
  ('window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR','window_w',5,'p_window_w','capi.py',552),
  ('tail -> TAIL LEFTPAR RIGHTPAR','tail',3,'p_tail','capi.py',560),
  ('last -> LAST LEFTPAR RIGHTPAR','last',3,'p_last','capi.py',565),
  ('set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR','set_title',6,'p_set_title','capi.py',570),
  ('set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_fill',10,'p_set_fill','capi.py',583),
  ('set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR','set_dimension',8,'p_set_dimension','capi.py',594),
  ('update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR','update',5,'p_update','capi.py',605),
  ('get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR','get_event',5,'p_get_event','capi.py',611),
  ('create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR','create_text',10,'p_create_text','capi.py',620),
  ('assign -> ID assign_action1 EQUAL assign_action2 expression','assign',5,'p_assign','capi.py',637),
  ('assign -> assign_list EQUAL assign_action2 expression','assign',4,'p_assign','capi.py',638),
  ('assign_action1 -> <empty>','assign_action1',0,'p_assign_action1','capi.py',699),
  ('assign_action2 -> <empty>','assign_action2',0,'p_assign_action2','capi.py',708),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2','condition',7,'p_condition','capi.py',714),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2','condition',10,'p_condition','capi.py',715),
  ('condition_action1 -> <empty>','condition_action1',0,'p_condition_action1','capi.py',720),
  ('condition_action2 -> <empty>','condition_action2',0,'p_condition_action2','capi.py',733),
  ('condition_action3 -> <empty>','condition_action3',0,'p_condition_action3','capi.py',740),
  ('loop -> for','loop',1,'p_loop','capi.py',750),
  ('loop -> while','loop',1,'p_loop','capi.py',751),
  ('for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3','for',14,'p_for','capi.py',756),
  ('for_action1 -> <empty>','for_action1',0,'p_for_action1','capi.py',764),
  ('for_action2 -> <empty>','for_action2',0,'p_for_action2','capi.py',772),
  ('for_action3 -> <empty>','for_action3',0,'p_for_action3','capi.py',786),
  ('while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3','while',9,'p_while','capi.py',800),
  ('while_action1 -> <empty>','while_action1',0,'p_while_action1','capi.py',809),
  ('while_action2 -> <empty>','while_action2',0,'p_while_action2','capi.py',815),
  ('while_action3 -> <empty>','while_action3',0,'p_while_action3','capi.py',829),
  ('function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',839),
  ('function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',840),
  ('function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',841),
  ('function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',842),
  ('startscope_action -> <empty>','startscope_action',0,'p_startscope_action','capi.py',868),
  ('function_action1 -> <empty>','function_action1',0,'p_function_action1','capi.py',887),
  ('function_action2 -> <empty>','function_action2',0,'p_function_action2','capi.py',893),
  ('function_action3 -> <empty>','function_action3',0,'p_function_action3','capi.py',904),
  ('recparams -> ID COLON type','recparams',3,'p_recparams','capi.py',913),
  ('recparams -> ID COLON type COMMA recparams','recparams',5,'p_recparams','capi.py',914),
  ('recfunc -> function recfunc','recfunc',2,'p_recfunc','capi.py',927),
  ('recfunc -> function','recfunc',1,'p_recfunc','capi.py',928),
  ('write -> PRINT LEFTPAR recwrite RIGHTPAR','write',4,'p_write','capi.py',933),
  ('recwrite -> expression action_recwrite_exp COMMA recwrite','recwrite',4,'p_recwrite','capi.py',938),
  ('recwrite -> STRING action_recwrite_cte COMMA recwrite','recwrite',4,'p_recwrite','capi.py',939),
  ('recwrite -> expression action_recwrite_exp','recwrite',2,'p_recwrite','capi.py',940),
  ('recwrite -> STRING action_recwrite_cte','recwrite',2,'p_recwrite','capi.py',941),
  ('action_recwrite_exp -> <empty>','action_recwrite_exp',0,'p_action_recwrite_exp','capi.py',945),
  ('action_recwrite_cte -> <empty>','action_recwrite_cte',0,'p_action_recwrite_cte','capi.py',954),
  ('return -> RETURN expression','return',2,'p_return','capi.py',961),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR','functioncall',6,'p_functioncall','capi.py',989),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR','functioncall',5,'p_functioncall','capi.py',990),
  ('function_call_action1 -> <empty>','function_call_action1',0,'p_function_call_action1','capi.py',1023),
  ('function_call_action2 -> <empty>','function_call_action2',0,'p_function_call_action2','capi.py',1034),
  ('recfuncexp -> expression COMMA recfuncexp','recfuncexp',3,'p_recfuncexp','capi.py',1043),
  ('recfuncexp -> expression recfunc_action1','recfuncexp',2,'p_recfuncexp','capi.py',1044),
  ('recfunc_action1 -> <empty>','recfunc_action1',0,'p_recfunc_action1','capi.py',1055),
  ('expression -> exp RELOP relop_action1 exp relop_action2','expression',5,'p_expression','capi.py',1096),
  ('expression -> exp LOGIC logic_action1 exp logic_action2','expression',5,'p_expression','capi.py',1097),
  ('expression -> exp','expression',1,'p_expression','capi.py',1098),
  ('relop_action1 -> <empty>','relop_action1',0,'p_relop_action1','capi.py',1103),
  ('relop_action2 -> <empty>','relop_action2',0,'p_relop_action2','capi.py',1109),
  ('logic_action1 -> <empty>','logic_action1',0,'p_logic_action1','capi.py',1132),
  ('logic_action2 -> <empty>','logic_action2',0,'p_logic_action2','capi.py',1138),
  ('exp -> term exp_action recexp','exp',3,'p_exp','capi.py',1161),
  ('exp -> term exp_action','exp',2,'p_exp','capi.py',1162),
  ('exp_action -> <empty>','exp_action',0,'p_exp_action','capi.py',1167),
  ('recexp -> EX add_operator exp','recexp',3,'p_recexp','capi.py',1191),
  ('term -> factor term_action recterm','term',3,'p_term','capi.py',1196),
  ('term -> factor term_action','term',2,'p_term','capi.py',1197),
  ('term_action -> <empty>','term_action',0,'p_term_action','capi.py',1202),
  ('recterm -> TERMS add_operator term','recterm',3,'p_recterm','capi.py',1225),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','capi.py',1230),
  ('factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2','factor',5,'p_factor','capi.py',1236),
  ('factor -> EX cte','factor',2,'p_factor','capi.py',1237),
  ('factor -> cte','factor',1,'p_factor','capi.py',1238),
  ('factor_action1 -> <empty>','factor_action1',0,'p_factor_action1','capi.py',1252),
  ('factor_action2 -> <empty>','factor_action2',0,'p_factor_action2','capi.py',1258),
  ('type -> primitivetype','type',1,'p_type','capi.py',1264),
  ('type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1','type',8,'p_type','capi.py',1265),
  ('action_list1 -> <empty>','action_list1',0,'p_action_list1','capi.py',1274),
  ('primitivetype -> TINT','primitivetype',1,'p_primitivetype','capi.py',1283),
  ('primitivetype -> TFLOAT','primitivetype',1,'p_primitivetype','capi.py',1284),
  ('primitivetype -> TSTRING','primitivetype',1,'p_primitivetype','capi.py',1285),
  ('primitivetype -> TBOOL','primitivetype',1,'p_primitivetype','capi.py',1286),
  ('primitivetype -> TOBJECT','primitivetype',1,'p_primitivetype','capi.py',1287),
  ('assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','assign_list',6,'p_assign_list','capi.py',1294),
  ('listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','listaccess',6,'p_listaccess','capi.py',1306),
  ('list_action1 -> <empty>','list_action1',0,'p_list_action1','capi.py',1319),
  ('list_action_3 -> <empty>','list_action_3',0,'p_list_action_3','capi.py',1328),
  ('nestedvalue -> ID DOT ID','nestedvalue',3,'p_nestedvalue','capi.py',1350),
  ('nestedassign -> nestedvalue EQUAL expression','nestedassign',3,'p_nestedassign','capi.py',1355),
  ('cte -> <empty>','cte',0,'p_cte','capi.py',1360),
  ('cte -> id','cte',1,'p_cte','capi.py',1361),
  ('cte -> int','cte',1,'p_cte','capi.py',1362),
  ('cte -> float','cte',1,'p_cte','capi.py',1363),
  ('cte -> bool','cte',1,'p_cte','capi.py',1364),
  ('cte -> string','cte',1,'p_cte','capi.py',1365),
  ('cte -> nestedvalue','cte',1,'p_cte','capi.py',1366),
  ('cte -> functioncall','cte',1,'p_cte','capi.py',1367),
  ('cte -> listaccess','cte',1,'p_cte','capi.py',1368),
  ('cte -> specialfunction','cte',1,'p_cte','capi.py',1369),
  ('id -> ID','id',1,'p_id','capi.py',1375),
  ('string -> STRING','string',1,'p_string','capi.py',1395),
  ('int -> INT','int',1,'p_int','capi.py',1402),
  ('float -> FLOAT','float',1,'p_float','capi.py',1409),
  ('bool -> TRUE','bool',1,'p_bool','capi.py',1416),
  ('bool -> FALSE','bool',1,'p_bool','capi.py',1417),
]
