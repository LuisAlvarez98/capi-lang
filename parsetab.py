
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BAR CAPIGAME COLON COMMA COMMENT CREATE_TEXT DOT DRAW ELSE EQUAL EX FALSE FIND FLOAT FOR FUNC GET_EVENT GLOBAL HEAD ID IF INIT INT LAST LEFTBRACKET LEFTKEY LEFTPAR LIST LOGIC MAIN OBJECT POW PRINT QUIT RAND RELOP RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR RUN SEMICOLON SET_DIMENSION SET_FILL SET_TITLE SIZE SQRT START STRING TBOOL TERMS TFLOAT TINT TLIST TOBJECT TRUE TSTRING UPDATE VAR VOID WHILE WINDOW_H WINDOW_W \n    capi : capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n    \n    capi_action1 :\n    \n    capi_action2 :\n    \n    global : GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON\n    \n    start : VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    start_action1 :\n    \n    run : VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    run_action1 :\n    \n    main_cont :\n     \n    vars :    VAR recids COLON type EQUAL expression SEMICOLON vars \n            | VAR recids COLON type EQUAL expression SEMICOLON\n            | VAR recids COLON type SEMICOLON vars\n            | VAR recids COLON type SEMICOLON\n     \n    recids : ID \n           | ID COMMA recids \n    \n    block : COLON LEFTKEY recstatement RIGHTKEY SEMICOLON\n          | COLON LEFTKEY RIGHTKEY SEMICOLON\n     \n    recstatement : statement recstatement  \n                 | statement  \n    \n    statement : assign SEMICOLON\n              | condition\n              | vars\n              | loop\n              | write SEMICOLON\n              | return SEMICOLON\n              | functioncall SEMICOLON\n              | nestedassign SEMICOLON\n              | specialfunction SEMICOLON\n    \n    specialfunction : draw\n                    | init\n                    | size\n                    | head\n                    | find\n                    | last\n                    | set_fill\n                    | set_title\n                    | get_event\n                    | update\n                    | window_h\n                    | window_w\n                    | set_dimension\n                    | create_text\n                    | rand\n                    | pow\n                    | sqrt\n                    | quit\n    \n    quit : QUIT LEFTPAR RIGHTPAR\n    \n    pow : POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR\n    \n    pow_action1 :\n    \n    sqrt : SQRT sqrt_action1 LEFTPAR expression RIGHTPAR\n    \n    sqrt_action1 :\n    \n    draw : CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    init : CAPIGAME DOT INIT LEFTPAR RIGHTPAR\n    \n    size : ID DOT SIZE LEFTPAR RIGHTPAR\n    \n    head : ID DOT HEAD LEFTPAR RIGHTPAR\n    \n    window_h : CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR\n    \n    window_w : CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR\n    \n    rand : CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR\n    \n    find : ID DOT FIND LEFTPAR expression RIGHTPAR\n    \n    last : ID DOT LAST LEFTPAR RIGHTPAR\n    \n    set_title : CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR\n    \n    set_fill : CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    set_dimension : CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR\n    \n    update : CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR\n    \n    get_event : CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR\n    \n    create_text : CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    assign : ID assign_action1 EQUAL assign_action2 expression \n           | assign_list EQUAL assign_action2 expression\n    \n    assign_action1 : \n    \n    assign_action2 : \n     condition : IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action2\n                  | IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action3 ELSE  block condition_action2\n     \n    condition_action1 :\n    \n    condition_action2 :\n    \n    condition_action3 :\n    \n    loop : for\n        | while\n    \n    for : FOR startscope_action LEFTPAR  assign  SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3\n    \n    for_action1 : \n    \n    for_action2 : \n    \n    for_action3 : \n    \n    while : WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3\n    \n    while_action1 :\n    \n    while_action2 :\n    \n    while_action3 :\n    \n    function : type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n    \n    startscope_action : \n    \n    function_action1 :\n    \n    function_action2 :\n    \n    function_action3 :\n    \n    recparams : ID COLON type\n              | ID COLON type COMMA recparams\n    \n    recfunc : function recfunc\n            | function\n     \n    write : PRINT LEFTPAR recwrite RIGHTPAR \n     \n    recwrite : expression action_recwrite_exp COMMA recwrite \n               | STRING action_recwrite_cte COMMA  recwrite \n               | expression action_recwrite_exp \n               | STRING action_recwrite_cte\n    \n    action_recwrite_exp :\n    \n    action_recwrite_cte : \n    \n     return : RETURN expression\n    \n    functioncall : ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR \n                 | ID function_call_action1 LEFTPAR  function_call_action2 RIGHTPAR \n    \n    function_call_action1 : \n    \n    function_call_action2 : \n    \n    recfuncexp : expression COMMA recfuncexp\n               | expression recfunc_action1\n    \n    recfunc_action1 :\n    \n    expression : exp RELOP relop_action1 exp relop_action2\n               | exp LOGIC logic_action1 exp logic_action2\n               | exp\n    \n    relop_action1 : \n    \n    relop_action2 : \n    \n    logic_action1 : \n    \n    logic_action2 : \n     \n    exp : term exp_action recexp\n        | term exp_action \n        \n    exp_action :\n     \n    recexp : EX add_operator exp \n     \n    term : factor term_action recterm \n         | factor term_action \n    \n    term_action :\n     \n    recterm : TERMS add_operator term\n    \n    add_operator :\n     factor : factor_action1 LEFTPAR expression RIGHTPAR factor_action2 \n               | EX cte \n               | cte \n    \n    factor_action1 :\n    \n    factor_action2 :\n    \n    type : primitivetype\n        | TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1\n    \n    action_list1 :\n    \n    primitivetype : TINT\n                  | TFLOAT\n                  | TSTRING\n                  | TBOOL\n    \n    assign_list : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    listaccess : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    list_action1 :\n    \n    list_action_3 :\n    \n    nestedvalue : ID DOT ID\n    \n    nestedassign : nestedvalue EQUAL expression\n    \n    cte :    \n        | id\n        | int\n        | float\n        | bool\n        | string\n        | nestedvalue\n        | functioncall\n        | listaccess\n        | specialfunction\n    \n    id : ID\n    \n    string : STRING\n    \n    int : INT\n    \n    float : FLOAT\n    \n    bool : TRUE \n         | FALSE\n    '
    
_lr_action_items = {'MAIN':([0,2,3,4,7,16,21,60,139,142,267,269,286,306,],[-5,5,17,18,-100,25,-99,-7,-90,-92,-89,-20,-91,-19,]),'GLOBAL':([0,2,],[-5,6,]),'VOID':([0,2,3,7,28,34,35,36,43,44,45,46,54,55,56,60,107,139,142,267,269,286,305,306,],[-5,9,9,9,37,37,37,-6,37,-6,-6,58,-6,58,58,-7,58,-90,-92,-89,-20,-91,-8,-19,]),'TLIST':([0,2,3,7,60,61,115,139,142,267,269,286,306,],[-5,11,11,11,-7,11,11,-90,-92,-89,-20,-91,-19,]),'TINT':([0,2,3,7,24,60,61,115,139,142,267,269,286,306,],[-5,12,12,12,12,-7,12,12,-90,-92,-89,-20,-91,-19,]),'TFLOAT':([0,2,3,7,24,60,61,115,139,142,267,269,286,306,],[-5,13,13,13,13,-7,13,13,-90,-92,-89,-20,-91,-19,]),'TSTRING':([0,2,3,7,24,60,61,115,139,142,267,269,286,306,],[-5,14,14,14,14,-7,14,14,-90,-92,-89,-20,-91,-19,]),'TBOOL':([0,2,3,7,24,60,61,115,139,142,267,269,286,306,],[-5,15,15,15,15,-7,15,15,-90,-92,-89,-20,-91,-19,]),'$end':([1,132,172,173,207,],[0,-4,-3,-2,-1,]),'COLON':([5,6,17,18,25,49,50,63,65,67,114,117,119,138,141,179,181,209,212,235,265,304,329,348,368,370,382,],[19,20,26,27,33,61,-17,115,-96,-96,-18,140,140,-95,-95,-96,-96,-12,140,140,140,-12,140,140,140,140,140,]),'FUNC':([8,9,10,12,13,14,15,37,58,120,143,],[22,23,-137,-140,-141,-142,-143,47,111,-139,-138,]),'EQUAL':([10,12,13,14,15,113,120,143,144,225,226,232,277,338,356,],[-137,-140,-141,-142,-143,135,-139,-138,-148,-72,279,283,307,-72,-144,]),'SEMICOLON':([10,12,13,14,15,48,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,110,113,120,130,131,135,143,144,162,163,164,166,167,170,171,176,199,200,201,202,204,214,216,220,221,222,223,224,231,236,237,239,241,245,248,249,250,251,255,256,257,258,259,260,263,268,279,282,283,287,288,291,294,298,299,300,301,302,307,309,314,323,324,325,326,327,328,330,332,334,337,342,343,346,351,360,363,364,367,371,379,380,],[-137,-140,-141,-142,-143,60,-151,-152,-153,-154,-155,-156,-157,-158,-159,-160,-162,-163,-164,-165,-161,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,132,136,-139,172,173,-150,-138,-148,-118,-125,-129,-150,-134,-50,207,210,-119,-121,-124,-128,-133,269,271,272,273,274,275,276,-150,-57,-58,-63,-110,-56,-68,-67,-59,-60,-150,-150,-123,-131,-127,-131,-53,306,-73,-108,-150,-62,-109,-145,-64,-120,-122,-150,-150,-136,-73,-150,-149,-116,-117,-126,-130,-132,-51,-150,-71,-101,351,-66,-61,-70,-82,-150,-65,-69,-83,375,381,-55,]),'COMMA':([10,12,13,14,15,50,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,120,125,137,143,144,149,161,162,163,164,166,167,168,170,186,188,190,196,197,198,199,200,201,202,204,205,236,237,239,241,242,244,245,246,248,249,250,251,252,253,254,255,256,257,258,259,260,263,281,287,288,289,291,292,293,294,297,298,299,300,301,302,312,313,318,319,322,323,324,325,326,327,328,335,336,340,342,343,349,350,353,362,363,364,369,380,],[-137,-140,-141,-142,-143,62,-151,-152,-153,-154,-155,-156,-157,-158,-159,-160,-162,-163,-164,-165,-161,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-139,-150,178,-138,-148,-112,198,-118,-125,-129,-150,-134,-150,-50,-150,-150,-150,-150,-150,-150,-119,-121,-124,-128,-133,262,-57,-58,-63,-110,289,292,-56,293,-68,-67,-59,-60,295,296,297,-150,-150,-123,-131,-127,-131,-53,-150,-62,-109,-150,-145,-150,-150,-64,-150,-120,-122,-150,-150,-136,-106,-107,340,341,344,-116,-117,-126,-130,-132,-51,349,350,-150,-66,-61,-150,-150,362,-150,-65,-69,373,-55,]),'RIGHTPAR':([10,12,13,14,15,51,52,64,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,116,118,120,128,137,143,144,149,162,163,164,166,167,169,170,175,182,183,184,185,186,189,191,192,193,194,195,199,200,201,202,203,204,206,211,236,237,238,239,240,241,242,245,247,248,249,250,251,255,256,257,258,259,260,261,262,263,264,280,281,287,288,289,290,291,294,295,296,298,299,300,301,302,303,310,311,312,313,317,320,321,323,324,325,326,327,328,333,335,336,339,341,342,343,344,349,350,352,354,355,358,359,361,363,364,373,377,380,381,],[-137,-140,-141,-142,-143,65,67,-94,-94,-151,-152,-153,-154,-155,-156,-157,-158,-159,-160,-162,-163,-164,-165,-161,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,138,141,-139,170,-97,-138,-148,-112,-118,-125,-129,-150,-134,-150,-50,209,236,237,-150,239,241,245,-150,248,249,250,251,-119,-121,-124,-128,-150,-133,263,-98,-57,-58,287,-63,288,-110,-115,-56,294,-68,-67,-59,-60,-150,-150,-123,-131,-127,-131,302,-150,-53,304,-150,-150,-62,-109,-150,-114,-145,-64,-150,-150,-120,-122,-150,-150,-136,328,-76,334,-106,-107,-113,342,343,-116,-117,-126,-130,-132,-51,348,-104,-105,-150,-150,-66,-61,-150,-150,-150,-87,363,364,-102,-103,368,-65,-69,-150,380,-55,382,]),'BAR':([11,12,13,14,15,32,],[24,-140,-141,-142,-143,42,]),'LEFTKEY':([19,20,26,27,33,140,],[28,29,34,35,43,180,]),'ID':([22,23,39,51,52,53,62,121,125,135,136,149,150,166,168,169,177,178,180,184,186,188,190,191,196,197,198,199,200,203,210,215,217,218,219,228,229,231,255,256,258,260,262,266,269,271,272,273,274,275,276,279,280,281,283,289,292,293,295,296,297,300,301,306,307,308,309,315,330,339,340,341,344,349,350,351,357,360,362,365,372,373,374,375,376,378,383,384,],[30,31,50,63,63,78,50,144,78,78,-16,-112,78,78,78,78,-15,63,225,78,78,78,78,78,78,78,78,-119,-121,78,-14,225,-24,-25,-26,-79,-80,78,78,78,-131,-131,78,-13,-20,-23,-27,-28,-29,-30,-31,-73,78,78,78,78,78,78,78,78,78,78,78,-19,-73,78,78,338,78,78,78,78,78,78,78,-82,-77,78,78,-74,-88,78,-77,338,-85,-75,-84,-81,]),'VAR':([29,136,177,180,210,215,217,218,219,228,229,266,269,271,272,273,274,275,276,306,357,365,372,374,376,378,383,384,],[39,39,-15,39,39,39,-24,-25,-26,-79,-80,-13,-20,-23,-27,-28,-29,-30,-31,-19,-77,-74,-88,-77,-85,-75,-84,-81,]),'LEFTPAR':([30,31,40,41,78,103,104,105,106,112,122,125,126,127,134,135,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,165,168,169,174,184,186,188,190,191,196,197,198,199,200,203,208,225,227,230,231,233,234,255,256,258,260,262,279,280,281,283,284,285,289,292,293,295,296,297,300,301,307,308,309,316,330,339,340,341,344,349,350,351,360,362,373,],[-93,-93,51,52,-111,125,-52,-54,128,-93,149,-135,168,169,175,-135,182,183,184,185,-112,-135,188,189,190,191,192,193,194,195,196,197,203,-135,-135,-93,-135,-135,-135,-135,-135,-135,-135,-135,-119,-121,-135,264,-111,280,281,-135,-93,-93,-135,-135,-131,-131,-135,-73,-135,-135,-135,315,-86,-135,-135,-135,-135,-135,-135,-135,-135,-73,-135,-135,339,-135,-135,-135,-135,-135,-135,-135,-82,-135,-135,-135,]),'RIGHTKEY':([38,57,108,109,129,136,177,180,210,213,215,217,218,219,228,229,266,269,270,271,272,273,274,275,276,306,345,357,365,372,374,376,378,383,384,],[48,110,130,131,171,-16,-15,214,-14,268,-22,-24,-25,-26,-79,-80,-13,-20,-21,-23,-27,-28,-29,-30,-31,-19,-10,-77,-74,-88,-77,-85,-75,-84,-81,]),'LEFTBRACKET':([42,78,123,225,278,338,],[53,-146,150,-146,308,-146,]),'START':([47,59,],[-9,112,]),'RIGHTBRACKET':([53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,144,150,162,163,164,166,167,170,187,199,200,201,202,204,236,237,239,241,243,245,248,249,250,251,255,256,257,258,259,260,263,287,288,291,294,298,299,300,301,302,308,323,324,325,326,327,328,331,342,343,347,363,364,380,],[-150,120,-151,-152,-153,-154,-155,-156,-157,-158,-159,-160,-162,-163,-164,-165,-161,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-148,-150,-118,-125,-129,-150,-134,-50,-147,-119,-121,-124,-128,-133,-57,-58,-63,-110,291,-56,-68,-67,-59,-60,-150,-150,-123,-131,-127,-131,-53,-62,-109,-145,-64,-120,-122,-150,-150,-136,-150,-116,-117,-126,-130,-132,-51,-147,-66,-61,356,-65,-69,-55,]),'INT':([53,125,135,149,150,166,168,169,184,186,188,190,191,196,197,198,199,200,203,231,255,256,258,260,262,279,280,281,283,289,292,293,295,296,297,300,301,307,308,309,330,339,340,341,344,349,350,351,360,362,373,],[79,79,79,-112,79,79,79,79,79,79,79,79,79,79,79,79,-119,-121,79,79,79,79,-131,-131,79,-73,79,79,79,79,79,79,79,79,79,79,79,-73,79,79,79,79,79,79,79,79,79,-82,79,79,79,]),'FLOAT':([53,125,135,149,150,166,168,169,184,186,188,190,191,196,197,198,199,200,203,231,255,256,258,260,262,279,280,281,283,289,292,293,295,296,297,300,301,307,308,309,330,339,340,341,344,349,350,351,360,362,373,],[80,80,80,-112,80,80,80,80,80,80,80,80,80,80,80,80,-119,-121,80,80,80,80,-131,-131,80,-73,80,80,80,80,80,80,80,80,80,80,80,-73,80,80,80,80,80,80,80,80,80,-82,80,80,80,]),'TRUE':([53,125,135,149,150,166,168,169,184,186,188,190,191,196,197,198,199,200,203,231,255,256,258,260,262,279,280,281,283,289,292,293,295,296,297,300,301,307,308,309,330,339,340,341,344,349,350,351,360,362,373,],[81,81,81,-112,81,81,81,81,81,81,81,81,81,81,81,81,-119,-121,81,81,81,81,-131,-131,81,-73,81,81,81,81,81,81,81,81,81,81,81,-73,81,81,81,81,81,81,81,81,81,-82,81,81,81,]),'FALSE':([53,125,135,149,150,166,168,169,184,186,188,190,191,196,197,198,199,200,203,231,255,256,258,260,262,279,280,281,283,289,292,293,295,296,297,300,301,307,308,309,330,339,340,341,344,349,350,351,360,362,373,],[82,82,82,-112,82,82,82,82,82,82,82,82,82,82,82,82,-119,-121,82,82,82,82,-131,-131,82,-73,82,82,82,82,82,82,82,82,82,82,82,-73,82,82,82,82,82,82,82,82,82,-82,82,82,82,]),'STRING':([53,125,135,149,150,166,168,169,184,186,188,190,191,196,197,198,199,200,203,231,255,256,258,260,262,279,280,281,283,289,292,293,295,296,297,300,301,307,308,309,330,339,340,341,344,349,350,351,360,362,373,],[83,83,83,-112,83,83,83,83,83,83,83,83,83,83,83,83,-119,-121,83,83,83,83,-131,-131,83,-73,83,313,83,83,83,83,83,83,83,83,83,-73,83,83,83,83,83,83,83,313,313,-82,83,83,83,]),'CAPIGAME':([53,125,135,136,149,150,166,168,169,177,180,184,186,188,190,191,196,197,198,199,200,203,210,215,217,218,219,228,229,231,255,256,258,260,262,266,269,271,272,273,274,275,276,279,280,281,283,289,292,293,295,296,297,300,301,306,307,308,309,330,339,340,341,344,349,350,351,357,360,362,365,372,373,374,376,378,383,384,],[102,102,102,-16,-112,102,102,102,102,-15,102,102,102,102,102,102,102,102,102,-119,-121,102,-14,102,-24,-25,-26,-79,-80,102,102,102,-131,-131,102,-13,-20,-23,-27,-28,-29,-30,-31,-73,102,102,102,102,102,102,102,102,102,102,102,-19,-73,102,102,102,102,102,102,102,102,102,-82,-77,102,102,-74,-88,102,-77,-85,-75,-84,-81,]),'CREATE_TEXT':([53,125,135,136,149,150,166,168,169,177,180,184,186,188,190,191,196,197,198,199,200,203,210,215,217,218,219,228,229,231,255,256,258,260,262,266,269,271,272,273,274,275,276,279,280,281,283,289,292,293,295,296,297,300,301,306,307,308,309,330,339,340,341,344,349,350,351,357,360,362,365,372,373,374,376,378,383,384,],[103,103,103,-16,-112,103,103,103,103,-15,103,103,103,103,103,103,103,103,103,-119,-121,103,-14,103,-24,-25,-26,-79,-80,103,103,103,-131,-131,103,-13,-20,-23,-27,-28,-29,-30,-31,-73,103,103,103,103,103,103,103,103,103,103,103,-19,-73,103,103,103,103,103,103,103,103,103,-82,-77,103,103,-74,-88,103,-77,-85,-75,-84,-81,]),'POW':([53,125,135,136,149,150,166,168,169,177,180,184,186,188,190,191,196,197,198,199,200,203,210,215,217,218,219,228,229,231,255,256,258,260,262,266,269,271,272,273,274,275,276,279,280,281,283,289,292,293,295,296,297,300,301,306,307,308,309,330,339,340,341,344,349,350,351,357,360,362,365,372,373,374,376,378,383,384,],[104,104,104,-16,-112,104,104,104,104,-15,104,104,104,104,104,104,104,104,104,-119,-121,104,-14,104,-24,-25,-26,-79,-80,104,104,104,-131,-131,104,-13,-20,-23,-27,-28,-29,-30,-31,-73,104,104,104,104,104,104,104,104,104,104,104,-19,-73,104,104,104,104,104,104,104,104,104,-82,-77,104,104,-74,-88,104,-77,-85,-75,-84,-81,]),'SQRT':([53,125,135,136,149,150,166,168,169,177,180,184,186,188,190,191,196,197,198,199,200,203,210,215,217,218,219,228,229,231,255,256,258,260,262,266,269,271,272,273,274,275,276,279,280,281,283,289,292,293,295,296,297,300,301,306,307,308,309,330,339,340,341,344,349,350,351,357,360,362,365,372,373,374,376,378,383,384,],[105,105,105,-16,-112,105,105,105,105,-15,105,105,105,105,105,105,105,105,105,-119,-121,105,-14,105,-24,-25,-26,-79,-80,105,105,105,-131,-131,105,-13,-20,-23,-27,-28,-29,-30,-31,-73,105,105,105,105,105,105,105,105,105,105,105,-19,-73,105,105,105,105,105,105,105,105,105,-82,-77,105,105,-74,-88,105,-77,-85,-75,-84,-81,]),'QUIT':([53,125,135,136,149,150,166,168,169,177,180,184,186,188,190,191,196,197,198,199,200,203,210,215,217,218,219,228,229,231,255,256,258,260,262,266,269,271,272,273,274,275,276,279,280,281,283,289,292,293,295,296,297,300,301,306,307,308,309,330,339,340,341,344,349,350,351,357,360,362,365,372,373,374,376,378,383,384,],[106,106,106,-16,-112,106,106,106,106,-15,106,106,106,106,106,106,106,106,106,-119,-121,106,-14,106,-24,-25,-26,-79,-80,106,106,106,-131,-131,106,-13,-20,-23,-27,-28,-29,-30,-31,-73,106,106,106,106,106,106,106,106,106,106,106,-19,-73,106,106,106,106,106,106,106,106,106,-82,-77,106,106,-74,-88,106,-77,-85,-75,-84,-81,]),'TERMS':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,125,135,144,149,150,164,166,167,168,169,170,184,186,188,190,191,196,197,198,199,200,202,203,204,231,236,237,239,241,245,248,249,250,251,255,256,258,260,262,263,279,280,281,283,287,288,289,291,292,293,294,295,296,297,300,301,302,307,308,309,313,327,328,330,339,340,341,342,343,344,349,350,351,360,362,363,364,373,380,],[-151,-152,-153,-154,-155,-156,-157,-158,-159,-160,-162,-163,-164,-165,-161,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-150,-150,-148,-112,-150,-129,-150,-134,-150,-150,-50,-150,-150,-150,-150,-150,-150,-150,-150,-119,-121,260,-150,-133,-150,-57,-58,-63,-110,-56,-68,-67,-59,-60,-150,-150,-131,-131,-150,-53,-73,-150,-150,-150,-62,-109,-150,-145,-150,-150,-64,-150,-150,-150,-150,-150,-136,-73,-150,-150,-161,-132,-51,-150,-150,-150,-150,-66,-61,-150,-150,-150,-82,-150,-150,-65,-69,-150,-55,]),'EX':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,125,135,144,149,150,163,164,166,167,168,169,170,184,186,188,190,191,196,197,198,199,200,201,202,203,204,231,236,237,239,241,245,248,249,250,251,255,256,258,259,260,262,263,279,280,281,283,287,288,289,291,292,293,294,295,296,297,300,301,302,307,308,309,313,326,327,328,330,339,340,341,342,343,344,349,350,351,360,362,363,364,373,380,],[-151,-152,-153,-154,-155,-156,-157,-158,-159,-160,-162,-163,-164,-165,-161,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,166,166,-148,-112,166,-125,-129,-150,-134,166,166,-50,166,166,166,166,166,166,166,166,-119,-121,258,-128,166,-133,166,-57,-58,-63,-110,-56,-68,-67,-59,-60,166,166,-131,-127,-131,166,-53,-73,166,166,166,-62,-109,166,-145,166,166,-64,166,166,166,166,166,-136,-73,166,166,-161,-130,-132,-51,166,166,166,166,-66,-61,166,166,166,-82,166,166,-65,-69,166,-55,]),'RELOP':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,125,135,144,149,150,162,163,164,166,167,168,169,170,184,186,188,190,191,196,197,198,201,202,203,204,231,236,237,239,241,245,248,249,250,251,257,258,259,260,262,263,279,280,281,283,287,288,289,291,292,293,294,295,296,297,300,301,302,307,308,309,313,325,326,327,328,330,339,340,341,342,343,344,349,350,351,360,362,363,364,373,380,],[-151,-152,-153,-154,-155,-156,-157,-158,-159,-160,-162,-163,-164,-165,-161,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-150,-150,-148,-112,-150,199,-125,-129,-150,-134,-150,-150,-50,-150,-150,-150,-150,-150,-150,-150,-150,-124,-128,-150,-133,-150,-57,-58,-63,-110,-56,-68,-67,-59,-60,-123,-131,-127,-131,-150,-53,-73,-150,-150,-150,-62,-109,-150,-145,-150,-150,-64,-150,-150,-150,-150,-150,-136,-73,-150,-150,-161,-126,-130,-132,-51,-150,-150,-150,-150,-66,-61,-150,-150,-150,-82,-150,-150,-65,-69,-150,-55,]),'LOGIC':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,125,135,144,149,150,162,163,164,166,167,168,169,170,184,186,188,190,191,196,197,198,201,202,203,204,231,236,237,239,241,245,248,249,250,251,257,258,259,260,262,263,279,280,281,283,287,288,289,291,292,293,294,295,296,297,300,301,302,307,308,309,313,325,326,327,328,330,339,340,341,342,343,344,349,350,351,360,362,363,364,373,380,],[-151,-152,-153,-154,-155,-156,-157,-158,-159,-160,-162,-163,-164,-165,-161,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-150,-150,-148,-112,-150,200,-125,-129,-150,-134,-150,-150,-50,-150,-150,-150,-150,-150,-150,-150,-150,-124,-128,-150,-133,-150,-57,-58,-63,-110,-56,-68,-67,-59,-60,-123,-131,-127,-131,-150,-53,-73,-150,-150,-150,-62,-109,-150,-145,-150,-150,-64,-150,-150,-150,-150,-150,-136,-73,-150,-150,-161,-126,-130,-132,-51,-150,-150,-150,-150,-66,-61,-150,-150,-150,-82,-150,-150,-65,-69,-150,-55,]),'DOT':([78,102,225,],[121,124,121,]),'RUN':([111,133,],[-11,174,]),'SIZE':([121,],[145,]),'HEAD':([121,],[146,]),'FIND':([121,],[147,]),'LAST':([121,],[148,]),'DRAW':([124,],[151,]),'INIT':([124,],[152,]),'SET_FILL':([124,],[153,]),'SET_TITLE':([124,],[154,]),'GET_EVENT':([124,],[155,]),'UPDATE':([124,],[156,]),'WINDOW_H':([124,],[157,]),'WINDOW_W':([124,],[158,]),'SET_DIMENSION':([124,],[159,]),'RAND':([124,],[160,]),'IF':([136,177,180,210,215,217,218,219,228,229,266,269,271,272,273,274,275,276,306,357,365,372,374,376,378,383,384,],[-16,-15,227,-14,227,-24,-25,-26,-79,-80,-13,-20,-23,-27,-28,-29,-30,-31,-19,-77,-74,-88,-77,-85,-75,-84,-81,]),'PRINT':([136,177,180,210,215,217,218,219,228,229,266,269,271,272,273,274,275,276,306,357,365,372,374,376,378,383,384,],[-16,-15,230,-14,230,-24,-25,-26,-79,-80,-13,-20,-23,-27,-28,-29,-30,-31,-19,-77,-74,-88,-77,-85,-75,-84,-81,]),'RETURN':([136,177,180,210,215,217,218,219,228,229,266,269,271,272,273,274,275,276,306,357,365,372,374,376,378,383,384,],[-16,-15,231,-14,231,-24,-25,-26,-79,-80,-13,-20,-23,-27,-28,-29,-30,-31,-19,-77,-74,-88,-77,-85,-75,-84,-81,]),'FOR':([136,177,180,210,215,217,218,219,228,229,266,269,271,272,273,274,275,276,306,357,365,372,374,376,378,383,384,],[-16,-15,233,-14,233,-24,-25,-26,-79,-80,-13,-20,-23,-27,-28,-29,-30,-31,-19,-77,-74,-88,-77,-85,-75,-84,-81,]),'WHILE':([136,177,180,210,215,217,218,219,228,229,266,269,271,272,273,274,275,276,306,357,365,372,374,376,378,383,384,],[-16,-15,234,-14,234,-24,-25,-26,-79,-80,-13,-20,-23,-27,-28,-29,-30,-31,-19,-77,-74,-88,-77,-85,-75,-84,-81,]),'ELSE':([269,306,357,366,],[-20,-19,-78,370,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'capi':([0,],[1,]),'capi_action1':([0,],[2,]),'global':([2,],[3,]),'recfunc':([2,3,7,],[4,16,21,]),'function':([2,3,7,],[7,7,7,]),'type':([2,3,7,61,115,],[8,8,8,113,137,]),'primitivetype':([2,3,7,24,61,115,],[10,10,10,32,10,10,]),'start':([28,34,35,43,],[36,44,45,54,]),'vars':([29,136,180,210,215,],[38,177,218,266,218,]),'startscope_action':([30,31,112,174,233,234,],[40,41,134,208,284,285,]),'capi_action2':([36,44,45,54,],[46,55,56,107,]),'recids':([39,62,],[49,114,]),'run':([46,55,56,107,],[57,108,109,129,]),'start_action1':([47,],[59,]),'recparams':([51,52,178,],[64,66,211,]),'cte':([53,125,135,150,166,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[68,167,167,167,204,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'id':([53,125,135,150,166,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'int':([53,125,135,150,166,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'float':([53,125,135,150,166,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'bool':([53,125,135,150,166,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'string':([53,125,135,150,166,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'nestedvalue':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[74,74,74,74,74,74,74,232,74,74,74,74,74,74,74,74,74,232,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'functioncall':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[75,75,75,75,75,75,75,222,75,75,75,75,75,75,75,75,75,222,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'listaccess':([53,125,135,150,166,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'specialfunction':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[77,77,77,77,77,77,77,224,77,77,77,77,77,77,77,77,77,224,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'draw':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'init':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'size':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'head':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'find':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'last':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'set_fill':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'set_title':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'get_event':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'update':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'window_h':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'window_w':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'set_dimension':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'create_text':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'rand':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'pow':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'sqrt':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'quit':([53,125,135,150,166,168,169,180,184,186,188,190,191,196,197,198,203,215,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'function_action1':([64,66,],[116,118,]),'function_action3':([65,67,179,181,],[117,119,212,235,]),'function_call_action1':([78,225,],[122,122,]),'list_action1':([78,225,338,],[123,278,278,]),'pow_action1':([104,],[126,]),'sqrt_action1':([105,],[127,]),'run_action1':([111,],[133,]),'block':([117,119,212,235,265,329,348,368,370,382,],[139,142,267,286,305,345,357,372,374,383,]),'action_list1':([120,],[143,]),'expression':([125,135,150,168,169,184,186,188,190,191,196,197,198,203,231,262,280,281,283,289,292,293,295,296,297,308,309,330,339,340,341,344,349,350,360,362,373,],[161,176,187,205,206,238,242,244,246,247,252,253,254,261,282,303,310,312,314,242,318,319,320,321,322,331,332,346,352,353,354,355,312,312,367,369,377,]),'exp':([125,135,150,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,308,309,330,339,340,341,344,349,350,360,362,373,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,298,299,162,162,162,162,162,162,162,162,162,162,325,162,162,162,162,162,162,162,162,162,162,162,162,]),'term':([125,135,150,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,326,163,163,163,163,163,163,163,163,163,163,163,163,]),'factor':([125,135,150,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'factor_action1':([125,135,150,168,169,184,186,188,190,191,196,197,198,203,231,255,256,262,280,281,283,289,292,293,295,296,297,300,301,308,309,330,339,340,341,344,349,350,360,362,373,],[165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'function_action2':([138,141,],[179,181,]),'function_call_action2':([149,],[186,]),'exp_action':([163,],[201,]),'term_action':([164,],[202,]),'recstatement':([180,215,],[213,270,]),'statement':([180,215,],[215,215,]),'assign':([180,215,315,375,],[216,216,337,379,]),'condition':([180,215,],[217,217,]),'loop':([180,215,],[219,219,]),'write':([180,215,],[220,220,]),'return':([180,215,],[221,221,]),'nestedassign':([180,215,],[223,223,]),'assign_list':([180,215,315,375,],[226,226,226,226,]),'for':([180,215,],[228,228,]),'while':([180,215,],[229,229,]),'recfuncexp':([186,289,],[240,317,]),'list_action_3':([187,331,],[243,347,]),'relop_action1':([199,],[255,]),'logic_action1':([200,],[256,]),'recexp':([201,],[257,]),'recterm':([202,],[259,]),'main_cont':([209,304,],[265,329,]),'assign_action1':([225,338,],[277,277,]),'recfunc_action1':([242,],[290,]),'add_operator':([258,260,],[300,301,]),'assign_action2':([279,307,],[309,330,]),'recwrite':([281,349,350,],[311,358,359,]),'while_action1':([285,],[316,]),'relop_action2':([298,],[323,]),'logic_action2':([299,],[324,]),'factor_action2':([302,],[327,]),'condition_action1':([310,],[333,]),'action_recwrite_exp':([312,],[335,]),'action_recwrite_cte':([313,],[336,]),'for_action1':([351,],[360,]),'while_action2':([352,],[361,]),'condition_action2':([357,374,],[365,378,]),'condition_action3':([357,],[366,]),'for_action2':([367,],[371,]),'while_action3':([372,],[376,]),'for_action3':([383,],[384,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> capi","S'",1,None,None,None),
  ('capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',11,'p_capi','capi.py',270),
  ('capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',271),
  ('capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',272),
  ('capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',9,'p_capi','capi.py',273),
  ('capi_action1 -> <empty>','capi_action1',0,'p_capi_action1','capi.py',278),
  ('capi_action2 -> <empty>','capi_action2',0,'p_capi_action2','capi.py',286),
  ('global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON','global',6,'p_global','capi.py',292),
  ('start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block','start',9,'p_start','capi.py',301),
  ('start_action1 -> <empty>','start_action1',0,'p_start_action1','capi.py',318),
  ('run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block','run',9,'p_run','capi.py',325),
  ('run_action1 -> <empty>','run_action1',0,'p_run_action1','capi.py',341),
  ('main_cont -> <empty>','main_cont',0,'p_main_cont','capi.py',349),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON vars','vars',8,'p_vars','capi.py',355),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON','vars',7,'p_vars','capi.py',356),
  ('vars -> VAR recids COLON type SEMICOLON vars','vars',6,'p_vars','capi.py',357),
  ('vars -> VAR recids COLON type SEMICOLON','vars',5,'p_vars','capi.py',358),
  ('recids -> ID','recids',1,'p_recids','capi.py',392),
  ('recids -> ID COMMA recids','recids',3,'p_recids','capi.py',393),
  ('block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON','block',5,'p_block','capi.py',403),
  ('block -> COLON LEFTKEY RIGHTKEY SEMICOLON','block',4,'p_block','capi.py',404),
  ('recstatement -> statement recstatement','recstatement',2,'p_recstatement','capi.py',409),
  ('recstatement -> statement','recstatement',1,'p_recstatement','capi.py',410),
  ('statement -> assign SEMICOLON','statement',2,'p_statement','capi.py',416),
  ('statement -> condition','statement',1,'p_statement','capi.py',417),
  ('statement -> vars','statement',1,'p_statement','capi.py',418),
  ('statement -> loop','statement',1,'p_statement','capi.py',419),
  ('statement -> write SEMICOLON','statement',2,'p_statement','capi.py',420),
  ('statement -> return SEMICOLON','statement',2,'p_statement','capi.py',421),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement','capi.py',422),
  ('statement -> nestedassign SEMICOLON','statement',2,'p_statement','capi.py',423),
  ('statement -> specialfunction SEMICOLON','statement',2,'p_statement','capi.py',424),
  ('specialfunction -> draw','specialfunction',1,'p_specialfunction','capi.py',431),
  ('specialfunction -> init','specialfunction',1,'p_specialfunction','capi.py',432),
  ('specialfunction -> size','specialfunction',1,'p_specialfunction','capi.py',433),
  ('specialfunction -> head','specialfunction',1,'p_specialfunction','capi.py',434),
  ('specialfunction -> find','specialfunction',1,'p_specialfunction','capi.py',435),
  ('specialfunction -> last','specialfunction',1,'p_specialfunction','capi.py',436),
  ('specialfunction -> set_fill','specialfunction',1,'p_specialfunction','capi.py',437),
  ('specialfunction -> set_title','specialfunction',1,'p_specialfunction','capi.py',438),
  ('specialfunction -> get_event','specialfunction',1,'p_specialfunction','capi.py',439),
  ('specialfunction -> update','specialfunction',1,'p_specialfunction','capi.py',440),
  ('specialfunction -> window_h','specialfunction',1,'p_specialfunction','capi.py',441),
  ('specialfunction -> window_w','specialfunction',1,'p_specialfunction','capi.py',442),
  ('specialfunction -> set_dimension','specialfunction',1,'p_specialfunction','capi.py',443),
  ('specialfunction -> create_text','specialfunction',1,'p_specialfunction','capi.py',444),
  ('specialfunction -> rand','specialfunction',1,'p_specialfunction','capi.py',445),
  ('specialfunction -> pow','specialfunction',1,'p_specialfunction','capi.py',446),
  ('specialfunction -> sqrt','specialfunction',1,'p_specialfunction','capi.py',447),
  ('specialfunction -> quit','specialfunction',1,'p_specialfunction','capi.py',448),
  ('quit -> QUIT LEFTPAR RIGHTPAR','quit',3,'p_quit','capi.py',454),
  ('pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR','pow',7,'p_pow','capi.py',460),
  ('pow_action1 -> <empty>','pow_action1',0,'p_pow_action1','capi.py',473),
  ('sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR','sqrt',5,'p_sqrt','capi.py',479),
  ('sqrt_action1 -> <empty>','sqrt_action1',0,'p_sqrt_action1','capi.py',490),
  ('draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR','draw',14,'p_draw','capi.py',498),
  ('init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR','init',5,'p_init','capi.py',516),
  ('size -> ID DOT SIZE LEFTPAR RIGHTPAR','size',5,'p_size','capi.py',522),
  ('head -> ID DOT HEAD LEFTPAR RIGHTPAR','head',5,'p_head','capi.py',550),
  ('window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR','window_h',5,'p_window_h','capi.py',580),
  ('window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR','window_w',5,'p_window_w','capi.py',589),
  ('rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR','rand',8,'p_rand','capi.py',597),
  ('find -> ID DOT FIND LEFTPAR expression RIGHTPAR','find',6,'p_find','capi.py',609),
  ('last -> ID DOT LAST LEFTPAR RIGHTPAR','last',5,'p_last','capi.py',642),
  ('set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR','set_title',6,'p_set_title','capi.py',674),
  ('set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_fill',10,'p_set_fill','capi.py',687),
  ('set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR','set_dimension',8,'p_set_dimension','capi.py',698),
  ('update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR','update',5,'p_update','capi.py',709),
  ('get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR','get_event',5,'p_get_event','capi.py',715),
  ('create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR','create_text',10,'p_create_text','capi.py',724),
  ('assign -> ID assign_action1 EQUAL assign_action2 expression','assign',5,'p_assign','capi.py',741),
  ('assign -> assign_list EQUAL assign_action2 expression','assign',4,'p_assign','capi.py',742),
  ('assign_action1 -> <empty>','assign_action1',0,'p_assign_action1','capi.py',807),
  ('assign_action2 -> <empty>','assign_action2',0,'p_assign_action2','capi.py',816),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2','condition',7,'p_condition','capi.py',822),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2','condition',10,'p_condition','capi.py',823),
  ('condition_action1 -> <empty>','condition_action1',0,'p_condition_action1','capi.py',828),
  ('condition_action2 -> <empty>','condition_action2',0,'p_condition_action2','capi.py',841),
  ('condition_action3 -> <empty>','condition_action3',0,'p_condition_action3','capi.py',848),
  ('loop -> for','loop',1,'p_loop','capi.py',858),
  ('loop -> while','loop',1,'p_loop','capi.py',859),
  ('for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3','for',14,'p_for','capi.py',864),
  ('for_action1 -> <empty>','for_action1',0,'p_for_action1','capi.py',872),
  ('for_action2 -> <empty>','for_action2',0,'p_for_action2','capi.py',880),
  ('for_action3 -> <empty>','for_action3',0,'p_for_action3','capi.py',894),
  ('while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3','while',9,'p_while','capi.py',908),
  ('while_action1 -> <empty>','while_action1',0,'p_while_action1','capi.py',917),
  ('while_action2 -> <empty>','while_action2',0,'p_while_action2','capi.py',923),
  ('while_action3 -> <empty>','while_action3',0,'p_while_action3','capi.py',937),
  ('function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',947),
  ('function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',948),
  ('function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',949),
  ('function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',950),
  ('startscope_action -> <empty>','startscope_action',0,'p_startscope_action','capi.py',980),
  ('function_action1 -> <empty>','function_action1',0,'p_function_action1','capi.py',999),
  ('function_action2 -> <empty>','function_action2',0,'p_function_action2','capi.py',1005),
  ('function_action3 -> <empty>','function_action3',0,'p_function_action3','capi.py',1016),
  ('recparams -> ID COLON type','recparams',3,'p_recparams','capi.py',1025),
  ('recparams -> ID COLON type COMMA recparams','recparams',5,'p_recparams','capi.py',1026),
  ('recfunc -> function recfunc','recfunc',2,'p_recfunc','capi.py',1039),
  ('recfunc -> function','recfunc',1,'p_recfunc','capi.py',1040),
  ('write -> PRINT LEFTPAR recwrite RIGHTPAR','write',4,'p_write','capi.py',1045),
  ('recwrite -> expression action_recwrite_exp COMMA recwrite','recwrite',4,'p_recwrite','capi.py',1050),
  ('recwrite -> STRING action_recwrite_cte COMMA recwrite','recwrite',4,'p_recwrite','capi.py',1051),
  ('recwrite -> expression action_recwrite_exp','recwrite',2,'p_recwrite','capi.py',1052),
  ('recwrite -> STRING action_recwrite_cte','recwrite',2,'p_recwrite','capi.py',1053),
  ('action_recwrite_exp -> <empty>','action_recwrite_exp',0,'p_action_recwrite_exp','capi.py',1057),
  ('action_recwrite_cte -> <empty>','action_recwrite_cte',0,'p_action_recwrite_cte','capi.py',1066),
  ('return -> RETURN expression','return',2,'p_return','capi.py',1073),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR','functioncall',6,'p_functioncall','capi.py',1101),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR','functioncall',5,'p_functioncall','capi.py',1102),
  ('function_call_action1 -> <empty>','function_call_action1',0,'p_function_call_action1','capi.py',1144),
  ('function_call_action2 -> <empty>','function_call_action2',0,'p_function_call_action2','capi.py',1156),
  ('recfuncexp -> expression COMMA recfuncexp','recfuncexp',3,'p_recfuncexp','capi.py',1165),
  ('recfuncexp -> expression recfunc_action1','recfuncexp',2,'p_recfuncexp','capi.py',1166),
  ('recfunc_action1 -> <empty>','recfunc_action1',0,'p_recfunc_action1','capi.py',1177),
  ('expression -> exp RELOP relop_action1 exp relop_action2','expression',5,'p_expression','capi.py',1221),
  ('expression -> exp LOGIC logic_action1 exp logic_action2','expression',5,'p_expression','capi.py',1222),
  ('expression -> exp','expression',1,'p_expression','capi.py',1223),
  ('relop_action1 -> <empty>','relop_action1',0,'p_relop_action1','capi.py',1228),
  ('relop_action2 -> <empty>','relop_action2',0,'p_relop_action2','capi.py',1234),
  ('logic_action1 -> <empty>','logic_action1',0,'p_logic_action1','capi.py',1257),
  ('logic_action2 -> <empty>','logic_action2',0,'p_logic_action2','capi.py',1263),
  ('exp -> term exp_action recexp','exp',3,'p_exp','capi.py',1286),
  ('exp -> term exp_action','exp',2,'p_exp','capi.py',1287),
  ('exp_action -> <empty>','exp_action',0,'p_exp_action','capi.py',1292),
  ('recexp -> EX add_operator exp','recexp',3,'p_recexp','capi.py',1316),
  ('term -> factor term_action recterm','term',3,'p_term','capi.py',1321),
  ('term -> factor term_action','term',2,'p_term','capi.py',1322),
  ('term_action -> <empty>','term_action',0,'p_term_action','capi.py',1327),
  ('recterm -> TERMS add_operator term','recterm',3,'p_recterm','capi.py',1350),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','capi.py',1355),
  ('factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2','factor',5,'p_factor','capi.py',1361),
  ('factor -> EX cte','factor',2,'p_factor','capi.py',1362),
  ('factor -> cte','factor',1,'p_factor','capi.py',1363),
  ('factor_action1 -> <empty>','factor_action1',0,'p_factor_action1','capi.py',1377),
  ('factor_action2 -> <empty>','factor_action2',0,'p_factor_action2','capi.py',1383),
  ('type -> primitivetype','type',1,'p_type','capi.py',1389),
  ('type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1','type',8,'p_type','capi.py',1390),
  ('action_list1 -> <empty>','action_list1',0,'p_action_list1','capi.py',1399),
  ('primitivetype -> TINT','primitivetype',1,'p_primitivetype','capi.py',1408),
  ('primitivetype -> TFLOAT','primitivetype',1,'p_primitivetype','capi.py',1409),
  ('primitivetype -> TSTRING','primitivetype',1,'p_primitivetype','capi.py',1410),
  ('primitivetype -> TBOOL','primitivetype',1,'p_primitivetype','capi.py',1411),
  ('assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','assign_list',6,'p_assign_list','capi.py',1418),
  ('listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','listaccess',6,'p_listaccess','capi.py',1430),
  ('list_action1 -> <empty>','list_action1',0,'p_list_action1','capi.py',1443),
  ('list_action_3 -> <empty>','list_action_3',0,'p_list_action_3','capi.py',1452),
  ('nestedvalue -> ID DOT ID','nestedvalue',3,'p_nestedvalue','capi.py',1473),
  ('nestedassign -> nestedvalue EQUAL expression','nestedassign',3,'p_nestedassign','capi.py',1478),
  ('cte -> <empty>','cte',0,'p_cte','capi.py',1483),
  ('cte -> id','cte',1,'p_cte','capi.py',1484),
  ('cte -> int','cte',1,'p_cte','capi.py',1485),
  ('cte -> float','cte',1,'p_cte','capi.py',1486),
  ('cte -> bool','cte',1,'p_cte','capi.py',1487),
  ('cte -> string','cte',1,'p_cte','capi.py',1488),
  ('cte -> nestedvalue','cte',1,'p_cte','capi.py',1489),
  ('cte -> functioncall','cte',1,'p_cte','capi.py',1490),
  ('cte -> listaccess','cte',1,'p_cte','capi.py',1491),
  ('cte -> specialfunction','cte',1,'p_cte','capi.py',1492),
  ('id -> ID','id',1,'p_id','capi.py',1498),
  ('string -> STRING','string',1,'p_string','capi.py',1518),
  ('int -> INT','int',1,'p_int','capi.py',1525),
  ('float -> FLOAT','float',1,'p_float','capi.py',1532),
  ('bool -> TRUE','bool',1,'p_bool','capi.py',1539),
  ('bool -> FALSE','bool',1,'p_bool','capi.py',1540),
]
