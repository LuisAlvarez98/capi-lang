Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OBJECT
    TLIST

Grammar

Rule 0     S' -> capi
Rule 1     capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 2     capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 3     capi -> global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 4     capi -> MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 5     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 6     start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 7     run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 8     vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 9     vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 10    vars -> VAR recids COLON type SEMICOLON vars
Rule 11    vars -> VAR recids COLON type SEMICOLON
Rule 12    recids -> ID
Rule 13    recids -> ID COMMA recids
Rule 14    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 15    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 16    recstatement -> statement recstatement
Rule 17    recstatement -> statement
Rule 18    statement -> assign SEMICOLON
Rule 19    statement -> condition
Rule 20    statement -> vars
Rule 21    statement -> loop
Rule 22    statement -> write SEMICOLON
Rule 23    statement -> return SEMICOLON
Rule 24    statement -> functioncall SEMICOLON
Rule 25    statement -> nestedassign SEMICOLON
Rule 26    statement -> specialfunction SEMICOLON
Rule 27    specialfunction -> draw
Rule 28    specialfunction -> size
Rule 29    specialfunction -> head
Rule 30    specialfunction -> tail
Rule 31    specialfunction -> last
Rule 32    specialfunction -> set_title
Rule 33    specialfunction -> set_dimension
Rule 34    specialfunction -> set_color
Rule 35    specialfunction -> create_object
Rule 36    specialfunction -> create_text
Rule 37    draw -> DRAW LEFTPAR recfuncexp RIGHTPAR
Rule 38    size -> SIZE LEFTPAR RIGHTPAR
Rule 39    head -> HEAD LEFTPAR RIGHTPAR
Rule 40    tail -> TAIL LEFTPAR RIGHTPAR
Rule 41    last -> LAST LEFTPAR RIGHTPAR
Rule 42    set_title -> SET_TITLE LEFTPAR expression RIGHTPAR
Rule 43    set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 44    set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 45    create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
Rule 46    create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR
Rule 47    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 48    assign_action1 -> <empty>
Rule 49    assign_action2 -> <empty>
Rule 50    condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 51    condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 52    condition_action1 -> <empty>
Rule 53    condition_action2 -> <empty>
Rule 54    condition_action3 -> <empty>
Rule 55    loop -> for
Rule 56    loop -> while
Rule 57    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 58    for_action1 -> <empty>
Rule 59    for_action2 -> <empty>
Rule 60    for_action3 -> <empty>
Rule 61    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 62    while_action1 -> <empty>
Rule 63    while_action2 -> <empty>
Rule 64    while_action3 -> <empty>
Rule 65    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 66    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 67    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 68    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 69    startscope_action -> <empty>
Rule 70    function_action1 -> <empty>
Rule 71    function_action2 -> <empty>
Rule 72    function_action3 -> <empty>
Rule 73    recparams -> ID COLON type
Rule 74    recparams -> ID COLON type COMMA recparams
Rule 75    recfunc -> function recfunc
Rule 76    recfunc -> function
Rule 77    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 78    recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 79    recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 80    recwrite -> expression action_recwrite_exp
Rule 81    recwrite -> STRING action_recwrite_cte
Rule 82    action_recwrite_exp -> <empty>
Rule 83    action_recwrite_cte -> <empty>
Rule 84    return -> RETURN expression
Rule 85    functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
Rule 86    functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR
Rule 87    function_call_action1 -> <empty>
Rule 88    recfuncexp -> expression COMMA recfuncexp
Rule 89    recfuncexp -> expression recfunc_action1
Rule 90    recfunc_action1 -> <empty>
Rule 91    expression -> exp RELOP relop_action1 exp relop_action2
Rule 92    expression -> exp LOGIC logic_action1 exp logic_action2
Rule 93    expression -> exp
Rule 94    relop_action1 -> <empty>
Rule 95    relop_action2 -> <empty>
Rule 96    logic_action1 -> <empty>
Rule 97    logic_action2 -> <empty>
Rule 98    exp -> term exp_action recexp
Rule 99    exp -> term exp_action
Rule 100   exp_action -> <empty>
Rule 101   recexp -> EX add_operator exp
Rule 102   term -> factor term_action recterm
Rule 103   term -> factor term_action
Rule 104   term_action -> <empty>
Rule 105   recterm -> TERMS add_operator term
Rule 106   add_operator -> <empty>
Rule 107   factor -> LEFTPAR expression RIGHTPAR
Rule 108   factor -> EX cte
Rule 109   factor -> cte
Rule 110   type -> primitivetype
Rule 111   type -> LIST LEFTHAT primitivetype RIGHTHAT
Rule 112   primitivetype -> TINT
Rule 113   primitivetype -> TFLOAT
Rule 114   primitivetype -> TSTRING
Rule 115   primitivetype -> TBOOL
Rule 116   primitivetype -> TOBJECT
Rule 117   listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
Rule 118   nestedvalue -> ID DOT ID
Rule 119   nestedassign -> nestedvalue EQUAL expression
Rule 120   cte -> string
Rule 121   cte -> id
Rule 122   cte -> int
Rule 123   cte -> float
Rule 124   cte -> bool
Rule 125   cte -> nestedvalue
Rule 126   cte -> functioncall
Rule 127   cte -> listaccess
Rule 128   cte -> specialfunction
Rule 129   id -> ID
Rule 130   string -> STRING
Rule 131   int -> INT
Rule 132   float -> FLOAT
Rule 133   bool -> TRUE
Rule 134   bool -> FALSE

Terminals, with rules where they appear

COLON                : 1 2 3 4 5 8 9 10 11 14 15 73 74
COMMA                : 13 43 44 44 74 78 79 88
COMMENT              : 
CREATE_OBJECT        : 45
CREATE_TEXT          : 46
DOT                  : 118
DRAW                 : 37
ELSE                 : 51
EQUAL                : 8 9 47 119
EX                   : 101 108
FALSE                : 134
FLOAT                : 132
FOR                  : 57
FUNC                 : 6 7 65 66 67 68
GLOBAL               : 5
HEAD                 : 39
ID                   : 12 13 47 65 66 67 68 73 74 85 86 117 118 118 129
IF                   : 50 51
INT                  : 131
LAST                 : 41
LEFTBRACKET          : 117
LEFTHAT              : 111
LEFTKEY              : 1 2 3 4 5 14 15
LEFTPAR              : 6 7 37 38 39 40 41 42 43 44 45 46 50 51 57 61 65 66 67 68 77 85 86 107
LIST                 : 111
LOGIC                : 92
MAIN                 : 1 2 3 4
OBJECT               : 
PRINT                : 77
RELOP                : 91
RETURN               : 84
RIGHTBRACKET         : 117
RIGHTHAT             : 111
RIGHTKEY             : 1 2 3 4 5 14 15
RIGHTPAR             : 6 7 37 38 39 40 41 42 43 44 45 46 50 51 57 61 65 66 67 68 77 85 86 107
RUN                  : 7
SEMICOLON            : 1 2 3 4 5 8 9 10 11 14 15 18 22 23 24 25 26 57 57 57 117
SET_COLOR            : 44
SET_DIMENSION        : 43
SET_TITLE            : 42
SIZE                 : 38
START                : 6
STRING               : 79 81 130
TAIL                 : 40
TBOOL                : 115
TERMS                : 105
TFLOAT               : 113
TINT                 : 112
TLIST                : 
TOBJECT              : 116
TRUE                 : 133
TSTRING              : 114
VAR                  : 8 9 10 11
VOID                 : 6 7 67 68
WHILE                : 61
error                : 

Nonterminals, with rules where they appear

action_recwrite_cte  : 79 81
action_recwrite_exp  : 78 80
add_operator         : 101 105
assign               : 18 57 57
assign_action1       : 47
assign_action2       : 47
block                : 6 7 50 51 51 57 61 65 66 67 68
bool                 : 124
capi                 : 0
condition            : 19
condition_action1    : 50 51
condition_action2    : 50 51
condition_action3    : 51
create_object        : 35
create_text          : 36
cte                  : 108 109
draw                 : 27
exp                  : 91 91 92 92 93 101
exp_action           : 98 99
expression           : 8 9 42 43 43 44 44 44 47 50 51 57 61 78 80 84 88 89 107 117 119
factor               : 102 103
float                : 123
for                  : 55
for_action1          : 57
for_action2          : 57
for_action3          : 57
function             : 75 76
function_action1     : 65 67
function_action2     : 65 67
function_action3     : 6 7 65 66 67 68
function_call_action1 : 85 86
functioncall         : 24 126
global               : 1 3
head                 : 29
id                   : 121
int                  : 122
last                 : 31
listaccess           : 127
logic_action1        : 92
logic_action2        : 92
loop                 : 21
nestedassign         : 25
nestedvalue          : 119 125
primitivetype        : 110 111
recexp               : 98
recfunc              : 1 2 75
recfunc_action1      : 89
recfuncexp           : 37 45 46 85 88
recids               : 8 9 10 11 13
recparams            : 65 67 74
recstatement         : 14 16
recterm              : 102
recwrite             : 77 78 79
relop_action1        : 91
relop_action2        : 91
return               : 23
run                  : 1 2 3 4
set_color            : 34
set_dimension        : 33
set_title            : 32
size                 : 28
specialfunction      : 26 128
start                : 1 2 3 4
startscope_action    : 6 7 50 51 57 61 65 66 67 68
statement            : 16 17
string               : 120
tail                 : 30
term                 : 98 99 105
term_action          : 102 103
type                 : 8 9 10 11 65 66 73 74
vars                 : 5 8 10 20
while                : 56
while_action1        : 61
while_action2        : 61
while_action3        : 61
write                : 22

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (2) capi -> . recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (3) capi -> . global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (4) capi -> . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (5) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (75) recfunc -> . function recfunc
    (76) recfunc -> . function
    (65) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (66) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (67) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (110) type -> . primitivetype
    (111) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (112) primitivetype -> . TINT
    (113) primitivetype -> . TFLOAT
    (114) primitivetype -> . TSTRING
    (115) primitivetype -> . TBOOL
    (116) primitivetype -> . TOBJECT

    MAIN            shift and go to state 4
    GLOBAL          shift and go to state 5
    VOID            shift and go to state 8
    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    capi                           shift and go to state 1
    global                         shift and go to state 2
    recfunc                        shift and go to state 3
    function                       shift and go to state 6
    type                           shift and go to state 7
    primitivetype                  shift and go to state 9

state 1

    (0) S' -> capi .



state 2

    (1) capi -> global . recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (3) capi -> global . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (75) recfunc -> . function recfunc
    (76) recfunc -> . function
    (65) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (66) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (67) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (110) type -> . primitivetype
    (111) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (112) primitivetype -> . TINT
    (113) primitivetype -> . TFLOAT
    (114) primitivetype -> . TSTRING
    (115) primitivetype -> . TBOOL
    (116) primitivetype -> . TOBJECT

    MAIN            shift and go to state 17
    VOID            shift and go to state 8
    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    recfunc                        shift and go to state 16
    function                       shift and go to state 6
    type                           shift and go to state 7
    primitivetype                  shift and go to state 9

state 3

    (2) capi -> recfunc . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 18


state 4

    (4) capi -> MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 19


state 5

    (5) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 6

    (75) recfunc -> function . recfunc
    (76) recfunc -> function .
    (75) recfunc -> . function recfunc
    (76) recfunc -> . function
    (65) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (66) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (67) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (110) type -> . primitivetype
    (111) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (112) primitivetype -> . TINT
    (113) primitivetype -> . TFLOAT
    (114) primitivetype -> . TSTRING
    (115) primitivetype -> . TBOOL
    (116) primitivetype -> . TOBJECT

    MAIN            reduce using rule 76 (recfunc -> function .)
    VOID            shift and go to state 8
    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    function                       shift and go to state 6
    recfunc                        shift and go to state 21
    type                           shift and go to state 7
    primitivetype                  shift and go to state 9

state 7

    (65) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (66) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 22


state 8

    (67) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 9

    (110) type -> primitivetype .

    FUNC            reduce using rule 110 (type -> primitivetype .)
    EQUAL           reduce using rule 110 (type -> primitivetype .)
    SEMICOLON       reduce using rule 110 (type -> primitivetype .)
    COMMA           reduce using rule 110 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 110 (type -> primitivetype .)


state 10

    (111) type -> LIST . LEFTHAT primitivetype RIGHTHAT

    LEFTHAT         shift and go to state 24


state 11

    (112) primitivetype -> TINT .

    FUNC            reduce using rule 112 (primitivetype -> TINT .)
    RIGHTHAT        reduce using rule 112 (primitivetype -> TINT .)
    EQUAL           reduce using rule 112 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 112 (primitivetype -> TINT .)
    COMMA           reduce using rule 112 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 112 (primitivetype -> TINT .)


state 12

    (113) primitivetype -> TFLOAT .

    FUNC            reduce using rule 113 (primitivetype -> TFLOAT .)
    RIGHTHAT        reduce using rule 113 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 113 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 113 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 113 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 113 (primitivetype -> TFLOAT .)


state 13

    (114) primitivetype -> TSTRING .

    FUNC            reduce using rule 114 (primitivetype -> TSTRING .)
    RIGHTHAT        reduce using rule 114 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 114 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 114 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 114 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 114 (primitivetype -> TSTRING .)


state 14

    (115) primitivetype -> TBOOL .

    FUNC            reduce using rule 115 (primitivetype -> TBOOL .)
    RIGHTHAT        reduce using rule 115 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 115 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 115 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 115 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 115 (primitivetype -> TBOOL .)


state 15

    (116) primitivetype -> TOBJECT .

    FUNC            reduce using rule 116 (primitivetype -> TOBJECT .)
    RIGHTHAT        reduce using rule 116 (primitivetype -> TOBJECT .)
    EQUAL           reduce using rule 116 (primitivetype -> TOBJECT .)
    SEMICOLON       reduce using rule 116 (primitivetype -> TOBJECT .)
    COMMA           reduce using rule 116 (primitivetype -> TOBJECT .)
    RIGHTPAR        reduce using rule 116 (primitivetype -> TOBJECT .)


state 16

    (1) capi -> global recfunc . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 25


state 17

    (3) capi -> global MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 26


state 18

    (2) capi -> recfunc MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (4) capi -> MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 28


state 20

    (5) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (75) recfunc -> function recfunc .

    MAIN            reduce using rule 75 (recfunc -> function recfunc .)


state 22

    (65) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (66) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 30


state 23

    (67) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (111) type -> LIST LEFTHAT . primitivetype RIGHTHAT
    (112) primitivetype -> . TINT
    (113) primitivetype -> . TFLOAT
    (114) primitivetype -> . TSTRING
    (115) primitivetype -> . TBOOL
    (116) primitivetype -> . TOBJECT

    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    primitivetype                  shift and go to state 32

state 25

    (1) capi -> global recfunc MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 33


state 26

    (3) capi -> global MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 34


state 27

    (2) capi -> recfunc MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (4) capi -> MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 37

    start                          shift and go to state 36

state 29

    (5) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 39

    vars                           shift and go to state 38

state 30

    (65) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (66) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 40

state 31

    (67) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (111) type -> LIST LEFTHAT primitivetype . RIGHTHAT

    RIGHTHAT        shift and go to state 42


state 33

    (1) capi -> global recfunc MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 43


state 34

    (3) capi -> global MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 37

    start                          shift and go to state 44

state 35

    (2) capi -> recfunc MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 37

    start                          shift and go to state 45

state 36

    (4) capi -> MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 47

    run                            shift and go to state 46

state 37

    (6) start -> VOID . FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 48


state 38

    (5) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 49


state 39

    (8) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (10) vars -> VAR . recids COLON type SEMICOLON vars
    (11) vars -> VAR . recids COLON type SEMICOLON
    (12) recids -> . ID
    (13) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 50

state 40

    (65) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (66) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 41

    (67) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 53


state 42

    (111) type -> LIST LEFTHAT primitivetype RIGHTHAT .

    FUNC            reduce using rule 111 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    EQUAL           reduce using rule 111 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    SEMICOLON       reduce using rule 111 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    COMMA           reduce using rule 111 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    RIGHTPAR        reduce using rule 111 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)


state 43

    (1) capi -> global recfunc MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 37

    start                          shift and go to state 54

state 44

    (3) capi -> global MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 47

    run                            shift and go to state 55

state 45

    (2) capi -> recfunc MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 47

    run                            shift and go to state 56

state 46

    (4) capi -> MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 57


state 47

    (7) run -> VOID . FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 58


state 48

    (6) start -> VOID FUNC . START startscope_action LEFTPAR RIGHTPAR function_action3 block

    START           shift and go to state 59


state 49

    (5) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 60


state 50

    (8) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (9) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (10) vars -> VAR recids . COLON type SEMICOLON vars
    (11) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 61


state 51

    (12) recids -> ID .
    (13) recids -> ID . COMMA recids

    COLON           reduce using rule 12 (recids -> ID .)
    COMMA           shift and go to state 62


state 52

    (65) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (66) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (73) recparams -> . ID COLON type
    (74) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 65
    ID              shift and go to state 63

    recparams                      shift and go to state 64

state 53

    (67) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (73) recparams -> . ID COLON type
    (74) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 67
    ID              shift and go to state 63

    recparams                      shift and go to state 66

state 54

    (1) capi -> global recfunc MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 47

    run                            shift and go to state 68

state 55

    (3) capi -> global MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 69


state 56

    (2) capi -> recfunc MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 70


state 57

    (4) capi -> MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 71


state 58

    (7) run -> VOID FUNC . RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    RUN             shift and go to state 72


state 59

    (6) start -> VOID FUNC START . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 73

state 60

    (5) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 61

    (8) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (9) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (10) vars -> VAR recids COLON . type SEMICOLON vars
    (11) vars -> VAR recids COLON . type SEMICOLON
    (110) type -> . primitivetype
    (111) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (112) primitivetype -> . TINT
    (113) primitivetype -> . TFLOAT
    (114) primitivetype -> . TSTRING
    (115) primitivetype -> . TBOOL
    (116) primitivetype -> . TOBJECT

    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    type                           shift and go to state 74
    primitivetype                  shift and go to state 9

state 62

    (13) recids -> ID COMMA . recids
    (12) recids -> . ID
    (13) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 75

state 63

    (73) recparams -> ID . COLON type
    (74) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 76


state 64

    (65) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function_action1 -> .

    RIGHTPAR        reduce using rule 70 (function_action1 -> .)

    function_action1               shift and go to state 77

state 65

    (66) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (72) function_action3 -> .

    COLON           reduce using rule 72 (function_action3 -> .)

    function_action3               shift and go to state 78

state 66

    (67) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function_action1 -> .

    RIGHTPAR        reduce using rule 70 (function_action1 -> .)

    function_action1               shift and go to state 79

state 67

    (68) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (72) function_action3 -> .

    COLON           reduce using rule 72 (function_action3 -> .)

    function_action3               shift and go to state 80

state 68

    (1) capi -> global recfunc MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 81


state 69

    (3) capi -> global MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 82


state 70

    (2) capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 83


state 71

    (4) capi -> MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 72

    (7) run -> VOID FUNC RUN . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 84

state 73

    (6) start -> VOID FUNC START startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 85


state 74

    (8) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (9) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (10) vars -> VAR recids COLON type . SEMICOLON vars
    (11) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 86
    SEMICOLON       shift and go to state 87


state 75

    (13) recids -> ID COMMA recids .

    COLON           reduce using rule 13 (recids -> ID COMMA recids .)


state 76

    (73) recparams -> ID COLON . type
    (74) recparams -> ID COLON . type COMMA recparams
    (110) type -> . primitivetype
    (111) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (112) primitivetype -> . TINT
    (113) primitivetype -> . TFLOAT
    (114) primitivetype -> . TSTRING
    (115) primitivetype -> . TBOOL
    (116) primitivetype -> . TOBJECT

    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    type                           shift and go to state 88
    primitivetype                  shift and go to state 9

state 77

    (65) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 89


state 78

    (66) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 90

state 79

    (67) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 92


state 80

    (68) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 93

state 81

    (1) capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 94


state 82

    (3) capi -> global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 83

    (2) capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 84

    (7) run -> VOID FUNC RUN startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 95


state 85

    (6) start -> VOID FUNC START startscope_action LEFTPAR . RIGHTPAR function_action3 block

    RIGHTPAR        shift and go to state 96


state 86

    (8) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (9) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 97
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 87

    (10) vars -> VAR recids COLON type SEMICOLON . vars
    (11) vars -> VAR recids COLON type SEMICOLON .
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    DRAW            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SIZE            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    HEAD            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    TAIL            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    LAST            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SET_TITLE       reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SET_DIMENSION   reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SET_COLOR       reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_OBJECT   reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 139

state 88

    (73) recparams -> ID COLON type .
    (74) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 73 (recparams -> ID COLON type .)
    COMMA           shift and go to state 140


state 89

    (65) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (71) function_action2 -> .

    COLON           reduce using rule 71 (function_action2 -> .)

    function_action2               shift and go to state 141

state 90

    (66) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    LIST            reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 91

    (14) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 142


state 92

    (67) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (71) function_action2 -> .

    COLON           reduce using rule 71 (function_action2 -> .)

    function_action2               shift and go to state 143

state 93

    (68) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    LIST            reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 94

    (1) capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 95

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR . RIGHTPAR function_action3 block

    RIGHTPAR        shift and go to state 144


state 96

    (6) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (72) function_action3 -> .

    COLON           reduce using rule 72 (function_action3 -> .)

    function_action3               shift and go to state 145

state 97

    (8) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (9) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 146


state 98

    (91) expression -> exp . RELOP relop_action1 exp relop_action2
    (92) expression -> exp . LOGIC logic_action1 exp logic_action2
    (93) expression -> exp .

    RELOP           shift and go to state 147
    LOGIC           shift and go to state 148
    SEMICOLON       reduce using rule 93 (expression -> exp .)
    RIGHTPAR        reduce using rule 93 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 93 (expression -> exp .)
    COMMA           reduce using rule 93 (expression -> exp .)


state 99

    (98) exp -> term . exp_action recexp
    (99) exp -> term . exp_action
    (100) exp_action -> .

    EX              reduce using rule 100 (exp_action -> .)
    RELOP           reduce using rule 100 (exp_action -> .)
    LOGIC           reduce using rule 100 (exp_action -> .)
    SEMICOLON       reduce using rule 100 (exp_action -> .)
    RIGHTPAR        reduce using rule 100 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 100 (exp_action -> .)
    COMMA           reduce using rule 100 (exp_action -> .)

    exp_action                     shift and go to state 149

state 100

    (102) term -> factor . term_action recterm
    (103) term -> factor . term_action
    (104) term_action -> .

    TERMS           reduce using rule 104 (term_action -> .)
    EX              reduce using rule 104 (term_action -> .)
    RELOP           reduce using rule 104 (term_action -> .)
    LOGIC           reduce using rule 104 (term_action -> .)
    SEMICOLON       reduce using rule 104 (term_action -> .)
    RIGHTPAR        reduce using rule 104 (term_action -> .)
    RIGHTBRACKET    reduce using rule 104 (term_action -> .)
    COMMA           reduce using rule 104 (term_action -> .)

    term_action                    shift and go to state 150

state 101

    (107) factor -> LEFTPAR . expression RIGHTPAR
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 151
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 102

    (108) factor -> EX . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    cte                            shift and go to state 152
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 103

    (109) factor -> cte .

    TERMS           reduce using rule 109 (factor -> cte .)
    EX              reduce using rule 109 (factor -> cte .)
    RELOP           reduce using rule 109 (factor -> cte .)
    LOGIC           reduce using rule 109 (factor -> cte .)
    SEMICOLON       reduce using rule 109 (factor -> cte .)
    RIGHTPAR        reduce using rule 109 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 109 (factor -> cte .)
    COMMA           reduce using rule 109 (factor -> cte .)


state 104

    (120) cte -> string .

    TERMS           reduce using rule 120 (cte -> string .)
    EX              reduce using rule 120 (cte -> string .)
    RELOP           reduce using rule 120 (cte -> string .)
    LOGIC           reduce using rule 120 (cte -> string .)
    SEMICOLON       reduce using rule 120 (cte -> string .)
    RIGHTPAR        reduce using rule 120 (cte -> string .)
    RIGHTBRACKET    reduce using rule 120 (cte -> string .)
    COMMA           reduce using rule 120 (cte -> string .)


state 105

    (121) cte -> id .

    TERMS           reduce using rule 121 (cte -> id .)
    EX              reduce using rule 121 (cte -> id .)
    RELOP           reduce using rule 121 (cte -> id .)
    LOGIC           reduce using rule 121 (cte -> id .)
    SEMICOLON       reduce using rule 121 (cte -> id .)
    RIGHTPAR        reduce using rule 121 (cte -> id .)
    RIGHTBRACKET    reduce using rule 121 (cte -> id .)
    COMMA           reduce using rule 121 (cte -> id .)


state 106

    (122) cte -> int .

    TERMS           reduce using rule 122 (cte -> int .)
    EX              reduce using rule 122 (cte -> int .)
    RELOP           reduce using rule 122 (cte -> int .)
    LOGIC           reduce using rule 122 (cte -> int .)
    SEMICOLON       reduce using rule 122 (cte -> int .)
    RIGHTPAR        reduce using rule 122 (cte -> int .)
    RIGHTBRACKET    reduce using rule 122 (cte -> int .)
    COMMA           reduce using rule 122 (cte -> int .)


state 107

    (123) cte -> float .

    TERMS           reduce using rule 123 (cte -> float .)
    EX              reduce using rule 123 (cte -> float .)
    RELOP           reduce using rule 123 (cte -> float .)
    LOGIC           reduce using rule 123 (cte -> float .)
    SEMICOLON       reduce using rule 123 (cte -> float .)
    RIGHTPAR        reduce using rule 123 (cte -> float .)
    RIGHTBRACKET    reduce using rule 123 (cte -> float .)
    COMMA           reduce using rule 123 (cte -> float .)


state 108

    (124) cte -> bool .

    TERMS           reduce using rule 124 (cte -> bool .)
    EX              reduce using rule 124 (cte -> bool .)
    RELOP           reduce using rule 124 (cte -> bool .)
    LOGIC           reduce using rule 124 (cte -> bool .)
    SEMICOLON       reduce using rule 124 (cte -> bool .)
    RIGHTPAR        reduce using rule 124 (cte -> bool .)
    RIGHTBRACKET    reduce using rule 124 (cte -> bool .)
    COMMA           reduce using rule 124 (cte -> bool .)


state 109

    (125) cte -> nestedvalue .

    TERMS           reduce using rule 125 (cte -> nestedvalue .)
    EX              reduce using rule 125 (cte -> nestedvalue .)
    RELOP           reduce using rule 125 (cte -> nestedvalue .)
    LOGIC           reduce using rule 125 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 125 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 125 (cte -> nestedvalue .)
    RIGHTBRACKET    reduce using rule 125 (cte -> nestedvalue .)
    COMMA           reduce using rule 125 (cte -> nestedvalue .)


state 110

    (126) cte -> functioncall .

    TERMS           reduce using rule 126 (cte -> functioncall .)
    EX              reduce using rule 126 (cte -> functioncall .)
    RELOP           reduce using rule 126 (cte -> functioncall .)
    LOGIC           reduce using rule 126 (cte -> functioncall .)
    SEMICOLON       reduce using rule 126 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 126 (cte -> functioncall .)
    RIGHTBRACKET    reduce using rule 126 (cte -> functioncall .)
    COMMA           reduce using rule 126 (cte -> functioncall .)


state 111

    (127) cte -> listaccess .

    TERMS           reduce using rule 127 (cte -> listaccess .)
    EX              reduce using rule 127 (cte -> listaccess .)
    RELOP           reduce using rule 127 (cte -> listaccess .)
    LOGIC           reduce using rule 127 (cte -> listaccess .)
    SEMICOLON       reduce using rule 127 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 127 (cte -> listaccess .)
    RIGHTBRACKET    reduce using rule 127 (cte -> listaccess .)
    COMMA           reduce using rule 127 (cte -> listaccess .)


state 112

    (128) cte -> specialfunction .

    TERMS           reduce using rule 128 (cte -> specialfunction .)
    EX              reduce using rule 128 (cte -> specialfunction .)
    RELOP           reduce using rule 128 (cte -> specialfunction .)
    LOGIC           reduce using rule 128 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 128 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 128 (cte -> specialfunction .)
    RIGHTBRACKET    reduce using rule 128 (cte -> specialfunction .)
    COMMA           reduce using rule 128 (cte -> specialfunction .)


state 113

    (130) string -> STRING .

    TERMS           reduce using rule 130 (string -> STRING .)
    EX              reduce using rule 130 (string -> STRING .)
    RELOP           reduce using rule 130 (string -> STRING .)
    LOGIC           reduce using rule 130 (string -> STRING .)
    SEMICOLON       reduce using rule 130 (string -> STRING .)
    RIGHTPAR        reduce using rule 130 (string -> STRING .)
    RIGHTBRACKET    reduce using rule 130 (string -> STRING .)
    COMMA           reduce using rule 130 (string -> STRING .)


state 114

    (129) id -> ID .
    (118) nestedvalue -> ID . DOT ID
    (85) functioncall -> ID . function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> ID . function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> ID . LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (87) function_call_action1 -> .

    TERMS           reduce using rule 129 (id -> ID .)
    EX              reduce using rule 129 (id -> ID .)
    RELOP           reduce using rule 129 (id -> ID .)
    LOGIC           reduce using rule 129 (id -> ID .)
    SEMICOLON       reduce using rule 129 (id -> ID .)
    RIGHTPAR        reduce using rule 129 (id -> ID .)
    RIGHTBRACKET    reduce using rule 129 (id -> ID .)
    COMMA           reduce using rule 129 (id -> ID .)
    DOT             shift and go to state 153
    LEFTBRACKET     shift and go to state 155
    LEFTPAR         reduce using rule 87 (function_call_action1 -> .)

    function_call_action1          shift and go to state 154

state 115

    (131) int -> INT .

    TERMS           reduce using rule 131 (int -> INT .)
    EX              reduce using rule 131 (int -> INT .)
    RELOP           reduce using rule 131 (int -> INT .)
    LOGIC           reduce using rule 131 (int -> INT .)
    SEMICOLON       reduce using rule 131 (int -> INT .)
    RIGHTPAR        reduce using rule 131 (int -> INT .)
    RIGHTBRACKET    reduce using rule 131 (int -> INT .)
    COMMA           reduce using rule 131 (int -> INT .)


state 116

    (132) float -> FLOAT .

    TERMS           reduce using rule 132 (float -> FLOAT .)
    EX              reduce using rule 132 (float -> FLOAT .)
    RELOP           reduce using rule 132 (float -> FLOAT .)
    LOGIC           reduce using rule 132 (float -> FLOAT .)
    SEMICOLON       reduce using rule 132 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 132 (float -> FLOAT .)
    RIGHTBRACKET    reduce using rule 132 (float -> FLOAT .)
    COMMA           reduce using rule 132 (float -> FLOAT .)


state 117

    (133) bool -> TRUE .

    TERMS           reduce using rule 133 (bool -> TRUE .)
    EX              reduce using rule 133 (bool -> TRUE .)
    RELOP           reduce using rule 133 (bool -> TRUE .)
    LOGIC           reduce using rule 133 (bool -> TRUE .)
    SEMICOLON       reduce using rule 133 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 133 (bool -> TRUE .)
    RIGHTBRACKET    reduce using rule 133 (bool -> TRUE .)
    COMMA           reduce using rule 133 (bool -> TRUE .)


state 118

    (134) bool -> FALSE .

    TERMS           reduce using rule 134 (bool -> FALSE .)
    EX              reduce using rule 134 (bool -> FALSE .)
    RELOP           reduce using rule 134 (bool -> FALSE .)
    LOGIC           reduce using rule 134 (bool -> FALSE .)
    SEMICOLON       reduce using rule 134 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 134 (bool -> FALSE .)
    RIGHTBRACKET    reduce using rule 134 (bool -> FALSE .)
    COMMA           reduce using rule 134 (bool -> FALSE .)


state 119

    (27) specialfunction -> draw .

    TERMS           reduce using rule 27 (specialfunction -> draw .)
    EX              reduce using rule 27 (specialfunction -> draw .)
    RELOP           reduce using rule 27 (specialfunction -> draw .)
    LOGIC           reduce using rule 27 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 27 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 27 (specialfunction -> draw .)
    RIGHTBRACKET    reduce using rule 27 (specialfunction -> draw .)
    COMMA           reduce using rule 27 (specialfunction -> draw .)


state 120

    (28) specialfunction -> size .

    TERMS           reduce using rule 28 (specialfunction -> size .)
    EX              reduce using rule 28 (specialfunction -> size .)
    RELOP           reduce using rule 28 (specialfunction -> size .)
    LOGIC           reduce using rule 28 (specialfunction -> size .)
    SEMICOLON       reduce using rule 28 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 28 (specialfunction -> size .)
    RIGHTBRACKET    reduce using rule 28 (specialfunction -> size .)
    COMMA           reduce using rule 28 (specialfunction -> size .)


state 121

    (29) specialfunction -> head .

    TERMS           reduce using rule 29 (specialfunction -> head .)
    EX              reduce using rule 29 (specialfunction -> head .)
    RELOP           reduce using rule 29 (specialfunction -> head .)
    LOGIC           reduce using rule 29 (specialfunction -> head .)
    SEMICOLON       reduce using rule 29 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 29 (specialfunction -> head .)
    RIGHTBRACKET    reduce using rule 29 (specialfunction -> head .)
    COMMA           reduce using rule 29 (specialfunction -> head .)


state 122

    (30) specialfunction -> tail .

    TERMS           reduce using rule 30 (specialfunction -> tail .)
    EX              reduce using rule 30 (specialfunction -> tail .)
    RELOP           reduce using rule 30 (specialfunction -> tail .)
    LOGIC           reduce using rule 30 (specialfunction -> tail .)
    SEMICOLON       reduce using rule 30 (specialfunction -> tail .)
    RIGHTPAR        reduce using rule 30 (specialfunction -> tail .)
    RIGHTBRACKET    reduce using rule 30 (specialfunction -> tail .)
    COMMA           reduce using rule 30 (specialfunction -> tail .)


state 123

    (31) specialfunction -> last .

    TERMS           reduce using rule 31 (specialfunction -> last .)
    EX              reduce using rule 31 (specialfunction -> last .)
    RELOP           reduce using rule 31 (specialfunction -> last .)
    LOGIC           reduce using rule 31 (specialfunction -> last .)
    SEMICOLON       reduce using rule 31 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 31 (specialfunction -> last .)
    RIGHTBRACKET    reduce using rule 31 (specialfunction -> last .)
    COMMA           reduce using rule 31 (specialfunction -> last .)


state 124

    (32) specialfunction -> set_title .

    TERMS           reduce using rule 32 (specialfunction -> set_title .)
    EX              reduce using rule 32 (specialfunction -> set_title .)
    RELOP           reduce using rule 32 (specialfunction -> set_title .)
    LOGIC           reduce using rule 32 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 32 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> set_title .)
    RIGHTBRACKET    reduce using rule 32 (specialfunction -> set_title .)
    COMMA           reduce using rule 32 (specialfunction -> set_title .)


state 125

    (33) specialfunction -> set_dimension .

    TERMS           reduce using rule 33 (specialfunction -> set_dimension .)
    EX              reduce using rule 33 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 33 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 33 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 33 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> set_dimension .)
    RIGHTBRACKET    reduce using rule 33 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 33 (specialfunction -> set_dimension .)


state 126

    (34) specialfunction -> set_color .

    TERMS           reduce using rule 34 (specialfunction -> set_color .)
    EX              reduce using rule 34 (specialfunction -> set_color .)
    RELOP           reduce using rule 34 (specialfunction -> set_color .)
    LOGIC           reduce using rule 34 (specialfunction -> set_color .)
    SEMICOLON       reduce using rule 34 (specialfunction -> set_color .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> set_color .)
    RIGHTBRACKET    reduce using rule 34 (specialfunction -> set_color .)
    COMMA           reduce using rule 34 (specialfunction -> set_color .)


state 127

    (35) specialfunction -> create_object .

    TERMS           reduce using rule 35 (specialfunction -> create_object .)
    EX              reduce using rule 35 (specialfunction -> create_object .)
    RELOP           reduce using rule 35 (specialfunction -> create_object .)
    LOGIC           reduce using rule 35 (specialfunction -> create_object .)
    SEMICOLON       reduce using rule 35 (specialfunction -> create_object .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> create_object .)
    RIGHTBRACKET    reduce using rule 35 (specialfunction -> create_object .)
    COMMA           reduce using rule 35 (specialfunction -> create_object .)


state 128

    (36) specialfunction -> create_text .

    TERMS           reduce using rule 36 (specialfunction -> create_text .)
    EX              reduce using rule 36 (specialfunction -> create_text .)
    RELOP           reduce using rule 36 (specialfunction -> create_text .)
    LOGIC           reduce using rule 36 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 36 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> create_text .)
    RIGHTBRACKET    reduce using rule 36 (specialfunction -> create_text .)
    COMMA           reduce using rule 36 (specialfunction -> create_text .)


state 129

    (37) draw -> DRAW . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 156


state 130

    (38) size -> SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 157


state 131

    (39) head -> HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 158


state 132

    (40) tail -> TAIL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 159


state 133

    (41) last -> LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 160


state 134

    (42) set_title -> SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 161


state 135

    (43) set_dimension -> SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 162


state 136

    (44) set_color -> SET_COLOR . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 163


state 137

    (45) create_object -> CREATE_OBJECT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 164


state 138

    (46) create_text -> CREATE_TEXT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 165


state 139

    (10) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    DRAW            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SIZE            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    HEAD            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    TAIL            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    LAST            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_TITLE       reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_COLOR       reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)


state 140

    (74) recparams -> ID COLON type COMMA . recparams
    (73) recparams -> . ID COLON type
    (74) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 63

    recparams                      shift and go to state 166

state 141

    (65) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (72) function_action3 -> .

    COLON           reduce using rule 72 (function_action3 -> .)

    function_action3               shift and go to state 167

state 142

    (14) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (15) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (16) recstatement -> . statement recstatement
    (17) recstatement -> . statement
    (18) statement -> . assign SEMICOLON
    (19) statement -> . condition
    (20) statement -> . vars
    (21) statement -> . loop
    (22) statement -> . write SEMICOLON
    (23) statement -> . return SEMICOLON
    (24) statement -> . functioncall SEMICOLON
    (25) statement -> . nestedassign SEMICOLON
    (26) statement -> . specialfunction SEMICOLON
    (47) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (50) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON
    (55) loop -> . for
    (56) loop -> . while
    (77) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (84) return -> . RETURN expression
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (119) nestedassign -> . nestedvalue EQUAL expression
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (57) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (61) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (118) nestedvalue -> . ID DOT ID
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        shift and go to state 169
    ID              shift and go to state 180
    IF              shift and go to state 181
    VAR             shift and go to state 39
    PRINT           shift and go to state 184
    RETURN          shift and go to state 185
    FOR             shift and go to state 187
    WHILE           shift and go to state 188
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    recstatement                   shift and go to state 168
    statement                      shift and go to state 170
    assign                         shift and go to state 171
    condition                      shift and go to state 172
    vars                           shift and go to state 173
    loop                           shift and go to state 174
    write                          shift and go to state 175
    return                         shift and go to state 176
    functioncall                   shift and go to state 177
    nestedassign                   shift and go to state 178
    specialfunction                shift and go to state 179
    for                            shift and go to state 182
    while                          shift and go to state 183
    nestedvalue                    shift and go to state 186
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 143

    (67) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (72) function_action3 -> .

    COLON           reduce using rule 72 (function_action3 -> .)

    function_action3               shift and go to state 189

state 144

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (72) function_action3 -> .

    COLON           reduce using rule 72 (function_action3 -> .)

    function_action3               shift and go to state 190

state 145

    (6) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 191

state 146

    (8) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (9) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    DRAW            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SIZE            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    HEAD            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    TAIL            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    LAST            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_TITLE       reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_DIMENSION   reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_COLOR       reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_OBJECT   reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 192

state 147

    (91) expression -> exp RELOP . relop_action1 exp relop_action2
    (94) relop_action1 -> .

    LEFTPAR         reduce using rule 94 (relop_action1 -> .)
    EX              reduce using rule 94 (relop_action1 -> .)
    STRING          reduce using rule 94 (relop_action1 -> .)
    ID              reduce using rule 94 (relop_action1 -> .)
    INT             reduce using rule 94 (relop_action1 -> .)
    FLOAT           reduce using rule 94 (relop_action1 -> .)
    TRUE            reduce using rule 94 (relop_action1 -> .)
    FALSE           reduce using rule 94 (relop_action1 -> .)
    DRAW            reduce using rule 94 (relop_action1 -> .)
    SIZE            reduce using rule 94 (relop_action1 -> .)
    HEAD            reduce using rule 94 (relop_action1 -> .)
    TAIL            reduce using rule 94 (relop_action1 -> .)
    LAST            reduce using rule 94 (relop_action1 -> .)
    SET_TITLE       reduce using rule 94 (relop_action1 -> .)
    SET_DIMENSION   reduce using rule 94 (relop_action1 -> .)
    SET_COLOR       reduce using rule 94 (relop_action1 -> .)
    CREATE_OBJECT   reduce using rule 94 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 94 (relop_action1 -> .)

    relop_action1                  shift and go to state 193

state 148

    (92) expression -> exp LOGIC . logic_action1 exp logic_action2
    (96) logic_action1 -> .

    LEFTPAR         reduce using rule 96 (logic_action1 -> .)
    EX              reduce using rule 96 (logic_action1 -> .)
    STRING          reduce using rule 96 (logic_action1 -> .)
    ID              reduce using rule 96 (logic_action1 -> .)
    INT             reduce using rule 96 (logic_action1 -> .)
    FLOAT           reduce using rule 96 (logic_action1 -> .)
    TRUE            reduce using rule 96 (logic_action1 -> .)
    FALSE           reduce using rule 96 (logic_action1 -> .)
    DRAW            reduce using rule 96 (logic_action1 -> .)
    SIZE            reduce using rule 96 (logic_action1 -> .)
    HEAD            reduce using rule 96 (logic_action1 -> .)
    TAIL            reduce using rule 96 (logic_action1 -> .)
    LAST            reduce using rule 96 (logic_action1 -> .)
    SET_TITLE       reduce using rule 96 (logic_action1 -> .)
    SET_DIMENSION   reduce using rule 96 (logic_action1 -> .)
    SET_COLOR       reduce using rule 96 (logic_action1 -> .)
    CREATE_OBJECT   reduce using rule 96 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 96 (logic_action1 -> .)

    logic_action1                  shift and go to state 194

state 149

    (98) exp -> term exp_action . recexp
    (99) exp -> term exp_action .
    (101) recexp -> . EX add_operator exp

    RELOP           reduce using rule 99 (exp -> term exp_action .)
    LOGIC           reduce using rule 99 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 99 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 99 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 99 (exp -> term exp_action .)
    COMMA           reduce using rule 99 (exp -> term exp_action .)
    EX              shift and go to state 196

    recexp                         shift and go to state 195

state 150

    (102) term -> factor term_action . recterm
    (103) term -> factor term_action .
    (105) recterm -> . TERMS add_operator term

    EX              reduce using rule 103 (term -> factor term_action .)
    RELOP           reduce using rule 103 (term -> factor term_action .)
    LOGIC           reduce using rule 103 (term -> factor term_action .)
    SEMICOLON       reduce using rule 103 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 103 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 103 (term -> factor term_action .)
    COMMA           reduce using rule 103 (term -> factor term_action .)
    TERMS           shift and go to state 198

    recterm                        shift and go to state 197

state 151

    (107) factor -> LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 199


state 152

    (108) factor -> EX cte .

    TERMS           reduce using rule 108 (factor -> EX cte .)
    EX              reduce using rule 108 (factor -> EX cte .)
    RELOP           reduce using rule 108 (factor -> EX cte .)
    LOGIC           reduce using rule 108 (factor -> EX cte .)
    SEMICOLON       reduce using rule 108 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 108 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 108 (factor -> EX cte .)
    COMMA           reduce using rule 108 (factor -> EX cte .)


state 153

    (118) nestedvalue -> ID DOT . ID

    ID              shift and go to state 200


state 154

    (85) functioncall -> ID function_call_action1 . LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> ID function_call_action1 . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 201


state 155

    (117) listaccess -> ID LEFTBRACKET . expression RIGHTBRACKET SEMICOLON
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 202
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 156

    (37) draw -> DRAW LEFTPAR . recfuncexp RIGHTPAR
    (88) recfuncexp -> . expression COMMA recfuncexp
    (89) recfuncexp -> . expression recfunc_action1
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    recfuncexp                     shift and go to state 203
    expression                     shift and go to state 204
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 157

    (38) size -> SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 205


state 158

    (39) head -> HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 206


state 159

    (40) tail -> TAIL LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 207


state 160

    (41) last -> LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 208


state 161

    (42) set_title -> SET_TITLE LEFTPAR . expression RIGHTPAR
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 209
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 162

    (43) set_dimension -> SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 210
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 163

    (44) set_color -> SET_COLOR LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 211
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 164

    (45) create_object -> CREATE_OBJECT LEFTPAR . recfuncexp RIGHTPAR
    (88) recfuncexp -> . expression COMMA recfuncexp
    (89) recfuncexp -> . expression recfunc_action1
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    recfuncexp                     shift and go to state 212
    expression                     shift and go to state 204
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 165

    (46) create_text -> CREATE_TEXT LEFTPAR . recfuncexp RIGHTPAR
    (88) recfuncexp -> . expression COMMA recfuncexp
    (89) recfuncexp -> . expression recfunc_action1
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    recfuncexp                     shift and go to state 213
    expression                     shift and go to state 204
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 166

    (74) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 74 (recparams -> ID COLON type COMMA recparams .)


state 167

    (65) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 214

state 168

    (14) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 215


state 169

    (15) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 216


state 170

    (16) recstatement -> statement . recstatement
    (17) recstatement -> statement .
    (16) recstatement -> . statement recstatement
    (17) recstatement -> . statement
    (18) statement -> . assign SEMICOLON
    (19) statement -> . condition
    (20) statement -> . vars
    (21) statement -> . loop
    (22) statement -> . write SEMICOLON
    (23) statement -> . return SEMICOLON
    (24) statement -> . functioncall SEMICOLON
    (25) statement -> . nestedassign SEMICOLON
    (26) statement -> . specialfunction SEMICOLON
    (47) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (50) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON
    (55) loop -> . for
    (56) loop -> . while
    (77) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (84) return -> . RETURN expression
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (119) nestedassign -> . nestedvalue EQUAL expression
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (57) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (61) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (118) nestedvalue -> . ID DOT ID
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        reduce using rule 17 (recstatement -> statement .)
    ID              shift and go to state 180
    IF              shift and go to state 181
    VAR             shift and go to state 39
    PRINT           shift and go to state 184
    RETURN          shift and go to state 185
    FOR             shift and go to state 187
    WHILE           shift and go to state 188
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    statement                      shift and go to state 170
    recstatement                   shift and go to state 217
    assign                         shift and go to state 171
    condition                      shift and go to state 172
    vars                           shift and go to state 173
    loop                           shift and go to state 174
    write                          shift and go to state 175
    return                         shift and go to state 176
    functioncall                   shift and go to state 177
    nestedassign                   shift and go to state 178
    specialfunction                shift and go to state 179
    for                            shift and go to state 182
    while                          shift and go to state 183
    nestedvalue                    shift and go to state 186
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 171

    (18) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 218


state 172

    (19) statement -> condition .

    ID              reduce using rule 19 (statement -> condition .)
    IF              reduce using rule 19 (statement -> condition .)
    VAR             reduce using rule 19 (statement -> condition .)
    PRINT           reduce using rule 19 (statement -> condition .)
    RETURN          reduce using rule 19 (statement -> condition .)
    FOR             reduce using rule 19 (statement -> condition .)
    WHILE           reduce using rule 19 (statement -> condition .)
    DRAW            reduce using rule 19 (statement -> condition .)
    SIZE            reduce using rule 19 (statement -> condition .)
    HEAD            reduce using rule 19 (statement -> condition .)
    TAIL            reduce using rule 19 (statement -> condition .)
    LAST            reduce using rule 19 (statement -> condition .)
    SET_TITLE       reduce using rule 19 (statement -> condition .)
    SET_DIMENSION   reduce using rule 19 (statement -> condition .)
    SET_COLOR       reduce using rule 19 (statement -> condition .)
    CREATE_OBJECT   reduce using rule 19 (statement -> condition .)
    CREATE_TEXT     reduce using rule 19 (statement -> condition .)
    RIGHTKEY        reduce using rule 19 (statement -> condition .)


state 173

    (20) statement -> vars .

    ID              reduce using rule 20 (statement -> vars .)
    IF              reduce using rule 20 (statement -> vars .)
    VAR             reduce using rule 20 (statement -> vars .)
    PRINT           reduce using rule 20 (statement -> vars .)
    RETURN          reduce using rule 20 (statement -> vars .)
    FOR             reduce using rule 20 (statement -> vars .)
    WHILE           reduce using rule 20 (statement -> vars .)
    DRAW            reduce using rule 20 (statement -> vars .)
    SIZE            reduce using rule 20 (statement -> vars .)
    HEAD            reduce using rule 20 (statement -> vars .)
    TAIL            reduce using rule 20 (statement -> vars .)
    LAST            reduce using rule 20 (statement -> vars .)
    SET_TITLE       reduce using rule 20 (statement -> vars .)
    SET_DIMENSION   reduce using rule 20 (statement -> vars .)
    SET_COLOR       reduce using rule 20 (statement -> vars .)
    CREATE_OBJECT   reduce using rule 20 (statement -> vars .)
    CREATE_TEXT     reduce using rule 20 (statement -> vars .)
    RIGHTKEY        reduce using rule 20 (statement -> vars .)


state 174

    (21) statement -> loop .

    ID              reduce using rule 21 (statement -> loop .)
    IF              reduce using rule 21 (statement -> loop .)
    VAR             reduce using rule 21 (statement -> loop .)
    PRINT           reduce using rule 21 (statement -> loop .)
    RETURN          reduce using rule 21 (statement -> loop .)
    FOR             reduce using rule 21 (statement -> loop .)
    WHILE           reduce using rule 21 (statement -> loop .)
    DRAW            reduce using rule 21 (statement -> loop .)
    SIZE            reduce using rule 21 (statement -> loop .)
    HEAD            reduce using rule 21 (statement -> loop .)
    TAIL            reduce using rule 21 (statement -> loop .)
    LAST            reduce using rule 21 (statement -> loop .)
    SET_TITLE       reduce using rule 21 (statement -> loop .)
    SET_DIMENSION   reduce using rule 21 (statement -> loop .)
    SET_COLOR       reduce using rule 21 (statement -> loop .)
    CREATE_OBJECT   reduce using rule 21 (statement -> loop .)
    CREATE_TEXT     reduce using rule 21 (statement -> loop .)
    RIGHTKEY        reduce using rule 21 (statement -> loop .)


state 175

    (22) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 219


state 176

    (23) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 220


state 177

    (24) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 221


state 178

    (25) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 222


state 179

    (26) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 223


state 180

    (47) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (85) functioncall -> ID . function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> ID . function_call_action1 LEFTPAR RIGHTPAR
    (118) nestedvalue -> ID . DOT ID
    (48) assign_action1 -> .
    (87) function_call_action1 -> .

    DOT             shift and go to state 153
    EQUAL           reduce using rule 48 (assign_action1 -> .)
    LEFTPAR         reduce using rule 87 (function_call_action1 -> .)

    assign_action1                 shift and go to state 224
    function_call_action1          shift and go to state 154

state 181

    (50) condition -> IF . startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> IF . startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 225

state 182

    (55) loop -> for .

    ID              reduce using rule 55 (loop -> for .)
    IF              reduce using rule 55 (loop -> for .)
    VAR             reduce using rule 55 (loop -> for .)
    PRINT           reduce using rule 55 (loop -> for .)
    RETURN          reduce using rule 55 (loop -> for .)
    FOR             reduce using rule 55 (loop -> for .)
    WHILE           reduce using rule 55 (loop -> for .)
    DRAW            reduce using rule 55 (loop -> for .)
    SIZE            reduce using rule 55 (loop -> for .)
    HEAD            reduce using rule 55 (loop -> for .)
    TAIL            reduce using rule 55 (loop -> for .)
    LAST            reduce using rule 55 (loop -> for .)
    SET_TITLE       reduce using rule 55 (loop -> for .)
    SET_DIMENSION   reduce using rule 55 (loop -> for .)
    SET_COLOR       reduce using rule 55 (loop -> for .)
    CREATE_OBJECT   reduce using rule 55 (loop -> for .)
    CREATE_TEXT     reduce using rule 55 (loop -> for .)
    RIGHTKEY        reduce using rule 55 (loop -> for .)


state 183

    (56) loop -> while .

    ID              reduce using rule 56 (loop -> while .)
    IF              reduce using rule 56 (loop -> while .)
    VAR             reduce using rule 56 (loop -> while .)
    PRINT           reduce using rule 56 (loop -> while .)
    RETURN          reduce using rule 56 (loop -> while .)
    FOR             reduce using rule 56 (loop -> while .)
    WHILE           reduce using rule 56 (loop -> while .)
    DRAW            reduce using rule 56 (loop -> while .)
    SIZE            reduce using rule 56 (loop -> while .)
    HEAD            reduce using rule 56 (loop -> while .)
    TAIL            reduce using rule 56 (loop -> while .)
    LAST            reduce using rule 56 (loop -> while .)
    SET_TITLE       reduce using rule 56 (loop -> while .)
    SET_DIMENSION   reduce using rule 56 (loop -> while .)
    SET_COLOR       reduce using rule 56 (loop -> while .)
    CREATE_OBJECT   reduce using rule 56 (loop -> while .)
    CREATE_TEXT     reduce using rule 56 (loop -> while .)
    RIGHTKEY        reduce using rule 56 (loop -> while .)


state 184

    (77) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 226


state 185

    (84) return -> RETURN . expression
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 227
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 186

    (119) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 228


state 187

    (57) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 229

state 188

    (61) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 230

state 189

    (67) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 231

state 190

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 232

state 191

    (6) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 6 (start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 192

    (8) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    DRAW            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SIZE            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    HEAD            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    TAIL            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    LAST            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_TITLE       reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_COLOR       reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 193

    (91) expression -> exp RELOP relop_action1 . exp relop_action2
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    exp                            shift and go to state 233
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 194

    (92) expression -> exp LOGIC logic_action1 . exp logic_action2
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    exp                            shift and go to state 234
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 195

    (98) exp -> term exp_action recexp .

    RELOP           reduce using rule 98 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 98 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 98 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 98 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 98 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 98 (exp -> term exp_action recexp .)


state 196

    (101) recexp -> EX . add_operator exp
    (106) add_operator -> .

    LEFTPAR         reduce using rule 106 (add_operator -> .)
    EX              reduce using rule 106 (add_operator -> .)
    STRING          reduce using rule 106 (add_operator -> .)
    ID              reduce using rule 106 (add_operator -> .)
    INT             reduce using rule 106 (add_operator -> .)
    FLOAT           reduce using rule 106 (add_operator -> .)
    TRUE            reduce using rule 106 (add_operator -> .)
    FALSE           reduce using rule 106 (add_operator -> .)
    DRAW            reduce using rule 106 (add_operator -> .)
    SIZE            reduce using rule 106 (add_operator -> .)
    HEAD            reduce using rule 106 (add_operator -> .)
    TAIL            reduce using rule 106 (add_operator -> .)
    LAST            reduce using rule 106 (add_operator -> .)
    SET_TITLE       reduce using rule 106 (add_operator -> .)
    SET_DIMENSION   reduce using rule 106 (add_operator -> .)
    SET_COLOR       reduce using rule 106 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 106 (add_operator -> .)
    CREATE_TEXT     reduce using rule 106 (add_operator -> .)

    add_operator                   shift and go to state 235

state 197

    (102) term -> factor term_action recterm .

    EX              reduce using rule 102 (term -> factor term_action recterm .)
    RELOP           reduce using rule 102 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 102 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 102 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 102 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 102 (term -> factor term_action recterm .)
    COMMA           reduce using rule 102 (term -> factor term_action recterm .)


state 198

    (105) recterm -> TERMS . add_operator term
    (106) add_operator -> .

    LEFTPAR         reduce using rule 106 (add_operator -> .)
    EX              reduce using rule 106 (add_operator -> .)
    STRING          reduce using rule 106 (add_operator -> .)
    ID              reduce using rule 106 (add_operator -> .)
    INT             reduce using rule 106 (add_operator -> .)
    FLOAT           reduce using rule 106 (add_operator -> .)
    TRUE            reduce using rule 106 (add_operator -> .)
    FALSE           reduce using rule 106 (add_operator -> .)
    DRAW            reduce using rule 106 (add_operator -> .)
    SIZE            reduce using rule 106 (add_operator -> .)
    HEAD            reduce using rule 106 (add_operator -> .)
    TAIL            reduce using rule 106 (add_operator -> .)
    LAST            reduce using rule 106 (add_operator -> .)
    SET_TITLE       reduce using rule 106 (add_operator -> .)
    SET_DIMENSION   reduce using rule 106 (add_operator -> .)
    SET_COLOR       reduce using rule 106 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 106 (add_operator -> .)
    CREATE_TEXT     reduce using rule 106 (add_operator -> .)

    add_operator                   shift and go to state 236

state 199

    (107) factor -> LEFTPAR expression RIGHTPAR .

    TERMS           reduce using rule 107 (factor -> LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 107 (factor -> LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 107 (factor -> LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 107 (factor -> LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 107 (factor -> LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 107 (factor -> LEFTPAR expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 107 (factor -> LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 107 (factor -> LEFTPAR expression RIGHTPAR .)


state 200

    (118) nestedvalue -> ID DOT ID .

    TERMS           reduce using rule 118 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 118 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 118 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 118 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 118 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 118 (nestedvalue -> ID DOT ID .)
    RIGHTBRACKET    reduce using rule 118 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 118 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 118 (nestedvalue -> ID DOT ID .)


state 201

    (85) functioncall -> ID function_call_action1 LEFTPAR . recfuncexp RIGHTPAR
    (86) functioncall -> ID function_call_action1 LEFTPAR . RIGHTPAR
    (88) recfuncexp -> . expression COMMA recfuncexp
    (89) recfuncexp -> . expression recfunc_action1
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTPAR        shift and go to state 238
    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    recfuncexp                     shift and go to state 237
    expression                     shift and go to state 204
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 202

    (117) listaccess -> ID LEFTBRACKET expression . RIGHTBRACKET SEMICOLON

    RIGHTBRACKET    shift and go to state 239


state 203

    (37) draw -> DRAW LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 240


state 204

    (88) recfuncexp -> expression . COMMA recfuncexp
    (89) recfuncexp -> expression . recfunc_action1
    (90) recfunc_action1 -> .

    COMMA           shift and go to state 241
    RIGHTPAR        reduce using rule 90 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 242

state 205

    (38) size -> SIZE LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)


state 206

    (39) head -> HEAD LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)


state 207

    (40) tail -> TAIL LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    EX              reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)


state 208

    (41) last -> LAST LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)


state 209

    (42) set_title -> SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 243


state 210

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 244


state 211

    (44) set_color -> SET_COLOR LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 245


state 212

    (45) create_object -> CREATE_OBJECT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 246


state 213

    (46) create_text -> CREATE_TEXT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 247


state 214

    (65) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    LIST            reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 215

    (14) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 248


state 216

    (15) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 217

    (16) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 16 (recstatement -> statement recstatement .)


state 218

    (18) statement -> assign SEMICOLON .

    ID              reduce using rule 18 (statement -> assign SEMICOLON .)
    IF              reduce using rule 18 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 18 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 18 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 18 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 18 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 18 (statement -> assign SEMICOLON .)
    DRAW            reduce using rule 18 (statement -> assign SEMICOLON .)
    SIZE            reduce using rule 18 (statement -> assign SEMICOLON .)
    HEAD            reduce using rule 18 (statement -> assign SEMICOLON .)
    TAIL            reduce using rule 18 (statement -> assign SEMICOLON .)
    LAST            reduce using rule 18 (statement -> assign SEMICOLON .)
    SET_TITLE       reduce using rule 18 (statement -> assign SEMICOLON .)
    SET_DIMENSION   reduce using rule 18 (statement -> assign SEMICOLON .)
    SET_COLOR       reduce using rule 18 (statement -> assign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 18 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 18 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 18 (statement -> assign SEMICOLON .)


state 219

    (22) statement -> write SEMICOLON .

    ID              reduce using rule 22 (statement -> write SEMICOLON .)
    IF              reduce using rule 22 (statement -> write SEMICOLON .)
    VAR             reduce using rule 22 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 22 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 22 (statement -> write SEMICOLON .)
    FOR             reduce using rule 22 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> write SEMICOLON .)
    DRAW            reduce using rule 22 (statement -> write SEMICOLON .)
    SIZE            reduce using rule 22 (statement -> write SEMICOLON .)
    HEAD            reduce using rule 22 (statement -> write SEMICOLON .)
    TAIL            reduce using rule 22 (statement -> write SEMICOLON .)
    LAST            reduce using rule 22 (statement -> write SEMICOLON .)
    SET_TITLE       reduce using rule 22 (statement -> write SEMICOLON .)
    SET_DIMENSION   reduce using rule 22 (statement -> write SEMICOLON .)
    SET_COLOR       reduce using rule 22 (statement -> write SEMICOLON .)
    CREATE_OBJECT   reduce using rule 22 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 22 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 22 (statement -> write SEMICOLON .)


state 220

    (23) statement -> return SEMICOLON .

    ID              reduce using rule 23 (statement -> return SEMICOLON .)
    IF              reduce using rule 23 (statement -> return SEMICOLON .)
    VAR             reduce using rule 23 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> return SEMICOLON .)
    FOR             reduce using rule 23 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> return SEMICOLON .)
    DRAW            reduce using rule 23 (statement -> return SEMICOLON .)
    SIZE            reduce using rule 23 (statement -> return SEMICOLON .)
    HEAD            reduce using rule 23 (statement -> return SEMICOLON .)
    TAIL            reduce using rule 23 (statement -> return SEMICOLON .)
    LAST            reduce using rule 23 (statement -> return SEMICOLON .)
    SET_TITLE       reduce using rule 23 (statement -> return SEMICOLON .)
    SET_DIMENSION   reduce using rule 23 (statement -> return SEMICOLON .)
    SET_COLOR       reduce using rule 23 (statement -> return SEMICOLON .)
    CREATE_OBJECT   reduce using rule 23 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> return SEMICOLON .)


state 221

    (24) statement -> functioncall SEMICOLON .

    ID              reduce using rule 24 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 24 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 24 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 24 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 24 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 24 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 24 (statement -> functioncall SEMICOLON .)
    DRAW            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SIZE            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    HEAD            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    TAIL            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    LAST            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SET_TITLE       reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SET_DIMENSION   reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SET_COLOR       reduce using rule 24 (statement -> functioncall SEMICOLON .)
    CREATE_OBJECT   reduce using rule 24 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 24 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 24 (statement -> functioncall SEMICOLON .)


state 222

    (25) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    DRAW            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SIZE            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    HEAD            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    TAIL            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    LAST            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SET_TITLE       reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SET_DIMENSION   reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SET_COLOR       reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 25 (statement -> nestedassign SEMICOLON .)


state 223

    (26) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    DRAW            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SIZE            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    HEAD            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    TAIL            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    LAST            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SET_TITLE       reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SET_DIMENSION   reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SET_COLOR       reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    CREATE_OBJECT   reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 26 (statement -> specialfunction SEMICOLON .)


state 224

    (47) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 249


state 225

    (50) condition -> IF startscope_action . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> IF startscope_action . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 250


state 226

    (77) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (78) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (79) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (80) recwrite -> . expression action_recwrite_exp
    (81) recwrite -> . STRING action_recwrite_cte
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 253
    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    recwrite                       shift and go to state 251
    expression                     shift and go to state 252
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 227

    (84) return -> RETURN expression .

    SEMICOLON       reduce using rule 84 (return -> RETURN expression .)


state 228

    (119) nestedassign -> nestedvalue EQUAL . expression
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    nestedvalue                    shift and go to state 109
    expression                     shift and go to state 254
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 229

    (57) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 255


state 230

    (61) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (62) while_action1 -> .

    LEFTPAR         reduce using rule 62 (while_action1 -> .)

    while_action1                  shift and go to state 256

state 231

    (67) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    LIST            reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 232

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block .

    RIGHTKEY        reduce using rule 7 (run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 233

    (91) expression -> exp RELOP relop_action1 exp . relop_action2
    (95) relop_action2 -> .

    SEMICOLON       reduce using rule 95 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 95 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 95 (relop_action2 -> .)
    COMMA           reduce using rule 95 (relop_action2 -> .)

    relop_action2                  shift and go to state 257

state 234

    (92) expression -> exp LOGIC logic_action1 exp . logic_action2
    (97) logic_action2 -> .

    SEMICOLON       reduce using rule 97 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 97 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 97 (logic_action2 -> .)
    COMMA           reduce using rule 97 (logic_action2 -> .)

    logic_action2                  shift and go to state 258

state 235

    (101) recexp -> EX add_operator . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    exp                            shift and go to state 259
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 236

    (105) recterm -> TERMS add_operator . term
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    term                           shift and go to state 260
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 237

    (85) functioncall -> ID function_call_action1 LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 261


state 238

    (86) functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 86 (functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR .)
    EX              reduce using rule 86 (functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 86 (functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 86 (functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 86 (functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 86 (functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 86 (functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 86 (functioncall -> ID function_call_action1 LEFTPAR RIGHTPAR .)


state 239

    (117) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 262


state 240

    (37) draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)


state 241

    (88) recfuncexp -> expression COMMA . recfuncexp
    (88) recfuncexp -> . expression COMMA recfuncexp
    (89) recfuncexp -> . expression recfunc_action1
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 204
    recfuncexp                     shift and go to state 263
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 242

    (89) recfuncexp -> expression recfunc_action1 .

    RIGHTPAR        reduce using rule 89 (recfuncexp -> expression recfunc_action1 .)


state 243

    (42) set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .

    TERMS           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)


state 244

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 264
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 245

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 265
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 246

    (45) create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)


state 247

    (46) create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)


state 248

    (14) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 249

    (47) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (49) assign_action2 -> .

    LEFTPAR         reduce using rule 49 (assign_action2 -> .)
    EX              reduce using rule 49 (assign_action2 -> .)
    STRING          reduce using rule 49 (assign_action2 -> .)
    ID              reduce using rule 49 (assign_action2 -> .)
    INT             reduce using rule 49 (assign_action2 -> .)
    FLOAT           reduce using rule 49 (assign_action2 -> .)
    TRUE            reduce using rule 49 (assign_action2 -> .)
    FALSE           reduce using rule 49 (assign_action2 -> .)
    DRAW            reduce using rule 49 (assign_action2 -> .)
    SIZE            reduce using rule 49 (assign_action2 -> .)
    HEAD            reduce using rule 49 (assign_action2 -> .)
    TAIL            reduce using rule 49 (assign_action2 -> .)
    LAST            reduce using rule 49 (assign_action2 -> .)
    SET_TITLE       reduce using rule 49 (assign_action2 -> .)
    SET_DIMENSION   reduce using rule 49 (assign_action2 -> .)
    SET_COLOR       reduce using rule 49 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 49 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 49 (assign_action2 -> .)

    assign_action2                 shift and go to state 266

state 250

    (50) condition -> IF startscope_action LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> IF startscope_action LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 267
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 251

    (77) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 268


state 252

    (78) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (80) recwrite -> expression . action_recwrite_exp
    (82) action_recwrite_exp -> .

    COMMA           reduce using rule 82 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 82 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 269

state 253

    (79) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (81) recwrite -> STRING . action_recwrite_cte
    (130) string -> STRING .
    (83) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 83 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 83 (action_recwrite_cte -> .)
    TERMS           reduce using rule 130 (string -> STRING .)
    EX              reduce using rule 130 (string -> STRING .)
    RELOP           reduce using rule 130 (string -> STRING .)
    LOGIC           reduce using rule 130 (string -> STRING .)
    COMMA           reduce using rule 83 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 83 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 130 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 130 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 270

state 254

    (119) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 119 (nestedassign -> nestedvalue EQUAL expression .)


state 255

    (57) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (47) assign -> . ID assign_action1 EQUAL assign_action2 expression

    ID              shift and go to state 272

    assign                         shift and go to state 271

state 256

    (61) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 273


state 257

    (91) expression -> exp RELOP relop_action1 exp relop_action2 .

    SEMICOLON       reduce using rule 91 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 91 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 91 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    COMMA           reduce using rule 91 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 258

    (92) expression -> exp LOGIC logic_action1 exp logic_action2 .

    SEMICOLON       reduce using rule 92 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 92 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 92 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    COMMA           reduce using rule 92 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 259

    (101) recexp -> EX add_operator exp .

    RELOP           reduce using rule 101 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 101 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 101 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 101 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 101 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 101 (recexp -> EX add_operator exp .)


state 260

    (105) recterm -> TERMS add_operator term .

    EX              reduce using rule 105 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 105 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 105 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 105 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 105 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 105 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 105 (recterm -> TERMS add_operator term .)


state 261

    (85) functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 85 (functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 85 (functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 85 (functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 85 (functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 85 (functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 85 (functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 85 (functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 85 (functioncall -> ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR .)


state 262

    (117) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .

    TERMS           reduce using rule 117 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    EX              reduce using rule 117 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RELOP           reduce using rule 117 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    LOGIC           reduce using rule 117 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 117 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTPAR        reduce using rule 117 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTBRACKET    reduce using rule 117 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    COMMA           reduce using rule 117 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)


state 263

    (88) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 88 (recfuncexp -> expression COMMA recfuncexp .)


state 264

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 274


state 265

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 275


state 266

    (47) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 276
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 267

    (50) condition -> IF startscope_action LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (51) condition -> IF startscope_action LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (52) condition_action1 -> .

    RIGHTPAR        reduce using rule 52 (condition_action1 -> .)

    condition_action1              shift and go to state 277

state 268

    (77) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 77 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 269

    (78) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (80) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 278
    RIGHTPAR        reduce using rule 80 (recwrite -> expression action_recwrite_exp .)


state 270

    (79) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (81) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 279
    RIGHTPAR        reduce using rule 81 (recwrite -> STRING action_recwrite_cte .)


state 271

    (57) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 280


state 272

    (47) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (48) assign_action1 -> .

    EQUAL           reduce using rule 48 (assign_action1 -> .)

    assign_action1                 shift and go to state 224

state 273

    (61) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 281
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 274

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 275

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 282
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 276

    (47) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 47 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 277

    (50) condition -> IF startscope_action LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 283


state 278

    (78) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (78) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (79) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (80) recwrite -> . expression action_recwrite_exp
    (81) recwrite -> . STRING action_recwrite_cte
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 253
    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 252
    recwrite                       shift and go to state 284
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 279

    (79) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (78) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (79) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (80) recwrite -> . expression action_recwrite_exp
    (81) recwrite -> . STRING action_recwrite_cte
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 253
    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    recwrite                       shift and go to state 285
    expression                     shift and go to state 252
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 280

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (58) for_action1 -> .

    LEFTPAR         reduce using rule 58 (for_action1 -> .)
    EX              reduce using rule 58 (for_action1 -> .)
    STRING          reduce using rule 58 (for_action1 -> .)
    ID              reduce using rule 58 (for_action1 -> .)
    INT             reduce using rule 58 (for_action1 -> .)
    FLOAT           reduce using rule 58 (for_action1 -> .)
    TRUE            reduce using rule 58 (for_action1 -> .)
    FALSE           reduce using rule 58 (for_action1 -> .)
    DRAW            reduce using rule 58 (for_action1 -> .)
    SIZE            reduce using rule 58 (for_action1 -> .)
    HEAD            reduce using rule 58 (for_action1 -> .)
    TAIL            reduce using rule 58 (for_action1 -> .)
    LAST            reduce using rule 58 (for_action1 -> .)
    SET_TITLE       reduce using rule 58 (for_action1 -> .)
    SET_DIMENSION   reduce using rule 58 (for_action1 -> .)
    SET_COLOR       reduce using rule 58 (for_action1 -> .)
    CREATE_OBJECT   reduce using rule 58 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 58 (for_action1 -> .)

    for_action1                    shift and go to state 286

state 281

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (63) while_action2 -> .

    RIGHTPAR        reduce using rule 63 (while_action2 -> .)

    while_action2                  shift and go to state 287

state 282

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 288


state 283

    (50) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 289

state 284

    (78) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 78 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 285

    (79) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 79 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 286

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (91) expression -> . exp RELOP relop_action1 exp relop_action2
    (92) expression -> . exp LOGIC logic_action1 exp logic_action2
    (93) expression -> . exp
    (98) exp -> . term exp_action recexp
    (99) exp -> . term exp_action
    (102) term -> . factor term_action recterm
    (103) term -> . factor term_action
    (107) factor -> . LEFTPAR expression RIGHTPAR
    (108) factor -> . EX cte
    (109) factor -> . cte
    (120) cte -> . string
    (121) cte -> . id
    (122) cte -> . int
    (123) cte -> . float
    (124) cte -> . bool
    (125) cte -> . nestedvalue
    (126) cte -> . functioncall
    (127) cte -> . listaccess
    (128) cte -> . specialfunction
    (130) string -> . STRING
    (129) id -> . ID
    (131) int -> . INT
    (132) float -> . FLOAT
    (133) bool -> . TRUE
    (134) bool -> . FALSE
    (118) nestedvalue -> . ID DOT ID
    (85) functioncall -> . ID function_call_action1 LEFTPAR recfuncexp RIGHTPAR
    (86) functioncall -> . ID function_call_action1 LEFTPAR RIGHTPAR
    (117) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 101
    EX              shift and go to state 102
    STRING          shift and go to state 113
    ID              shift and go to state 114
    INT             shift and go to state 115
    FLOAT           shift and go to state 116
    TRUE            shift and go to state 117
    FALSE           shift and go to state 118
    DRAW            shift and go to state 129
    SIZE            shift and go to state 130
    HEAD            shift and go to state 131
    TAIL            shift and go to state 132
    LAST            shift and go to state 133
    SET_TITLE       shift and go to state 134
    SET_DIMENSION   shift and go to state 135
    SET_COLOR       shift and go to state 136
    CREATE_OBJECT   shift and go to state 137
    CREATE_TEXT     shift and go to state 138

    expression                     shift and go to state 290
    exp                            shift and go to state 98
    term                           shift and go to state 99
    factor                         shift and go to state 100
    cte                            shift and go to state 103
    string                         shift and go to state 104
    id                             shift and go to state 105
    int                            shift and go to state 106
    float                          shift and go to state 107
    bool                           shift and go to state 108
    nestedvalue                    shift and go to state 109
    functioncall                   shift and go to state 110
    listaccess                     shift and go to state 111
    specialfunction                shift and go to state 112
    draw                           shift and go to state 119
    size                           shift and go to state 120
    head                           shift and go to state 121
    tail                           shift and go to state 122
    last                           shift and go to state 123
    set_title                      shift and go to state 124
    set_dimension                  shift and go to state 125
    set_color                      shift and go to state 126
    create_object                  shift and go to state 127
    create_text                    shift and go to state 128

state 287

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 291


state 288

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 289

    (50) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (53) condition_action2 -> .
    (54) condition_action3 -> .

    ID              reduce using rule 53 (condition_action2 -> .)
    IF              reduce using rule 53 (condition_action2 -> .)
    VAR             reduce using rule 53 (condition_action2 -> .)
    PRINT           reduce using rule 53 (condition_action2 -> .)
    RETURN          reduce using rule 53 (condition_action2 -> .)
    FOR             reduce using rule 53 (condition_action2 -> .)
    WHILE           reduce using rule 53 (condition_action2 -> .)
    DRAW            reduce using rule 53 (condition_action2 -> .)
    SIZE            reduce using rule 53 (condition_action2 -> .)
    HEAD            reduce using rule 53 (condition_action2 -> .)
    TAIL            reduce using rule 53 (condition_action2 -> .)
    LAST            reduce using rule 53 (condition_action2 -> .)
    SET_TITLE       reduce using rule 53 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 53 (condition_action2 -> .)
    SET_COLOR       reduce using rule 53 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 53 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 53 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 53 (condition_action2 -> .)
    ELSE            reduce using rule 54 (condition_action3 -> .)

    condition_action2              shift and go to state 292
    condition_action3              shift and go to state 293

state 290

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (59) for_action2 -> .

    SEMICOLON       reduce using rule 59 (for_action2 -> .)

    for_action2                    shift and go to state 294

state 291

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 295

state 292

    (50) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    DRAW            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SIZE            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    HEAD            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    TAIL            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    LAST            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_TITLE       reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_DIMENSION   reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_COLOR       reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_OBJECT   reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 293

    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 296


state 294

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 297


state 295

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (64) while_action3 -> .

    ID              reduce using rule 64 (while_action3 -> .)
    IF              reduce using rule 64 (while_action3 -> .)
    VAR             reduce using rule 64 (while_action3 -> .)
    PRINT           reduce using rule 64 (while_action3 -> .)
    RETURN          reduce using rule 64 (while_action3 -> .)
    FOR             reduce using rule 64 (while_action3 -> .)
    WHILE           reduce using rule 64 (while_action3 -> .)
    DRAW            reduce using rule 64 (while_action3 -> .)
    SIZE            reduce using rule 64 (while_action3 -> .)
    HEAD            reduce using rule 64 (while_action3 -> .)
    TAIL            reduce using rule 64 (while_action3 -> .)
    LAST            reduce using rule 64 (while_action3 -> .)
    SET_TITLE       reduce using rule 64 (while_action3 -> .)
    SET_DIMENSION   reduce using rule 64 (while_action3 -> .)
    SET_COLOR       reduce using rule 64 (while_action3 -> .)
    CREATE_OBJECT   reduce using rule 64 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 64 (while_action3 -> .)
    RIGHTKEY        reduce using rule 64 (while_action3 -> .)

    while_action3                  shift and go to state 298

state 296

    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 299

state 297

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (47) assign -> . ID assign_action1 EQUAL assign_action2 expression

    ID              shift and go to state 272

    assign                         shift and go to state 300

state 298

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    DRAW            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SIZE            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    HEAD            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    TAIL            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    LAST            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_TITLE       reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_DIMENSION   reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_COLOR       reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_OBJECT   reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 299

    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (53) condition_action2 -> .

    ID              reduce using rule 53 (condition_action2 -> .)
    IF              reduce using rule 53 (condition_action2 -> .)
    VAR             reduce using rule 53 (condition_action2 -> .)
    PRINT           reduce using rule 53 (condition_action2 -> .)
    RETURN          reduce using rule 53 (condition_action2 -> .)
    FOR             reduce using rule 53 (condition_action2 -> .)
    WHILE           reduce using rule 53 (condition_action2 -> .)
    DRAW            reduce using rule 53 (condition_action2 -> .)
    SIZE            reduce using rule 53 (condition_action2 -> .)
    HEAD            reduce using rule 53 (condition_action2 -> .)
    TAIL            reduce using rule 53 (condition_action2 -> .)
    LAST            reduce using rule 53 (condition_action2 -> .)
    SET_TITLE       reduce using rule 53 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 53 (condition_action2 -> .)
    SET_COLOR       reduce using rule 53 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 53 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 53 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 53 (condition_action2 -> .)

    condition_action2              shift and go to state 301

state 300

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 302


state 301

    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    DRAW            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SIZE            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    HEAD            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    TAIL            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    LAST            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_TITLE       reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_DIMENSION   reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_COLOR       reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_OBJECT   reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 302

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 303


state 303

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 91

    block                          shift and go to state 304

state 304

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (60) for_action3 -> .

    ID              reduce using rule 60 (for_action3 -> .)
    IF              reduce using rule 60 (for_action3 -> .)
    VAR             reduce using rule 60 (for_action3 -> .)
    PRINT           reduce using rule 60 (for_action3 -> .)
    RETURN          reduce using rule 60 (for_action3 -> .)
    FOR             reduce using rule 60 (for_action3 -> .)
    WHILE           reduce using rule 60 (for_action3 -> .)
    DRAW            reduce using rule 60 (for_action3 -> .)
    SIZE            reduce using rule 60 (for_action3 -> .)
    HEAD            reduce using rule 60 (for_action3 -> .)
    TAIL            reduce using rule 60 (for_action3 -> .)
    LAST            reduce using rule 60 (for_action3 -> .)
    SET_TITLE       reduce using rule 60 (for_action3 -> .)
    SET_DIMENSION   reduce using rule 60 (for_action3 -> .)
    SET_COLOR       reduce using rule 60 (for_action3 -> .)
    CREATE_OBJECT   reduce using rule 60 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 60 (for_action3 -> .)
    RIGHTKEY        reduce using rule 60 (for_action3 -> .)

    for_action3                    shift and go to state 305

state 305

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    DRAW            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SIZE            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    HEAD            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    TAIL            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    LAST            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_TITLE       reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_DIMENSION   reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_COLOR       reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_OBJECT   reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 87 resolved as shift
WARNING: shift/reduce conflict for VAR in state 146 resolved as shift
WARNING: reduce/reduce conflict in state 253 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 253
