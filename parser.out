Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    LIST
    OBJECT
    TOBJECT

Grammar

Rule 0     S' -> capi
Rule 1     capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 2     capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 3     capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 4     capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 5     capi_action1 -> <empty>
Rule 6     capi_action2 -> <empty>
Rule 7     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 8     start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 9     start_action1 -> <empty>
Rule 10    run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 11    run_action1 -> <empty>
Rule 12    main_cont -> <empty>
Rule 13    vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 14    vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 15    vars -> VAR recids COLON type SEMICOLON vars
Rule 16    vars -> VAR recids COLON type SEMICOLON
Rule 17    recids -> ID
Rule 18    recids -> ID COMMA recids
Rule 19    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 20    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 21    recstatement -> statement recstatement
Rule 22    recstatement -> statement
Rule 23    statement -> assign SEMICOLON
Rule 24    statement -> condition
Rule 25    statement -> vars
Rule 26    statement -> loop
Rule 27    statement -> write SEMICOLON
Rule 28    statement -> return SEMICOLON
Rule 29    statement -> functioncall SEMICOLON
Rule 30    statement -> nestedassign SEMICOLON
Rule 31    statement -> specialfunction SEMICOLON
Rule 32    specialfunction -> draw
Rule 33    specialfunction -> init
Rule 34    specialfunction -> size
Rule 35    specialfunction -> head
Rule 36    specialfunction -> find
Rule 37    specialfunction -> last
Rule 38    specialfunction -> set_fill
Rule 39    specialfunction -> set_title
Rule 40    specialfunction -> get_event
Rule 41    specialfunction -> update
Rule 42    specialfunction -> window_h
Rule 43    specialfunction -> window_w
Rule 44    specialfunction -> set_dimension
Rule 45    specialfunction -> create_text
Rule 46    specialfunction -> rand
Rule 47    specialfunction -> pow
Rule 48    specialfunction -> sqrt
Rule 49    pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
Rule 50    pow_action1 -> <empty>
Rule 51    sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
Rule 52    sqrt_action1 -> <empty>
Rule 53    draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 54    init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR
Rule 55    size -> ID DOT SIZE LEFTPAR RIGHTPAR
Rule 56    head -> ID DOT HEAD LEFTPAR RIGHTPAR
Rule 57    window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
Rule 58    window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
Rule 59    rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
Rule 60    find -> ID DOT FIND LEFTPAR expression RIGHTPAR
Rule 61    last -> ID DOT LAST LEFTPAR RIGHTPAR
Rule 62    set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
Rule 63    set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 64    set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 65    update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
Rule 66    get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
Rule 67    create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 68    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 69    assign -> assign_list EQUAL assign_action2 expression
Rule 70    assign_action1 -> <empty>
Rule 71    assign_action2 -> <empty>
Rule 72    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 73    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 74    condition_action1 -> <empty>
Rule 75    condition_action2 -> <empty>
Rule 76    condition_action3 -> <empty>
Rule 77    loop -> for
Rule 78    loop -> while
Rule 79    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 80    for_action1 -> <empty>
Rule 81    for_action2 -> <empty>
Rule 82    for_action3 -> <empty>
Rule 83    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 84    while_action1 -> <empty>
Rule 85    while_action2 -> <empty>
Rule 86    while_action3 -> <empty>
Rule 87    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 88    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 89    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 90    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 91    startscope_action -> <empty>
Rule 92    function_action1 -> <empty>
Rule 93    function_action2 -> <empty>
Rule 94    function_action3 -> <empty>
Rule 95    recparams -> ID COLON type
Rule 96    recparams -> ID COLON type COMMA recparams
Rule 97    recfunc -> function recfunc
Rule 98    recfunc -> function
Rule 99    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 100   recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 101   recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 102   recwrite -> expression action_recwrite_exp
Rule 103   recwrite -> STRING action_recwrite_cte
Rule 104   action_recwrite_exp -> <empty>
Rule 105   action_recwrite_cte -> <empty>
Rule 106   return -> RETURN expression
Rule 107   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
Rule 108   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
Rule 109   function_call_action1 -> <empty>
Rule 110   function_call_action2 -> <empty>
Rule 111   recfuncexp -> expression COMMA recfuncexp
Rule 112   recfuncexp -> expression recfunc_action1
Rule 113   recfunc_action1 -> <empty>
Rule 114   expression -> exp RELOP relop_action1 exp relop_action2
Rule 115   expression -> exp LOGIC logic_action1 exp logic_action2
Rule 116   expression -> exp
Rule 117   relop_action1 -> <empty>
Rule 118   relop_action2 -> <empty>
Rule 119   logic_action1 -> <empty>
Rule 120   logic_action2 -> <empty>
Rule 121   exp -> term exp_action recexp
Rule 122   exp -> term exp_action
Rule 123   exp_action -> <empty>
Rule 124   recexp -> EX add_operator exp
Rule 125   term -> factor term_action recterm
Rule 126   term -> factor term_action
Rule 127   term_action -> <empty>
Rule 128   recterm -> TERMS add_operator term
Rule 129   add_operator -> <empty>
Rule 130   factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2
Rule 131   factor -> EX cte
Rule 132   factor -> cte
Rule 133   factor_action1 -> <empty>
Rule 134   factor_action2 -> <empty>
Rule 135   type -> primitivetype
Rule 136   type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
Rule 137   action_list1 -> <empty>
Rule 138   primitivetype -> TINT
Rule 139   primitivetype -> TFLOAT
Rule 140   primitivetype -> TSTRING
Rule 141   primitivetype -> TBOOL
Rule 142   assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 143   listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 144   list_action1 -> <empty>
Rule 145   list_action_3 -> <empty>
Rule 146   nestedvalue -> ID DOT ID
Rule 147   nestedassign -> nestedvalue EQUAL expression
Rule 148   cte -> <empty>
Rule 149   cte -> id
Rule 150   cte -> int
Rule 151   cte -> float
Rule 152   cte -> bool
Rule 153   cte -> string
Rule 154   cte -> nestedvalue
Rule 155   cte -> functioncall
Rule 156   cte -> listaccess
Rule 157   cte -> specialfunction
Rule 158   id -> ID
Rule 159   string -> STRING
Rule 160   int -> INT
Rule 161   float -> FLOAT
Rule 162   bool -> TRUE
Rule 163   bool -> FALSE

Terminals, with rules where they appear

BAR                  : 136 136
CAPIGAME             : 53 54 57 58 59 62 63 64 65 66
COLON                : 1 2 3 4 7 13 14 15 16 19 20 95 96
COMMA                : 18 49 53 53 53 53 59 63 63 64 67 67 67 96 100 101 111
COMMENT              : 
CREATE_TEXT          : 67
DOT                  : 53 54 55 56 57 58 59 60 61 62 63 64 65 66 146
DRAW                 : 53
ELSE                 : 73
EQUAL                : 13 14 68 69 147
EX                   : 124 131
FALSE                : 163
FIND                 : 60
FLOAT                : 161
FOR                  : 79
FUNC                 : 8 10 87 88 89 90
GET_EVENT            : 66
GLOBAL               : 7
HEAD                 : 56
ID                   : 17 18 55 56 60 61 68 87 88 89 90 95 96 107 108 142 143 146 146 158
IF                   : 72 73
INIT                 : 54
INT                  : 160
LAST                 : 61
LEFTBRACKET          : 136 142 143
LEFTKEY              : 1 2 3 4 7 19 20
LEFTPAR              : 8 10 49 51 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 72 73 79 83 87 88 89 90 99 107 108 130
LIST                 : 
LOGIC                : 115
MAIN                 : 1 2 3 4
OBJECT               : 
POW                  : 49
PRINT                : 99
RAND                 : 59
RELOP                : 114
RETURN               : 106
RIGHTBRACKET         : 136 142 143
RIGHTKEY             : 1 2 3 4 7 19 20
RIGHTPAR             : 8 10 49 51 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 72 73 79 83 87 88 89 90 99 107 108 130
RUN                  : 10
SEMICOLON            : 1 2 3 4 7 13 14 15 16 19 20 23 27 28 29 30 31 79 79 79
SET_DIMENSION        : 64
SET_FILL             : 63
SET_TITLE            : 62
SIZE                 : 55
SQRT                 : 51
START                : 8
STRING               : 101 103 159
TBOOL                : 141
TERMS                : 128
TFLOAT               : 139
TINT                 : 138
TLIST                : 136
TOBJECT              : 
TRUE                 : 162
TSTRING              : 140
UPDATE               : 65
VAR                  : 13 14 15 16
VOID                 : 8 10 89 90
WHILE                : 83
WINDOW_H             : 57
WINDOW_W             : 58
error                : 

Nonterminals, with rules where they appear

action_list1         : 136
action_recwrite_cte  : 101 103
action_recwrite_exp  : 100 102
add_operator         : 124 128
assign               : 23 79 79
assign_action1       : 68
assign_action2       : 68 69
assign_list          : 69
block                : 8 10 72 73 73 79 83 87 88 89 90
bool                 : 152
capi                 : 0
capi_action1         : 1 2 3 4
capi_action2         : 1 2 3 4
condition            : 24
condition_action1    : 72 73
condition_action2    : 72 73
condition_action3    : 73
create_text          : 45
cte                  : 131 132 136
draw                 : 32
exp                  : 114 114 115 115 116 124
exp_action           : 121 122
expression           : 13 14 49 49 51 53 53 53 53 53 59 59 60 62 63 63 63 64 64 67 67 67 67 68 69 72 73 79 83 100 102 106 111 112 130 142 143 147
factor               : 125 126
factor_action1       : 130
factor_action2       : 130
find                 : 36
float                : 151
for                  : 77
for_action1          : 79
for_action2          : 79
for_action3          : 79
function             : 97 98
function_action1     : 87 89
function_action2     : 87 89
function_action3     : 87 88 89 90
function_call_action1 : 107 108
function_call_action2 : 107 108
functioncall         : 29 155
get_event            : 40
global               : 1 3
head                 : 35
id                   : 149
init                 : 33
int                  : 150
last                 : 37
list_action1         : 142 143
list_action_3        : 142 143
listaccess           : 156
logic_action1        : 115
logic_action2        : 115
loop                 : 26
main_cont            : 8 10
nestedassign         : 30
nestedvalue          : 147 154
pow                  : 47
pow_action1          : 49
primitivetype        : 135 136
rand                 : 46
recexp               : 121
recfunc              : 1 2 97
recfunc_action1      : 112
recfuncexp           : 107 111
recids               : 13 14 15 16 18
recparams            : 87 89 96
recstatement         : 19 21
recterm              : 125
recwrite             : 99 100 101
relop_action1        : 114
relop_action2        : 114
return               : 28
run                  : 1 2 3 4
run_action1          : 10
set_dimension        : 44
set_fill             : 38
set_title            : 39
size                 : 34
specialfunction      : 31 157
sqrt                 : 48
sqrt_action1         : 51
start                : 1 2 3 4
start_action1        : 8
startscope_action    : 8 10 79 83 87 88 89 90
statement            : 21 22
string               : 153
term                 : 121 122 128
term_action          : 125 126
type                 : 13 14 15 16 87 88 95 96
update               : 41
vars                 : 7 13 15 25
while                : 78
while_action1        : 83
while_action2        : 83
while_action3        : 83
window_h             : 42
window_w             : 43
write                : 27

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> . capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> . capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> . capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (5) capi_action1 -> .

    MAIN            reduce using rule 5 (capi_action1 -> .)
    GLOBAL          reduce using rule 5 (capi_action1 -> .)
    VOID            reduce using rule 5 (capi_action1 -> .)
    TLIST           reduce using rule 5 (capi_action1 -> .)
    TINT            reduce using rule 5 (capi_action1 -> .)
    TFLOAT          reduce using rule 5 (capi_action1 -> .)
    TSTRING         reduce using rule 5 (capi_action1 -> .)
    TBOOL           reduce using rule 5 (capi_action1 -> .)

    capi                           shift and go to state 1
    capi_action1                   shift and go to state 2

state 1

    (0) S' -> capi .



state 2

    (1) capi -> capi_action1 . global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> capi_action1 . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 . global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> capi_action1 . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (7) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (97) recfunc -> . function recfunc
    (98) recfunc -> . function
    (87) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (89) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    MAIN            shift and go to state 5
    GLOBAL          shift and go to state 6
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    global                         shift and go to state 3
    recfunc                        shift and go to state 4
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 3

    (1) capi -> capi_action1 global . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 global . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (97) recfunc -> . function recfunc
    (98) recfunc -> . function
    (87) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (89) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    MAIN            shift and go to state 17
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    recfunc                        shift and go to state 16
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 4

    (2) capi -> capi_action1 recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 18


state 5

    (4) capi -> capi_action1 MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 19


state 6

    (7) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 7

    (97) recfunc -> function . recfunc
    (98) recfunc -> function .
    (97) recfunc -> . function recfunc
    (98) recfunc -> . function
    (87) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (89) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    MAIN            reduce using rule 98 (recfunc -> function .)
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    function                       shift and go to state 7
    recfunc                        shift and go to state 21
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 8

    (87) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 22


state 9

    (89) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 10

    (135) type -> primitivetype .

    FUNC            reduce using rule 135 (type -> primitivetype .)
    EQUAL           reduce using rule 135 (type -> primitivetype .)
    SEMICOLON       reduce using rule 135 (type -> primitivetype .)
    COMMA           reduce using rule 135 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 135 (type -> primitivetype .)


state 11

    (136) type -> TLIST . BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 24


state 12

    (138) primitivetype -> TINT .

    FUNC            reduce using rule 138 (primitivetype -> TINT .)
    BAR             reduce using rule 138 (primitivetype -> TINT .)
    EQUAL           reduce using rule 138 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 138 (primitivetype -> TINT .)
    COMMA           reduce using rule 138 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 138 (primitivetype -> TINT .)


state 13

    (139) primitivetype -> TFLOAT .

    FUNC            reduce using rule 139 (primitivetype -> TFLOAT .)
    BAR             reduce using rule 139 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 139 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 139 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 139 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 139 (primitivetype -> TFLOAT .)


state 14

    (140) primitivetype -> TSTRING .

    FUNC            reduce using rule 140 (primitivetype -> TSTRING .)
    BAR             reduce using rule 140 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 140 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 140 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 140 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 140 (primitivetype -> TSTRING .)


state 15

    (141) primitivetype -> TBOOL .

    FUNC            reduce using rule 141 (primitivetype -> TBOOL .)
    BAR             reduce using rule 141 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 141 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 141 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 141 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 141 (primitivetype -> TBOOL .)


state 16

    (1) capi -> capi_action1 global recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 25


state 17

    (3) capi -> capi_action1 global MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 26


state 18

    (2) capi -> capi_action1 recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (4) capi -> capi_action1 MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 28


state 20

    (7) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (97) recfunc -> function recfunc .

    MAIN            reduce using rule 97 (recfunc -> function recfunc .)


state 22

    (87) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 30


state 23

    (89) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (136) type -> TLIST BAR . primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    primitivetype                  shift and go to state 32

state 25

    (1) capi -> capi_action1 global recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 33


state 26

    (3) capi -> capi_action1 global MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 34


state 27

    (2) capi -> capi_action1 recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (4) capi -> capi_action1 MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 36

state 29

    (7) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 39

    vars                           shift and go to state 38

state 30

    (87) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (91) startscope_action -> .

    LEFTPAR         reduce using rule 91 (startscope_action -> .)

    startscope_action              shift and go to state 40

state 31

    (89) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (91) startscope_action -> .

    LEFTPAR         reduce using rule 91 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (136) type -> TLIST BAR primitivetype . BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 42


state 33

    (1) capi -> capi_action1 global recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 43


state 34

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 44

state 35

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 45

state 36

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 46

state 37

    (8) start -> VOID . FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 47


state 38

    (7) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 48


state 39

    (13) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR . recids COLON type SEMICOLON vars
    (16) vars -> VAR . recids COLON type SEMICOLON
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 50

    recids                         shift and go to state 49

state 40

    (87) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 51


state 41

    (89) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 42

    (136) type -> TLIST BAR primitivetype BAR . LEFTBRACKET cte RIGHTBRACKET action_list1

    LEFTBRACKET     shift and go to state 53


state 43

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 54

state 44

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 55

state 45

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 56

state 46

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 57

state 47

    (8) start -> VOID FUNC . start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
    (9) start_action1 -> .

    START           reduce using rule 9 (start_action1 -> .)

    start_action1                  shift and go to state 59

state 48

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 60


state 49

    (13) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR recids . COLON type SEMICOLON vars
    (16) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 61


state 50

    (17) recids -> ID .
    (18) recids -> ID . COMMA recids

    COLON           reduce using rule 17 (recids -> ID .)
    COMMA           shift and go to state 62


state 51

    (87) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (95) recparams -> . ID COLON type
    (96) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 65
    ID              shift and go to state 63

    recparams                      shift and go to state 64

state 52

    (89) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (95) recparams -> . ID COLON type
    (96) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 67
    ID              shift and go to state 63

    recparams                      shift and go to state 66

state 53

    (136) type -> TLIST BAR primitivetype BAR LEFTBRACKET . cte RIGHTBRACKET action_list1
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

    RIGHTBRACKET    reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

    cte                            shift and go to state 68
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 54

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 105

state 55

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 106

state 56

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 107

state 57

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 108


state 58

    (10) run -> VOID . FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 109


state 59

    (8) start -> VOID FUNC start_action1 . START startscope_action LEFTPAR RIGHTPAR main_cont block

    START           shift and go to state 110


state 60

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 61

    (13) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON . type SEMICOLON vars
    (16) vars -> VAR recids COLON . type SEMICOLON
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    type                           shift and go to state 111
    primitivetype                  shift and go to state 10

state 62

    (18) recids -> ID COMMA . recids
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 50

    recids                         shift and go to state 112

state 63

    (95) recparams -> ID . COLON type
    (96) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 113


state 64

    (87) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function_action1 -> .

    RIGHTPAR        reduce using rule 92 (function_action1 -> .)

    function_action1               shift and go to state 114

state 65

    (88) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (94) function_action3 -> .

    COLON           reduce using rule 94 (function_action3 -> .)

    function_action3               shift and go to state 115

state 66

    (89) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function_action1 -> .

    RIGHTPAR        reduce using rule 92 (function_action1 -> .)

    function_action1               shift and go to state 116

state 67

    (90) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (94) function_action3 -> .

    COLON           reduce using rule 94 (function_action3 -> .)

    function_action3               shift and go to state 117

state 68

    (136) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte . RIGHTBRACKET action_list1

    RIGHTBRACKET    shift and go to state 118


state 69

    (149) cte -> id .

    RIGHTBRACKET    reduce using rule 149 (cte -> id .)
    TERMS           reduce using rule 149 (cte -> id .)
    EX              reduce using rule 149 (cte -> id .)
    RELOP           reduce using rule 149 (cte -> id .)
    LOGIC           reduce using rule 149 (cte -> id .)
    COMMA           reduce using rule 149 (cte -> id .)
    SEMICOLON       reduce using rule 149 (cte -> id .)
    RIGHTPAR        reduce using rule 149 (cte -> id .)


state 70

    (150) cte -> int .

    RIGHTBRACKET    reduce using rule 150 (cte -> int .)
    TERMS           reduce using rule 150 (cte -> int .)
    EX              reduce using rule 150 (cte -> int .)
    RELOP           reduce using rule 150 (cte -> int .)
    LOGIC           reduce using rule 150 (cte -> int .)
    COMMA           reduce using rule 150 (cte -> int .)
    SEMICOLON       reduce using rule 150 (cte -> int .)
    RIGHTPAR        reduce using rule 150 (cte -> int .)


state 71

    (151) cte -> float .

    RIGHTBRACKET    reduce using rule 151 (cte -> float .)
    TERMS           reduce using rule 151 (cte -> float .)
    EX              reduce using rule 151 (cte -> float .)
    RELOP           reduce using rule 151 (cte -> float .)
    LOGIC           reduce using rule 151 (cte -> float .)
    COMMA           reduce using rule 151 (cte -> float .)
    SEMICOLON       reduce using rule 151 (cte -> float .)
    RIGHTPAR        reduce using rule 151 (cte -> float .)


state 72

    (152) cte -> bool .

    RIGHTBRACKET    reduce using rule 152 (cte -> bool .)
    TERMS           reduce using rule 152 (cte -> bool .)
    EX              reduce using rule 152 (cte -> bool .)
    RELOP           reduce using rule 152 (cte -> bool .)
    LOGIC           reduce using rule 152 (cte -> bool .)
    COMMA           reduce using rule 152 (cte -> bool .)
    SEMICOLON       reduce using rule 152 (cte -> bool .)
    RIGHTPAR        reduce using rule 152 (cte -> bool .)


state 73

    (153) cte -> string .

    RIGHTBRACKET    reduce using rule 153 (cte -> string .)
    TERMS           reduce using rule 153 (cte -> string .)
    EX              reduce using rule 153 (cte -> string .)
    RELOP           reduce using rule 153 (cte -> string .)
    LOGIC           reduce using rule 153 (cte -> string .)
    COMMA           reduce using rule 153 (cte -> string .)
    SEMICOLON       reduce using rule 153 (cte -> string .)
    RIGHTPAR        reduce using rule 153 (cte -> string .)


state 74

    (154) cte -> nestedvalue .

    RIGHTBRACKET    reduce using rule 154 (cte -> nestedvalue .)
    TERMS           reduce using rule 154 (cte -> nestedvalue .)
    EX              reduce using rule 154 (cte -> nestedvalue .)
    RELOP           reduce using rule 154 (cte -> nestedvalue .)
    LOGIC           reduce using rule 154 (cte -> nestedvalue .)
    COMMA           reduce using rule 154 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 154 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 154 (cte -> nestedvalue .)


state 75

    (155) cte -> functioncall .

    RIGHTBRACKET    reduce using rule 155 (cte -> functioncall .)
    TERMS           reduce using rule 155 (cte -> functioncall .)
    EX              reduce using rule 155 (cte -> functioncall .)
    RELOP           reduce using rule 155 (cte -> functioncall .)
    LOGIC           reduce using rule 155 (cte -> functioncall .)
    COMMA           reduce using rule 155 (cte -> functioncall .)
    SEMICOLON       reduce using rule 155 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 155 (cte -> functioncall .)


state 76

    (156) cte -> listaccess .

    RIGHTBRACKET    reduce using rule 156 (cte -> listaccess .)
    TERMS           reduce using rule 156 (cte -> listaccess .)
    EX              reduce using rule 156 (cte -> listaccess .)
    RELOP           reduce using rule 156 (cte -> listaccess .)
    LOGIC           reduce using rule 156 (cte -> listaccess .)
    COMMA           reduce using rule 156 (cte -> listaccess .)
    SEMICOLON       reduce using rule 156 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 156 (cte -> listaccess .)


state 77

    (157) cte -> specialfunction .

    RIGHTBRACKET    reduce using rule 157 (cte -> specialfunction .)
    TERMS           reduce using rule 157 (cte -> specialfunction .)
    EX              reduce using rule 157 (cte -> specialfunction .)
    RELOP           reduce using rule 157 (cte -> specialfunction .)
    LOGIC           reduce using rule 157 (cte -> specialfunction .)
    COMMA           reduce using rule 157 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 157 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 157 (cte -> specialfunction .)


state 78

    (158) id -> ID .
    (146) nestedvalue -> ID . DOT ID
    (107) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (55) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> ID . DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> ID . DOT LAST LEFTPAR RIGHTPAR
    (109) function_call_action1 -> .
    (144) list_action1 -> .

    RIGHTBRACKET    reduce using rule 158 (id -> ID .)
    TERMS           reduce using rule 158 (id -> ID .)
    EX              reduce using rule 158 (id -> ID .)
    RELOP           reduce using rule 158 (id -> ID .)
    LOGIC           reduce using rule 158 (id -> ID .)
    COMMA           reduce using rule 158 (id -> ID .)
    SEMICOLON       reduce using rule 158 (id -> ID .)
    RIGHTPAR        reduce using rule 158 (id -> ID .)
    DOT             shift and go to state 119
    LEFTPAR         reduce using rule 109 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 144 (list_action1 -> .)

    function_call_action1          shift and go to state 120
    list_action1                   shift and go to state 121

state 79

    (160) int -> INT .

    RIGHTBRACKET    reduce using rule 160 (int -> INT .)
    TERMS           reduce using rule 160 (int -> INT .)
    EX              reduce using rule 160 (int -> INT .)
    RELOP           reduce using rule 160 (int -> INT .)
    LOGIC           reduce using rule 160 (int -> INT .)
    COMMA           reduce using rule 160 (int -> INT .)
    SEMICOLON       reduce using rule 160 (int -> INT .)
    RIGHTPAR        reduce using rule 160 (int -> INT .)


state 80

    (161) float -> FLOAT .

    RIGHTBRACKET    reduce using rule 161 (float -> FLOAT .)
    TERMS           reduce using rule 161 (float -> FLOAT .)
    EX              reduce using rule 161 (float -> FLOAT .)
    RELOP           reduce using rule 161 (float -> FLOAT .)
    LOGIC           reduce using rule 161 (float -> FLOAT .)
    COMMA           reduce using rule 161 (float -> FLOAT .)
    SEMICOLON       reduce using rule 161 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 161 (float -> FLOAT .)


state 81

    (162) bool -> TRUE .

    RIGHTBRACKET    reduce using rule 162 (bool -> TRUE .)
    TERMS           reduce using rule 162 (bool -> TRUE .)
    EX              reduce using rule 162 (bool -> TRUE .)
    RELOP           reduce using rule 162 (bool -> TRUE .)
    LOGIC           reduce using rule 162 (bool -> TRUE .)
    COMMA           reduce using rule 162 (bool -> TRUE .)
    SEMICOLON       reduce using rule 162 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 162 (bool -> TRUE .)


state 82

    (163) bool -> FALSE .

    RIGHTBRACKET    reduce using rule 163 (bool -> FALSE .)
    TERMS           reduce using rule 163 (bool -> FALSE .)
    EX              reduce using rule 163 (bool -> FALSE .)
    RELOP           reduce using rule 163 (bool -> FALSE .)
    LOGIC           reduce using rule 163 (bool -> FALSE .)
    COMMA           reduce using rule 163 (bool -> FALSE .)
    SEMICOLON       reduce using rule 163 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 163 (bool -> FALSE .)


state 83

    (159) string -> STRING .

    RIGHTBRACKET    reduce using rule 159 (string -> STRING .)
    TERMS           reduce using rule 159 (string -> STRING .)
    EX              reduce using rule 159 (string -> STRING .)
    RELOP           reduce using rule 159 (string -> STRING .)
    LOGIC           reduce using rule 159 (string -> STRING .)
    COMMA           reduce using rule 159 (string -> STRING .)
    SEMICOLON       reduce using rule 159 (string -> STRING .)
    RIGHTPAR        reduce using rule 159 (string -> STRING .)


state 84

    (32) specialfunction -> draw .

    RIGHTBRACKET    reduce using rule 32 (specialfunction -> draw .)
    TERMS           reduce using rule 32 (specialfunction -> draw .)
    EX              reduce using rule 32 (specialfunction -> draw .)
    RELOP           reduce using rule 32 (specialfunction -> draw .)
    LOGIC           reduce using rule 32 (specialfunction -> draw .)
    COMMA           reduce using rule 32 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 32 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> draw .)


state 85

    (33) specialfunction -> init .

    RIGHTBRACKET    reduce using rule 33 (specialfunction -> init .)
    TERMS           reduce using rule 33 (specialfunction -> init .)
    EX              reduce using rule 33 (specialfunction -> init .)
    RELOP           reduce using rule 33 (specialfunction -> init .)
    LOGIC           reduce using rule 33 (specialfunction -> init .)
    COMMA           reduce using rule 33 (specialfunction -> init .)
    SEMICOLON       reduce using rule 33 (specialfunction -> init .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> init .)


state 86

    (34) specialfunction -> size .

    RIGHTBRACKET    reduce using rule 34 (specialfunction -> size .)
    TERMS           reduce using rule 34 (specialfunction -> size .)
    EX              reduce using rule 34 (specialfunction -> size .)
    RELOP           reduce using rule 34 (specialfunction -> size .)
    LOGIC           reduce using rule 34 (specialfunction -> size .)
    COMMA           reduce using rule 34 (specialfunction -> size .)
    SEMICOLON       reduce using rule 34 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> size .)


state 87

    (35) specialfunction -> head .

    RIGHTBRACKET    reduce using rule 35 (specialfunction -> head .)
    TERMS           reduce using rule 35 (specialfunction -> head .)
    EX              reduce using rule 35 (specialfunction -> head .)
    RELOP           reduce using rule 35 (specialfunction -> head .)
    LOGIC           reduce using rule 35 (specialfunction -> head .)
    COMMA           reduce using rule 35 (specialfunction -> head .)
    SEMICOLON       reduce using rule 35 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> head .)


state 88

    (36) specialfunction -> find .

    RIGHTBRACKET    reduce using rule 36 (specialfunction -> find .)
    TERMS           reduce using rule 36 (specialfunction -> find .)
    EX              reduce using rule 36 (specialfunction -> find .)
    RELOP           reduce using rule 36 (specialfunction -> find .)
    LOGIC           reduce using rule 36 (specialfunction -> find .)
    COMMA           reduce using rule 36 (specialfunction -> find .)
    SEMICOLON       reduce using rule 36 (specialfunction -> find .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> find .)


state 89

    (37) specialfunction -> last .

    RIGHTBRACKET    reduce using rule 37 (specialfunction -> last .)
    TERMS           reduce using rule 37 (specialfunction -> last .)
    EX              reduce using rule 37 (specialfunction -> last .)
    RELOP           reduce using rule 37 (specialfunction -> last .)
    LOGIC           reduce using rule 37 (specialfunction -> last .)
    COMMA           reduce using rule 37 (specialfunction -> last .)
    SEMICOLON       reduce using rule 37 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 37 (specialfunction -> last .)


state 90

    (38) specialfunction -> set_fill .

    RIGHTBRACKET    reduce using rule 38 (specialfunction -> set_fill .)
    TERMS           reduce using rule 38 (specialfunction -> set_fill .)
    EX              reduce using rule 38 (specialfunction -> set_fill .)
    RELOP           reduce using rule 38 (specialfunction -> set_fill .)
    LOGIC           reduce using rule 38 (specialfunction -> set_fill .)
    COMMA           reduce using rule 38 (specialfunction -> set_fill .)
    SEMICOLON       reduce using rule 38 (specialfunction -> set_fill .)
    RIGHTPAR        reduce using rule 38 (specialfunction -> set_fill .)


state 91

    (39) specialfunction -> set_title .

    RIGHTBRACKET    reduce using rule 39 (specialfunction -> set_title .)
    TERMS           reduce using rule 39 (specialfunction -> set_title .)
    EX              reduce using rule 39 (specialfunction -> set_title .)
    RELOP           reduce using rule 39 (specialfunction -> set_title .)
    LOGIC           reduce using rule 39 (specialfunction -> set_title .)
    COMMA           reduce using rule 39 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 39 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 39 (specialfunction -> set_title .)


state 92

    (40) specialfunction -> get_event .

    RIGHTBRACKET    reduce using rule 40 (specialfunction -> get_event .)
    TERMS           reduce using rule 40 (specialfunction -> get_event .)
    EX              reduce using rule 40 (specialfunction -> get_event .)
    RELOP           reduce using rule 40 (specialfunction -> get_event .)
    LOGIC           reduce using rule 40 (specialfunction -> get_event .)
    COMMA           reduce using rule 40 (specialfunction -> get_event .)
    SEMICOLON       reduce using rule 40 (specialfunction -> get_event .)
    RIGHTPAR        reduce using rule 40 (specialfunction -> get_event .)


state 93

    (41) specialfunction -> update .

    RIGHTBRACKET    reduce using rule 41 (specialfunction -> update .)
    TERMS           reduce using rule 41 (specialfunction -> update .)
    EX              reduce using rule 41 (specialfunction -> update .)
    RELOP           reduce using rule 41 (specialfunction -> update .)
    LOGIC           reduce using rule 41 (specialfunction -> update .)
    COMMA           reduce using rule 41 (specialfunction -> update .)
    SEMICOLON       reduce using rule 41 (specialfunction -> update .)
    RIGHTPAR        reduce using rule 41 (specialfunction -> update .)


state 94

    (42) specialfunction -> window_h .

    RIGHTBRACKET    reduce using rule 42 (specialfunction -> window_h .)
    TERMS           reduce using rule 42 (specialfunction -> window_h .)
    EX              reduce using rule 42 (specialfunction -> window_h .)
    RELOP           reduce using rule 42 (specialfunction -> window_h .)
    LOGIC           reduce using rule 42 (specialfunction -> window_h .)
    COMMA           reduce using rule 42 (specialfunction -> window_h .)
    SEMICOLON       reduce using rule 42 (specialfunction -> window_h .)
    RIGHTPAR        reduce using rule 42 (specialfunction -> window_h .)


state 95

    (43) specialfunction -> window_w .

    RIGHTBRACKET    reduce using rule 43 (specialfunction -> window_w .)
    TERMS           reduce using rule 43 (specialfunction -> window_w .)
    EX              reduce using rule 43 (specialfunction -> window_w .)
    RELOP           reduce using rule 43 (specialfunction -> window_w .)
    LOGIC           reduce using rule 43 (specialfunction -> window_w .)
    COMMA           reduce using rule 43 (specialfunction -> window_w .)
    SEMICOLON       reduce using rule 43 (specialfunction -> window_w .)
    RIGHTPAR        reduce using rule 43 (specialfunction -> window_w .)


state 96

    (44) specialfunction -> set_dimension .

    RIGHTBRACKET    reduce using rule 44 (specialfunction -> set_dimension .)
    TERMS           reduce using rule 44 (specialfunction -> set_dimension .)
    EX              reduce using rule 44 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 44 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 44 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 44 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 44 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 44 (specialfunction -> set_dimension .)


state 97

    (45) specialfunction -> create_text .

    RIGHTBRACKET    reduce using rule 45 (specialfunction -> create_text .)
    TERMS           reduce using rule 45 (specialfunction -> create_text .)
    EX              reduce using rule 45 (specialfunction -> create_text .)
    RELOP           reduce using rule 45 (specialfunction -> create_text .)
    LOGIC           reduce using rule 45 (specialfunction -> create_text .)
    COMMA           reduce using rule 45 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 45 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 45 (specialfunction -> create_text .)


state 98

    (46) specialfunction -> rand .

    RIGHTBRACKET    reduce using rule 46 (specialfunction -> rand .)
    TERMS           reduce using rule 46 (specialfunction -> rand .)
    EX              reduce using rule 46 (specialfunction -> rand .)
    RELOP           reduce using rule 46 (specialfunction -> rand .)
    LOGIC           reduce using rule 46 (specialfunction -> rand .)
    COMMA           reduce using rule 46 (specialfunction -> rand .)
    SEMICOLON       reduce using rule 46 (specialfunction -> rand .)
    RIGHTPAR        reduce using rule 46 (specialfunction -> rand .)


state 99

    (47) specialfunction -> pow .

    RIGHTBRACKET    reduce using rule 47 (specialfunction -> pow .)
    TERMS           reduce using rule 47 (specialfunction -> pow .)
    EX              reduce using rule 47 (specialfunction -> pow .)
    RELOP           reduce using rule 47 (specialfunction -> pow .)
    LOGIC           reduce using rule 47 (specialfunction -> pow .)
    COMMA           reduce using rule 47 (specialfunction -> pow .)
    SEMICOLON       reduce using rule 47 (specialfunction -> pow .)
    RIGHTPAR        reduce using rule 47 (specialfunction -> pow .)


state 100

    (48) specialfunction -> sqrt .

    RIGHTBRACKET    reduce using rule 48 (specialfunction -> sqrt .)
    TERMS           reduce using rule 48 (specialfunction -> sqrt .)
    EX              reduce using rule 48 (specialfunction -> sqrt .)
    RELOP           reduce using rule 48 (specialfunction -> sqrt .)
    LOGIC           reduce using rule 48 (specialfunction -> sqrt .)
    COMMA           reduce using rule 48 (specialfunction -> sqrt .)
    SEMICOLON       reduce using rule 48 (specialfunction -> sqrt .)
    RIGHTPAR        reduce using rule 48 (specialfunction -> sqrt .)


state 101

    (53) draw -> CAPIGAME . DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> CAPIGAME . DOT INIT LEFTPAR RIGHTPAR
    (63) set_fill -> CAPIGAME . DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> CAPIGAME . DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> CAPIGAME . DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> CAPIGAME . DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> CAPIGAME . DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> CAPIGAME . DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> CAPIGAME . DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (59) rand -> CAPIGAME . DOT RAND LEFTPAR expression COMMA expression RIGHTPAR

    DOT             shift and go to state 122


state 102

    (67) create_text -> CREATE_TEXT . LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 123


state 103

    (49) pow -> POW . pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) pow_action1 -> .

    LEFTPAR         reduce using rule 50 (pow_action1 -> .)

    pow_action1                    shift and go to state 124

state 104

    (51) sqrt -> SQRT . sqrt_action1 LEFTPAR expression RIGHTPAR
    (52) sqrt_action1 -> .

    LEFTPAR         reduce using rule 52 (sqrt_action1 -> .)

    sqrt_action1                   shift and go to state 125

state 105

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 126

state 106

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 127


state 107

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 128


state 108

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 129


state 109

    (10) run -> VOID FUNC . run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
    (11) run_action1 -> .

    RUN             reduce using rule 11 (run_action1 -> .)

    run_action1                    shift and go to state 130

state 110

    (8) start -> VOID FUNC start_action1 START . startscope_action LEFTPAR RIGHTPAR main_cont block
    (91) startscope_action -> .

    LEFTPAR         reduce using rule 91 (startscope_action -> .)

    startscope_action              shift and go to state 131

state 111

    (13) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON type . SEMICOLON vars
    (16) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 132
    SEMICOLON       shift and go to state 133


state 112

    (18) recids -> ID COMMA recids .

    COLON           reduce using rule 18 (recids -> ID COMMA recids .)


state 113

    (95) recparams -> ID COLON . type
    (96) recparams -> ID COLON . type COMMA recparams
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    type                           shift and go to state 134
    primitivetype                  shift and go to state 10

state 114

    (87) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 135


state 115

    (88) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 136

state 116

    (89) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 138


state 117

    (90) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 139

state 118

    (136) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET . action_list1
    (137) action_list1 -> .

    FUNC            reduce using rule 137 (action_list1 -> .)
    EQUAL           reduce using rule 137 (action_list1 -> .)
    SEMICOLON       reduce using rule 137 (action_list1 -> .)
    COMMA           reduce using rule 137 (action_list1 -> .)
    RIGHTPAR        reduce using rule 137 (action_list1 -> .)

    action_list1                   shift and go to state 140

state 119

    (146) nestedvalue -> ID DOT . ID
    (55) size -> ID DOT . SIZE LEFTPAR RIGHTPAR
    (56) head -> ID DOT . HEAD LEFTPAR RIGHTPAR
    (60) find -> ID DOT . FIND LEFTPAR expression RIGHTPAR
    (61) last -> ID DOT . LAST LEFTPAR RIGHTPAR

    ID              shift and go to state 141
    SIZE            shift and go to state 142
    HEAD            shift and go to state 143
    FIND            shift and go to state 144
    LAST            shift and go to state 145


state 120

    (107) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 RIGHTPAR

    LEFTPAR         shift and go to state 146


state 121

    (143) listaccess -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 147


state 122

    (53) draw -> CAPIGAME DOT . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> CAPIGAME DOT . INIT LEFTPAR RIGHTPAR
    (63) set_fill -> CAPIGAME DOT . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> CAPIGAME DOT . SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> CAPIGAME DOT . GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> CAPIGAME DOT . UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> CAPIGAME DOT . WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> CAPIGAME DOT . WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> CAPIGAME DOT . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (59) rand -> CAPIGAME DOT . RAND LEFTPAR expression COMMA expression RIGHTPAR

    DRAW            shift and go to state 148
    INIT            shift and go to state 149
    SET_FILL        shift and go to state 150
    SET_TITLE       shift and go to state 151
    GET_EVENT       shift and go to state 152
    UPDATE          shift and go to state 153
    WINDOW_H        shift and go to state 154
    WINDOW_W        shift and go to state 155
    SET_DIMENSION   shift and go to state 156
    RAND            shift and go to state 157


state 123

    (67) create_text -> CREATE_TEXT LEFTPAR . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 158
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 124

    (49) pow -> POW pow_action1 . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 165


state 125

    (51) sqrt -> SQRT sqrt_action1 . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 166


state 126

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 167


state 127

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 168


state 128

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 169


state 129

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 130

    (10) run -> VOID FUNC run_action1 . RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    RUN             shift and go to state 170


state 131

    (8) start -> VOID FUNC start_action1 START startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 171


state 132

    (13) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 172
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 133

    (15) vars -> VAR recids COLON type SEMICOLON . vars
    (16) vars -> VAR recids COLON type SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CAPIGAME        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    POW             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SQRT            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 173

state 134

    (95) recparams -> ID COLON type .
    (96) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 95 (recparams -> ID COLON type .)
    COMMA           shift and go to state 174


state 135

    (87) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (93) function_action2 -> .

    COLON           reduce using rule 93 (function_action2 -> .)

    function_action2               shift and go to state 175

state 136

    (88) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 88 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 88 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 88 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 88 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 88 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 88 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 88 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 137

    (19) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 176


state 138

    (89) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (93) function_action2 -> .

    COLON           reduce using rule 93 (function_action2 -> .)

    function_action2               shift and go to state 177

state 139

    (90) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 90 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 90 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 90 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 90 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 90 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 90 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 90 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 140

    (136) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .

    FUNC            reduce using rule 136 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    EQUAL           reduce using rule 136 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    SEMICOLON       reduce using rule 136 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    COMMA           reduce using rule 136 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    RIGHTPAR        reduce using rule 136 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)


state 141

    (146) nestedvalue -> ID DOT ID .

    RIGHTBRACKET    reduce using rule 146 (nestedvalue -> ID DOT ID .)
    TERMS           reduce using rule 146 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 146 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 146 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 146 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 146 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 146 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 146 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 146 (nestedvalue -> ID DOT ID .)


state 142

    (55) size -> ID DOT SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 178


state 143

    (56) head -> ID DOT HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 179


state 144

    (60) find -> ID DOT FIND . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 180


state 145

    (61) last -> ID DOT LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 181


state 146

    (107) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 RIGHTPAR
    (110) function_call_action2 -> .

    RIGHTPAR        reduce using rule 110 (function_call_action2 -> .)
    EX              reduce using rule 110 (function_call_action2 -> .)
    ID              reduce using rule 110 (function_call_action2 -> .)
    INT             reduce using rule 110 (function_call_action2 -> .)
    FLOAT           reduce using rule 110 (function_call_action2 -> .)
    TRUE            reduce using rule 110 (function_call_action2 -> .)
    FALSE           reduce using rule 110 (function_call_action2 -> .)
    STRING          reduce using rule 110 (function_call_action2 -> .)
    CAPIGAME        reduce using rule 110 (function_call_action2 -> .)
    CREATE_TEXT     reduce using rule 110 (function_call_action2 -> .)
    POW             reduce using rule 110 (function_call_action2 -> .)
    SQRT            reduce using rule 110 (function_call_action2 -> .)
    COMMA           reduce using rule 110 (function_call_action2 -> .)
    RELOP           reduce using rule 110 (function_call_action2 -> .)
    LOGIC           reduce using rule 110 (function_call_action2 -> .)
    TERMS           reduce using rule 110 (function_call_action2 -> .)
    LEFTPAR         reduce using rule 110 (function_call_action2 -> .)

    function_call_action2          shift and go to state 182

state 147

    (143) listaccess -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTBRACKET    reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 183
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 148

    (53) draw -> CAPIGAME DOT DRAW . LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 184


state 149

    (54) init -> CAPIGAME DOT INIT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 185


state 150

    (63) set_fill -> CAPIGAME DOT SET_FILL . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 186


state 151

    (62) set_title -> CAPIGAME DOT SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 187


state 152

    (66) get_event -> CAPIGAME DOT GET_EVENT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 188


state 153

    (65) update -> CAPIGAME DOT UPDATE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 189


state 154

    (57) window_h -> CAPIGAME DOT WINDOW_H . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 190


state 155

    (58) window_w -> CAPIGAME DOT WINDOW_W . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 191


state 156

    (64) set_dimension -> CAPIGAME DOT SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 192


state 157

    (59) rand -> CAPIGAME DOT RAND . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 193


state 158

    (67) create_text -> CREATE_TEXT LEFTPAR expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 194


state 159

    (114) expression -> exp . RELOP relop_action1 exp relop_action2
    (115) expression -> exp . LOGIC logic_action1 exp logic_action2
    (116) expression -> exp .

    RELOP           shift and go to state 195
    LOGIC           shift and go to state 196
    COMMA           reduce using rule 116 (expression -> exp .)
    SEMICOLON       reduce using rule 116 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 116 (expression -> exp .)
    RIGHTPAR        reduce using rule 116 (expression -> exp .)


state 160

    (121) exp -> term . exp_action recexp
    (122) exp -> term . exp_action
    (123) exp_action -> .

    EX              reduce using rule 123 (exp_action -> .)
    RELOP           reduce using rule 123 (exp_action -> .)
    LOGIC           reduce using rule 123 (exp_action -> .)
    COMMA           reduce using rule 123 (exp_action -> .)
    SEMICOLON       reduce using rule 123 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 123 (exp_action -> .)
    RIGHTPAR        reduce using rule 123 (exp_action -> .)

    exp_action                     shift and go to state 197

state 161

    (125) term -> factor . term_action recterm
    (126) term -> factor . term_action
    (127) term_action -> .

    TERMS           reduce using rule 127 (term_action -> .)
    EX              reduce using rule 127 (term_action -> .)
    RELOP           reduce using rule 127 (term_action -> .)
    LOGIC           reduce using rule 127 (term_action -> .)
    COMMA           reduce using rule 127 (term_action -> .)
    SEMICOLON       reduce using rule 127 (term_action -> .)
    RIGHTBRACKET    reduce using rule 127 (term_action -> .)
    RIGHTPAR        reduce using rule 127 (term_action -> .)

    term_action                    shift and go to state 198

state 162

    (130) factor -> factor_action1 . LEFTPAR expression RIGHTPAR factor_action2

    LEFTPAR         shift and go to state 199


state 163

    (131) factor -> EX . cte
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

    TERMS           reduce using rule 148 (cte -> .)
    EX              reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    RIGHTBRACKET    reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

    cte                            shift and go to state 200
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 164

    (132) factor -> cte .

    TERMS           reduce using rule 132 (factor -> cte .)
    EX              reduce using rule 132 (factor -> cte .)
    RELOP           reduce using rule 132 (factor -> cte .)
    LOGIC           reduce using rule 132 (factor -> cte .)
    COMMA           reduce using rule 132 (factor -> cte .)
    SEMICOLON       reduce using rule 132 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 132 (factor -> cte .)
    RIGHTPAR        reduce using rule 132 (factor -> cte .)


state 165

    (49) pow -> POW pow_action1 LEFTPAR . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 201
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 166

    (51) sqrt -> SQRT sqrt_action1 LEFTPAR . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 202
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 167

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 203


state 168

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 169

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 170

    (10) run -> VOID FUNC run_action1 RUN . startscope_action LEFTPAR RIGHTPAR main_cont block
    (91) startscope_action -> .

    LEFTPAR         reduce using rule 91 (startscope_action -> .)

    startscope_action              shift and go to state 204

state 171

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 205


state 172

    (13) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 206


state 173

    (15) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CAPIGAME        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    POW             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SQRT            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)


state 174

    (96) recparams -> ID COLON type COMMA . recparams
    (95) recparams -> . ID COLON type
    (96) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 63

    recparams                      shift and go to state 207

state 175

    (87) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (94) function_action3 -> .

    COLON           reduce using rule 94 (function_action3 -> .)

    function_action3               shift and go to state 208

state 176

    (19) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (68) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (69) assign -> . assign_list EQUAL assign_action2 expression
    (72) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (73) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (77) loop -> . for
    (78) loop -> . while
    (99) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (106) return -> . RETURN expression
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (147) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (142) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (79) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (83) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (146) nestedvalue -> . ID DOT ID
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

    RIGHTKEY        shift and go to state 210
    ID              shift and go to state 221
    IF              shift and go to state 223
    VAR             shift and go to state 39
    PRINT           shift and go to state 226
    RETURN          shift and go to state 227
    FOR             shift and go to state 229
    WHILE           shift and go to state 230
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

    recstatement                   shift and go to state 209
    statement                      shift and go to state 211
    assign                         shift and go to state 212
    condition                      shift and go to state 213
    vars                           shift and go to state 214
    loop                           shift and go to state 215
    write                          shift and go to state 216
    return                         shift and go to state 217
    functioncall                   shift and go to state 218
    nestedassign                   shift and go to state 219
    specialfunction                shift and go to state 220
    assign_list                    shift and go to state 222
    for                            shift and go to state 224
    while                          shift and go to state 225
    nestedvalue                    shift and go to state 228
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 177

    (89) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (94) function_action3 -> .

    COLON           reduce using rule 94 (function_action3 -> .)

    function_action3               shift and go to state 231

state 178

    (55) size -> ID DOT SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 232


state 179

    (56) head -> ID DOT HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 233


state 180

    (60) find -> ID DOT FIND LEFTPAR . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 234
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 181

    (61) last -> ID DOT LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 235


state 182

    (107) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . recfuncexp RIGHTPAR
    (108) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . RIGHTPAR
    (111) recfuncexp -> . expression COMMA recfuncexp
    (112) recfuncexp -> . expression recfunc_action1
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
  ! shift/reduce conflict for RIGHTPAR resolved as shift
    RIGHTPAR        shift and go to state 237
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]
  ! RIGHTPAR        [ reduce using rule 148 (cte -> .) ]

    recfuncexp                     shift and go to state 236
    expression                     shift and go to state 238
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 183

    (143) listaccess -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (145) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 145 (list_action_3 -> .)

    list_action_3                  shift and go to state 239

state 184

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR . expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 240
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 185

    (54) init -> CAPIGAME DOT INIT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 241


state 186

    (63) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 242
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 187

    (62) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 243
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 188

    (66) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 244


state 189

    (65) update -> CAPIGAME DOT UPDATE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 245


state 190

    (57) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 246


state 191

    (58) window_w -> CAPIGAME DOT WINDOW_W LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 247


state 192

    (64) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 248
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 193

    (59) rand -> CAPIGAME DOT RAND LEFTPAR . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 249
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 194

    (67) create_text -> CREATE_TEXT LEFTPAR expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 250
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 195

    (114) expression -> exp RELOP . relop_action1 exp relop_action2
    (117) relop_action1 -> .

    EX              reduce using rule 117 (relop_action1 -> .)
    ID              reduce using rule 117 (relop_action1 -> .)
    INT             reduce using rule 117 (relop_action1 -> .)
    FLOAT           reduce using rule 117 (relop_action1 -> .)
    TRUE            reduce using rule 117 (relop_action1 -> .)
    FALSE           reduce using rule 117 (relop_action1 -> .)
    STRING          reduce using rule 117 (relop_action1 -> .)
    CAPIGAME        reduce using rule 117 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 117 (relop_action1 -> .)
    POW             reduce using rule 117 (relop_action1 -> .)
    SQRT            reduce using rule 117 (relop_action1 -> .)
    TERMS           reduce using rule 117 (relop_action1 -> .)
    LEFTPAR         reduce using rule 117 (relop_action1 -> .)
    COMMA           reduce using rule 117 (relop_action1 -> .)
    SEMICOLON       reduce using rule 117 (relop_action1 -> .)
    RIGHTBRACKET    reduce using rule 117 (relop_action1 -> .)
    RIGHTPAR        reduce using rule 117 (relop_action1 -> .)

    relop_action1                  shift and go to state 251

state 196

    (115) expression -> exp LOGIC . logic_action1 exp logic_action2
    (119) logic_action1 -> .

    EX              reduce using rule 119 (logic_action1 -> .)
    ID              reduce using rule 119 (logic_action1 -> .)
    INT             reduce using rule 119 (logic_action1 -> .)
    FLOAT           reduce using rule 119 (logic_action1 -> .)
    TRUE            reduce using rule 119 (logic_action1 -> .)
    FALSE           reduce using rule 119 (logic_action1 -> .)
    STRING          reduce using rule 119 (logic_action1 -> .)
    CAPIGAME        reduce using rule 119 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 119 (logic_action1 -> .)
    POW             reduce using rule 119 (logic_action1 -> .)
    SQRT            reduce using rule 119 (logic_action1 -> .)
    TERMS           reduce using rule 119 (logic_action1 -> .)
    LEFTPAR         reduce using rule 119 (logic_action1 -> .)
    COMMA           reduce using rule 119 (logic_action1 -> .)
    SEMICOLON       reduce using rule 119 (logic_action1 -> .)
    RIGHTBRACKET    reduce using rule 119 (logic_action1 -> .)
    RIGHTPAR        reduce using rule 119 (logic_action1 -> .)

    logic_action1                  shift and go to state 252

state 197

    (121) exp -> term exp_action . recexp
    (122) exp -> term exp_action .
    (124) recexp -> . EX add_operator exp

    RELOP           reduce using rule 122 (exp -> term exp_action .)
    LOGIC           reduce using rule 122 (exp -> term exp_action .)
    COMMA           reduce using rule 122 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 122 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 122 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 122 (exp -> term exp_action .)
    EX              shift and go to state 254

    recexp                         shift and go to state 253

state 198

    (125) term -> factor term_action . recterm
    (126) term -> factor term_action .
    (128) recterm -> . TERMS add_operator term

    EX              reduce using rule 126 (term -> factor term_action .)
    RELOP           reduce using rule 126 (term -> factor term_action .)
    LOGIC           reduce using rule 126 (term -> factor term_action .)
    COMMA           reduce using rule 126 (term -> factor term_action .)
    SEMICOLON       reduce using rule 126 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 126 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 126 (term -> factor term_action .)
    TERMS           shift and go to state 256

    recterm                        shift and go to state 255

state 199

    (130) factor -> factor_action1 LEFTPAR . expression RIGHTPAR factor_action2
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    factor_action1                 shift and go to state 162
    expression                     shift and go to state 257
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 200

    (131) factor -> EX cte .

    TERMS           reduce using rule 131 (factor -> EX cte .)
    EX              reduce using rule 131 (factor -> EX cte .)
    RELOP           reduce using rule 131 (factor -> EX cte .)
    LOGIC           reduce using rule 131 (factor -> EX cte .)
    COMMA           reduce using rule 131 (factor -> EX cte .)
    SEMICOLON       reduce using rule 131 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 131 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 131 (factor -> EX cte .)


state 201

    (49) pow -> POW pow_action1 LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 258


state 202

    (51) sqrt -> SQRT sqrt_action1 LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 259


state 203

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 204

    (10) run -> VOID FUNC run_action1 RUN startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 260


state 205

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 261

state 206

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (14) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CAPIGAME        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    POW             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SQRT            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 262

state 207

    (96) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 96 (recparams -> ID COLON type COMMA recparams .)


state 208

    (87) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 263

state 209

    (19) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 264


state 210

    (20) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 265


state 211

    (21) recstatement -> statement . recstatement
    (22) recstatement -> statement .
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (68) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (69) assign -> . assign_list EQUAL assign_action2 expression
    (72) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (73) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (77) loop -> . for
    (78) loop -> . while
    (99) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (106) return -> . RETURN expression
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (147) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (142) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (79) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (83) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (146) nestedvalue -> . ID DOT ID
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

    RIGHTKEY        reduce using rule 22 (recstatement -> statement .)
    ID              shift and go to state 221
    IF              shift and go to state 223
    VAR             shift and go to state 39
    PRINT           shift and go to state 226
    RETURN          shift and go to state 227
    FOR             shift and go to state 229
    WHILE           shift and go to state 230
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

    statement                      shift and go to state 211
    recstatement                   shift and go to state 266
    assign                         shift and go to state 212
    condition                      shift and go to state 213
    vars                           shift and go to state 214
    loop                           shift and go to state 215
    write                          shift and go to state 216
    return                         shift and go to state 217
    functioncall                   shift and go to state 218
    nestedassign                   shift and go to state 219
    specialfunction                shift and go to state 220
    assign_list                    shift and go to state 222
    for                            shift and go to state 224
    while                          shift and go to state 225
    nestedvalue                    shift and go to state 228
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 212

    (23) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 267


state 213

    (24) statement -> condition .

    ID              reduce using rule 24 (statement -> condition .)
    IF              reduce using rule 24 (statement -> condition .)
    VAR             reduce using rule 24 (statement -> condition .)
    PRINT           reduce using rule 24 (statement -> condition .)
    RETURN          reduce using rule 24 (statement -> condition .)
    FOR             reduce using rule 24 (statement -> condition .)
    WHILE           reduce using rule 24 (statement -> condition .)
    CAPIGAME        reduce using rule 24 (statement -> condition .)
    CREATE_TEXT     reduce using rule 24 (statement -> condition .)
    POW             reduce using rule 24 (statement -> condition .)
    SQRT            reduce using rule 24 (statement -> condition .)
    RIGHTKEY        reduce using rule 24 (statement -> condition .)


state 214

    (25) statement -> vars .

    ID              reduce using rule 25 (statement -> vars .)
    IF              reduce using rule 25 (statement -> vars .)
    VAR             reduce using rule 25 (statement -> vars .)
    PRINT           reduce using rule 25 (statement -> vars .)
    RETURN          reduce using rule 25 (statement -> vars .)
    FOR             reduce using rule 25 (statement -> vars .)
    WHILE           reduce using rule 25 (statement -> vars .)
    CAPIGAME        reduce using rule 25 (statement -> vars .)
    CREATE_TEXT     reduce using rule 25 (statement -> vars .)
    POW             reduce using rule 25 (statement -> vars .)
    SQRT            reduce using rule 25 (statement -> vars .)
    RIGHTKEY        reduce using rule 25 (statement -> vars .)


state 215

    (26) statement -> loop .

    ID              reduce using rule 26 (statement -> loop .)
    IF              reduce using rule 26 (statement -> loop .)
    VAR             reduce using rule 26 (statement -> loop .)
    PRINT           reduce using rule 26 (statement -> loop .)
    RETURN          reduce using rule 26 (statement -> loop .)
    FOR             reduce using rule 26 (statement -> loop .)
    WHILE           reduce using rule 26 (statement -> loop .)
    CAPIGAME        reduce using rule 26 (statement -> loop .)
    CREATE_TEXT     reduce using rule 26 (statement -> loop .)
    POW             reduce using rule 26 (statement -> loop .)
    SQRT            reduce using rule 26 (statement -> loop .)
    RIGHTKEY        reduce using rule 26 (statement -> loop .)


state 216

    (27) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 268


state 217

    (28) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 269


state 218

    (29) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 270


state 219

    (30) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 271


state 220

    (31) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 272


state 221

    (68) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (107) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (142) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (146) nestedvalue -> ID . DOT ID
    (55) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> ID . DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> ID . DOT LAST LEFTPAR RIGHTPAR
    (70) assign_action1 -> .
    (109) function_call_action1 -> .
    (144) list_action1 -> .

    DOT             shift and go to state 119
    EQUAL           reduce using rule 70 (assign_action1 -> .)
    LEFTPAR         reduce using rule 109 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 144 (list_action1 -> .)

    assign_action1                 shift and go to state 273
    function_call_action1          shift and go to state 120
    list_action1                   shift and go to state 274

state 222

    (69) assign -> assign_list . EQUAL assign_action2 expression

    EQUAL           shift and go to state 275


state 223

    (72) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (73) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 276


state 224

    (77) loop -> for .

    ID              reduce using rule 77 (loop -> for .)
    IF              reduce using rule 77 (loop -> for .)
    VAR             reduce using rule 77 (loop -> for .)
    PRINT           reduce using rule 77 (loop -> for .)
    RETURN          reduce using rule 77 (loop -> for .)
    FOR             reduce using rule 77 (loop -> for .)
    WHILE           reduce using rule 77 (loop -> for .)
    CAPIGAME        reduce using rule 77 (loop -> for .)
    CREATE_TEXT     reduce using rule 77 (loop -> for .)
    POW             reduce using rule 77 (loop -> for .)
    SQRT            reduce using rule 77 (loop -> for .)
    RIGHTKEY        reduce using rule 77 (loop -> for .)


state 225

    (78) loop -> while .

    ID              reduce using rule 78 (loop -> while .)
    IF              reduce using rule 78 (loop -> while .)
    VAR             reduce using rule 78 (loop -> while .)
    PRINT           reduce using rule 78 (loop -> while .)
    RETURN          reduce using rule 78 (loop -> while .)
    FOR             reduce using rule 78 (loop -> while .)
    WHILE           reduce using rule 78 (loop -> while .)
    CAPIGAME        reduce using rule 78 (loop -> while .)
    CREATE_TEXT     reduce using rule 78 (loop -> while .)
    POW             reduce using rule 78 (loop -> while .)
    SQRT            reduce using rule 78 (loop -> while .)
    RIGHTKEY        reduce using rule 78 (loop -> while .)


state 226

    (99) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 277


state 227

    (106) return -> RETURN . expression
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 278
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 228

    (147) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 279


state 229

    (79) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (91) startscope_action -> .

    LEFTPAR         reduce using rule 91 (startscope_action -> .)

    startscope_action              shift and go to state 280

state 230

    (83) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (91) startscope_action -> .

    LEFTPAR         reduce using rule 91 (startscope_action -> .)

    startscope_action              shift and go to state 281

state 231

    (89) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 282

state 232

    (55) size -> ID DOT SIZE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 55 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 55 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 55 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 55 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 55 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 55 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 55 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 55 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)


state 233

    (56) head -> ID DOT HEAD LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 56 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 56 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 56 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 56 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 56 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 56 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 56 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 56 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)


state 234

    (60) find -> ID DOT FIND LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 283


state 235

    (61) last -> ID DOT LAST LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 61 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 61 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 61 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 61 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 61 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 61 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 61 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 61 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)


state 236

    (107) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 284


state 237

    (108) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .

    RIGHTBRACKET    reduce using rule 108 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    TERMS           reduce using rule 108 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    EX              reduce using rule 108 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RELOP           reduce using rule 108 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    LOGIC           reduce using rule 108 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    COMMA           reduce using rule 108 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    SEMICOLON       reduce using rule 108 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTPAR        reduce using rule 108 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)


state 238

    (111) recfuncexp -> expression . COMMA recfuncexp
    (112) recfuncexp -> expression . recfunc_action1
    (113) recfunc_action1 -> .

    COMMA           shift and go to state 285
    RIGHTPAR        reduce using rule 113 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 286

state 239

    (143) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 287


state 240

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression . COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 288


state 241

    (54) init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 54 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 54 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 54 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 54 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 54 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 54 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 54 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 54 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)


state 242

    (63) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 289


state 243

    (62) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 290


state 244

    (66) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 66 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 66 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 66 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 66 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 66 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 66 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 66 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 66 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)


state 245

    (65) update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 65 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 65 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 65 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 65 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 65 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 65 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 65 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 65 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)


state 246

    (57) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 57 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 57 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    EX              reduce using rule 57 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 57 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 57 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 57 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 57 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 57 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)


state 247

    (58) window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 58 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 58 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    EX              reduce using rule 58 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 58 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 58 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 58 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 58 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 58 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)


state 248

    (64) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 291


state 249

    (59) rand -> CAPIGAME DOT RAND LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 292


state 250

    (67) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 293


state 251

    (114) expression -> exp RELOP relop_action1 . exp relop_action2
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    RIGHTBRACKET    reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    exp                            shift and go to state 294
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 252

    (115) expression -> exp LOGIC logic_action1 . exp logic_action2
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    RIGHTBRACKET    reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    exp                            shift and go to state 295
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 253

    (121) exp -> term exp_action recexp .

    RELOP           reduce using rule 121 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 121 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 121 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 121 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 121 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 121 (exp -> term exp_action recexp .)


state 254

    (124) recexp -> EX . add_operator exp
    (129) add_operator -> .

    EX              reduce using rule 129 (add_operator -> .)
    ID              reduce using rule 129 (add_operator -> .)
    INT             reduce using rule 129 (add_operator -> .)
    FLOAT           reduce using rule 129 (add_operator -> .)
    TRUE            reduce using rule 129 (add_operator -> .)
    FALSE           reduce using rule 129 (add_operator -> .)
    STRING          reduce using rule 129 (add_operator -> .)
    CAPIGAME        reduce using rule 129 (add_operator -> .)
    CREATE_TEXT     reduce using rule 129 (add_operator -> .)
    POW             reduce using rule 129 (add_operator -> .)
    SQRT            reduce using rule 129 (add_operator -> .)
    TERMS           reduce using rule 129 (add_operator -> .)
    LEFTPAR         reduce using rule 129 (add_operator -> .)
    RELOP           reduce using rule 129 (add_operator -> .)
    LOGIC           reduce using rule 129 (add_operator -> .)
    COMMA           reduce using rule 129 (add_operator -> .)
    SEMICOLON       reduce using rule 129 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 129 (add_operator -> .)
    RIGHTPAR        reduce using rule 129 (add_operator -> .)

    add_operator                   shift and go to state 296

state 255

    (125) term -> factor term_action recterm .

    EX              reduce using rule 125 (term -> factor term_action recterm .)
    RELOP           reduce using rule 125 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 125 (term -> factor term_action recterm .)
    COMMA           reduce using rule 125 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 125 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 125 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 125 (term -> factor term_action recterm .)


state 256

    (128) recterm -> TERMS . add_operator term
    (129) add_operator -> .

    EX              reduce using rule 129 (add_operator -> .)
    ID              reduce using rule 129 (add_operator -> .)
    INT             reduce using rule 129 (add_operator -> .)
    FLOAT           reduce using rule 129 (add_operator -> .)
    TRUE            reduce using rule 129 (add_operator -> .)
    FALSE           reduce using rule 129 (add_operator -> .)
    STRING          reduce using rule 129 (add_operator -> .)
    CAPIGAME        reduce using rule 129 (add_operator -> .)
    CREATE_TEXT     reduce using rule 129 (add_operator -> .)
    POW             reduce using rule 129 (add_operator -> .)
    SQRT            reduce using rule 129 (add_operator -> .)
    TERMS           reduce using rule 129 (add_operator -> .)
    LEFTPAR         reduce using rule 129 (add_operator -> .)
    RELOP           reduce using rule 129 (add_operator -> .)
    LOGIC           reduce using rule 129 (add_operator -> .)
    COMMA           reduce using rule 129 (add_operator -> .)
    SEMICOLON       reduce using rule 129 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 129 (add_operator -> .)
    RIGHTPAR        reduce using rule 129 (add_operator -> .)

    add_operator                   shift and go to state 297

state 257

    (130) factor -> factor_action1 LEFTPAR expression . RIGHTPAR factor_action2

    RIGHTPAR        shift and go to state 298


state 258

    (49) pow -> POW pow_action1 LEFTPAR expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 299
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 259

    (51) sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 51 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 51 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 51 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 51 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 51 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 51 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 51 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 51 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)


state 260

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 300


state 261

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 301

state 262

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CAPIGAME        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    POW             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SQRT            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 263

    (87) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 264

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 302


state 265

    (20) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    POW             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SQRT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 266

    (21) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 21 (recstatement -> statement recstatement .)


state 267

    (23) statement -> assign SEMICOLON .

    ID              reduce using rule 23 (statement -> assign SEMICOLON .)
    IF              reduce using rule 23 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 23 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 23 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> assign SEMICOLON .)
    CAPIGAME        reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> assign SEMICOLON .)
    POW             reduce using rule 23 (statement -> assign SEMICOLON .)
    SQRT            reduce using rule 23 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> assign SEMICOLON .)


state 268

    (27) statement -> write SEMICOLON .

    ID              reduce using rule 27 (statement -> write SEMICOLON .)
    IF              reduce using rule 27 (statement -> write SEMICOLON .)
    VAR             reduce using rule 27 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> write SEMICOLON .)
    FOR             reduce using rule 27 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> write SEMICOLON .)
    CAPIGAME        reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 27 (statement -> write SEMICOLON .)
    POW             reduce using rule 27 (statement -> write SEMICOLON .)
    SQRT            reduce using rule 27 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 27 (statement -> write SEMICOLON .)


state 269

    (28) statement -> return SEMICOLON .

    ID              reduce using rule 28 (statement -> return SEMICOLON .)
    IF              reduce using rule 28 (statement -> return SEMICOLON .)
    VAR             reduce using rule 28 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 28 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> return SEMICOLON .)
    FOR             reduce using rule 28 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> return SEMICOLON .)
    CAPIGAME        reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 28 (statement -> return SEMICOLON .)
    POW             reduce using rule 28 (statement -> return SEMICOLON .)
    SQRT            reduce using rule 28 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 28 (statement -> return SEMICOLON .)


state 270

    (29) statement -> functioncall SEMICOLON .

    ID              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CAPIGAME        reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 29 (statement -> functioncall SEMICOLON .)
    POW             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SQRT            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 29 (statement -> functioncall SEMICOLON .)


state 271

    (30) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CAPIGAME        reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    POW             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SQRT            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 30 (statement -> nestedassign SEMICOLON .)


state 272

    (31) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CAPIGAME        reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    POW             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SQRT            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 31 (statement -> specialfunction SEMICOLON .)


state 273

    (68) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 303


state 274

    (142) assign_list -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 304


state 275

    (69) assign -> assign_list EQUAL . assign_action2 expression
    (71) assign_action2 -> .

    EX              reduce using rule 71 (assign_action2 -> .)
    ID              reduce using rule 71 (assign_action2 -> .)
    INT             reduce using rule 71 (assign_action2 -> .)
    FLOAT           reduce using rule 71 (assign_action2 -> .)
    TRUE            reduce using rule 71 (assign_action2 -> .)
    FALSE           reduce using rule 71 (assign_action2 -> .)
    STRING          reduce using rule 71 (assign_action2 -> .)
    CAPIGAME        reduce using rule 71 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 71 (assign_action2 -> .)
    POW             reduce using rule 71 (assign_action2 -> .)
    SQRT            reduce using rule 71 (assign_action2 -> .)
    RELOP           reduce using rule 71 (assign_action2 -> .)
    LOGIC           reduce using rule 71 (assign_action2 -> .)
    TERMS           reduce using rule 71 (assign_action2 -> .)
    LEFTPAR         reduce using rule 71 (assign_action2 -> .)
    SEMICOLON       reduce using rule 71 (assign_action2 -> .)

    assign_action2                 shift and go to state 305

state 276

    (72) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (73) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 306
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 277

    (99) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (100) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (101) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (102) recwrite -> . expression action_recwrite_exp
    (103) recwrite -> . STRING action_recwrite_cte
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 309
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    recwrite                       shift and go to state 307
    expression                     shift and go to state 308
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 278

    (106) return -> RETURN expression .

    SEMICOLON       reduce using rule 106 (return -> RETURN expression .)


state 279

    (147) nestedassign -> nestedvalue EQUAL . expression
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    nestedvalue                    shift and go to state 74
    expression                     shift and go to state 310
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 280

    (79) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 311


state 281

    (83) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (84) while_action1 -> .

    LEFTPAR         reduce using rule 84 (while_action1 -> .)

    while_action1                  shift and go to state 312

state 282

    (89) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 283

    (60) find -> ID DOT FIND LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 60 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 60 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 60 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 60 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 60 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 60 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 60 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 60 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)


state 284

    (107) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    EX              reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)


state 285

    (111) recfuncexp -> expression COMMA . recfuncexp
    (111) recfuncexp -> . expression COMMA recfuncexp
    (112) recfuncexp -> . expression recfunc_action1
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 238
    recfuncexp                     shift and go to state 313
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 286

    (112) recfuncexp -> expression recfunc_action1 .

    RIGHTPAR        reduce using rule 112 (recfuncexp -> expression recfunc_action1 .)


state 287

    (143) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    RIGHTBRACKET    reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    TERMS           reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    EX              reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RELOP           reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    LOGIC           reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    COMMA           reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    SEMICOLON       reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RIGHTPAR        reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 288

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 314
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 289

    (63) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 315
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 290

    (62) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 62 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 62 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 62 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 62 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 62 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 62 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 62 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 62 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)


state 291

    (64) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 316
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 292

    (59) rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 317
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 293

    (67) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 318
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 294

    (114) expression -> exp RELOP relop_action1 exp . relop_action2
    (118) relop_action2 -> .

    COMMA           reduce using rule 118 (relop_action2 -> .)
    SEMICOLON       reduce using rule 118 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 118 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 118 (relop_action2 -> .)

    relop_action2                  shift and go to state 319

state 295

    (115) expression -> exp LOGIC logic_action1 exp . logic_action2
    (120) logic_action2 -> .

    COMMA           reduce using rule 120 (logic_action2 -> .)
    SEMICOLON       reduce using rule 120 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 120 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 120 (logic_action2 -> .)

    logic_action2                  shift and go to state 320

state 296

    (124) recexp -> EX add_operator . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    RIGHTBRACKET    reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    exp                            shift and go to state 321
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 297

    (128) recterm -> TERMS add_operator . term
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    RIGHTBRACKET    reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    term                           shift and go to state 322
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 298

    (130) factor -> factor_action1 LEFTPAR expression RIGHTPAR . factor_action2
    (134) factor_action2 -> .

    TERMS           reduce using rule 134 (factor_action2 -> .)
    EX              reduce using rule 134 (factor_action2 -> .)
    RELOP           reduce using rule 134 (factor_action2 -> .)
    LOGIC           reduce using rule 134 (factor_action2 -> .)
    COMMA           reduce using rule 134 (factor_action2 -> .)
    SEMICOLON       reduce using rule 134 (factor_action2 -> .)
    RIGHTBRACKET    reduce using rule 134 (factor_action2 -> .)
    RIGHTPAR        reduce using rule 134 (factor_action2 -> .)

    factor_action2                 shift and go to state 323

state 299

    (49) pow -> POW pow_action1 LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 324


state 300

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 325

state 301

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .

    VOID            reduce using rule 8 (start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 302

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    POW             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SQRT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 303

    (68) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (71) assign_action2 -> .

    EX              reduce using rule 71 (assign_action2 -> .)
    ID              reduce using rule 71 (assign_action2 -> .)
    INT             reduce using rule 71 (assign_action2 -> .)
    FLOAT           reduce using rule 71 (assign_action2 -> .)
    TRUE            reduce using rule 71 (assign_action2 -> .)
    FALSE           reduce using rule 71 (assign_action2 -> .)
    STRING          reduce using rule 71 (assign_action2 -> .)
    CAPIGAME        reduce using rule 71 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 71 (assign_action2 -> .)
    POW             reduce using rule 71 (assign_action2 -> .)
    SQRT            reduce using rule 71 (assign_action2 -> .)
    RELOP           reduce using rule 71 (assign_action2 -> .)
    LOGIC           reduce using rule 71 (assign_action2 -> .)
    TERMS           reduce using rule 71 (assign_action2 -> .)
    LEFTPAR         reduce using rule 71 (assign_action2 -> .)
    SEMICOLON       reduce using rule 71 (assign_action2 -> .)

    assign_action2                 shift and go to state 326

state 304

    (142) assign_list -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTBRACKET    reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 327
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 305

    (69) assign -> assign_list EQUAL assign_action2 . expression
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 328
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 306

    (72) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (73) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (74) condition_action1 -> .

    RIGHTPAR        reduce using rule 74 (condition_action1 -> .)

    condition_action1              shift and go to state 329

state 307

    (99) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 330


state 308

    (100) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (102) recwrite -> expression . action_recwrite_exp
    (104) action_recwrite_exp -> .

    COMMA           reduce using rule 104 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 104 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 331

state 309

    (101) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (103) recwrite -> STRING . action_recwrite_cte
    (159) string -> STRING .
    (105) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 105 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 105 (action_recwrite_cte -> .)
    TERMS           reduce using rule 159 (string -> STRING .)
    EX              reduce using rule 159 (string -> STRING .)
    RELOP           reduce using rule 159 (string -> STRING .)
    LOGIC           reduce using rule 159 (string -> STRING .)
    COMMA           reduce using rule 105 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 105 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 159 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 159 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 332

state 310

    (147) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 147 (nestedassign -> nestedvalue EQUAL expression .)


state 311

    (79) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (68) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (69) assign -> . assign_list EQUAL assign_action2 expression
    (142) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 334

    assign                         shift and go to state 333
    assign_list                    shift and go to state 222

state 312

    (83) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 335


state 313

    (111) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 111 (recfuncexp -> expression COMMA recfuncexp .)


state 314

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 336


state 315

    (63) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 337


state 316

    (64) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 338


state 317

    (59) rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 339


state 318

    (67) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 340


state 319

    (114) expression -> exp RELOP relop_action1 exp relop_action2 .

    COMMA           reduce using rule 114 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    SEMICOLON       reduce using rule 114 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 114 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 114 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 320

    (115) expression -> exp LOGIC logic_action1 exp logic_action2 .

    COMMA           reduce using rule 115 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    SEMICOLON       reduce using rule 115 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 115 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 115 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 321

    (124) recexp -> EX add_operator exp .

    RELOP           reduce using rule 124 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 124 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 124 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 124 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 124 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 124 (recexp -> EX add_operator exp .)


state 322

    (128) recterm -> TERMS add_operator term .

    EX              reduce using rule 128 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 128 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 128 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 128 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 128 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 128 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 128 (recterm -> TERMS add_operator term .)


state 323

    (130) factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .

    TERMS           reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    EX              reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RELOP           reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    LOGIC           reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    COMMA           reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    SEMICOLON       reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTBRACKET    reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTPAR        reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)


state 324

    (49) pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 49 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 49 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 49 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 49 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 49 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 49 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 49 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 49 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)


state 325

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 341

state 326

    (68) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 342
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 327

    (142) assign_list -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (145) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 145 (list_action_3 -> .)

    list_action_3                  shift and go to state 343

state 328

    (69) assign -> assign_list EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 69 (assign -> assign_list EQUAL assign_action2 expression .)


state 329

    (72) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (73) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 344


state 330

    (99) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 99 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 331

    (100) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (102) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 345
    RIGHTPAR        reduce using rule 102 (recwrite -> expression action_recwrite_exp .)


state 332

    (101) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (103) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 346
    RIGHTPAR        reduce using rule 103 (recwrite -> STRING action_recwrite_cte .)


state 333

    (79) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 347


state 334

    (68) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (142) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (70) assign_action1 -> .
    (144) list_action1 -> .

    EQUAL           reduce using rule 70 (assign_action1 -> .)
    LEFTBRACKET     reduce using rule 144 (list_action1 -> .)

    assign_action1                 shift and go to state 273
    list_action1                   shift and go to state 274

state 335

    (83) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 348
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 336

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 349
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 337

    (63) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 350
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 338

    (64) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 64 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 64 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 64 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 64 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 64 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 64 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 64 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 64 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 339

    (59) rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 59 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 59 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 59 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 59 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 59 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 59 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 59 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 59 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)


state 340

    (67) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 351
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 341

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .

    RIGHTKEY        reduce using rule 10 (run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 342

    (68) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 68 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 343

    (142) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 352


state 344

    (72) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (73) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 353

state 345

    (100) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (100) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (101) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (102) recwrite -> . expression action_recwrite_exp
    (103) recwrite -> . STRING action_recwrite_cte
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 309
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 308
    recwrite                       shift and go to state 354
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 346

    (101) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (100) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (101) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (102) recwrite -> . expression action_recwrite_exp
    (103) recwrite -> . STRING action_recwrite_cte
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 309
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    recwrite                       shift and go to state 355
    expression                     shift and go to state 308
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 347

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (80) for_action1 -> .

    EX              reduce using rule 80 (for_action1 -> .)
    ID              reduce using rule 80 (for_action1 -> .)
    INT             reduce using rule 80 (for_action1 -> .)
    FLOAT           reduce using rule 80 (for_action1 -> .)
    TRUE            reduce using rule 80 (for_action1 -> .)
    FALSE           reduce using rule 80 (for_action1 -> .)
    STRING          reduce using rule 80 (for_action1 -> .)
    CAPIGAME        reduce using rule 80 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 80 (for_action1 -> .)
    POW             reduce using rule 80 (for_action1 -> .)
    SQRT            reduce using rule 80 (for_action1 -> .)
    SEMICOLON       reduce using rule 80 (for_action1 -> .)
    RELOP           reduce using rule 80 (for_action1 -> .)
    LOGIC           reduce using rule 80 (for_action1 -> .)
    TERMS           reduce using rule 80 (for_action1 -> .)
    LEFTPAR         reduce using rule 80 (for_action1 -> .)

    for_action1                    shift and go to state 356

state 348

    (83) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (85) while_action2 -> .

    RIGHTPAR        reduce using rule 85 (while_action2 -> .)

    while_action2                  shift and go to state 357

state 349

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 358


state 350

    (63) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 359


state 351

    (67) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 360


state 352

    (142) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    EQUAL           reduce using rule 142 (assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 353

    (72) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (73) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (75) condition_action2 -> .
    (76) condition_action3 -> .

    ID              reduce using rule 75 (condition_action2 -> .)
    IF              reduce using rule 75 (condition_action2 -> .)
    VAR             reduce using rule 75 (condition_action2 -> .)
    PRINT           reduce using rule 75 (condition_action2 -> .)
    RETURN          reduce using rule 75 (condition_action2 -> .)
    FOR             reduce using rule 75 (condition_action2 -> .)
    WHILE           reduce using rule 75 (condition_action2 -> .)
    CAPIGAME        reduce using rule 75 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 75 (condition_action2 -> .)
    POW             reduce using rule 75 (condition_action2 -> .)
    SQRT            reduce using rule 75 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 75 (condition_action2 -> .)
    ELSE            reduce using rule 76 (condition_action3 -> .)

    condition_action2              shift and go to state 361
    condition_action3              shift and go to state 362

state 354

    (100) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 100 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 355

    (101) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 101 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 356

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    SEMICOLON       reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 363
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 357

    (83) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 364


state 358

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    COMMA           reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 365
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 359

    (63) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 63 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 63 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 63 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 63 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 63 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 63 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 63 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 63 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 360

    (67) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 67 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 67 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 67 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 67 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 67 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 67 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 67 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 67 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 361

    (72) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CAPIGAME        reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    POW             reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SQRT            reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 362

    (73) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 366


state 363

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (81) for_action2 -> .

    SEMICOLON       reduce using rule 81 (for_action2 -> .)

    for_action2                    shift and go to state 367

state 364

    (83) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 368

state 365

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 369


state 366

    (73) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 370

state 367

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 371


state 368

    (83) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (86) while_action3 -> .

    ID              reduce using rule 86 (while_action3 -> .)
    IF              reduce using rule 86 (while_action3 -> .)
    VAR             reduce using rule 86 (while_action3 -> .)
    PRINT           reduce using rule 86 (while_action3 -> .)
    RETURN          reduce using rule 86 (while_action3 -> .)
    FOR             reduce using rule 86 (while_action3 -> .)
    WHILE           reduce using rule 86 (while_action3 -> .)
    CAPIGAME        reduce using rule 86 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 86 (while_action3 -> .)
    POW             reduce using rule 86 (while_action3 -> .)
    SQRT            reduce using rule 86 (while_action3 -> .)
    RIGHTKEY        reduce using rule 86 (while_action3 -> .)

    while_action3                  shift and go to state 372

state 369

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (148) cte -> .
    (149) cte -> . id
    (150) cte -> . int
    (151) cte -> . float
    (152) cte -> . bool
    (153) cte -> . string
    (154) cte -> . nestedvalue
    (155) cte -> . functioncall
    (156) cte -> . listaccess
    (157) cte -> . specialfunction
    (158) id -> . ID
    (160) int -> . INT
    (161) float -> . FLOAT
    (162) bool -> . TRUE
    (163) bool -> . FALSE
    (159) string -> . STRING
    (146) nestedvalue -> . ID DOT ID
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (108) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (53) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (54) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (55) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (56) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (60) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (61) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (63) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (66) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (65) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (57) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (64) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (67) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (59) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (51) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 148 (cte -> .)
    RELOP           reduce using rule 148 (cte -> .)
    LOGIC           reduce using rule 148 (cte -> .)
    RIGHTPAR        reduce using rule 148 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104

  ! EX              [ reduce using rule 148 (cte -> .) ]

    expression                     shift and go to state 373
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 370

    (73) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (75) condition_action2 -> .

    ID              reduce using rule 75 (condition_action2 -> .)
    IF              reduce using rule 75 (condition_action2 -> .)
    VAR             reduce using rule 75 (condition_action2 -> .)
    PRINT           reduce using rule 75 (condition_action2 -> .)
    RETURN          reduce using rule 75 (condition_action2 -> .)
    FOR             reduce using rule 75 (condition_action2 -> .)
    WHILE           reduce using rule 75 (condition_action2 -> .)
    CAPIGAME        reduce using rule 75 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 75 (condition_action2 -> .)
    POW             reduce using rule 75 (condition_action2 -> .)
    SQRT            reduce using rule 75 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 75 (condition_action2 -> .)

    condition_action2              shift and go to state 374

state 371

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (68) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (69) assign -> . assign_list EQUAL assign_action2 expression
    (142) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 334

    assign                         shift and go to state 375
    assign_list                    shift and go to state 222

state 372

    (83) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CAPIGAME        reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    POW             reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SQRT            reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 83 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 373

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 376


state 374

    (73) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CAPIGAME        reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    POW             reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SQRT            reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 73 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 375

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 377


state 376

    (53) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 53 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 53 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 53 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 53 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 53 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 53 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 53 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 53 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 377

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 378


state 378

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 137

    block                          shift and go to state 379

state 379

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (82) for_action3 -> .

    ID              reduce using rule 82 (for_action3 -> .)
    IF              reduce using rule 82 (for_action3 -> .)
    VAR             reduce using rule 82 (for_action3 -> .)
    PRINT           reduce using rule 82 (for_action3 -> .)
    RETURN          reduce using rule 82 (for_action3 -> .)
    FOR             reduce using rule 82 (for_action3 -> .)
    WHILE           reduce using rule 82 (for_action3 -> .)
    CAPIGAME        reduce using rule 82 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 82 (for_action3 -> .)
    POW             reduce using rule 82 (for_action3 -> .)
    SQRT            reduce using rule 82 (for_action3 -> .)
    RIGHTKEY        reduce using rule 82 (for_action3 -> .)

    for_action3                    shift and go to state 380

state 380

    (79) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CAPIGAME        reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    POW             reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SQRT            reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 79 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EX in state 123 resolved as shift
WARNING: shift/reduce conflict for EX in state 132 resolved as shift
WARNING: shift/reduce conflict for VAR in state 133 resolved as shift
WARNING: shift/reduce conflict for EX in state 147 resolved as shift
WARNING: shift/reduce conflict for EX in state 165 resolved as shift
WARNING: shift/reduce conflict for EX in state 166 resolved as shift
WARNING: shift/reduce conflict for EX in state 180 resolved as shift
WARNING: shift/reduce conflict for EX in state 182 resolved as shift
WARNING: shift/reduce conflict for RIGHTPAR in state 182 resolved as shift
WARNING: shift/reduce conflict for EX in state 184 resolved as shift
WARNING: shift/reduce conflict for EX in state 186 resolved as shift
WARNING: shift/reduce conflict for EX in state 187 resolved as shift
WARNING: shift/reduce conflict for EX in state 192 resolved as shift
WARNING: shift/reduce conflict for EX in state 193 resolved as shift
WARNING: shift/reduce conflict for EX in state 194 resolved as shift
WARNING: shift/reduce conflict for EX in state 199 resolved as shift
WARNING: shift/reduce conflict for VAR in state 206 resolved as shift
WARNING: shift/reduce conflict for EX in state 227 resolved as shift
WARNING: shift/reduce conflict for EX in state 251 resolved as shift
WARNING: shift/reduce conflict for EX in state 252 resolved as shift
WARNING: shift/reduce conflict for EX in state 258 resolved as shift
WARNING: shift/reduce conflict for EX in state 276 resolved as shift
WARNING: shift/reduce conflict for EX in state 277 resolved as shift
WARNING: shift/reduce conflict for EX in state 279 resolved as shift
WARNING: shift/reduce conflict for EX in state 285 resolved as shift
WARNING: shift/reduce conflict for EX in state 288 resolved as shift
WARNING: shift/reduce conflict for EX in state 289 resolved as shift
WARNING: shift/reduce conflict for EX in state 291 resolved as shift
WARNING: shift/reduce conflict for EX in state 292 resolved as shift
WARNING: shift/reduce conflict for EX in state 293 resolved as shift
WARNING: shift/reduce conflict for EX in state 296 resolved as shift
WARNING: shift/reduce conflict for EX in state 297 resolved as shift
WARNING: shift/reduce conflict for EX in state 304 resolved as shift
WARNING: shift/reduce conflict for EX in state 305 resolved as shift
WARNING: shift/reduce conflict for EX in state 326 resolved as shift
WARNING: shift/reduce conflict for EX in state 335 resolved as shift
WARNING: shift/reduce conflict for EX in state 336 resolved as shift
WARNING: shift/reduce conflict for EX in state 337 resolved as shift
WARNING: shift/reduce conflict for EX in state 340 resolved as shift
WARNING: shift/reduce conflict for EX in state 345 resolved as shift
WARNING: shift/reduce conflict for EX in state 346 resolved as shift
WARNING: shift/reduce conflict for EX in state 356 resolved as shift
WARNING: shift/reduce conflict for EX in state 358 resolved as shift
WARNING: shift/reduce conflict for EX in state 369 resolved as shift
WARNING: reduce/reduce conflict in state 309 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 309
