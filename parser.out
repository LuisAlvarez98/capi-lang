Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    LIST
    OBJECT
    WINDOW_W

Grammar

Rule 0     S' -> capi
Rule 1     capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 2     capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 3     capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 4     capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 5     capi_action1 -> <empty>
Rule 6     capi_action2 -> <empty>
Rule 7     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 8     start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 9     start_action1 -> <empty>
Rule 10    run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 11    run_action1 -> <empty>
Rule 12    main_cont -> <empty>
Rule 13    vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 14    vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 15    vars -> VAR recids COLON type SEMICOLON vars
Rule 16    vars -> VAR recids COLON type SEMICOLON
Rule 17    recids -> ID
Rule 18    recids -> ID COMMA recids
Rule 19    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 20    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 21    recstatement -> statement recstatement
Rule 22    recstatement -> statement
Rule 23    statement -> assign SEMICOLON
Rule 24    statement -> condition
Rule 25    statement -> vars
Rule 26    statement -> loop
Rule 27    statement -> write SEMICOLON
Rule 28    statement -> return SEMICOLON
Rule 29    statement -> functioncall SEMICOLON
Rule 30    statement -> nestedassign SEMICOLON
Rule 31    statement -> specialfunction SEMICOLON
Rule 32    specialfunction -> draw
Rule 33    specialfunction -> init
Rule 34    specialfunction -> size
Rule 35    specialfunction -> head
Rule 36    specialfunction -> tail
Rule 37    specialfunction -> last
Rule 38    specialfunction -> set_fill
Rule 39    specialfunction -> set_title
Rule 40    specialfunction -> get_event
Rule 41    specialfunction -> update
Rule 42    specialfunction -> window_h
Rule 43    specialfunction -> window_w
Rule 44    specialfunction -> set_dimension
Rule 45    specialfunction -> set_color
Rule 46    specialfunction -> create_object
Rule 47    specialfunction -> create_text
Rule 48    draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 49    init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR
Rule 50    size -> ID DOT SIZE LEFTPAR RIGHTPAR
Rule 51    head -> ID DOT HEAD LEFTPAR RIGHTPAR
Rule 52    window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
Rule 53    window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
Rule 54    tail -> TAIL LEFTPAR RIGHTPAR
Rule 55    last -> LAST LEFTPAR RIGHTPAR
Rule 56    set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
Rule 57    set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 58    set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 59    update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
Rule 60    get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
Rule 61    set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 62    create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
Rule 63    create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR
Rule 64    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 65    assign -> assign_list EQUAL assign_action2 expression
Rule 66    assign_action1 -> <empty>
Rule 67    assign_action2 -> <empty>
Rule 68    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 69    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 70    condition_action1 -> <empty>
Rule 71    condition_action2 -> <empty>
Rule 72    condition_action3 -> <empty>
Rule 73    loop -> for
Rule 74    loop -> while
Rule 75    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 76    for_action1 -> <empty>
Rule 77    for_action2 -> <empty>
Rule 78    for_action3 -> <empty>
Rule 79    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 80    while_action1 -> <empty>
Rule 81    while_action2 -> <empty>
Rule 82    while_action3 -> <empty>
Rule 83    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 84    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 85    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 86    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 87    startscope_action -> <empty>
Rule 88    function_action1 -> <empty>
Rule 89    function_action2 -> <empty>
Rule 90    function_action3 -> <empty>
Rule 91    recparams -> ID COLON type
Rule 92    recparams -> ID COLON type COMMA recparams
Rule 93    recfunc -> function recfunc
Rule 94    recfunc -> function
Rule 95    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 96    recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 97    recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 98    recwrite -> expression action_recwrite_exp
Rule 99    recwrite -> STRING action_recwrite_cte
Rule 100   action_recwrite_exp -> <empty>
Rule 101   action_recwrite_cte -> <empty>
Rule 102   return -> RETURN expression
Rule 103   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
Rule 104   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
Rule 105   function_call_action1 -> <empty>
Rule 106   function_call_action2 -> <empty>
Rule 107   recfuncexp -> expression COMMA recfuncexp
Rule 108   recfuncexp -> expression recfunc_action1
Rule 109   recfunc_action1 -> <empty>
Rule 110   expression -> exp RELOP relop_action1 exp relop_action2
Rule 111   expression -> exp LOGIC logic_action1 exp logic_action2
Rule 112   expression -> exp
Rule 113   relop_action1 -> <empty>
Rule 114   relop_action2 -> <empty>
Rule 115   logic_action1 -> <empty>
Rule 116   logic_action2 -> <empty>
Rule 117   exp -> term exp_action recexp
Rule 118   exp -> term exp_action
Rule 119   exp_action -> <empty>
Rule 120   recexp -> EX add_operator exp
Rule 121   term -> factor term_action recterm
Rule 122   term -> factor term_action
Rule 123   term_action -> <empty>
Rule 124   recterm -> TERMS add_operator term
Rule 125   add_operator -> <empty>
Rule 126   factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2
Rule 127   factor -> EX cte
Rule 128   factor -> cte
Rule 129   factor_action1 -> <empty>
Rule 130   factor_action2 -> <empty>
Rule 131   type -> primitivetype
Rule 132   type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
Rule 133   action_list1 -> <empty>
Rule 134   primitivetype -> TINT
Rule 135   primitivetype -> TFLOAT
Rule 136   primitivetype -> TSTRING
Rule 137   primitivetype -> TBOOL
Rule 138   primitivetype -> TOBJECT
Rule 139   assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 140   listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 141   list_action1 -> <empty>
Rule 142   list_action_3 -> <empty>
Rule 143   nestedvalue -> ID DOT ID
Rule 144   nestedassign -> nestedvalue EQUAL expression
Rule 145   cte -> <empty>
Rule 146   cte -> id
Rule 147   cte -> int
Rule 148   cte -> float
Rule 149   cte -> bool
Rule 150   cte -> string
Rule 151   cte -> nestedvalue
Rule 152   cte -> functioncall
Rule 153   cte -> listaccess
Rule 154   cte -> specialfunction
Rule 155   id -> ID
Rule 156   string -> STRING
Rule 157   int -> INT
Rule 158   float -> FLOAT
Rule 159   bool -> TRUE
Rule 160   bool -> FALSE

Terminals, with rules where they appear

BAR                  : 132 132
CAPIGAME             : 48 49 52 53 56 57 58 59 60
COLON                : 1 2 3 4 7 13 14 15 16 19 20 91 92
COMMA                : 18 48 48 48 48 57 57 58 61 61 92 96 97 107
COMMENT              : 
CREATE_OBJECT        : 62
CREATE_TEXT          : 63
DOT                  : 48 49 50 51 52 53 56 57 58 59 60 143
DRAW                 : 48
ELSE                 : 69
EQUAL                : 13 14 64 65 144
EX                   : 120 127
FALSE                : 160
FLOAT                : 158
FOR                  : 75
FUNC                 : 8 10 83 84 85 86
GET_EVENT            : 60
GLOBAL               : 7
HEAD                 : 51
ID                   : 17 18 50 51 64 83 84 85 86 91 92 103 104 139 140 143 143 155
IF                   : 68 69
INIT                 : 49
INT                  : 157
LAST                 : 55
LEFTBRACKET          : 132 139 140
LEFTKEY              : 1 2 3 4 7 19 20
LEFTPAR              : 8 10 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 68 69 75 79 83 84 85 86 95 103 104 126
LIST                 : 
LOGIC                : 111
MAIN                 : 1 2 3 4
OBJECT               : 
PRINT                : 95
RELOP                : 110
RETURN               : 102
RIGHTBRACKET         : 132 139 140
RIGHTKEY             : 1 2 3 4 7 19 20
RIGHTPAR             : 8 10 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 68 69 75 79 83 84 85 86 95 103 104 126
RUN                  : 10
SEMICOLON            : 1 2 3 4 7 13 14 15 16 19 20 23 27 28 29 30 31 75 75 75
SET_COLOR            : 61
SET_DIMENSION        : 58
SET_FILL             : 57
SET_TITLE            : 56
SIZE                 : 50
START                : 8
STRING               : 97 99 156
TAIL                 : 54
TBOOL                : 137
TERMS                : 124
TFLOAT               : 135
TINT                 : 134
TLIST                : 132
TOBJECT              : 138
TRUE                 : 159
TSTRING              : 136
UPDATE               : 59
VAR                  : 13 14 15 16
VOID                 : 8 10 85 86
WHILE                : 79
WINDOW_H             : 52 53
WINDOW_W             : 
error                : 

Nonterminals, with rules where they appear

action_list1         : 132
action_recwrite_cte  : 97 99
action_recwrite_exp  : 96 98
add_operator         : 120 124
assign               : 23 75 75
assign_action1       : 64
assign_action2       : 64 65
assign_list          : 65
block                : 8 10 68 69 69 75 79 83 84 85 86
bool                 : 149
capi                 : 0
capi_action1         : 1 2 3 4
capi_action2         : 1 2 3 4
condition            : 24
condition_action1    : 68 69
condition_action2    : 68 69
condition_action3    : 69
create_object        : 46
create_text          : 47
cte                  : 127 128 132
draw                 : 32
exp                  : 110 110 111 111 112 120
exp_action           : 117 118
expression           : 13 14 48 48 48 48 48 56 57 57 57 58 58 61 61 61 64 65 68 69 75 79 96 98 102 107 108 126 139 140 144
factor               : 121 122
factor_action1       : 126
factor_action2       : 126
float                : 148
for                  : 73
for_action1          : 75
for_action2          : 75
for_action3          : 75
function             : 93 94
function_action1     : 83 85
function_action2     : 83 85
function_action3     : 83 84 85 86
function_call_action1 : 103 104
function_call_action2 : 103 104
functioncall         : 29 152
get_event            : 40
global               : 1 3
head                 : 35
id                   : 146
init                 : 33
int                  : 147
last                 : 37
list_action1         : 139 140
list_action_3        : 139 140
listaccess           : 153
logic_action1        : 111
logic_action2        : 111
loop                 : 26
main_cont            : 8 10
nestedassign         : 30
nestedvalue          : 144 151
primitivetype        : 131 132
recexp               : 117
recfunc              : 1 2 93
recfunc_action1      : 108
recfuncexp           : 62 63 103 107
recids               : 13 14 15 16 18
recparams            : 83 85 92
recstatement         : 19 21
recterm              : 121
recwrite             : 95 96 97
relop_action1        : 110
relop_action2        : 110
return               : 28
run                  : 1 2 3 4
run_action1          : 10
set_color            : 45
set_dimension        : 44
set_fill             : 38
set_title            : 39
size                 : 34
specialfunction      : 31 154
start                : 1 2 3 4
start_action1        : 8
startscope_action    : 8 10 75 79 83 84 85 86
statement            : 21 22
string               : 150
tail                 : 36
term                 : 117 118 124
term_action          : 121 122
type                 : 13 14 15 16 83 84 91 92
update               : 41
vars                 : 7 13 15 25
while                : 74
while_action1        : 79
while_action2        : 79
while_action3        : 79
window_h             : 42
window_w             : 43
write                : 27

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> . capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> . capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> . capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (5) capi_action1 -> .

    MAIN            reduce using rule 5 (capi_action1 -> .)
    GLOBAL          reduce using rule 5 (capi_action1 -> .)
    VOID            reduce using rule 5 (capi_action1 -> .)
    TLIST           reduce using rule 5 (capi_action1 -> .)
    TINT            reduce using rule 5 (capi_action1 -> .)
    TFLOAT          reduce using rule 5 (capi_action1 -> .)
    TSTRING         reduce using rule 5 (capi_action1 -> .)
    TBOOL           reduce using rule 5 (capi_action1 -> .)
    TOBJECT         reduce using rule 5 (capi_action1 -> .)

    capi                           shift and go to state 1
    capi_action1                   shift and go to state 2

state 1

    (0) S' -> capi .



state 2

    (1) capi -> capi_action1 . global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> capi_action1 . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 . global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> capi_action1 . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (7) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (93) recfunc -> . function recfunc
    (94) recfunc -> . function
    (83) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (85) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (86) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (131) type -> . primitivetype
    (132) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (134) primitivetype -> . TINT
    (135) primitivetype -> . TFLOAT
    (136) primitivetype -> . TSTRING
    (137) primitivetype -> . TBOOL
    (138) primitivetype -> . TOBJECT

    MAIN            shift and go to state 5
    GLOBAL          shift and go to state 6
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    global                         shift and go to state 3
    recfunc                        shift and go to state 4
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 3

    (1) capi -> capi_action1 global . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 global . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (93) recfunc -> . function recfunc
    (94) recfunc -> . function
    (83) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (85) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (86) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (131) type -> . primitivetype
    (132) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (134) primitivetype -> . TINT
    (135) primitivetype -> . TFLOAT
    (136) primitivetype -> . TSTRING
    (137) primitivetype -> . TBOOL
    (138) primitivetype -> . TOBJECT

    MAIN            shift and go to state 18
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    recfunc                        shift and go to state 17
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 4

    (2) capi -> capi_action1 recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 19


state 5

    (4) capi -> capi_action1 MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 6

    (7) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 21


state 7

    (93) recfunc -> function . recfunc
    (94) recfunc -> function .
    (93) recfunc -> . function recfunc
    (94) recfunc -> . function
    (83) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (85) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (86) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (131) type -> . primitivetype
    (132) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (134) primitivetype -> . TINT
    (135) primitivetype -> . TFLOAT
    (136) primitivetype -> . TSTRING
    (137) primitivetype -> . TBOOL
    (138) primitivetype -> . TOBJECT

    MAIN            reduce using rule 94 (recfunc -> function .)
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    function                       shift and go to state 7
    recfunc                        shift and go to state 22
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 8

    (83) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 9

    (85) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (86) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 24


state 10

    (131) type -> primitivetype .

    FUNC            reduce using rule 131 (type -> primitivetype .)
    EQUAL           reduce using rule 131 (type -> primitivetype .)
    SEMICOLON       reduce using rule 131 (type -> primitivetype .)
    COMMA           reduce using rule 131 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 131 (type -> primitivetype .)


state 11

    (132) type -> TLIST . BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 25


state 12

    (134) primitivetype -> TINT .

    FUNC            reduce using rule 134 (primitivetype -> TINT .)
    BAR             reduce using rule 134 (primitivetype -> TINT .)
    EQUAL           reduce using rule 134 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 134 (primitivetype -> TINT .)
    COMMA           reduce using rule 134 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 134 (primitivetype -> TINT .)


state 13

    (135) primitivetype -> TFLOAT .

    FUNC            reduce using rule 135 (primitivetype -> TFLOAT .)
    BAR             reduce using rule 135 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 135 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 135 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 135 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 135 (primitivetype -> TFLOAT .)


state 14

    (136) primitivetype -> TSTRING .

    FUNC            reduce using rule 136 (primitivetype -> TSTRING .)
    BAR             reduce using rule 136 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 136 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 136 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 136 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 136 (primitivetype -> TSTRING .)


state 15

    (137) primitivetype -> TBOOL .

    FUNC            reduce using rule 137 (primitivetype -> TBOOL .)
    BAR             reduce using rule 137 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 137 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 137 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 137 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 137 (primitivetype -> TBOOL .)


state 16

    (138) primitivetype -> TOBJECT .

    FUNC            reduce using rule 138 (primitivetype -> TOBJECT .)
    BAR             reduce using rule 138 (primitivetype -> TOBJECT .)
    EQUAL           reduce using rule 138 (primitivetype -> TOBJECT .)
    SEMICOLON       reduce using rule 138 (primitivetype -> TOBJECT .)
    COMMA           reduce using rule 138 (primitivetype -> TOBJECT .)
    RIGHTPAR        reduce using rule 138 (primitivetype -> TOBJECT .)


state 17

    (1) capi -> capi_action1 global recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 26


state 18

    (3) capi -> capi_action1 global MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (2) capi -> capi_action1 recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 28


state 20

    (4) capi -> capi_action1 MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (7) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 30


state 22

    (93) recfunc -> function recfunc .

    MAIN            reduce using rule 93 (recfunc -> function recfunc .)


state 23

    (83) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (85) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (86) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 32


state 25

    (132) type -> TLIST BAR . primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (134) primitivetype -> . TINT
    (135) primitivetype -> . TFLOAT
    (136) primitivetype -> . TSTRING
    (137) primitivetype -> . TBOOL
    (138) primitivetype -> . TOBJECT

    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    primitivetype                  shift and go to state 33

state 26

    (1) capi -> capi_action1 global recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 34


state 27

    (3) capi -> capi_action1 global MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (2) capi -> capi_action1 recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 36


state 29

    (4) capi -> capi_action1 MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 37

state 30

    (7) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 40

    vars                           shift and go to state 39

state 31

    (83) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (87) startscope_action -> .

    LEFTPAR         reduce using rule 87 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (85) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (86) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (87) startscope_action -> .

    LEFTPAR         reduce using rule 87 (startscope_action -> .)

    startscope_action              shift and go to state 42

state 33

    (132) type -> TLIST BAR primitivetype . BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 43


state 34

    (1) capi -> capi_action1 global recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 44


state 35

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 45

state 36

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 46

state 37

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 47

state 38

    (8) start -> VOID . FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 48


state 39

    (7) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 49


state 40

    (13) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR . recids COLON type SEMICOLON vars
    (16) vars -> VAR . recids COLON type SEMICOLON
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 50

state 41

    (83) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 42

    (85) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (86) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 53


state 43

    (132) type -> TLIST BAR primitivetype BAR . LEFTBRACKET cte RIGHTBRACKET action_list1

    LEFTBRACKET     shift and go to state 54


state 44

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 55

state 45

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 56

state 46

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 57

state 47

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 58

state 48

    (8) start -> VOID FUNC . start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
    (9) start_action1 -> .

    START           reduce using rule 9 (start_action1 -> .)

    start_action1                  shift and go to state 60

state 49

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 61


state 50

    (13) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR recids . COLON type SEMICOLON vars
    (16) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 62


state 51

    (17) recids -> ID .
    (18) recids -> ID . COMMA recids

    COLON           reduce using rule 17 (recids -> ID .)
    COMMA           shift and go to state 63


state 52

    (83) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (84) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (91) recparams -> . ID COLON type
    (92) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 66
    ID              shift and go to state 64

    recparams                      shift and go to state 65

state 53

    (85) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (86) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (91) recparams -> . ID COLON type
    (92) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 68
    ID              shift and go to state 64

    recparams                      shift and go to state 67

state 54

    (132) type -> TLIST BAR primitivetype BAR LEFTBRACKET . cte RIGHTBRACKET action_list1
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTBRACKET    reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

    cte                            shift and go to state 69
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 55

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 107

state 56

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 108

state 57

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 109

state 58

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 110


state 59

    (10) run -> VOID . FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 111


state 60

    (8) start -> VOID FUNC start_action1 . START startscope_action LEFTPAR RIGHTPAR main_cont block

    START           shift and go to state 112


state 61

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 62

    (13) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON . type SEMICOLON vars
    (16) vars -> VAR recids COLON . type SEMICOLON
    (131) type -> . primitivetype
    (132) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (134) primitivetype -> . TINT
    (135) primitivetype -> . TFLOAT
    (136) primitivetype -> . TSTRING
    (137) primitivetype -> . TBOOL
    (138) primitivetype -> . TOBJECT

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 113
    primitivetype                  shift and go to state 10

state 63

    (18) recids -> ID COMMA . recids
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 114

state 64

    (91) recparams -> ID . COLON type
    (92) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 115


state 65

    (83) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function_action1 -> .

    RIGHTPAR        reduce using rule 88 (function_action1 -> .)

    function_action1               shift and go to state 116

state 66

    (84) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (90) function_action3 -> .

    COLON           reduce using rule 90 (function_action3 -> .)

    function_action3               shift and go to state 117

state 67

    (85) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (88) function_action1 -> .

    RIGHTPAR        reduce using rule 88 (function_action1 -> .)

    function_action1               shift and go to state 118

state 68

    (86) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (90) function_action3 -> .

    COLON           reduce using rule 90 (function_action3 -> .)

    function_action3               shift and go to state 119

state 69

    (132) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte . RIGHTBRACKET action_list1

    RIGHTBRACKET    shift and go to state 120


state 70

    (146) cte -> id .

    RIGHTBRACKET    reduce using rule 146 (cte -> id .)
    TERMS           reduce using rule 146 (cte -> id .)
    EX              reduce using rule 146 (cte -> id .)
    RELOP           reduce using rule 146 (cte -> id .)
    LOGIC           reduce using rule 146 (cte -> id .)
    COMMA           reduce using rule 146 (cte -> id .)
    RIGHTPAR        reduce using rule 146 (cte -> id .)
    SEMICOLON       reduce using rule 146 (cte -> id .)


state 71

    (147) cte -> int .

    RIGHTBRACKET    reduce using rule 147 (cte -> int .)
    TERMS           reduce using rule 147 (cte -> int .)
    EX              reduce using rule 147 (cte -> int .)
    RELOP           reduce using rule 147 (cte -> int .)
    LOGIC           reduce using rule 147 (cte -> int .)
    COMMA           reduce using rule 147 (cte -> int .)
    RIGHTPAR        reduce using rule 147 (cte -> int .)
    SEMICOLON       reduce using rule 147 (cte -> int .)


state 72

    (148) cte -> float .

    RIGHTBRACKET    reduce using rule 148 (cte -> float .)
    TERMS           reduce using rule 148 (cte -> float .)
    EX              reduce using rule 148 (cte -> float .)
    RELOP           reduce using rule 148 (cte -> float .)
    LOGIC           reduce using rule 148 (cte -> float .)
    COMMA           reduce using rule 148 (cte -> float .)
    RIGHTPAR        reduce using rule 148 (cte -> float .)
    SEMICOLON       reduce using rule 148 (cte -> float .)


state 73

    (149) cte -> bool .

    RIGHTBRACKET    reduce using rule 149 (cte -> bool .)
    TERMS           reduce using rule 149 (cte -> bool .)
    EX              reduce using rule 149 (cte -> bool .)
    RELOP           reduce using rule 149 (cte -> bool .)
    LOGIC           reduce using rule 149 (cte -> bool .)
    COMMA           reduce using rule 149 (cte -> bool .)
    RIGHTPAR        reduce using rule 149 (cte -> bool .)
    SEMICOLON       reduce using rule 149 (cte -> bool .)


state 74

    (150) cte -> string .

    RIGHTBRACKET    reduce using rule 150 (cte -> string .)
    TERMS           reduce using rule 150 (cte -> string .)
    EX              reduce using rule 150 (cte -> string .)
    RELOP           reduce using rule 150 (cte -> string .)
    LOGIC           reduce using rule 150 (cte -> string .)
    COMMA           reduce using rule 150 (cte -> string .)
    RIGHTPAR        reduce using rule 150 (cte -> string .)
    SEMICOLON       reduce using rule 150 (cte -> string .)


state 75

    (151) cte -> nestedvalue .

    RIGHTBRACKET    reduce using rule 151 (cte -> nestedvalue .)
    TERMS           reduce using rule 151 (cte -> nestedvalue .)
    EX              reduce using rule 151 (cte -> nestedvalue .)
    RELOP           reduce using rule 151 (cte -> nestedvalue .)
    LOGIC           reduce using rule 151 (cte -> nestedvalue .)
    COMMA           reduce using rule 151 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 151 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 151 (cte -> nestedvalue .)


state 76

    (152) cte -> functioncall .

    RIGHTBRACKET    reduce using rule 152 (cte -> functioncall .)
    TERMS           reduce using rule 152 (cte -> functioncall .)
    EX              reduce using rule 152 (cte -> functioncall .)
    RELOP           reduce using rule 152 (cte -> functioncall .)
    LOGIC           reduce using rule 152 (cte -> functioncall .)
    COMMA           reduce using rule 152 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 152 (cte -> functioncall .)
    SEMICOLON       reduce using rule 152 (cte -> functioncall .)


state 77

    (153) cte -> listaccess .

    RIGHTBRACKET    reduce using rule 153 (cte -> listaccess .)
    TERMS           reduce using rule 153 (cte -> listaccess .)
    EX              reduce using rule 153 (cte -> listaccess .)
    RELOP           reduce using rule 153 (cte -> listaccess .)
    LOGIC           reduce using rule 153 (cte -> listaccess .)
    COMMA           reduce using rule 153 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 153 (cte -> listaccess .)
    SEMICOLON       reduce using rule 153 (cte -> listaccess .)


state 78

    (154) cte -> specialfunction .

    RIGHTBRACKET    reduce using rule 154 (cte -> specialfunction .)
    TERMS           reduce using rule 154 (cte -> specialfunction .)
    EX              reduce using rule 154 (cte -> specialfunction .)
    RELOP           reduce using rule 154 (cte -> specialfunction .)
    LOGIC           reduce using rule 154 (cte -> specialfunction .)
    COMMA           reduce using rule 154 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 154 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 154 (cte -> specialfunction .)


state 79

    (155) id -> ID .
    (143) nestedvalue -> ID . DOT ID
    (103) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (50) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (105) function_call_action1 -> .
    (141) list_action1 -> .

    RIGHTBRACKET    reduce using rule 155 (id -> ID .)
    TERMS           reduce using rule 155 (id -> ID .)
    EX              reduce using rule 155 (id -> ID .)
    RELOP           reduce using rule 155 (id -> ID .)
    LOGIC           reduce using rule 155 (id -> ID .)
    COMMA           reduce using rule 155 (id -> ID .)
    RIGHTPAR        reduce using rule 155 (id -> ID .)
    SEMICOLON       reduce using rule 155 (id -> ID .)
    DOT             shift and go to state 121
    LEFTPAR         reduce using rule 105 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 141 (list_action1 -> .)

    function_call_action1          shift and go to state 122
    list_action1                   shift and go to state 123

state 80

    (157) int -> INT .

    RIGHTBRACKET    reduce using rule 157 (int -> INT .)
    TERMS           reduce using rule 157 (int -> INT .)
    EX              reduce using rule 157 (int -> INT .)
    RELOP           reduce using rule 157 (int -> INT .)
    LOGIC           reduce using rule 157 (int -> INT .)
    COMMA           reduce using rule 157 (int -> INT .)
    RIGHTPAR        reduce using rule 157 (int -> INT .)
    SEMICOLON       reduce using rule 157 (int -> INT .)


state 81

    (158) float -> FLOAT .

    RIGHTBRACKET    reduce using rule 158 (float -> FLOAT .)
    TERMS           reduce using rule 158 (float -> FLOAT .)
    EX              reduce using rule 158 (float -> FLOAT .)
    RELOP           reduce using rule 158 (float -> FLOAT .)
    LOGIC           reduce using rule 158 (float -> FLOAT .)
    COMMA           reduce using rule 158 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 158 (float -> FLOAT .)
    SEMICOLON       reduce using rule 158 (float -> FLOAT .)


state 82

    (159) bool -> TRUE .

    RIGHTBRACKET    reduce using rule 159 (bool -> TRUE .)
    TERMS           reduce using rule 159 (bool -> TRUE .)
    EX              reduce using rule 159 (bool -> TRUE .)
    RELOP           reduce using rule 159 (bool -> TRUE .)
    LOGIC           reduce using rule 159 (bool -> TRUE .)
    COMMA           reduce using rule 159 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 159 (bool -> TRUE .)
    SEMICOLON       reduce using rule 159 (bool -> TRUE .)


state 83

    (160) bool -> FALSE .

    RIGHTBRACKET    reduce using rule 160 (bool -> FALSE .)
    TERMS           reduce using rule 160 (bool -> FALSE .)
    EX              reduce using rule 160 (bool -> FALSE .)
    RELOP           reduce using rule 160 (bool -> FALSE .)
    LOGIC           reduce using rule 160 (bool -> FALSE .)
    COMMA           reduce using rule 160 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 160 (bool -> FALSE .)
    SEMICOLON       reduce using rule 160 (bool -> FALSE .)


state 84

    (156) string -> STRING .

    RIGHTBRACKET    reduce using rule 156 (string -> STRING .)
    TERMS           reduce using rule 156 (string -> STRING .)
    EX              reduce using rule 156 (string -> STRING .)
    RELOP           reduce using rule 156 (string -> STRING .)
    LOGIC           reduce using rule 156 (string -> STRING .)
    COMMA           reduce using rule 156 (string -> STRING .)
    RIGHTPAR        reduce using rule 156 (string -> STRING .)
    SEMICOLON       reduce using rule 156 (string -> STRING .)


state 85

    (32) specialfunction -> draw .

    RIGHTBRACKET    reduce using rule 32 (specialfunction -> draw .)
    TERMS           reduce using rule 32 (specialfunction -> draw .)
    EX              reduce using rule 32 (specialfunction -> draw .)
    RELOP           reduce using rule 32 (specialfunction -> draw .)
    LOGIC           reduce using rule 32 (specialfunction -> draw .)
    COMMA           reduce using rule 32 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 32 (specialfunction -> draw .)


state 86

    (33) specialfunction -> init .

    RIGHTBRACKET    reduce using rule 33 (specialfunction -> init .)
    TERMS           reduce using rule 33 (specialfunction -> init .)
    EX              reduce using rule 33 (specialfunction -> init .)
    RELOP           reduce using rule 33 (specialfunction -> init .)
    LOGIC           reduce using rule 33 (specialfunction -> init .)
    COMMA           reduce using rule 33 (specialfunction -> init .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> init .)
    SEMICOLON       reduce using rule 33 (specialfunction -> init .)


state 87

    (34) specialfunction -> size .

    RIGHTBRACKET    reduce using rule 34 (specialfunction -> size .)
    TERMS           reduce using rule 34 (specialfunction -> size .)
    EX              reduce using rule 34 (specialfunction -> size .)
    RELOP           reduce using rule 34 (specialfunction -> size .)
    LOGIC           reduce using rule 34 (specialfunction -> size .)
    COMMA           reduce using rule 34 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> size .)
    SEMICOLON       reduce using rule 34 (specialfunction -> size .)


state 88

    (35) specialfunction -> head .

    RIGHTBRACKET    reduce using rule 35 (specialfunction -> head .)
    TERMS           reduce using rule 35 (specialfunction -> head .)
    EX              reduce using rule 35 (specialfunction -> head .)
    RELOP           reduce using rule 35 (specialfunction -> head .)
    LOGIC           reduce using rule 35 (specialfunction -> head .)
    COMMA           reduce using rule 35 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> head .)
    SEMICOLON       reduce using rule 35 (specialfunction -> head .)


state 89

    (36) specialfunction -> tail .

    RIGHTBRACKET    reduce using rule 36 (specialfunction -> tail .)
    TERMS           reduce using rule 36 (specialfunction -> tail .)
    EX              reduce using rule 36 (specialfunction -> tail .)
    RELOP           reduce using rule 36 (specialfunction -> tail .)
    LOGIC           reduce using rule 36 (specialfunction -> tail .)
    COMMA           reduce using rule 36 (specialfunction -> tail .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> tail .)
    SEMICOLON       reduce using rule 36 (specialfunction -> tail .)


state 90

    (37) specialfunction -> last .

    RIGHTBRACKET    reduce using rule 37 (specialfunction -> last .)
    TERMS           reduce using rule 37 (specialfunction -> last .)
    EX              reduce using rule 37 (specialfunction -> last .)
    RELOP           reduce using rule 37 (specialfunction -> last .)
    LOGIC           reduce using rule 37 (specialfunction -> last .)
    COMMA           reduce using rule 37 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 37 (specialfunction -> last .)
    SEMICOLON       reduce using rule 37 (specialfunction -> last .)


state 91

    (38) specialfunction -> set_fill .

    RIGHTBRACKET    reduce using rule 38 (specialfunction -> set_fill .)
    TERMS           reduce using rule 38 (specialfunction -> set_fill .)
    EX              reduce using rule 38 (specialfunction -> set_fill .)
    RELOP           reduce using rule 38 (specialfunction -> set_fill .)
    LOGIC           reduce using rule 38 (specialfunction -> set_fill .)
    COMMA           reduce using rule 38 (specialfunction -> set_fill .)
    RIGHTPAR        reduce using rule 38 (specialfunction -> set_fill .)
    SEMICOLON       reduce using rule 38 (specialfunction -> set_fill .)


state 92

    (39) specialfunction -> set_title .

    RIGHTBRACKET    reduce using rule 39 (specialfunction -> set_title .)
    TERMS           reduce using rule 39 (specialfunction -> set_title .)
    EX              reduce using rule 39 (specialfunction -> set_title .)
    RELOP           reduce using rule 39 (specialfunction -> set_title .)
    LOGIC           reduce using rule 39 (specialfunction -> set_title .)
    COMMA           reduce using rule 39 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 39 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 39 (specialfunction -> set_title .)


state 93

    (40) specialfunction -> get_event .

    RIGHTBRACKET    reduce using rule 40 (specialfunction -> get_event .)
    TERMS           reduce using rule 40 (specialfunction -> get_event .)
    EX              reduce using rule 40 (specialfunction -> get_event .)
    RELOP           reduce using rule 40 (specialfunction -> get_event .)
    LOGIC           reduce using rule 40 (specialfunction -> get_event .)
    COMMA           reduce using rule 40 (specialfunction -> get_event .)
    RIGHTPAR        reduce using rule 40 (specialfunction -> get_event .)
    SEMICOLON       reduce using rule 40 (specialfunction -> get_event .)


state 94

    (41) specialfunction -> update .

    RIGHTBRACKET    reduce using rule 41 (specialfunction -> update .)
    TERMS           reduce using rule 41 (specialfunction -> update .)
    EX              reduce using rule 41 (specialfunction -> update .)
    RELOP           reduce using rule 41 (specialfunction -> update .)
    LOGIC           reduce using rule 41 (specialfunction -> update .)
    COMMA           reduce using rule 41 (specialfunction -> update .)
    RIGHTPAR        reduce using rule 41 (specialfunction -> update .)
    SEMICOLON       reduce using rule 41 (specialfunction -> update .)


state 95

    (42) specialfunction -> window_h .

    RIGHTBRACKET    reduce using rule 42 (specialfunction -> window_h .)
    TERMS           reduce using rule 42 (specialfunction -> window_h .)
    EX              reduce using rule 42 (specialfunction -> window_h .)
    RELOP           reduce using rule 42 (specialfunction -> window_h .)
    LOGIC           reduce using rule 42 (specialfunction -> window_h .)
    COMMA           reduce using rule 42 (specialfunction -> window_h .)
    RIGHTPAR        reduce using rule 42 (specialfunction -> window_h .)
    SEMICOLON       reduce using rule 42 (specialfunction -> window_h .)


state 96

    (43) specialfunction -> window_w .

    RIGHTBRACKET    reduce using rule 43 (specialfunction -> window_w .)
    TERMS           reduce using rule 43 (specialfunction -> window_w .)
    EX              reduce using rule 43 (specialfunction -> window_w .)
    RELOP           reduce using rule 43 (specialfunction -> window_w .)
    LOGIC           reduce using rule 43 (specialfunction -> window_w .)
    COMMA           reduce using rule 43 (specialfunction -> window_w .)
    RIGHTPAR        reduce using rule 43 (specialfunction -> window_w .)
    SEMICOLON       reduce using rule 43 (specialfunction -> window_w .)


state 97

    (44) specialfunction -> set_dimension .

    RIGHTBRACKET    reduce using rule 44 (specialfunction -> set_dimension .)
    TERMS           reduce using rule 44 (specialfunction -> set_dimension .)
    EX              reduce using rule 44 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 44 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 44 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 44 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 44 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 44 (specialfunction -> set_dimension .)


state 98

    (45) specialfunction -> set_color .

    RIGHTBRACKET    reduce using rule 45 (specialfunction -> set_color .)
    TERMS           reduce using rule 45 (specialfunction -> set_color .)
    EX              reduce using rule 45 (specialfunction -> set_color .)
    RELOP           reduce using rule 45 (specialfunction -> set_color .)
    LOGIC           reduce using rule 45 (specialfunction -> set_color .)
    COMMA           reduce using rule 45 (specialfunction -> set_color .)
    RIGHTPAR        reduce using rule 45 (specialfunction -> set_color .)
    SEMICOLON       reduce using rule 45 (specialfunction -> set_color .)


state 99

    (46) specialfunction -> create_object .

    RIGHTBRACKET    reduce using rule 46 (specialfunction -> create_object .)
    TERMS           reduce using rule 46 (specialfunction -> create_object .)
    EX              reduce using rule 46 (specialfunction -> create_object .)
    RELOP           reduce using rule 46 (specialfunction -> create_object .)
    LOGIC           reduce using rule 46 (specialfunction -> create_object .)
    COMMA           reduce using rule 46 (specialfunction -> create_object .)
    RIGHTPAR        reduce using rule 46 (specialfunction -> create_object .)
    SEMICOLON       reduce using rule 46 (specialfunction -> create_object .)


state 100

    (47) specialfunction -> create_text .

    RIGHTBRACKET    reduce using rule 47 (specialfunction -> create_text .)
    TERMS           reduce using rule 47 (specialfunction -> create_text .)
    EX              reduce using rule 47 (specialfunction -> create_text .)
    RELOP           reduce using rule 47 (specialfunction -> create_text .)
    LOGIC           reduce using rule 47 (specialfunction -> create_text .)
    COMMA           reduce using rule 47 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 47 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 47 (specialfunction -> create_text .)


state 101

    (48) draw -> CAPIGAME . DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> CAPIGAME . DOT INIT LEFTPAR RIGHTPAR
    (57) set_fill -> CAPIGAME . DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> CAPIGAME . DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> CAPIGAME . DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> CAPIGAME . DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> CAPIGAME . DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> CAPIGAME . DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> CAPIGAME . DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR

    DOT             shift and go to state 124


state 102

    (54) tail -> TAIL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 125


state 103

    (55) last -> LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 126


state 104

    (61) set_color -> SET_COLOR . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 127


state 105

    (62) create_object -> CREATE_OBJECT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 128


state 106

    (63) create_text -> CREATE_TEXT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 129


state 107

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 130

state 108

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 131


state 109

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 132


state 110

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 133


state 111

    (10) run -> VOID FUNC . run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
    (11) run_action1 -> .

    RUN             reduce using rule 11 (run_action1 -> .)

    run_action1                    shift and go to state 134

state 112

    (8) start -> VOID FUNC start_action1 START . startscope_action LEFTPAR RIGHTPAR main_cont block
    (87) startscope_action -> .

    LEFTPAR         reduce using rule 87 (startscope_action -> .)

    startscope_action              shift and go to state 135

state 113

    (13) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON type . SEMICOLON vars
    (16) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 136
    SEMICOLON       shift and go to state 137


state 114

    (18) recids -> ID COMMA recids .

    COLON           reduce using rule 18 (recids -> ID COMMA recids .)


state 115

    (91) recparams -> ID COLON . type
    (92) recparams -> ID COLON . type COMMA recparams
    (131) type -> . primitivetype
    (132) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (134) primitivetype -> . TINT
    (135) primitivetype -> . TFLOAT
    (136) primitivetype -> . TSTRING
    (137) primitivetype -> . TBOOL
    (138) primitivetype -> . TOBJECT

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 138
    primitivetype                  shift and go to state 10

state 116

    (83) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 139


state 117

    (84) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 140

state 118

    (85) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 142


state 119

    (86) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 143

state 120

    (132) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET . action_list1
    (133) action_list1 -> .

    FUNC            reduce using rule 133 (action_list1 -> .)
    EQUAL           reduce using rule 133 (action_list1 -> .)
    SEMICOLON       reduce using rule 133 (action_list1 -> .)
    COMMA           reduce using rule 133 (action_list1 -> .)
    RIGHTPAR        reduce using rule 133 (action_list1 -> .)

    action_list1                   shift and go to state 144

state 121

    (143) nestedvalue -> ID DOT . ID
    (50) size -> ID DOT . SIZE LEFTPAR RIGHTPAR
    (51) head -> ID DOT . HEAD LEFTPAR RIGHTPAR

    ID              shift and go to state 145
    SIZE            shift and go to state 146
    HEAD            shift and go to state 147


state 122

    (103) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 RIGHTPAR

    LEFTPAR         shift and go to state 148


state 123

    (140) listaccess -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 149


state 124

    (48) draw -> CAPIGAME DOT . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> CAPIGAME DOT . INIT LEFTPAR RIGHTPAR
    (57) set_fill -> CAPIGAME DOT . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> CAPIGAME DOT . SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> CAPIGAME DOT . GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> CAPIGAME DOT . UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> CAPIGAME DOT . WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> CAPIGAME DOT . WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> CAPIGAME DOT . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR

    DRAW            shift and go to state 150
    INIT            shift and go to state 151
    SET_FILL        shift and go to state 152
    SET_TITLE       shift and go to state 153
    GET_EVENT       shift and go to state 154
    UPDATE          shift and go to state 155
    WINDOW_H        shift and go to state 156
    SET_DIMENSION   shift and go to state 157


state 125

    (54) tail -> TAIL LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 158


state 126

    (55) last -> LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 159


state 127

    (61) set_color -> SET_COLOR LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 160
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 128

    (62) create_object -> CREATE_OBJECT LEFTPAR . recfuncexp RIGHTPAR
    (107) recfuncexp -> . expression COMMA recfuncexp
    (108) recfuncexp -> . expression recfunc_action1
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    recfuncexp                     shift and go to state 167
    expression                     shift and go to state 168
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 129

    (63) create_text -> CREATE_TEXT LEFTPAR . recfuncexp RIGHTPAR
    (107) recfuncexp -> . expression COMMA recfuncexp
    (108) recfuncexp -> . expression recfunc_action1
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    recfuncexp                     shift and go to state 169
    expression                     shift and go to state 168
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 130

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 170


state 131

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 171


state 132

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 172


state 133

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 134

    (10) run -> VOID FUNC run_action1 . RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    RUN             shift and go to state 173


state 135

    (8) start -> VOID FUNC start_action1 START startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 174


state 136

    (13) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 175
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 137

    (15) vars -> VAR recids COLON type SEMICOLON . vars
    (16) vars -> VAR recids COLON type SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CAPIGAME        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    TAIL            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    LAST            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_COLOR       reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_OBJECT   reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 176

state 138

    (91) recparams -> ID COLON type .
    (92) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 91 (recparams -> ID COLON type .)
    COMMA           shift and go to state 177


state 139

    (83) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (89) function_action2 -> .

    COLON           reduce using rule 89 (function_action2 -> .)

    function_action2               shift and go to state 178

state 140

    (84) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 141

    (19) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 179


state 142

    (85) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (89) function_action2 -> .

    COLON           reduce using rule 89 (function_action2 -> .)

    function_action2               shift and go to state 180

state 143

    (86) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 144

    (132) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .

    FUNC            reduce using rule 132 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    EQUAL           reduce using rule 132 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    SEMICOLON       reduce using rule 132 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    COMMA           reduce using rule 132 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    RIGHTPAR        reduce using rule 132 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)


state 145

    (143) nestedvalue -> ID DOT ID .

    RIGHTBRACKET    reduce using rule 143 (nestedvalue -> ID DOT ID .)
    TERMS           reduce using rule 143 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 143 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 143 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 143 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 143 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 143 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 143 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 143 (nestedvalue -> ID DOT ID .)


state 146

    (50) size -> ID DOT SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 181


state 147

    (51) head -> ID DOT HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 182


state 148

    (103) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 RIGHTPAR
    (106) function_call_action2 -> .

    RIGHTPAR        reduce using rule 106 (function_call_action2 -> .)
    EX              reduce using rule 106 (function_call_action2 -> .)
    ID              reduce using rule 106 (function_call_action2 -> .)
    INT             reduce using rule 106 (function_call_action2 -> .)
    FLOAT           reduce using rule 106 (function_call_action2 -> .)
    TRUE            reduce using rule 106 (function_call_action2 -> .)
    FALSE           reduce using rule 106 (function_call_action2 -> .)
    STRING          reduce using rule 106 (function_call_action2 -> .)
    CAPIGAME        reduce using rule 106 (function_call_action2 -> .)
    TAIL            reduce using rule 106 (function_call_action2 -> .)
    LAST            reduce using rule 106 (function_call_action2 -> .)
    SET_COLOR       reduce using rule 106 (function_call_action2 -> .)
    CREATE_OBJECT   reduce using rule 106 (function_call_action2 -> .)
    CREATE_TEXT     reduce using rule 106 (function_call_action2 -> .)
    COMMA           reduce using rule 106 (function_call_action2 -> .)
    RELOP           reduce using rule 106 (function_call_action2 -> .)
    LOGIC           reduce using rule 106 (function_call_action2 -> .)
    TERMS           reduce using rule 106 (function_call_action2 -> .)
    LEFTPAR         reduce using rule 106 (function_call_action2 -> .)

    function_call_action2          shift and go to state 183

state 149

    (140) listaccess -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTBRACKET    reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 184
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 150

    (48) draw -> CAPIGAME DOT DRAW . LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 185


state 151

    (49) init -> CAPIGAME DOT INIT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 186


state 152

    (57) set_fill -> CAPIGAME DOT SET_FILL . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 187


state 153

    (56) set_title -> CAPIGAME DOT SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 188


state 154

    (60) get_event -> CAPIGAME DOT GET_EVENT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 189


state 155

    (59) update -> CAPIGAME DOT UPDATE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 190


state 156

    (52) window_h -> CAPIGAME DOT WINDOW_H . LEFTPAR RIGHTPAR
    (53) window_w -> CAPIGAME DOT WINDOW_H . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 191


state 157

    (58) set_dimension -> CAPIGAME DOT SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 192


state 158

    (54) tail -> TAIL LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 54 (tail -> TAIL LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 54 (tail -> TAIL LEFTPAR RIGHTPAR .)
    EX              reduce using rule 54 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 54 (tail -> TAIL LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 54 (tail -> TAIL LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 54 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 54 (tail -> TAIL LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 54 (tail -> TAIL LEFTPAR RIGHTPAR .)


state 159

    (55) last -> LAST LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 55 (last -> LAST LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 55 (last -> LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 55 (last -> LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 55 (last -> LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 55 (last -> LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 55 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 55 (last -> LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 55 (last -> LAST LEFTPAR RIGHTPAR .)


state 160

    (61) set_color -> SET_COLOR LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 193


state 161

    (110) expression -> exp . RELOP relop_action1 exp relop_action2
    (111) expression -> exp . LOGIC logic_action1 exp logic_action2
    (112) expression -> exp .

    RELOP           shift and go to state 194
    LOGIC           shift and go to state 195
    COMMA           reduce using rule 112 (expression -> exp .)
    RIGHTPAR        reduce using rule 112 (expression -> exp .)
    SEMICOLON       reduce using rule 112 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 112 (expression -> exp .)


state 162

    (117) exp -> term . exp_action recexp
    (118) exp -> term . exp_action
    (119) exp_action -> .

    EX              reduce using rule 119 (exp_action -> .)
    RELOP           reduce using rule 119 (exp_action -> .)
    LOGIC           reduce using rule 119 (exp_action -> .)
    COMMA           reduce using rule 119 (exp_action -> .)
    RIGHTPAR        reduce using rule 119 (exp_action -> .)
    SEMICOLON       reduce using rule 119 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 119 (exp_action -> .)

    exp_action                     shift and go to state 196

state 163

    (121) term -> factor . term_action recterm
    (122) term -> factor . term_action
    (123) term_action -> .

    TERMS           reduce using rule 123 (term_action -> .)
    EX              reduce using rule 123 (term_action -> .)
    RELOP           reduce using rule 123 (term_action -> .)
    LOGIC           reduce using rule 123 (term_action -> .)
    COMMA           reduce using rule 123 (term_action -> .)
    RIGHTPAR        reduce using rule 123 (term_action -> .)
    SEMICOLON       reduce using rule 123 (term_action -> .)
    RIGHTBRACKET    reduce using rule 123 (term_action -> .)

    term_action                    shift and go to state 197

state 164

    (126) factor -> factor_action1 . LEFTPAR expression RIGHTPAR factor_action2

    LEFTPAR         shift and go to state 198


state 165

    (127) factor -> EX . cte
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    TERMS           reduce using rule 145 (cte -> .)
    EX              reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    RIGHTBRACKET    reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

    cte                            shift and go to state 199
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 166

    (128) factor -> cte .

    TERMS           reduce using rule 128 (factor -> cte .)
    EX              reduce using rule 128 (factor -> cte .)
    RELOP           reduce using rule 128 (factor -> cte .)
    LOGIC           reduce using rule 128 (factor -> cte .)
    COMMA           reduce using rule 128 (factor -> cte .)
    RIGHTPAR        reduce using rule 128 (factor -> cte .)
    SEMICOLON       reduce using rule 128 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 128 (factor -> cte .)


state 167

    (62) create_object -> CREATE_OBJECT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 200


state 168

    (107) recfuncexp -> expression . COMMA recfuncexp
    (108) recfuncexp -> expression . recfunc_action1
    (109) recfunc_action1 -> .

    COMMA           shift and go to state 201
    RIGHTPAR        reduce using rule 109 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 202

state 169

    (63) create_text -> CREATE_TEXT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 203


state 170

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 204


state 171

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 172

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 173

    (10) run -> VOID FUNC run_action1 RUN . startscope_action LEFTPAR RIGHTPAR main_cont block
    (87) startscope_action -> .

    LEFTPAR         reduce using rule 87 (startscope_action -> .)

    startscope_action              shift and go to state 205

state 174

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 206


state 175

    (13) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 207


state 176

    (15) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CAPIGAME        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    TAIL            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    LAST            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_COLOR       reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)


state 177

    (92) recparams -> ID COLON type COMMA . recparams
    (91) recparams -> . ID COLON type
    (92) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 64

    recparams                      shift and go to state 208

state 178

    (83) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (90) function_action3 -> .

    COLON           reduce using rule 90 (function_action3 -> .)

    function_action3               shift and go to state 209

state 179

    (19) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (64) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (65) assign -> . assign_list EQUAL assign_action2 expression
    (68) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (69) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (73) loop -> . for
    (74) loop -> . while
    (95) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (102) return -> . RETURN expression
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (144) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (139) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (75) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (79) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (143) nestedvalue -> . ID DOT ID
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        shift and go to state 211
    ID              shift and go to state 222
    IF              shift and go to state 224
    VAR             shift and go to state 40
    PRINT           shift and go to state 227
    RETURN          shift and go to state 228
    FOR             shift and go to state 230
    WHILE           shift and go to state 231
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

    recstatement                   shift and go to state 210
    statement                      shift and go to state 212
    assign                         shift and go to state 213
    condition                      shift and go to state 214
    vars                           shift and go to state 215
    loop                           shift and go to state 216
    write                          shift and go to state 217
    return                         shift and go to state 218
    functioncall                   shift and go to state 219
    nestedassign                   shift and go to state 220
    specialfunction                shift and go to state 221
    assign_list                    shift and go to state 223
    for                            shift and go to state 225
    while                          shift and go to state 226
    nestedvalue                    shift and go to state 229
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 180

    (85) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (90) function_action3 -> .

    COLON           reduce using rule 90 (function_action3 -> .)

    function_action3               shift and go to state 232

state 181

    (50) size -> ID DOT SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 233


state 182

    (51) head -> ID DOT HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 234


state 183

    (103) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . recfuncexp RIGHTPAR
    (104) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . RIGHTPAR
    (107) recfuncexp -> . expression COMMA recfuncexp
    (108) recfuncexp -> . expression recfunc_action1
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
  ! shift/reduce conflict for RIGHTPAR resolved as shift
    RIGHTPAR        shift and go to state 236
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]
  ! RIGHTPAR        [ reduce using rule 145 (cte -> .) ]

    recfuncexp                     shift and go to state 235
    expression                     shift and go to state 168
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 184

    (140) listaccess -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (142) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 142 (list_action_3 -> .)

    list_action_3                  shift and go to state 237

state 185

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR . expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 238
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 186

    (49) init -> CAPIGAME DOT INIT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 239


state 187

    (57) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 240
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 188

    (56) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR . expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 241
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 189

    (60) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 242


state 190

    (59) update -> CAPIGAME DOT UPDATE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 243


state 191

    (52) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR . RIGHTPAR
    (53) window_w -> CAPIGAME DOT WINDOW_H LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 244


state 192

    (58) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 245
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 193

    (61) set_color -> SET_COLOR LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 246
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 194

    (110) expression -> exp RELOP . relop_action1 exp relop_action2
    (113) relop_action1 -> .

    EX              reduce using rule 113 (relop_action1 -> .)
    ID              reduce using rule 113 (relop_action1 -> .)
    INT             reduce using rule 113 (relop_action1 -> .)
    FLOAT           reduce using rule 113 (relop_action1 -> .)
    TRUE            reduce using rule 113 (relop_action1 -> .)
    FALSE           reduce using rule 113 (relop_action1 -> .)
    STRING          reduce using rule 113 (relop_action1 -> .)
    CAPIGAME        reduce using rule 113 (relop_action1 -> .)
    TAIL            reduce using rule 113 (relop_action1 -> .)
    LAST            reduce using rule 113 (relop_action1 -> .)
    SET_COLOR       reduce using rule 113 (relop_action1 -> .)
    CREATE_OBJECT   reduce using rule 113 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 113 (relop_action1 -> .)
    TERMS           reduce using rule 113 (relop_action1 -> .)
    LEFTPAR         reduce using rule 113 (relop_action1 -> .)
    COMMA           reduce using rule 113 (relop_action1 -> .)
    RIGHTPAR        reduce using rule 113 (relop_action1 -> .)
    SEMICOLON       reduce using rule 113 (relop_action1 -> .)
    RIGHTBRACKET    reduce using rule 113 (relop_action1 -> .)

    relop_action1                  shift and go to state 247

state 195

    (111) expression -> exp LOGIC . logic_action1 exp logic_action2
    (115) logic_action1 -> .

    EX              reduce using rule 115 (logic_action1 -> .)
    ID              reduce using rule 115 (logic_action1 -> .)
    INT             reduce using rule 115 (logic_action1 -> .)
    FLOAT           reduce using rule 115 (logic_action1 -> .)
    TRUE            reduce using rule 115 (logic_action1 -> .)
    FALSE           reduce using rule 115 (logic_action1 -> .)
    STRING          reduce using rule 115 (logic_action1 -> .)
    CAPIGAME        reduce using rule 115 (logic_action1 -> .)
    TAIL            reduce using rule 115 (logic_action1 -> .)
    LAST            reduce using rule 115 (logic_action1 -> .)
    SET_COLOR       reduce using rule 115 (logic_action1 -> .)
    CREATE_OBJECT   reduce using rule 115 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 115 (logic_action1 -> .)
    TERMS           reduce using rule 115 (logic_action1 -> .)
    LEFTPAR         reduce using rule 115 (logic_action1 -> .)
    COMMA           reduce using rule 115 (logic_action1 -> .)
    RIGHTPAR        reduce using rule 115 (logic_action1 -> .)
    SEMICOLON       reduce using rule 115 (logic_action1 -> .)
    RIGHTBRACKET    reduce using rule 115 (logic_action1 -> .)

    logic_action1                  shift and go to state 248

state 196

    (117) exp -> term exp_action . recexp
    (118) exp -> term exp_action .
    (120) recexp -> . EX add_operator exp

    RELOP           reduce using rule 118 (exp -> term exp_action .)
    LOGIC           reduce using rule 118 (exp -> term exp_action .)
    COMMA           reduce using rule 118 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 118 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 118 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 118 (exp -> term exp_action .)
    EX              shift and go to state 250

    recexp                         shift and go to state 249

state 197

    (121) term -> factor term_action . recterm
    (122) term -> factor term_action .
    (124) recterm -> . TERMS add_operator term

    EX              reduce using rule 122 (term -> factor term_action .)
    RELOP           reduce using rule 122 (term -> factor term_action .)
    LOGIC           reduce using rule 122 (term -> factor term_action .)
    COMMA           reduce using rule 122 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 122 (term -> factor term_action .)
    SEMICOLON       reduce using rule 122 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 122 (term -> factor term_action .)
    TERMS           shift and go to state 252

    recterm                        shift and go to state 251

state 198

    (126) factor -> factor_action1 LEFTPAR . expression RIGHTPAR factor_action2
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    factor_action1                 shift and go to state 164
    expression                     shift and go to state 253
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 199

    (127) factor -> EX cte .

    TERMS           reduce using rule 127 (factor -> EX cte .)
    EX              reduce using rule 127 (factor -> EX cte .)
    RELOP           reduce using rule 127 (factor -> EX cte .)
    LOGIC           reduce using rule 127 (factor -> EX cte .)
    COMMA           reduce using rule 127 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 127 (factor -> EX cte .)
    SEMICOLON       reduce using rule 127 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 127 (factor -> EX cte .)


state 200

    (62) create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 62 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 62 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 62 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 62 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 62 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 62 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 62 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 62 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)


state 201

    (107) recfuncexp -> expression COMMA . recfuncexp
    (107) recfuncexp -> . expression COMMA recfuncexp
    (108) recfuncexp -> . expression recfunc_action1
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 168
    recfuncexp                     shift and go to state 254
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 202

    (108) recfuncexp -> expression recfunc_action1 .

    RIGHTPAR        reduce using rule 108 (recfuncexp -> expression recfunc_action1 .)


state 203

    (63) create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 63 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 63 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 63 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 63 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 63 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 63 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 63 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 63 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)


state 204

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 205

    (10) run -> VOID FUNC run_action1 RUN startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 255


state 206

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 256

state 207

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (14) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CAPIGAME        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    TAIL            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    LAST            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_COLOR       reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_OBJECT   reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 257

state 208

    (92) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 92 (recparams -> ID COLON type COMMA recparams .)


state 209

    (83) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 258

state 210

    (19) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 259


state 211

    (20) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 260


state 212

    (21) recstatement -> statement . recstatement
    (22) recstatement -> statement .
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (64) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (65) assign -> . assign_list EQUAL assign_action2 expression
    (68) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (69) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (73) loop -> . for
    (74) loop -> . while
    (95) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (102) return -> . RETURN expression
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (144) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (139) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (75) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (79) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (143) nestedvalue -> . ID DOT ID
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        reduce using rule 22 (recstatement -> statement .)
    ID              shift and go to state 222
    IF              shift and go to state 224
    VAR             shift and go to state 40
    PRINT           shift and go to state 227
    RETURN          shift and go to state 228
    FOR             shift and go to state 230
    WHILE           shift and go to state 231
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

    statement                      shift and go to state 212
    recstatement                   shift and go to state 261
    assign                         shift and go to state 213
    condition                      shift and go to state 214
    vars                           shift and go to state 215
    loop                           shift and go to state 216
    write                          shift and go to state 217
    return                         shift and go to state 218
    functioncall                   shift and go to state 219
    nestedassign                   shift and go to state 220
    specialfunction                shift and go to state 221
    assign_list                    shift and go to state 223
    for                            shift and go to state 225
    while                          shift and go to state 226
    nestedvalue                    shift and go to state 229
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 213

    (23) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 262


state 214

    (24) statement -> condition .

    ID              reduce using rule 24 (statement -> condition .)
    IF              reduce using rule 24 (statement -> condition .)
    VAR             reduce using rule 24 (statement -> condition .)
    PRINT           reduce using rule 24 (statement -> condition .)
    RETURN          reduce using rule 24 (statement -> condition .)
    FOR             reduce using rule 24 (statement -> condition .)
    WHILE           reduce using rule 24 (statement -> condition .)
    CAPIGAME        reduce using rule 24 (statement -> condition .)
    TAIL            reduce using rule 24 (statement -> condition .)
    LAST            reduce using rule 24 (statement -> condition .)
    SET_COLOR       reduce using rule 24 (statement -> condition .)
    CREATE_OBJECT   reduce using rule 24 (statement -> condition .)
    CREATE_TEXT     reduce using rule 24 (statement -> condition .)
    RIGHTKEY        reduce using rule 24 (statement -> condition .)


state 215

    (25) statement -> vars .

    ID              reduce using rule 25 (statement -> vars .)
    IF              reduce using rule 25 (statement -> vars .)
    VAR             reduce using rule 25 (statement -> vars .)
    PRINT           reduce using rule 25 (statement -> vars .)
    RETURN          reduce using rule 25 (statement -> vars .)
    FOR             reduce using rule 25 (statement -> vars .)
    WHILE           reduce using rule 25 (statement -> vars .)
    CAPIGAME        reduce using rule 25 (statement -> vars .)
    TAIL            reduce using rule 25 (statement -> vars .)
    LAST            reduce using rule 25 (statement -> vars .)
    SET_COLOR       reduce using rule 25 (statement -> vars .)
    CREATE_OBJECT   reduce using rule 25 (statement -> vars .)
    CREATE_TEXT     reduce using rule 25 (statement -> vars .)
    RIGHTKEY        reduce using rule 25 (statement -> vars .)


state 216

    (26) statement -> loop .

    ID              reduce using rule 26 (statement -> loop .)
    IF              reduce using rule 26 (statement -> loop .)
    VAR             reduce using rule 26 (statement -> loop .)
    PRINT           reduce using rule 26 (statement -> loop .)
    RETURN          reduce using rule 26 (statement -> loop .)
    FOR             reduce using rule 26 (statement -> loop .)
    WHILE           reduce using rule 26 (statement -> loop .)
    CAPIGAME        reduce using rule 26 (statement -> loop .)
    TAIL            reduce using rule 26 (statement -> loop .)
    LAST            reduce using rule 26 (statement -> loop .)
    SET_COLOR       reduce using rule 26 (statement -> loop .)
    CREATE_OBJECT   reduce using rule 26 (statement -> loop .)
    CREATE_TEXT     reduce using rule 26 (statement -> loop .)
    RIGHTKEY        reduce using rule 26 (statement -> loop .)


state 217

    (27) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 263


state 218

    (28) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 264


state 219

    (29) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 265


state 220

    (30) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 266


state 221

    (31) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 267


state 222

    (64) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (103) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (139) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (143) nestedvalue -> ID . DOT ID
    (50) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (66) assign_action1 -> .
    (105) function_call_action1 -> .
    (141) list_action1 -> .

    DOT             shift and go to state 121
    EQUAL           reduce using rule 66 (assign_action1 -> .)
    LEFTPAR         reduce using rule 105 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 141 (list_action1 -> .)

    assign_action1                 shift and go to state 268
    function_call_action1          shift and go to state 122
    list_action1                   shift and go to state 269

state 223

    (65) assign -> assign_list . EQUAL assign_action2 expression

    EQUAL           shift and go to state 270


state 224

    (68) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (69) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 271


state 225

    (73) loop -> for .

    ID              reduce using rule 73 (loop -> for .)
    IF              reduce using rule 73 (loop -> for .)
    VAR             reduce using rule 73 (loop -> for .)
    PRINT           reduce using rule 73 (loop -> for .)
    RETURN          reduce using rule 73 (loop -> for .)
    FOR             reduce using rule 73 (loop -> for .)
    WHILE           reduce using rule 73 (loop -> for .)
    CAPIGAME        reduce using rule 73 (loop -> for .)
    TAIL            reduce using rule 73 (loop -> for .)
    LAST            reduce using rule 73 (loop -> for .)
    SET_COLOR       reduce using rule 73 (loop -> for .)
    CREATE_OBJECT   reduce using rule 73 (loop -> for .)
    CREATE_TEXT     reduce using rule 73 (loop -> for .)
    RIGHTKEY        reduce using rule 73 (loop -> for .)


state 226

    (74) loop -> while .

    ID              reduce using rule 74 (loop -> while .)
    IF              reduce using rule 74 (loop -> while .)
    VAR             reduce using rule 74 (loop -> while .)
    PRINT           reduce using rule 74 (loop -> while .)
    RETURN          reduce using rule 74 (loop -> while .)
    FOR             reduce using rule 74 (loop -> while .)
    WHILE           reduce using rule 74 (loop -> while .)
    CAPIGAME        reduce using rule 74 (loop -> while .)
    TAIL            reduce using rule 74 (loop -> while .)
    LAST            reduce using rule 74 (loop -> while .)
    SET_COLOR       reduce using rule 74 (loop -> while .)
    CREATE_OBJECT   reduce using rule 74 (loop -> while .)
    CREATE_TEXT     reduce using rule 74 (loop -> while .)
    RIGHTKEY        reduce using rule 74 (loop -> while .)


state 227

    (95) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 272


state 228

    (102) return -> RETURN . expression
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 273
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 229

    (144) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 274


state 230

    (75) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (87) startscope_action -> .

    LEFTPAR         reduce using rule 87 (startscope_action -> .)

    startscope_action              shift and go to state 275

state 231

    (79) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (87) startscope_action -> .

    LEFTPAR         reduce using rule 87 (startscope_action -> .)

    startscope_action              shift and go to state 276

state 232

    (85) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 277

state 233

    (50) size -> ID DOT SIZE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 50 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 50 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 50 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 50 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 50 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 50 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 50 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 50 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)


state 234

    (51) head -> ID DOT HEAD LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 51 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 51 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 51 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 51 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 51 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 51 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 51 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 51 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)


state 235

    (103) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 278


state 236

    (104) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .

    RIGHTBRACKET    reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    TERMS           reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    EX              reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RELOP           reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    LOGIC           reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    COMMA           reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTPAR        reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    SEMICOLON       reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)


state 237

    (140) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 279


state 238

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression . COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 280


state 239

    (49) init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 49 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 49 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 49 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 49 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 49 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 49 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 49 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 49 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)


state 240

    (57) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 281


state 241

    (56) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 282


state 242

    (60) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 60 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 60 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 60 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 60 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 60 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 60 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 60 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 60 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)


state 243

    (59) update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 59 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 59 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 59 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 59 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 59 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 59 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 59 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 59 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)


state 244

    (52) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .
    (53) window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .

  ! reduce/reduce conflict for RIGHTBRACKET resolved using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
  ! reduce/reduce conflict for TERMS resolved using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
  ! reduce/reduce conflict for EX resolved using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
  ! reduce/reduce conflict for RELOP resolved using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
  ! reduce/reduce conflict for LOGIC resolved using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
  ! reduce/reduce conflict for COMMA resolved using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    EX              reduce using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 52 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)

  ! RIGHTBRACKET    [ reduce using rule 53 (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .) ]
  ! TERMS           [ reduce using rule 53 (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .) ]
  ! EX              [ reduce using rule 53 (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .) ]
  ! RELOP           [ reduce using rule 53 (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .) ]
  ! LOGIC           [ reduce using rule 53 (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .) ]
  ! COMMA           [ reduce using rule 53 (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .) ]
  ! RIGHTPAR        [ reduce using rule 53 (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .) ]
  ! SEMICOLON       [ reduce using rule 53 (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .) ]


state 245

    (58) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 283


state 246

    (61) set_color -> SET_COLOR LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 284


state 247

    (110) expression -> exp RELOP relop_action1 . exp relop_action2
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    RIGHTBRACKET    reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    exp                            shift and go to state 285
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 248

    (111) expression -> exp LOGIC logic_action1 . exp logic_action2
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    RIGHTBRACKET    reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    exp                            shift and go to state 286
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 249

    (117) exp -> term exp_action recexp .

    RELOP           reduce using rule 117 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 117 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 117 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 117 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 117 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 117 (exp -> term exp_action recexp .)


state 250

    (120) recexp -> EX . add_operator exp
    (125) add_operator -> .

    EX              reduce using rule 125 (add_operator -> .)
    ID              reduce using rule 125 (add_operator -> .)
    INT             reduce using rule 125 (add_operator -> .)
    FLOAT           reduce using rule 125 (add_operator -> .)
    TRUE            reduce using rule 125 (add_operator -> .)
    FALSE           reduce using rule 125 (add_operator -> .)
    STRING          reduce using rule 125 (add_operator -> .)
    CAPIGAME        reduce using rule 125 (add_operator -> .)
    TAIL            reduce using rule 125 (add_operator -> .)
    LAST            reduce using rule 125 (add_operator -> .)
    SET_COLOR       reduce using rule 125 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 125 (add_operator -> .)
    CREATE_TEXT     reduce using rule 125 (add_operator -> .)
    TERMS           reduce using rule 125 (add_operator -> .)
    LEFTPAR         reduce using rule 125 (add_operator -> .)
    RELOP           reduce using rule 125 (add_operator -> .)
    LOGIC           reduce using rule 125 (add_operator -> .)
    COMMA           reduce using rule 125 (add_operator -> .)
    RIGHTPAR        reduce using rule 125 (add_operator -> .)
    SEMICOLON       reduce using rule 125 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 125 (add_operator -> .)

    add_operator                   shift and go to state 287

state 251

    (121) term -> factor term_action recterm .

    EX              reduce using rule 121 (term -> factor term_action recterm .)
    RELOP           reduce using rule 121 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 121 (term -> factor term_action recterm .)
    COMMA           reduce using rule 121 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 121 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 121 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 121 (term -> factor term_action recterm .)


state 252

    (124) recterm -> TERMS . add_operator term
    (125) add_operator -> .

    EX              reduce using rule 125 (add_operator -> .)
    ID              reduce using rule 125 (add_operator -> .)
    INT             reduce using rule 125 (add_operator -> .)
    FLOAT           reduce using rule 125 (add_operator -> .)
    TRUE            reduce using rule 125 (add_operator -> .)
    FALSE           reduce using rule 125 (add_operator -> .)
    STRING          reduce using rule 125 (add_operator -> .)
    CAPIGAME        reduce using rule 125 (add_operator -> .)
    TAIL            reduce using rule 125 (add_operator -> .)
    LAST            reduce using rule 125 (add_operator -> .)
    SET_COLOR       reduce using rule 125 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 125 (add_operator -> .)
    CREATE_TEXT     reduce using rule 125 (add_operator -> .)
    TERMS           reduce using rule 125 (add_operator -> .)
    LEFTPAR         reduce using rule 125 (add_operator -> .)
    RELOP           reduce using rule 125 (add_operator -> .)
    LOGIC           reduce using rule 125 (add_operator -> .)
    COMMA           reduce using rule 125 (add_operator -> .)
    RIGHTPAR        reduce using rule 125 (add_operator -> .)
    SEMICOLON       reduce using rule 125 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 125 (add_operator -> .)

    add_operator                   shift and go to state 288

state 253

    (126) factor -> factor_action1 LEFTPAR expression . RIGHTPAR factor_action2

    RIGHTPAR        shift and go to state 289


state 254

    (107) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 107 (recfuncexp -> expression COMMA recfuncexp .)


state 255

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 290


state 256

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 291

state 257

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CAPIGAME        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    TAIL            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    LAST            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_COLOR       reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 258

    (83) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 83 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 83 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 83 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 83 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 83 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 83 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 83 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 83 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 259

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 292


state 260

    (20) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 261

    (21) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 21 (recstatement -> statement recstatement .)


state 262

    (23) statement -> assign SEMICOLON .

    ID              reduce using rule 23 (statement -> assign SEMICOLON .)
    IF              reduce using rule 23 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 23 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 23 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> assign SEMICOLON .)
    CAPIGAME        reduce using rule 23 (statement -> assign SEMICOLON .)
    TAIL            reduce using rule 23 (statement -> assign SEMICOLON .)
    LAST            reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_COLOR       reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> assign SEMICOLON .)


state 263

    (27) statement -> write SEMICOLON .

    ID              reduce using rule 27 (statement -> write SEMICOLON .)
    IF              reduce using rule 27 (statement -> write SEMICOLON .)
    VAR             reduce using rule 27 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> write SEMICOLON .)
    FOR             reduce using rule 27 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> write SEMICOLON .)
    CAPIGAME        reduce using rule 27 (statement -> write SEMICOLON .)
    TAIL            reduce using rule 27 (statement -> write SEMICOLON .)
    LAST            reduce using rule 27 (statement -> write SEMICOLON .)
    SET_COLOR       reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_OBJECT   reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 27 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 27 (statement -> write SEMICOLON .)


state 264

    (28) statement -> return SEMICOLON .

    ID              reduce using rule 28 (statement -> return SEMICOLON .)
    IF              reduce using rule 28 (statement -> return SEMICOLON .)
    VAR             reduce using rule 28 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 28 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> return SEMICOLON .)
    FOR             reduce using rule 28 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> return SEMICOLON .)
    CAPIGAME        reduce using rule 28 (statement -> return SEMICOLON .)
    TAIL            reduce using rule 28 (statement -> return SEMICOLON .)
    LAST            reduce using rule 28 (statement -> return SEMICOLON .)
    SET_COLOR       reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_OBJECT   reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 28 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 28 (statement -> return SEMICOLON .)


state 265

    (29) statement -> functioncall SEMICOLON .

    ID              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CAPIGAME        reduce using rule 29 (statement -> functioncall SEMICOLON .)
    TAIL            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    LAST            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_COLOR       reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_OBJECT   reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 29 (statement -> functioncall SEMICOLON .)


state 266

    (30) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CAPIGAME        reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    TAIL            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    LAST            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_COLOR       reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 30 (statement -> nestedassign SEMICOLON .)


state 267

    (31) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CAPIGAME        reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    TAIL            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    LAST            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_COLOR       reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_OBJECT   reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 31 (statement -> specialfunction SEMICOLON .)


state 268

    (64) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 293


state 269

    (139) assign_list -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 294


state 270

    (65) assign -> assign_list EQUAL . assign_action2 expression
    (67) assign_action2 -> .

    EX              reduce using rule 67 (assign_action2 -> .)
    ID              reduce using rule 67 (assign_action2 -> .)
    INT             reduce using rule 67 (assign_action2 -> .)
    FLOAT           reduce using rule 67 (assign_action2 -> .)
    TRUE            reduce using rule 67 (assign_action2 -> .)
    FALSE           reduce using rule 67 (assign_action2 -> .)
    STRING          reduce using rule 67 (assign_action2 -> .)
    CAPIGAME        reduce using rule 67 (assign_action2 -> .)
    TAIL            reduce using rule 67 (assign_action2 -> .)
    LAST            reduce using rule 67 (assign_action2 -> .)
    SET_COLOR       reduce using rule 67 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 67 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 67 (assign_action2 -> .)
    RELOP           reduce using rule 67 (assign_action2 -> .)
    LOGIC           reduce using rule 67 (assign_action2 -> .)
    TERMS           reduce using rule 67 (assign_action2 -> .)
    LEFTPAR         reduce using rule 67 (assign_action2 -> .)
    SEMICOLON       reduce using rule 67 (assign_action2 -> .)

    assign_action2                 shift and go to state 295

state 271

    (68) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (69) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 296
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 272

    (95) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (96) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (97) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (98) recwrite -> . expression action_recwrite_exp
    (99) recwrite -> . STRING action_recwrite_cte
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 299
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    recwrite                       shift and go to state 297
    expression                     shift and go to state 298
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 273

    (102) return -> RETURN expression .

    SEMICOLON       reduce using rule 102 (return -> RETURN expression .)


state 274

    (144) nestedassign -> nestedvalue EQUAL . expression
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    nestedvalue                    shift and go to state 75
    expression                     shift and go to state 300
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 275

    (75) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 301


state 276

    (79) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (80) while_action1 -> .

    LEFTPAR         reduce using rule 80 (while_action1 -> .)

    while_action1                  shift and go to state 302

state 277

    (85) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 85 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 85 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 85 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 85 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 85 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 85 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 85 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 85 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 278

    (103) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 103 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 103 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    EX              reduce using rule 103 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 103 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 103 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 103 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 103 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 103 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)


state 279

    (140) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    RIGHTBRACKET    reduce using rule 140 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    TERMS           reduce using rule 140 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    EX              reduce using rule 140 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RELOP           reduce using rule 140 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    LOGIC           reduce using rule 140 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    COMMA           reduce using rule 140 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RIGHTPAR        reduce using rule 140 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    SEMICOLON       reduce using rule 140 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 280

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 303
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 281

    (57) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 304
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 282

    (56) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 56 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 56 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 56 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 56 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 56 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 56 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 56 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 56 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)


state 283

    (58) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 305
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 284

    (61) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 306
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 285

    (110) expression -> exp RELOP relop_action1 exp . relop_action2
    (114) relop_action2 -> .

    COMMA           reduce using rule 114 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 114 (relop_action2 -> .)
    SEMICOLON       reduce using rule 114 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 114 (relop_action2 -> .)

    relop_action2                  shift and go to state 307

state 286

    (111) expression -> exp LOGIC logic_action1 exp . logic_action2
    (116) logic_action2 -> .

    COMMA           reduce using rule 116 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 116 (logic_action2 -> .)
    SEMICOLON       reduce using rule 116 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 116 (logic_action2 -> .)

    logic_action2                  shift and go to state 308

state 287

    (120) recexp -> EX add_operator . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    RIGHTBRACKET    reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    exp                            shift and go to state 309
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 288

    (124) recterm -> TERMS add_operator . term
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    RIGHTBRACKET    reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    term                           shift and go to state 310
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 289

    (126) factor -> factor_action1 LEFTPAR expression RIGHTPAR . factor_action2
    (130) factor_action2 -> .

    TERMS           reduce using rule 130 (factor_action2 -> .)
    EX              reduce using rule 130 (factor_action2 -> .)
    RELOP           reduce using rule 130 (factor_action2 -> .)
    LOGIC           reduce using rule 130 (factor_action2 -> .)
    COMMA           reduce using rule 130 (factor_action2 -> .)
    RIGHTPAR        reduce using rule 130 (factor_action2 -> .)
    SEMICOLON       reduce using rule 130 (factor_action2 -> .)
    RIGHTBRACKET    reduce using rule 130 (factor_action2 -> .)

    factor_action2                 shift and go to state 311

state 290

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 312

state 291

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .

    VOID            reduce using rule 8 (start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 292

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 293

    (64) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (67) assign_action2 -> .

    EX              reduce using rule 67 (assign_action2 -> .)
    ID              reduce using rule 67 (assign_action2 -> .)
    INT             reduce using rule 67 (assign_action2 -> .)
    FLOAT           reduce using rule 67 (assign_action2 -> .)
    TRUE            reduce using rule 67 (assign_action2 -> .)
    FALSE           reduce using rule 67 (assign_action2 -> .)
    STRING          reduce using rule 67 (assign_action2 -> .)
    CAPIGAME        reduce using rule 67 (assign_action2 -> .)
    TAIL            reduce using rule 67 (assign_action2 -> .)
    LAST            reduce using rule 67 (assign_action2 -> .)
    SET_COLOR       reduce using rule 67 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 67 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 67 (assign_action2 -> .)
    RELOP           reduce using rule 67 (assign_action2 -> .)
    LOGIC           reduce using rule 67 (assign_action2 -> .)
    TERMS           reduce using rule 67 (assign_action2 -> .)
    LEFTPAR         reduce using rule 67 (assign_action2 -> .)
    SEMICOLON       reduce using rule 67 (assign_action2 -> .)

    assign_action2                 shift and go to state 313

state 294

    (139) assign_list -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTBRACKET    reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 314
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 295

    (65) assign -> assign_list EQUAL assign_action2 . expression
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 315
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 296

    (68) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (69) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (70) condition_action1 -> .

    RIGHTPAR        reduce using rule 70 (condition_action1 -> .)

    condition_action1              shift and go to state 316

state 297

    (95) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 317


state 298

    (96) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (98) recwrite -> expression . action_recwrite_exp
    (100) action_recwrite_exp -> .

    COMMA           reduce using rule 100 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 100 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 318

state 299

    (97) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (99) recwrite -> STRING . action_recwrite_cte
    (156) string -> STRING .
    (101) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 101 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 101 (action_recwrite_cte -> .)
    TERMS           reduce using rule 156 (string -> STRING .)
    EX              reduce using rule 156 (string -> STRING .)
    RELOP           reduce using rule 156 (string -> STRING .)
    LOGIC           reduce using rule 156 (string -> STRING .)
    COMMA           reduce using rule 101 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 101 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 156 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 156 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 319

state 300

    (144) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 144 (nestedassign -> nestedvalue EQUAL expression .)


state 301

    (75) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (64) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (65) assign -> . assign_list EQUAL assign_action2 expression
    (139) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 321

    assign                         shift and go to state 320
    assign_list                    shift and go to state 223

state 302

    (79) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 322


state 303

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 323


state 304

    (57) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 324


state 305

    (58) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 325


state 306

    (61) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 326


state 307

    (110) expression -> exp RELOP relop_action1 exp relop_action2 .

    COMMA           reduce using rule 110 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 110 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    SEMICOLON       reduce using rule 110 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 110 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 308

    (111) expression -> exp LOGIC logic_action1 exp logic_action2 .

    COMMA           reduce using rule 111 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 111 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    SEMICOLON       reduce using rule 111 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 111 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 309

    (120) recexp -> EX add_operator exp .

    RELOP           reduce using rule 120 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 120 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 120 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 120 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 120 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 120 (recexp -> EX add_operator exp .)


state 310

    (124) recterm -> TERMS add_operator term .

    EX              reduce using rule 124 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 124 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 124 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 124 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 124 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 124 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 124 (recterm -> TERMS add_operator term .)


state 311

    (126) factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .

    TERMS           reduce using rule 126 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    EX              reduce using rule 126 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RELOP           reduce using rule 126 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    LOGIC           reduce using rule 126 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    COMMA           reduce using rule 126 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTPAR        reduce using rule 126 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    SEMICOLON       reduce using rule 126 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTBRACKET    reduce using rule 126 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)


state 312

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 327

state 313

    (64) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 328
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 314

    (139) assign_list -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (142) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 142 (list_action_3 -> .)

    list_action_3                  shift and go to state 329

state 315

    (65) assign -> assign_list EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 65 (assign -> assign_list EQUAL assign_action2 expression .)


state 316

    (68) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (69) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 330


state 317

    (95) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 95 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 318

    (96) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (98) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 331
    RIGHTPAR        reduce using rule 98 (recwrite -> expression action_recwrite_exp .)


state 319

    (97) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (99) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 332
    RIGHTPAR        reduce using rule 99 (recwrite -> STRING action_recwrite_cte .)


state 320

    (75) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 333


state 321

    (64) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (139) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (66) assign_action1 -> .
    (141) list_action1 -> .

    EQUAL           reduce using rule 66 (assign_action1 -> .)
    LEFTBRACKET     reduce using rule 141 (list_action1 -> .)

    assign_action1                 shift and go to state 268
    list_action1                   shift and go to state 269

state 322

    (79) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 334
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 323

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 335
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 324

    (57) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 336
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 325

    (58) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 58 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 58 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 58 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 58 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 58 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 58 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 58 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 58 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 326

    (61) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 61 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 61 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 61 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 61 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 61 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 61 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 61 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 61 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 327

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .

    RIGHTKEY        reduce using rule 10 (run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 328

    (64) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 64 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 329

    (139) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 337


state 330

    (68) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (69) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 338

state 331

    (96) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (96) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (97) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (98) recwrite -> . expression action_recwrite_exp
    (99) recwrite -> . STRING action_recwrite_cte
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 299
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 298
    recwrite                       shift and go to state 339
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 332

    (97) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (96) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (97) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (98) recwrite -> . expression action_recwrite_exp
    (99) recwrite -> . STRING action_recwrite_cte
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 299
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    recwrite                       shift and go to state 340
    expression                     shift and go to state 298
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 333

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (76) for_action1 -> .

    EX              reduce using rule 76 (for_action1 -> .)
    ID              reduce using rule 76 (for_action1 -> .)
    INT             reduce using rule 76 (for_action1 -> .)
    FLOAT           reduce using rule 76 (for_action1 -> .)
    TRUE            reduce using rule 76 (for_action1 -> .)
    FALSE           reduce using rule 76 (for_action1 -> .)
    STRING          reduce using rule 76 (for_action1 -> .)
    CAPIGAME        reduce using rule 76 (for_action1 -> .)
    TAIL            reduce using rule 76 (for_action1 -> .)
    LAST            reduce using rule 76 (for_action1 -> .)
    SET_COLOR       reduce using rule 76 (for_action1 -> .)
    CREATE_OBJECT   reduce using rule 76 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 76 (for_action1 -> .)
    SEMICOLON       reduce using rule 76 (for_action1 -> .)
    RELOP           reduce using rule 76 (for_action1 -> .)
    LOGIC           reduce using rule 76 (for_action1 -> .)
    TERMS           reduce using rule 76 (for_action1 -> .)
    LEFTPAR         reduce using rule 76 (for_action1 -> .)

    for_action1                    shift and go to state 341

state 334

    (79) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (81) while_action2 -> .

    RIGHTPAR        reduce using rule 81 (while_action2 -> .)

    while_action2                  shift and go to state 342

state 335

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 343


state 336

    (57) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 344


state 337

    (139) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    EQUAL           reduce using rule 139 (assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 338

    (68) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (69) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (71) condition_action2 -> .
    (72) condition_action3 -> .

    ID              reduce using rule 71 (condition_action2 -> .)
    IF              reduce using rule 71 (condition_action2 -> .)
    VAR             reduce using rule 71 (condition_action2 -> .)
    PRINT           reduce using rule 71 (condition_action2 -> .)
    RETURN          reduce using rule 71 (condition_action2 -> .)
    FOR             reduce using rule 71 (condition_action2 -> .)
    WHILE           reduce using rule 71 (condition_action2 -> .)
    CAPIGAME        reduce using rule 71 (condition_action2 -> .)
    TAIL            reduce using rule 71 (condition_action2 -> .)
    LAST            reduce using rule 71 (condition_action2 -> .)
    SET_COLOR       reduce using rule 71 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 71 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 71 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 71 (condition_action2 -> .)
    ELSE            reduce using rule 72 (condition_action3 -> .)

    condition_action2              shift and go to state 345
    condition_action3              shift and go to state 346

state 339

    (96) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 96 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 340

    (97) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 97 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 341

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    SEMICOLON       reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 347
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 342

    (79) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 348


state 343

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    COMMA           reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 349
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 344

    (57) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 57 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 57 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 57 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 57 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 57 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 57 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 57 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 57 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 345

    (68) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CAPIGAME        reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    TAIL            reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    LAST            reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_COLOR       reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_OBJECT   reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 68 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 346

    (69) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 350


state 347

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (77) for_action2 -> .

    SEMICOLON       reduce using rule 77 (for_action2 -> .)

    for_action2                    shift and go to state 351

state 348

    (79) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 352

state 349

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 353


state 350

    (69) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 354

state 351

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 355


state 352

    (79) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (82) while_action3 -> .

    ID              reduce using rule 82 (while_action3 -> .)
    IF              reduce using rule 82 (while_action3 -> .)
    VAR             reduce using rule 82 (while_action3 -> .)
    PRINT           reduce using rule 82 (while_action3 -> .)
    RETURN          reduce using rule 82 (while_action3 -> .)
    FOR             reduce using rule 82 (while_action3 -> .)
    WHILE           reduce using rule 82 (while_action3 -> .)
    CAPIGAME        reduce using rule 82 (while_action3 -> .)
    TAIL            reduce using rule 82 (while_action3 -> .)
    LAST            reduce using rule 82 (while_action3 -> .)
    SET_COLOR       reduce using rule 82 (while_action3 -> .)
    CREATE_OBJECT   reduce using rule 82 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 82 (while_action3 -> .)
    RIGHTKEY        reduce using rule 82 (while_action3 -> .)

    while_action3                  shift and go to state 356

state 353

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (110) expression -> . exp RELOP relop_action1 exp relop_action2
    (111) expression -> . exp LOGIC logic_action1 exp logic_action2
    (112) expression -> . exp
    (117) exp -> . term exp_action recexp
    (118) exp -> . term exp_action
    (121) term -> . factor term_action recterm
    (122) term -> . factor term_action
    (126) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (127) factor -> . EX cte
    (128) factor -> . cte
    (129) factor_action1 -> .
    (145) cte -> .
    (146) cte -> . id
    (147) cte -> . int
    (148) cte -> . float
    (149) cte -> . bool
    (150) cte -> . string
    (151) cte -> . nestedvalue
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (143) nestedvalue -> . ID DOT ID
    (103) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . set_color
    (46) specialfunction -> . create_object
    (47) specialfunction -> . create_text
    (48) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (49) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (50) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (51) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (54) tail -> . TAIL LEFTPAR RIGHTPAR
    (55) last -> . LAST LEFTPAR RIGHTPAR
    (57) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (56) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (60) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (59) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (52) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (53) window_w -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (58) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (62) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (63) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 165
    LEFTPAR         reduce using rule 129 (factor_action1 -> .)
    TERMS           reduce using rule 145 (cte -> .)
    RELOP           reduce using rule 145 (cte -> .)
    LOGIC           reduce using rule 145 (cte -> .)
    RIGHTPAR        reduce using rule 145 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    SET_COLOR       shift and go to state 104
    CREATE_OBJECT   shift and go to state 105
    CREATE_TEXT     shift and go to state 106

  ! EX              [ reduce using rule 145 (cte -> .) ]

    expression                     shift and go to state 357
    exp                            shift and go to state 161
    term                           shift and go to state 162
    factor                         shift and go to state 163
    factor_action1                 shift and go to state 164
    cte                            shift and go to state 166
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    set_color                      shift and go to state 98
    create_object                  shift and go to state 99
    create_text                    shift and go to state 100

state 354

    (69) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (71) condition_action2 -> .

    ID              reduce using rule 71 (condition_action2 -> .)
    IF              reduce using rule 71 (condition_action2 -> .)
    VAR             reduce using rule 71 (condition_action2 -> .)
    PRINT           reduce using rule 71 (condition_action2 -> .)
    RETURN          reduce using rule 71 (condition_action2 -> .)
    FOR             reduce using rule 71 (condition_action2 -> .)
    WHILE           reduce using rule 71 (condition_action2 -> .)
    CAPIGAME        reduce using rule 71 (condition_action2 -> .)
    TAIL            reduce using rule 71 (condition_action2 -> .)
    LAST            reduce using rule 71 (condition_action2 -> .)
    SET_COLOR       reduce using rule 71 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 71 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 71 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 71 (condition_action2 -> .)

    condition_action2              shift and go to state 358

state 355

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (64) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (65) assign -> . assign_list EQUAL assign_action2 expression
    (139) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 321

    assign                         shift and go to state 359
    assign_list                    shift and go to state 223

state 356

    (79) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CAPIGAME        reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    TAIL            reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    LAST            reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_COLOR       reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_OBJECT   reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 79 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 357

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 360


state 358

    (69) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CAPIGAME        reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    TAIL            reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    LAST            reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_COLOR       reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_OBJECT   reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 359

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 361


state 360

    (48) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 48 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 48 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 48 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 48 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 48 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 48 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 48 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 48 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 361

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 362


state 362

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 363

state 363

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (78) for_action3 -> .

    ID              reduce using rule 78 (for_action3 -> .)
    IF              reduce using rule 78 (for_action3 -> .)
    VAR             reduce using rule 78 (for_action3 -> .)
    PRINT           reduce using rule 78 (for_action3 -> .)
    RETURN          reduce using rule 78 (for_action3 -> .)
    FOR             reduce using rule 78 (for_action3 -> .)
    WHILE           reduce using rule 78 (for_action3 -> .)
    CAPIGAME        reduce using rule 78 (for_action3 -> .)
    TAIL            reduce using rule 78 (for_action3 -> .)
    LAST            reduce using rule 78 (for_action3 -> .)
    SET_COLOR       reduce using rule 78 (for_action3 -> .)
    CREATE_OBJECT   reduce using rule 78 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 78 (for_action3 -> .)
    RIGHTKEY        reduce using rule 78 (for_action3 -> .)

    for_action3                    shift and go to state 364

state 364

    (75) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CAPIGAME        reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    TAIL            reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    LAST            reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_COLOR       reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_OBJECT   reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 75 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EX in state 127 resolved as shift
WARNING: shift/reduce conflict for EX in state 128 resolved as shift
WARNING: shift/reduce conflict for EX in state 129 resolved as shift
WARNING: shift/reduce conflict for EX in state 136 resolved as shift
WARNING: shift/reduce conflict for VAR in state 137 resolved as shift
WARNING: shift/reduce conflict for EX in state 149 resolved as shift
WARNING: shift/reduce conflict for EX in state 183 resolved as shift
WARNING: shift/reduce conflict for RIGHTPAR in state 183 resolved as shift
WARNING: shift/reduce conflict for EX in state 185 resolved as shift
WARNING: shift/reduce conflict for EX in state 187 resolved as shift
WARNING: shift/reduce conflict for EX in state 188 resolved as shift
WARNING: shift/reduce conflict for EX in state 192 resolved as shift
WARNING: shift/reduce conflict for EX in state 193 resolved as shift
WARNING: shift/reduce conflict for EX in state 198 resolved as shift
WARNING: shift/reduce conflict for EX in state 201 resolved as shift
WARNING: shift/reduce conflict for VAR in state 207 resolved as shift
WARNING: shift/reduce conflict for EX in state 228 resolved as shift
WARNING: shift/reduce conflict for EX in state 247 resolved as shift
WARNING: shift/reduce conflict for EX in state 248 resolved as shift
WARNING: shift/reduce conflict for EX in state 271 resolved as shift
WARNING: shift/reduce conflict for EX in state 272 resolved as shift
WARNING: shift/reduce conflict for EX in state 274 resolved as shift
WARNING: shift/reduce conflict for EX in state 280 resolved as shift
WARNING: shift/reduce conflict for EX in state 281 resolved as shift
WARNING: shift/reduce conflict for EX in state 283 resolved as shift
WARNING: shift/reduce conflict for EX in state 284 resolved as shift
WARNING: shift/reduce conflict for EX in state 287 resolved as shift
WARNING: shift/reduce conflict for EX in state 288 resolved as shift
WARNING: shift/reduce conflict for EX in state 294 resolved as shift
WARNING: shift/reduce conflict for EX in state 295 resolved as shift
WARNING: shift/reduce conflict for EX in state 313 resolved as shift
WARNING: shift/reduce conflict for EX in state 322 resolved as shift
WARNING: shift/reduce conflict for EX in state 323 resolved as shift
WARNING: shift/reduce conflict for EX in state 324 resolved as shift
WARNING: shift/reduce conflict for EX in state 331 resolved as shift
WARNING: shift/reduce conflict for EX in state 332 resolved as shift
WARNING: shift/reduce conflict for EX in state 341 resolved as shift
WARNING: shift/reduce conflict for EX in state 343 resolved as shift
WARNING: shift/reduce conflict for EX in state 353 resolved as shift
WARNING: reduce/reduce conflict in state 244 resolved using rule (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR)
WARNING: rejected rule (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR) in state 244
WARNING: reduce/reduce conflict in state 299 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 299
WARNING: Rule (window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR) is never reduced
