@ Global Definition of Variables

global : {
    var enemy_x:list|int|[3]; @ List used for x positions of our enemies
    var enemy_x_change:list|int|[3]; @ List used for our x change of our enemies
    var enemy_y:list|int|[3]; @ List used for y posiitions of our enemies
    var enemy_y_change:list|int|[3]; @ List used for our y change of our enemies
    var event: string; @ This variable is to store the current event
    var x_player:int; @ X position of the player
    var y_player:int; @ Y position of the player
    var enemy_init_x:int; @ Enemy init x position
    var enemy_init_y:int; @ Enemy init y position
    var bullet_state:string; @ Bullet state (ready or fired)
    var x_bullet:int; @ X position of the bullet 
    var y_bullet:int; @ Y position of the bullet
    var i:int; @ Enemy for loop increment
    var p:int; @ Enemy position setup for loop increment
    var o:int; @ Enemy position setup for loop increment in game over
    var collision:int; @ Used to determine collision
    var score:int; @ Score of the videogame
    var numEnemies:int; @ Number of enemies
};

@ Function used to draw a player
void func drawPlayer(x:int, y:int):{
    capigame.draw("GREEN",x,y,50,50);
};
@ Function used to draw enemies
void func drawEnemy(param1:int, param2:int):{
    capigame.draw("BLUE",param1,param2,50,50);
};
@ Function used to fire a bullet
void func fireBullet(x_bullet:int, y_bullet:int):{
    capigame.draw("GREEN",x_bullet,y_bullet,20,20);
};
@ Function used to determine if the bullet collided with an enemy
int func isCollision(e_x:int,e_y:int,b_x:int,b_y:int):{
    var distance:float;
    distance = sqrt(pow(e_x - b_x, 2) + pow(e_y - b_y, 2));
    if(distance < 50):{
        return 1;
    };
    return 0;
};

@ Definition of main module
main :{
    @ Definition of start function - this function runs at the start of the program
    void func start():{
       @ We init the game
       capigame.init();
       @ We setup the dimension of the window
       capigame.set_dimension(700,500);
       @ We set the title of the window
       capigame.set_title("Space Invaders");
       @ We set the position of the player
       x_player = capigame.window_w() - 300;
       y_player = capigame.window_h() - 100;
       @ We set the position of the enemy
       enemy_init_x = 100;
       enemy_init_y = 100;
       @ We set the number of enemies
       numEnemies = 3;
       @ We fill out the array of enemy positions
       for(p = 0; p < numEnemies; p = p + 1;):{
            enemy_x[p] = p * 100;
            enemy_y[p] = enemy_init_y - 50;
            enemy_x_change[p] = 1;
            enemy_y_change[p] = 10;
       };
       @ We set the score to 0
       score = 0;
       @ We set the position of the bullet
       x_bullet = x_player;
       y_bullet = y_player;
   };

    @ Definition of run function - this function is the game infinite loop
    void func run():{
        capigame.set_fill(255,0,0);
        event = capigame.get_event();
        drawPlayer(x_player,y_player);
        create_text("SCORE", "WHITE", 0,0);
        create_text(score, "WHITE", 65,0);
        for(i = 0; i < enemy_x.size(); i = i + 1;):{
            enemy_x[i] =  enemy_x[i] + enemy_x_change[i];

            if(enemy_y[i] > 500):{
                for(o = 0; o < numEnemies; o = o + 1;):{
                    enemy_x[o] = 9000;
                };
                create_text("GAME OVER", "BLUE", capigame.window_w() / 2 - 50,250);
            };

            if(enemy_x[i] <= 0):{
                enemy_x_change[i] = 1;
                enemy_y[i] = enemy_y[i] + enemy_y_change[i];
            };else:{
                if(enemy_x[i] >= 500):{
                    enemy_x_change[i] = -1;
                    enemy_y[i] = enemy_y[i] + enemy_y_change[i];
                };
            };


            drawEnemy(enemy_x[i], enemy_y[i]);
            collision = isCollision(enemy_x[i], enemy_y[i], x_bullet,y_bullet);
            if(collision == 1):{
                enemy_x[i] = capigame.rand(50,350);
                enemy_y[i] = capigame.rand(50,350);
                bullet_state = "ready";
                x_bullet = x_player + 16;
                y_bullet = y_player;
                score = score + 1;
                print("Shot");
            };
        };

        if(event == "KEYESCAPE"):{
            quit();
        };
        print(event);
        if(event == "KEYA"):{
            x_player = x_player - 1;
        };
        if(event == "KEYRIGHT"):{
            x_player = x_player + 1;
        };
        if(event == "KEYUP"):{
          bullet_state = "fire";
          x_bullet = x_player + 16;
        };
        if(x_player <= 0):{
            x_player = 0;
        };else:{
            if(x_player >= capigame.window_w()- 50):{
                x_player = capigame.window_w()- 50;
            };
        };
        
        if(y_bullet <= 0):{
            bullet_state = "ready";
            x_bullet = x_player;
            y_bullet = y_player;
        };

        if(bullet_state == "fire"):{
            fireBullet(x_bullet, y_bullet);
            y_bullet = y_bullet - 2;
        };
        
        capigame.update();
    };
};