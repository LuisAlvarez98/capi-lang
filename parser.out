Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    LIST
    OBJECT

Grammar

Rule 0     S' -> capi
Rule 1     capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 2     capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 3     capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 4     capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 5     capi_action1 -> <empty>
Rule 6     capi_action2 -> <empty>
Rule 7     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 8     start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 9     start_action1 -> <empty>
Rule 10    run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 11    run_action1 -> <empty>
Rule 12    main_cont -> <empty>
Rule 13    vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 14    vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 15    vars -> VAR recids COLON type SEMICOLON vars
Rule 16    vars -> VAR recids COLON type SEMICOLON
Rule 17    recids -> ID
Rule 18    recids -> ID COMMA recids
Rule 19    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 20    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 21    recstatement -> statement recstatement
Rule 22    recstatement -> statement
Rule 23    statement -> assign SEMICOLON
Rule 24    statement -> condition
Rule 25    statement -> vars
Rule 26    statement -> loop
Rule 27    statement -> write SEMICOLON
Rule 28    statement -> return SEMICOLON
Rule 29    statement -> functioncall SEMICOLON
Rule 30    statement -> nestedassign SEMICOLON
Rule 31    statement -> specialfunction SEMICOLON
Rule 32    specialfunction -> draw
Rule 33    specialfunction -> init
Rule 34    specialfunction -> size
Rule 35    specialfunction -> head
Rule 36    specialfunction -> tail
Rule 37    specialfunction -> last
Rule 38    specialfunction -> set_fill
Rule 39    specialfunction -> set_title
Rule 40    specialfunction -> get_event
Rule 41    specialfunction -> update
Rule 42    specialfunction -> window_h
Rule 43    specialfunction -> window_w
Rule 44    specialfunction -> set_dimension
Rule 45    specialfunction -> create_text
Rule 46    specialfunction -> pow
Rule 47    specialfunction -> sqrt
Rule 48    pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
Rule 49    pow_action1 -> <empty>
Rule 50    sqrt -> SQRT LEFTPAR expression RIGHTPAR
Rule 51    draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 52    init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR
Rule 53    size -> ID DOT SIZE LEFTPAR RIGHTPAR
Rule 54    head -> ID DOT HEAD LEFTPAR RIGHTPAR
Rule 55    window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
Rule 56    window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
Rule 57    tail -> TAIL LEFTPAR RIGHTPAR
Rule 58    last -> LAST LEFTPAR RIGHTPAR
Rule 59    set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
Rule 60    set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 61    set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 62    update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
Rule 63    get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
Rule 64    create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 65    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 66    assign -> assign_list EQUAL assign_action2 expression
Rule 67    assign_action1 -> <empty>
Rule 68    assign_action2 -> <empty>
Rule 69    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 70    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 71    condition_action1 -> <empty>
Rule 72    condition_action2 -> <empty>
Rule 73    condition_action3 -> <empty>
Rule 74    loop -> for
Rule 75    loop -> while
Rule 76    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 77    for_action1 -> <empty>
Rule 78    for_action2 -> <empty>
Rule 79    for_action3 -> <empty>
Rule 80    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 81    while_action1 -> <empty>
Rule 82    while_action2 -> <empty>
Rule 83    while_action3 -> <empty>
Rule 84    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 85    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 86    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 87    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 88    startscope_action -> <empty>
Rule 89    function_action1 -> <empty>
Rule 90    function_action2 -> <empty>
Rule 91    function_action3 -> <empty>
Rule 92    recparams -> ID COLON type
Rule 93    recparams -> ID COLON type COMMA recparams
Rule 94    recfunc -> function recfunc
Rule 95    recfunc -> function
Rule 96    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 97    recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 98    recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 99    recwrite -> expression action_recwrite_exp
Rule 100   recwrite -> STRING action_recwrite_cte
Rule 101   action_recwrite_exp -> <empty>
Rule 102   action_recwrite_cte -> <empty>
Rule 103   return -> RETURN expression
Rule 104   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
Rule 105   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
Rule 106   function_call_action1 -> <empty>
Rule 107   function_call_action2 -> <empty>
Rule 108   recfuncexp -> expression COMMA recfuncexp
Rule 109   recfuncexp -> expression recfunc_action1
Rule 110   recfunc_action1 -> <empty>
Rule 111   expression -> exp RELOP relop_action1 exp relop_action2
Rule 112   expression -> exp LOGIC logic_action1 exp logic_action2
Rule 113   expression -> exp
Rule 114   relop_action1 -> <empty>
Rule 115   relop_action2 -> <empty>
Rule 116   logic_action1 -> <empty>
Rule 117   logic_action2 -> <empty>
Rule 118   exp -> term exp_action recexp
Rule 119   exp -> term exp_action
Rule 120   exp_action -> <empty>
Rule 121   recexp -> EX add_operator exp
Rule 122   term -> factor term_action recterm
Rule 123   term -> factor term_action
Rule 124   term_action -> <empty>
Rule 125   recterm -> TERMS add_operator term
Rule 126   add_operator -> <empty>
Rule 127   factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2
Rule 128   factor -> EX cte
Rule 129   factor -> cte
Rule 130   factor_action1 -> <empty>
Rule 131   factor_action2 -> <empty>
Rule 132   type -> primitivetype
Rule 133   type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
Rule 134   action_list1 -> <empty>
Rule 135   primitivetype -> TINT
Rule 136   primitivetype -> TFLOAT
Rule 137   primitivetype -> TSTRING
Rule 138   primitivetype -> TBOOL
Rule 139   primitivetype -> TOBJECT
Rule 140   assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 141   listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 142   list_action1 -> <empty>
Rule 143   list_action_3 -> <empty>
Rule 144   nestedvalue -> ID DOT ID
Rule 145   nestedassign -> nestedvalue EQUAL expression
Rule 146   cte -> <empty>
Rule 147   cte -> id
Rule 148   cte -> int
Rule 149   cte -> float
Rule 150   cte -> bool
Rule 151   cte -> string
Rule 152   cte -> nestedvalue
Rule 153   cte -> functioncall
Rule 154   cte -> listaccess
Rule 155   cte -> specialfunction
Rule 156   id -> ID
Rule 157   string -> STRING
Rule 158   int -> INT
Rule 159   float -> FLOAT
Rule 160   bool -> TRUE
Rule 161   bool -> FALSE

Terminals, with rules where they appear

BAR                  : 133 133
CAPIGAME             : 51 52 55 56 59 60 61 62 63
COLON                : 1 2 3 4 7 13 14 15 16 19 20 92 93
COMMA                : 18 48 51 51 51 51 60 60 61 64 64 64 93 97 98 108
COMMENT              : 
CREATE_TEXT          : 64
DOT                  : 51 52 53 54 55 56 59 60 61 62 63 144
DRAW                 : 51
ELSE                 : 70
EQUAL                : 13 14 65 66 145
EX                   : 121 128
FALSE                : 161
FLOAT                : 159
FOR                  : 76
FUNC                 : 8 10 84 85 86 87
GET_EVENT            : 63
GLOBAL               : 7
HEAD                 : 54
ID                   : 17 18 53 54 65 84 85 86 87 92 93 104 105 140 141 144 144 156
IF                   : 69 70
INIT                 : 52
INT                  : 158
LAST                 : 58
LEFTBRACKET          : 133 140 141
LEFTKEY              : 1 2 3 4 7 19 20
LEFTPAR              : 8 10 48 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 69 70 76 80 84 85 86 87 96 104 105 127
LIST                 : 
LOGIC                : 112
MAIN                 : 1 2 3 4
OBJECT               : 
POW                  : 48
PRINT                : 96
RELOP                : 111
RETURN               : 103
RIGHTBRACKET         : 133 140 141
RIGHTKEY             : 1 2 3 4 7 19 20
RIGHTPAR             : 8 10 48 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 69 70 76 80 84 85 86 87 96 104 105 127
RUN                  : 10
SEMICOLON            : 1 2 3 4 7 13 14 15 16 19 20 23 27 28 29 30 31 76 76 76
SET_DIMENSION        : 61
SET_FILL             : 60
SET_TITLE            : 59
SIZE                 : 53
SQRT                 : 50
START                : 8
STRING               : 98 100 157
TAIL                 : 57
TBOOL                : 138
TERMS                : 125
TFLOAT               : 136
TINT                 : 135
TLIST                : 133
TOBJECT              : 139
TRUE                 : 160
TSTRING              : 137
UPDATE               : 62
VAR                  : 13 14 15 16
VOID                 : 8 10 86 87
WHILE                : 80
WINDOW_H             : 55
WINDOW_W             : 56
error                : 

Nonterminals, with rules where they appear

action_list1         : 133
action_recwrite_cte  : 98 100
action_recwrite_exp  : 97 99
add_operator         : 121 125
assign               : 23 76 76
assign_action1       : 65
assign_action2       : 65 66
assign_list          : 66
block                : 8 10 69 70 70 76 80 84 85 86 87
bool                 : 150
capi                 : 0
capi_action1         : 1 2 3 4
capi_action2         : 1 2 3 4
condition            : 24
condition_action1    : 69 70
condition_action2    : 69 70
condition_action3    : 70
create_text          : 45
cte                  : 128 129 133
draw                 : 32
exp                  : 111 111 112 112 113 121
exp_action           : 118 119
expression           : 13 14 48 48 50 51 51 51 51 51 59 60 60 60 61 61 64 64 64 64 65 66 69 70 76 80 97 99 103 108 109 127 140 141 145
factor               : 122 123
factor_action1       : 127
factor_action2       : 127
float                : 149
for                  : 74
for_action1          : 76
for_action2          : 76
for_action3          : 76
function             : 94 95
function_action1     : 84 86
function_action2     : 84 86
function_action3     : 84 85 86 87
function_call_action1 : 104 105
function_call_action2 : 104 105
functioncall         : 29 153
get_event            : 40
global               : 1 3
head                 : 35
id                   : 147
init                 : 33
int                  : 148
last                 : 37
list_action1         : 140 141
list_action_3        : 140 141
listaccess           : 154
logic_action1        : 112
logic_action2        : 112
loop                 : 26
main_cont            : 8 10
nestedassign         : 30
nestedvalue          : 145 152
pow                  : 46
pow_action1          : 48
primitivetype        : 132 133
recexp               : 118
recfunc              : 1 2 94
recfunc_action1      : 109
recfuncexp           : 104 108
recids               : 13 14 15 16 18
recparams            : 84 86 93
recstatement         : 19 21
recterm              : 122
recwrite             : 96 97 98
relop_action1        : 111
relop_action2        : 111
return               : 28
run                  : 1 2 3 4
run_action1          : 10
set_dimension        : 44
set_fill             : 38
set_title            : 39
size                 : 34
specialfunction      : 31 155
sqrt                 : 47
start                : 1 2 3 4
start_action1        : 8
startscope_action    : 8 10 76 80 84 85 86 87
statement            : 21 22
string               : 151
tail                 : 36
term                 : 118 119 125
term_action          : 122 123
type                 : 13 14 15 16 84 85 92 93
update               : 41
vars                 : 7 13 15 25
while                : 75
while_action1        : 80
while_action2        : 80
while_action3        : 80
window_h             : 42
window_w             : 43
write                : 27

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> . capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> . capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> . capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (5) capi_action1 -> .

    MAIN            reduce using rule 5 (capi_action1 -> .)
    GLOBAL          reduce using rule 5 (capi_action1 -> .)
    VOID            reduce using rule 5 (capi_action1 -> .)
    TLIST           reduce using rule 5 (capi_action1 -> .)
    TINT            reduce using rule 5 (capi_action1 -> .)
    TFLOAT          reduce using rule 5 (capi_action1 -> .)
    TSTRING         reduce using rule 5 (capi_action1 -> .)
    TBOOL           reduce using rule 5 (capi_action1 -> .)
    TOBJECT         reduce using rule 5 (capi_action1 -> .)

    capi                           shift and go to state 1
    capi_action1                   shift and go to state 2

state 1

    (0) S' -> capi .



state 2

    (1) capi -> capi_action1 . global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> capi_action1 . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 . global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> capi_action1 . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (7) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (94) recfunc -> . function recfunc
    (95) recfunc -> . function
    (84) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (85) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (86) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (132) type -> . primitivetype
    (133) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (135) primitivetype -> . TINT
    (136) primitivetype -> . TFLOAT
    (137) primitivetype -> . TSTRING
    (138) primitivetype -> . TBOOL
    (139) primitivetype -> . TOBJECT

    MAIN            shift and go to state 5
    GLOBAL          shift and go to state 6
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    global                         shift and go to state 3
    recfunc                        shift and go to state 4
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 3

    (1) capi -> capi_action1 global . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 global . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (94) recfunc -> . function recfunc
    (95) recfunc -> . function
    (84) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (85) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (86) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (132) type -> . primitivetype
    (133) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (135) primitivetype -> . TINT
    (136) primitivetype -> . TFLOAT
    (137) primitivetype -> . TSTRING
    (138) primitivetype -> . TBOOL
    (139) primitivetype -> . TOBJECT

    MAIN            shift and go to state 18
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    recfunc                        shift and go to state 17
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 4

    (2) capi -> capi_action1 recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 19


state 5

    (4) capi -> capi_action1 MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 6

    (7) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 21


state 7

    (94) recfunc -> function . recfunc
    (95) recfunc -> function .
    (94) recfunc -> . function recfunc
    (95) recfunc -> . function
    (84) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (85) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (86) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (132) type -> . primitivetype
    (133) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (135) primitivetype -> . TINT
    (136) primitivetype -> . TFLOAT
    (137) primitivetype -> . TSTRING
    (138) primitivetype -> . TBOOL
    (139) primitivetype -> . TOBJECT

    MAIN            reduce using rule 95 (recfunc -> function .)
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    function                       shift and go to state 7
    recfunc                        shift and go to state 22
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 8

    (84) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (85) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 9

    (86) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 24


state 10

    (132) type -> primitivetype .

    FUNC            reduce using rule 132 (type -> primitivetype .)
    EQUAL           reduce using rule 132 (type -> primitivetype .)
    SEMICOLON       reduce using rule 132 (type -> primitivetype .)
    COMMA           reduce using rule 132 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 132 (type -> primitivetype .)


state 11

    (133) type -> TLIST . BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 25


state 12

    (135) primitivetype -> TINT .

    FUNC            reduce using rule 135 (primitivetype -> TINT .)
    BAR             reduce using rule 135 (primitivetype -> TINT .)
    EQUAL           reduce using rule 135 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 135 (primitivetype -> TINT .)
    COMMA           reduce using rule 135 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 135 (primitivetype -> TINT .)


state 13

    (136) primitivetype -> TFLOAT .

    FUNC            reduce using rule 136 (primitivetype -> TFLOAT .)
    BAR             reduce using rule 136 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 136 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 136 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 136 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 136 (primitivetype -> TFLOAT .)


state 14

    (137) primitivetype -> TSTRING .

    FUNC            reduce using rule 137 (primitivetype -> TSTRING .)
    BAR             reduce using rule 137 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 137 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 137 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 137 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 137 (primitivetype -> TSTRING .)


state 15

    (138) primitivetype -> TBOOL .

    FUNC            reduce using rule 138 (primitivetype -> TBOOL .)
    BAR             reduce using rule 138 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 138 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 138 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 138 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 138 (primitivetype -> TBOOL .)


state 16

    (139) primitivetype -> TOBJECT .

    FUNC            reduce using rule 139 (primitivetype -> TOBJECT .)
    BAR             reduce using rule 139 (primitivetype -> TOBJECT .)
    EQUAL           reduce using rule 139 (primitivetype -> TOBJECT .)
    SEMICOLON       reduce using rule 139 (primitivetype -> TOBJECT .)
    COMMA           reduce using rule 139 (primitivetype -> TOBJECT .)
    RIGHTPAR        reduce using rule 139 (primitivetype -> TOBJECT .)


state 17

    (1) capi -> capi_action1 global recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 26


state 18

    (3) capi -> capi_action1 global MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (2) capi -> capi_action1 recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 28


state 20

    (4) capi -> capi_action1 MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (7) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 30


state 22

    (94) recfunc -> function recfunc .

    MAIN            reduce using rule 94 (recfunc -> function recfunc .)


state 23

    (84) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (85) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (86) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 32


state 25

    (133) type -> TLIST BAR . primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (135) primitivetype -> . TINT
    (136) primitivetype -> . TFLOAT
    (137) primitivetype -> . TSTRING
    (138) primitivetype -> . TBOOL
    (139) primitivetype -> . TOBJECT

    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    primitivetype                  shift and go to state 33

state 26

    (1) capi -> capi_action1 global recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 34


state 27

    (3) capi -> capi_action1 global MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (2) capi -> capi_action1 recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 36


state 29

    (4) capi -> capi_action1 MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 37

state 30

    (7) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 40

    vars                           shift and go to state 39

state 31

    (84) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (85) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (88) startscope_action -> .

    LEFTPAR         reduce using rule 88 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (86) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (88) startscope_action -> .

    LEFTPAR         reduce using rule 88 (startscope_action -> .)

    startscope_action              shift and go to state 42

state 33

    (133) type -> TLIST BAR primitivetype . BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 43


state 34

    (1) capi -> capi_action1 global recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 44


state 35

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 45

state 36

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 46

state 37

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 47

state 38

    (8) start -> VOID . FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 48


state 39

    (7) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 49


state 40

    (13) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR . recids COLON type SEMICOLON vars
    (16) vars -> VAR . recids COLON type SEMICOLON
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 50

state 41

    (84) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (85) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 42

    (86) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 53


state 43

    (133) type -> TLIST BAR primitivetype BAR . LEFTBRACKET cte RIGHTBRACKET action_list1

    LEFTBRACKET     shift and go to state 54


state 44

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 55

state 45

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 56

state 46

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 57

state 47

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 58

state 48

    (8) start -> VOID FUNC . start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
    (9) start_action1 -> .

    START           reduce using rule 9 (start_action1 -> .)

    start_action1                  shift and go to state 60

state 49

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 61


state 50

    (13) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR recids . COLON type SEMICOLON vars
    (16) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 62


state 51

    (17) recids -> ID .
    (18) recids -> ID . COMMA recids

    COLON           reduce using rule 17 (recids -> ID .)
    COMMA           shift and go to state 63


state 52

    (84) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (85) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (92) recparams -> . ID COLON type
    (93) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 66
    ID              shift and go to state 64

    recparams                      shift and go to state 65

state 53

    (86) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (92) recparams -> . ID COLON type
    (93) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 68
    ID              shift and go to state 64

    recparams                      shift and go to state 67

state 54

    (133) type -> TLIST BAR primitivetype BAR LEFTBRACKET . cte RIGHTBRACKET action_list1
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

    cte                            shift and go to state 69
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 55

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 107

state 56

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 108

state 57

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 109

state 58

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 110


state 59

    (10) run -> VOID . FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 111


state 60

    (8) start -> VOID FUNC start_action1 . START startscope_action LEFTPAR RIGHTPAR main_cont block

    START           shift and go to state 112


state 61

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 62

    (13) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON . type SEMICOLON vars
    (16) vars -> VAR recids COLON . type SEMICOLON
    (132) type -> . primitivetype
    (133) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (135) primitivetype -> . TINT
    (136) primitivetype -> . TFLOAT
    (137) primitivetype -> . TSTRING
    (138) primitivetype -> . TBOOL
    (139) primitivetype -> . TOBJECT

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 113
    primitivetype                  shift and go to state 10

state 63

    (18) recids -> ID COMMA . recids
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 114

state 64

    (92) recparams -> ID . COLON type
    (93) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 115


state 65

    (84) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function_action1 -> .

    RIGHTPAR        reduce using rule 89 (function_action1 -> .)

    function_action1               shift and go to state 116

state 66

    (85) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (91) function_action3 -> .

    COLON           reduce using rule 91 (function_action3 -> .)

    function_action3               shift and go to state 117

state 67

    (86) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function_action1 -> .

    RIGHTPAR        reduce using rule 89 (function_action1 -> .)

    function_action1               shift and go to state 118

state 68

    (87) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (91) function_action3 -> .

    COLON           reduce using rule 91 (function_action3 -> .)

    function_action3               shift and go to state 119

state 69

    (133) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte . RIGHTBRACKET action_list1

    RIGHTBRACKET    shift and go to state 120


state 70

    (147) cte -> id .

    RIGHTBRACKET    reduce using rule 147 (cte -> id .)
    TERMS           reduce using rule 147 (cte -> id .)
    EX              reduce using rule 147 (cte -> id .)
    RELOP           reduce using rule 147 (cte -> id .)
    LOGIC           reduce using rule 147 (cte -> id .)
    COMMA           reduce using rule 147 (cte -> id .)
    RIGHTPAR        reduce using rule 147 (cte -> id .)
    SEMICOLON       reduce using rule 147 (cte -> id .)


state 71

    (148) cte -> int .

    RIGHTBRACKET    reduce using rule 148 (cte -> int .)
    TERMS           reduce using rule 148 (cte -> int .)
    EX              reduce using rule 148 (cte -> int .)
    RELOP           reduce using rule 148 (cte -> int .)
    LOGIC           reduce using rule 148 (cte -> int .)
    COMMA           reduce using rule 148 (cte -> int .)
    RIGHTPAR        reduce using rule 148 (cte -> int .)
    SEMICOLON       reduce using rule 148 (cte -> int .)


state 72

    (149) cte -> float .

    RIGHTBRACKET    reduce using rule 149 (cte -> float .)
    TERMS           reduce using rule 149 (cte -> float .)
    EX              reduce using rule 149 (cte -> float .)
    RELOP           reduce using rule 149 (cte -> float .)
    LOGIC           reduce using rule 149 (cte -> float .)
    COMMA           reduce using rule 149 (cte -> float .)
    RIGHTPAR        reduce using rule 149 (cte -> float .)
    SEMICOLON       reduce using rule 149 (cte -> float .)


state 73

    (150) cte -> bool .

    RIGHTBRACKET    reduce using rule 150 (cte -> bool .)
    TERMS           reduce using rule 150 (cte -> bool .)
    EX              reduce using rule 150 (cte -> bool .)
    RELOP           reduce using rule 150 (cte -> bool .)
    LOGIC           reduce using rule 150 (cte -> bool .)
    COMMA           reduce using rule 150 (cte -> bool .)
    RIGHTPAR        reduce using rule 150 (cte -> bool .)
    SEMICOLON       reduce using rule 150 (cte -> bool .)


state 74

    (151) cte -> string .

    RIGHTBRACKET    reduce using rule 151 (cte -> string .)
    TERMS           reduce using rule 151 (cte -> string .)
    EX              reduce using rule 151 (cte -> string .)
    RELOP           reduce using rule 151 (cte -> string .)
    LOGIC           reduce using rule 151 (cte -> string .)
    COMMA           reduce using rule 151 (cte -> string .)
    RIGHTPAR        reduce using rule 151 (cte -> string .)
    SEMICOLON       reduce using rule 151 (cte -> string .)


state 75

    (152) cte -> nestedvalue .

    RIGHTBRACKET    reduce using rule 152 (cte -> nestedvalue .)
    TERMS           reduce using rule 152 (cte -> nestedvalue .)
    EX              reduce using rule 152 (cte -> nestedvalue .)
    RELOP           reduce using rule 152 (cte -> nestedvalue .)
    LOGIC           reduce using rule 152 (cte -> nestedvalue .)
    COMMA           reduce using rule 152 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 152 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 152 (cte -> nestedvalue .)


state 76

    (153) cte -> functioncall .

    RIGHTBRACKET    reduce using rule 153 (cte -> functioncall .)
    TERMS           reduce using rule 153 (cte -> functioncall .)
    EX              reduce using rule 153 (cte -> functioncall .)
    RELOP           reduce using rule 153 (cte -> functioncall .)
    LOGIC           reduce using rule 153 (cte -> functioncall .)
    COMMA           reduce using rule 153 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 153 (cte -> functioncall .)
    SEMICOLON       reduce using rule 153 (cte -> functioncall .)


state 77

    (154) cte -> listaccess .

    RIGHTBRACKET    reduce using rule 154 (cte -> listaccess .)
    TERMS           reduce using rule 154 (cte -> listaccess .)
    EX              reduce using rule 154 (cte -> listaccess .)
    RELOP           reduce using rule 154 (cte -> listaccess .)
    LOGIC           reduce using rule 154 (cte -> listaccess .)
    COMMA           reduce using rule 154 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 154 (cte -> listaccess .)
    SEMICOLON       reduce using rule 154 (cte -> listaccess .)


state 78

    (155) cte -> specialfunction .

    RIGHTBRACKET    reduce using rule 155 (cte -> specialfunction .)
    TERMS           reduce using rule 155 (cte -> specialfunction .)
    EX              reduce using rule 155 (cte -> specialfunction .)
    RELOP           reduce using rule 155 (cte -> specialfunction .)
    LOGIC           reduce using rule 155 (cte -> specialfunction .)
    COMMA           reduce using rule 155 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 155 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 155 (cte -> specialfunction .)


state 79

    (156) id -> ID .
    (144) nestedvalue -> ID . DOT ID
    (104) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (53) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (106) function_call_action1 -> .
    (142) list_action1 -> .

    RIGHTBRACKET    reduce using rule 156 (id -> ID .)
    TERMS           reduce using rule 156 (id -> ID .)
    EX              reduce using rule 156 (id -> ID .)
    RELOP           reduce using rule 156 (id -> ID .)
    LOGIC           reduce using rule 156 (id -> ID .)
    COMMA           reduce using rule 156 (id -> ID .)
    RIGHTPAR        reduce using rule 156 (id -> ID .)
    SEMICOLON       reduce using rule 156 (id -> ID .)
    DOT             shift and go to state 121
    LEFTPAR         reduce using rule 106 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 142 (list_action1 -> .)

    function_call_action1          shift and go to state 122
    list_action1                   shift and go to state 123

state 80

    (158) int -> INT .

    RIGHTBRACKET    reduce using rule 158 (int -> INT .)
    TERMS           reduce using rule 158 (int -> INT .)
    EX              reduce using rule 158 (int -> INT .)
    RELOP           reduce using rule 158 (int -> INT .)
    LOGIC           reduce using rule 158 (int -> INT .)
    COMMA           reduce using rule 158 (int -> INT .)
    RIGHTPAR        reduce using rule 158 (int -> INT .)
    SEMICOLON       reduce using rule 158 (int -> INT .)


state 81

    (159) float -> FLOAT .

    RIGHTBRACKET    reduce using rule 159 (float -> FLOAT .)
    TERMS           reduce using rule 159 (float -> FLOAT .)
    EX              reduce using rule 159 (float -> FLOAT .)
    RELOP           reduce using rule 159 (float -> FLOAT .)
    LOGIC           reduce using rule 159 (float -> FLOAT .)
    COMMA           reduce using rule 159 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 159 (float -> FLOAT .)
    SEMICOLON       reduce using rule 159 (float -> FLOAT .)


state 82

    (160) bool -> TRUE .

    RIGHTBRACKET    reduce using rule 160 (bool -> TRUE .)
    TERMS           reduce using rule 160 (bool -> TRUE .)
    EX              reduce using rule 160 (bool -> TRUE .)
    RELOP           reduce using rule 160 (bool -> TRUE .)
    LOGIC           reduce using rule 160 (bool -> TRUE .)
    COMMA           reduce using rule 160 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 160 (bool -> TRUE .)
    SEMICOLON       reduce using rule 160 (bool -> TRUE .)


state 83

    (161) bool -> FALSE .

    RIGHTBRACKET    reduce using rule 161 (bool -> FALSE .)
    TERMS           reduce using rule 161 (bool -> FALSE .)
    EX              reduce using rule 161 (bool -> FALSE .)
    RELOP           reduce using rule 161 (bool -> FALSE .)
    LOGIC           reduce using rule 161 (bool -> FALSE .)
    COMMA           reduce using rule 161 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 161 (bool -> FALSE .)
    SEMICOLON       reduce using rule 161 (bool -> FALSE .)


state 84

    (157) string -> STRING .

    RIGHTBRACKET    reduce using rule 157 (string -> STRING .)
    TERMS           reduce using rule 157 (string -> STRING .)
    EX              reduce using rule 157 (string -> STRING .)
    RELOP           reduce using rule 157 (string -> STRING .)
    LOGIC           reduce using rule 157 (string -> STRING .)
    COMMA           reduce using rule 157 (string -> STRING .)
    RIGHTPAR        reduce using rule 157 (string -> STRING .)
    SEMICOLON       reduce using rule 157 (string -> STRING .)


state 85

    (32) specialfunction -> draw .

    RIGHTBRACKET    reduce using rule 32 (specialfunction -> draw .)
    TERMS           reduce using rule 32 (specialfunction -> draw .)
    EX              reduce using rule 32 (specialfunction -> draw .)
    RELOP           reduce using rule 32 (specialfunction -> draw .)
    LOGIC           reduce using rule 32 (specialfunction -> draw .)
    COMMA           reduce using rule 32 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 32 (specialfunction -> draw .)


state 86

    (33) specialfunction -> init .

    RIGHTBRACKET    reduce using rule 33 (specialfunction -> init .)
    TERMS           reduce using rule 33 (specialfunction -> init .)
    EX              reduce using rule 33 (specialfunction -> init .)
    RELOP           reduce using rule 33 (specialfunction -> init .)
    LOGIC           reduce using rule 33 (specialfunction -> init .)
    COMMA           reduce using rule 33 (specialfunction -> init .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> init .)
    SEMICOLON       reduce using rule 33 (specialfunction -> init .)


state 87

    (34) specialfunction -> size .

    RIGHTBRACKET    reduce using rule 34 (specialfunction -> size .)
    TERMS           reduce using rule 34 (specialfunction -> size .)
    EX              reduce using rule 34 (specialfunction -> size .)
    RELOP           reduce using rule 34 (specialfunction -> size .)
    LOGIC           reduce using rule 34 (specialfunction -> size .)
    COMMA           reduce using rule 34 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> size .)
    SEMICOLON       reduce using rule 34 (specialfunction -> size .)


state 88

    (35) specialfunction -> head .

    RIGHTBRACKET    reduce using rule 35 (specialfunction -> head .)
    TERMS           reduce using rule 35 (specialfunction -> head .)
    EX              reduce using rule 35 (specialfunction -> head .)
    RELOP           reduce using rule 35 (specialfunction -> head .)
    LOGIC           reduce using rule 35 (specialfunction -> head .)
    COMMA           reduce using rule 35 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> head .)
    SEMICOLON       reduce using rule 35 (specialfunction -> head .)


state 89

    (36) specialfunction -> tail .

    RIGHTBRACKET    reduce using rule 36 (specialfunction -> tail .)
    TERMS           reduce using rule 36 (specialfunction -> tail .)
    EX              reduce using rule 36 (specialfunction -> tail .)
    RELOP           reduce using rule 36 (specialfunction -> tail .)
    LOGIC           reduce using rule 36 (specialfunction -> tail .)
    COMMA           reduce using rule 36 (specialfunction -> tail .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> tail .)
    SEMICOLON       reduce using rule 36 (specialfunction -> tail .)


state 90

    (37) specialfunction -> last .

    RIGHTBRACKET    reduce using rule 37 (specialfunction -> last .)
    TERMS           reduce using rule 37 (specialfunction -> last .)
    EX              reduce using rule 37 (specialfunction -> last .)
    RELOP           reduce using rule 37 (specialfunction -> last .)
    LOGIC           reduce using rule 37 (specialfunction -> last .)
    COMMA           reduce using rule 37 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 37 (specialfunction -> last .)
    SEMICOLON       reduce using rule 37 (specialfunction -> last .)


state 91

    (38) specialfunction -> set_fill .

    RIGHTBRACKET    reduce using rule 38 (specialfunction -> set_fill .)
    TERMS           reduce using rule 38 (specialfunction -> set_fill .)
    EX              reduce using rule 38 (specialfunction -> set_fill .)
    RELOP           reduce using rule 38 (specialfunction -> set_fill .)
    LOGIC           reduce using rule 38 (specialfunction -> set_fill .)
    COMMA           reduce using rule 38 (specialfunction -> set_fill .)
    RIGHTPAR        reduce using rule 38 (specialfunction -> set_fill .)
    SEMICOLON       reduce using rule 38 (specialfunction -> set_fill .)


state 92

    (39) specialfunction -> set_title .

    RIGHTBRACKET    reduce using rule 39 (specialfunction -> set_title .)
    TERMS           reduce using rule 39 (specialfunction -> set_title .)
    EX              reduce using rule 39 (specialfunction -> set_title .)
    RELOP           reduce using rule 39 (specialfunction -> set_title .)
    LOGIC           reduce using rule 39 (specialfunction -> set_title .)
    COMMA           reduce using rule 39 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 39 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 39 (specialfunction -> set_title .)


state 93

    (40) specialfunction -> get_event .

    RIGHTBRACKET    reduce using rule 40 (specialfunction -> get_event .)
    TERMS           reduce using rule 40 (specialfunction -> get_event .)
    EX              reduce using rule 40 (specialfunction -> get_event .)
    RELOP           reduce using rule 40 (specialfunction -> get_event .)
    LOGIC           reduce using rule 40 (specialfunction -> get_event .)
    COMMA           reduce using rule 40 (specialfunction -> get_event .)
    RIGHTPAR        reduce using rule 40 (specialfunction -> get_event .)
    SEMICOLON       reduce using rule 40 (specialfunction -> get_event .)


state 94

    (41) specialfunction -> update .

    RIGHTBRACKET    reduce using rule 41 (specialfunction -> update .)
    TERMS           reduce using rule 41 (specialfunction -> update .)
    EX              reduce using rule 41 (specialfunction -> update .)
    RELOP           reduce using rule 41 (specialfunction -> update .)
    LOGIC           reduce using rule 41 (specialfunction -> update .)
    COMMA           reduce using rule 41 (specialfunction -> update .)
    RIGHTPAR        reduce using rule 41 (specialfunction -> update .)
    SEMICOLON       reduce using rule 41 (specialfunction -> update .)


state 95

    (42) specialfunction -> window_h .

    RIGHTBRACKET    reduce using rule 42 (specialfunction -> window_h .)
    TERMS           reduce using rule 42 (specialfunction -> window_h .)
    EX              reduce using rule 42 (specialfunction -> window_h .)
    RELOP           reduce using rule 42 (specialfunction -> window_h .)
    LOGIC           reduce using rule 42 (specialfunction -> window_h .)
    COMMA           reduce using rule 42 (specialfunction -> window_h .)
    RIGHTPAR        reduce using rule 42 (specialfunction -> window_h .)
    SEMICOLON       reduce using rule 42 (specialfunction -> window_h .)


state 96

    (43) specialfunction -> window_w .

    RIGHTBRACKET    reduce using rule 43 (specialfunction -> window_w .)
    TERMS           reduce using rule 43 (specialfunction -> window_w .)
    EX              reduce using rule 43 (specialfunction -> window_w .)
    RELOP           reduce using rule 43 (specialfunction -> window_w .)
    LOGIC           reduce using rule 43 (specialfunction -> window_w .)
    COMMA           reduce using rule 43 (specialfunction -> window_w .)
    RIGHTPAR        reduce using rule 43 (specialfunction -> window_w .)
    SEMICOLON       reduce using rule 43 (specialfunction -> window_w .)


state 97

    (44) specialfunction -> set_dimension .

    RIGHTBRACKET    reduce using rule 44 (specialfunction -> set_dimension .)
    TERMS           reduce using rule 44 (specialfunction -> set_dimension .)
    EX              reduce using rule 44 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 44 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 44 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 44 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 44 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 44 (specialfunction -> set_dimension .)


state 98

    (45) specialfunction -> create_text .

    RIGHTBRACKET    reduce using rule 45 (specialfunction -> create_text .)
    TERMS           reduce using rule 45 (specialfunction -> create_text .)
    EX              reduce using rule 45 (specialfunction -> create_text .)
    RELOP           reduce using rule 45 (specialfunction -> create_text .)
    LOGIC           reduce using rule 45 (specialfunction -> create_text .)
    COMMA           reduce using rule 45 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 45 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 45 (specialfunction -> create_text .)


state 99

    (46) specialfunction -> pow .

    RIGHTBRACKET    reduce using rule 46 (specialfunction -> pow .)
    TERMS           reduce using rule 46 (specialfunction -> pow .)
    EX              reduce using rule 46 (specialfunction -> pow .)
    RELOP           reduce using rule 46 (specialfunction -> pow .)
    LOGIC           reduce using rule 46 (specialfunction -> pow .)
    COMMA           reduce using rule 46 (specialfunction -> pow .)
    RIGHTPAR        reduce using rule 46 (specialfunction -> pow .)
    SEMICOLON       reduce using rule 46 (specialfunction -> pow .)


state 100

    (47) specialfunction -> sqrt .

    RIGHTBRACKET    reduce using rule 47 (specialfunction -> sqrt .)
    TERMS           reduce using rule 47 (specialfunction -> sqrt .)
    EX              reduce using rule 47 (specialfunction -> sqrt .)
    RELOP           reduce using rule 47 (specialfunction -> sqrt .)
    LOGIC           reduce using rule 47 (specialfunction -> sqrt .)
    COMMA           reduce using rule 47 (specialfunction -> sqrt .)
    RIGHTPAR        reduce using rule 47 (specialfunction -> sqrt .)
    SEMICOLON       reduce using rule 47 (specialfunction -> sqrt .)


state 101

    (51) draw -> CAPIGAME . DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> CAPIGAME . DOT INIT LEFTPAR RIGHTPAR
    (60) set_fill -> CAPIGAME . DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> CAPIGAME . DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> CAPIGAME . DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> CAPIGAME . DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> CAPIGAME . DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> CAPIGAME . DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> CAPIGAME . DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR

    DOT             shift and go to state 124


state 102

    (57) tail -> TAIL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 125


state 103

    (58) last -> LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 126


state 104

    (64) create_text -> CREATE_TEXT . LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 127


state 105

    (48) pow -> POW . pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow_action1 -> .

    LEFTPAR         reduce using rule 49 (pow_action1 -> .)

    pow_action1                    shift and go to state 128

state 106

    (50) sqrt -> SQRT . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 129


state 107

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 130

state 108

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 131


state 109

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 132


state 110

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 133


state 111

    (10) run -> VOID FUNC . run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
    (11) run_action1 -> .

    RUN             reduce using rule 11 (run_action1 -> .)

    run_action1                    shift and go to state 134

state 112

    (8) start -> VOID FUNC start_action1 START . startscope_action LEFTPAR RIGHTPAR main_cont block
    (88) startscope_action -> .

    LEFTPAR         reduce using rule 88 (startscope_action -> .)

    startscope_action              shift and go to state 135

state 113

    (13) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON type . SEMICOLON vars
    (16) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 136
    SEMICOLON       shift and go to state 137


state 114

    (18) recids -> ID COMMA recids .

    COLON           reduce using rule 18 (recids -> ID COMMA recids .)


state 115

    (92) recparams -> ID COLON . type
    (93) recparams -> ID COLON . type COMMA recparams
    (132) type -> . primitivetype
    (133) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (135) primitivetype -> . TINT
    (136) primitivetype -> . TFLOAT
    (137) primitivetype -> . TSTRING
    (138) primitivetype -> . TBOOL
    (139) primitivetype -> . TOBJECT

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 138
    primitivetype                  shift and go to state 10

state 116

    (84) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 139


state 117

    (85) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 140

state 118

    (86) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 142


state 119

    (87) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 143

state 120

    (133) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET . action_list1
    (134) action_list1 -> .

    FUNC            reduce using rule 134 (action_list1 -> .)
    EQUAL           reduce using rule 134 (action_list1 -> .)
    SEMICOLON       reduce using rule 134 (action_list1 -> .)
    COMMA           reduce using rule 134 (action_list1 -> .)
    RIGHTPAR        reduce using rule 134 (action_list1 -> .)

    action_list1                   shift and go to state 144

state 121

    (144) nestedvalue -> ID DOT . ID
    (53) size -> ID DOT . SIZE LEFTPAR RIGHTPAR
    (54) head -> ID DOT . HEAD LEFTPAR RIGHTPAR

    ID              shift and go to state 145
    SIZE            shift and go to state 146
    HEAD            shift and go to state 147


state 122

    (104) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 RIGHTPAR

    LEFTPAR         shift and go to state 148


state 123

    (141) listaccess -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 149


state 124

    (51) draw -> CAPIGAME DOT . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> CAPIGAME DOT . INIT LEFTPAR RIGHTPAR
    (60) set_fill -> CAPIGAME DOT . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> CAPIGAME DOT . SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> CAPIGAME DOT . GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> CAPIGAME DOT . UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> CAPIGAME DOT . WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> CAPIGAME DOT . WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> CAPIGAME DOT . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR

    DRAW            shift and go to state 150
    INIT            shift and go to state 151
    SET_FILL        shift and go to state 152
    SET_TITLE       shift and go to state 153
    GET_EVENT       shift and go to state 154
    UPDATE          shift and go to state 155
    WINDOW_H        shift and go to state 156
    WINDOW_W        shift and go to state 157
    SET_DIMENSION   shift and go to state 158


state 125

    (57) tail -> TAIL LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 159


state 126

    (58) last -> LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 160


state 127

    (64) create_text -> CREATE_TEXT LEFTPAR . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 161
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 128

    (48) pow -> POW pow_action1 . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 168


state 129

    (50) sqrt -> SQRT LEFTPAR . expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 169
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 130

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 170


state 131

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 171


state 132

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 172


state 133

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 134

    (10) run -> VOID FUNC run_action1 . RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    RUN             shift and go to state 173


state 135

    (8) start -> VOID FUNC start_action1 START startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 174


state 136

    (13) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 175
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 137

    (15) vars -> VAR recids COLON type SEMICOLON . vars
    (16) vars -> VAR recids COLON type SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CAPIGAME        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    TAIL            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    LAST            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    POW             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SQRT            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 176

state 138

    (92) recparams -> ID COLON type .
    (93) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 92 (recparams -> ID COLON type .)
    COMMA           shift and go to state 177


state 139

    (84) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (90) function_action2 -> .

    COLON           reduce using rule 90 (function_action2 -> .)

    function_action2               shift and go to state 178

state 140

    (85) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 85 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 85 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 85 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 85 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 85 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 85 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 85 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 85 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 141

    (19) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 179


state 142

    (86) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (90) function_action2 -> .

    COLON           reduce using rule 90 (function_action2 -> .)

    function_action2               shift and go to state 180

state 143

    (87) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 87 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 87 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 87 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 87 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 87 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 87 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 87 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 87 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 144

    (133) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .

    FUNC            reduce using rule 133 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    EQUAL           reduce using rule 133 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    SEMICOLON       reduce using rule 133 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    COMMA           reduce using rule 133 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    RIGHTPAR        reduce using rule 133 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)


state 145

    (144) nestedvalue -> ID DOT ID .

    RIGHTBRACKET    reduce using rule 144 (nestedvalue -> ID DOT ID .)
    TERMS           reduce using rule 144 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 144 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 144 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 144 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 144 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 144 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 144 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 144 (nestedvalue -> ID DOT ID .)


state 146

    (53) size -> ID DOT SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 181


state 147

    (54) head -> ID DOT HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 182


state 148

    (104) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 RIGHTPAR
    (107) function_call_action2 -> .

    RIGHTPAR        reduce using rule 107 (function_call_action2 -> .)
    EX              reduce using rule 107 (function_call_action2 -> .)
    ID              reduce using rule 107 (function_call_action2 -> .)
    INT             reduce using rule 107 (function_call_action2 -> .)
    FLOAT           reduce using rule 107 (function_call_action2 -> .)
    TRUE            reduce using rule 107 (function_call_action2 -> .)
    FALSE           reduce using rule 107 (function_call_action2 -> .)
    STRING          reduce using rule 107 (function_call_action2 -> .)
    CAPIGAME        reduce using rule 107 (function_call_action2 -> .)
    TAIL            reduce using rule 107 (function_call_action2 -> .)
    LAST            reduce using rule 107 (function_call_action2 -> .)
    CREATE_TEXT     reduce using rule 107 (function_call_action2 -> .)
    POW             reduce using rule 107 (function_call_action2 -> .)
    SQRT            reduce using rule 107 (function_call_action2 -> .)
    COMMA           reduce using rule 107 (function_call_action2 -> .)
    RELOP           reduce using rule 107 (function_call_action2 -> .)
    LOGIC           reduce using rule 107 (function_call_action2 -> .)
    TERMS           reduce using rule 107 (function_call_action2 -> .)
    LEFTPAR         reduce using rule 107 (function_call_action2 -> .)

    function_call_action2          shift and go to state 183

state 149

    (141) listaccess -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 184
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 150

    (51) draw -> CAPIGAME DOT DRAW . LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 185


state 151

    (52) init -> CAPIGAME DOT INIT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 186


state 152

    (60) set_fill -> CAPIGAME DOT SET_FILL . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 187


state 153

    (59) set_title -> CAPIGAME DOT SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 188


state 154

    (63) get_event -> CAPIGAME DOT GET_EVENT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 189


state 155

    (62) update -> CAPIGAME DOT UPDATE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 190


state 156

    (55) window_h -> CAPIGAME DOT WINDOW_H . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 191


state 157

    (56) window_w -> CAPIGAME DOT WINDOW_W . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 192


state 158

    (61) set_dimension -> CAPIGAME DOT SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 193


state 159

    (57) tail -> TAIL LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 57 (tail -> TAIL LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 57 (tail -> TAIL LEFTPAR RIGHTPAR .)
    EX              reduce using rule 57 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 57 (tail -> TAIL LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 57 (tail -> TAIL LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 57 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 57 (tail -> TAIL LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 57 (tail -> TAIL LEFTPAR RIGHTPAR .)


state 160

    (58) last -> LAST LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 58 (last -> LAST LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 58 (last -> LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 58 (last -> LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 58 (last -> LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 58 (last -> LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 58 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 58 (last -> LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 58 (last -> LAST LEFTPAR RIGHTPAR .)


state 161

    (64) create_text -> CREATE_TEXT LEFTPAR expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 194


state 162

    (111) expression -> exp . RELOP relop_action1 exp relop_action2
    (112) expression -> exp . LOGIC logic_action1 exp logic_action2
    (113) expression -> exp .

    RELOP           shift and go to state 195
    LOGIC           shift and go to state 196
    COMMA           reduce using rule 113 (expression -> exp .)
    RIGHTPAR        reduce using rule 113 (expression -> exp .)
    SEMICOLON       reduce using rule 113 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 113 (expression -> exp .)


state 163

    (118) exp -> term . exp_action recexp
    (119) exp -> term . exp_action
    (120) exp_action -> .

    EX              reduce using rule 120 (exp_action -> .)
    RELOP           reduce using rule 120 (exp_action -> .)
    LOGIC           reduce using rule 120 (exp_action -> .)
    COMMA           reduce using rule 120 (exp_action -> .)
    RIGHTPAR        reduce using rule 120 (exp_action -> .)
    SEMICOLON       reduce using rule 120 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 120 (exp_action -> .)

    exp_action                     shift and go to state 197

state 164

    (122) term -> factor . term_action recterm
    (123) term -> factor . term_action
    (124) term_action -> .

    TERMS           reduce using rule 124 (term_action -> .)
    EX              reduce using rule 124 (term_action -> .)
    RELOP           reduce using rule 124 (term_action -> .)
    LOGIC           reduce using rule 124 (term_action -> .)
    COMMA           reduce using rule 124 (term_action -> .)
    RIGHTPAR        reduce using rule 124 (term_action -> .)
    SEMICOLON       reduce using rule 124 (term_action -> .)
    RIGHTBRACKET    reduce using rule 124 (term_action -> .)

    term_action                    shift and go to state 198

state 165

    (127) factor -> factor_action1 . LEFTPAR expression RIGHTPAR factor_action2

    LEFTPAR         shift and go to state 199


state 166

    (128) factor -> EX . cte
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

    TERMS           reduce using rule 146 (cte -> .)
    EX              reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

    cte                            shift and go to state 200
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 167

    (129) factor -> cte .

    TERMS           reduce using rule 129 (factor -> cte .)
    EX              reduce using rule 129 (factor -> cte .)
    RELOP           reduce using rule 129 (factor -> cte .)
    LOGIC           reduce using rule 129 (factor -> cte .)
    COMMA           reduce using rule 129 (factor -> cte .)
    RIGHTPAR        reduce using rule 129 (factor -> cte .)
    SEMICOLON       reduce using rule 129 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 129 (factor -> cte .)


state 168

    (48) pow -> POW pow_action1 LEFTPAR . expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 201
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 169

    (50) sqrt -> SQRT LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 202


state 170

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 203


state 171

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 172

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 173

    (10) run -> VOID FUNC run_action1 RUN . startscope_action LEFTPAR RIGHTPAR main_cont block
    (88) startscope_action -> .

    LEFTPAR         reduce using rule 88 (startscope_action -> .)

    startscope_action              shift and go to state 204

state 174

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 205


state 175

    (13) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 206


state 176

    (15) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CAPIGAME        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    TAIL            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    LAST            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    POW             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SQRT            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)


state 177

    (93) recparams -> ID COLON type COMMA . recparams
    (92) recparams -> . ID COLON type
    (93) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 64

    recparams                      shift and go to state 207

state 178

    (84) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (91) function_action3 -> .

    COLON           reduce using rule 91 (function_action3 -> .)

    function_action3               shift and go to state 208

state 179

    (19) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (65) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (66) assign -> . assign_list EQUAL assign_action2 expression
    (69) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (70) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (74) loop -> . for
    (75) loop -> . while
    (96) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (103) return -> . RETURN expression
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (140) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (76) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (80) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (144) nestedvalue -> . ID DOT ID
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

    RIGHTKEY        shift and go to state 210
    ID              shift and go to state 221
    IF              shift and go to state 223
    VAR             shift and go to state 40
    PRINT           shift and go to state 226
    RETURN          shift and go to state 227
    FOR             shift and go to state 229
    WHILE           shift and go to state 230
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

    recstatement                   shift and go to state 209
    statement                      shift and go to state 211
    assign                         shift and go to state 212
    condition                      shift and go to state 213
    vars                           shift and go to state 214
    loop                           shift and go to state 215
    write                          shift and go to state 216
    return                         shift and go to state 217
    functioncall                   shift and go to state 218
    nestedassign                   shift and go to state 219
    specialfunction                shift and go to state 220
    assign_list                    shift and go to state 222
    for                            shift and go to state 224
    while                          shift and go to state 225
    nestedvalue                    shift and go to state 228
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 180

    (86) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (91) function_action3 -> .

    COLON           reduce using rule 91 (function_action3 -> .)

    function_action3               shift and go to state 231

state 181

    (53) size -> ID DOT SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 232


state 182

    (54) head -> ID DOT HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 233


state 183

    (104) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . recfuncexp RIGHTPAR
    (105) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . RIGHTPAR
    (108) recfuncexp -> . expression COMMA recfuncexp
    (109) recfuncexp -> . expression recfunc_action1
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
  ! shift/reduce conflict for RIGHTPAR resolved as shift
    RIGHTPAR        shift and go to state 235
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]
  ! RIGHTPAR        [ reduce using rule 146 (cte -> .) ]

    recfuncexp                     shift and go to state 234
    expression                     shift and go to state 236
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 184

    (141) listaccess -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (143) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 143 (list_action_3 -> .)

    list_action_3                  shift and go to state 237

state 185

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR . expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 238
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 186

    (52) init -> CAPIGAME DOT INIT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 239


state 187

    (60) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 240
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 188

    (59) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR . expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 241
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 189

    (63) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 242


state 190

    (62) update -> CAPIGAME DOT UPDATE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 243


state 191

    (55) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 244


state 192

    (56) window_w -> CAPIGAME DOT WINDOW_W LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 245


state 193

    (61) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 246
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 194

    (64) create_text -> CREATE_TEXT LEFTPAR expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 247
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 195

    (111) expression -> exp RELOP . relop_action1 exp relop_action2
    (114) relop_action1 -> .

    EX              reduce using rule 114 (relop_action1 -> .)
    ID              reduce using rule 114 (relop_action1 -> .)
    INT             reduce using rule 114 (relop_action1 -> .)
    FLOAT           reduce using rule 114 (relop_action1 -> .)
    TRUE            reduce using rule 114 (relop_action1 -> .)
    FALSE           reduce using rule 114 (relop_action1 -> .)
    STRING          reduce using rule 114 (relop_action1 -> .)
    CAPIGAME        reduce using rule 114 (relop_action1 -> .)
    TAIL            reduce using rule 114 (relop_action1 -> .)
    LAST            reduce using rule 114 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 114 (relop_action1 -> .)
    POW             reduce using rule 114 (relop_action1 -> .)
    SQRT            reduce using rule 114 (relop_action1 -> .)
    TERMS           reduce using rule 114 (relop_action1 -> .)
    LEFTPAR         reduce using rule 114 (relop_action1 -> .)
    COMMA           reduce using rule 114 (relop_action1 -> .)
    RIGHTPAR        reduce using rule 114 (relop_action1 -> .)
    SEMICOLON       reduce using rule 114 (relop_action1 -> .)
    RIGHTBRACKET    reduce using rule 114 (relop_action1 -> .)

    relop_action1                  shift and go to state 248

state 196

    (112) expression -> exp LOGIC . logic_action1 exp logic_action2
    (116) logic_action1 -> .

    EX              reduce using rule 116 (logic_action1 -> .)
    ID              reduce using rule 116 (logic_action1 -> .)
    INT             reduce using rule 116 (logic_action1 -> .)
    FLOAT           reduce using rule 116 (logic_action1 -> .)
    TRUE            reduce using rule 116 (logic_action1 -> .)
    FALSE           reduce using rule 116 (logic_action1 -> .)
    STRING          reduce using rule 116 (logic_action1 -> .)
    CAPIGAME        reduce using rule 116 (logic_action1 -> .)
    TAIL            reduce using rule 116 (logic_action1 -> .)
    LAST            reduce using rule 116 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 116 (logic_action1 -> .)
    POW             reduce using rule 116 (logic_action1 -> .)
    SQRT            reduce using rule 116 (logic_action1 -> .)
    TERMS           reduce using rule 116 (logic_action1 -> .)
    LEFTPAR         reduce using rule 116 (logic_action1 -> .)
    COMMA           reduce using rule 116 (logic_action1 -> .)
    RIGHTPAR        reduce using rule 116 (logic_action1 -> .)
    SEMICOLON       reduce using rule 116 (logic_action1 -> .)
    RIGHTBRACKET    reduce using rule 116 (logic_action1 -> .)

    logic_action1                  shift and go to state 249

state 197

    (118) exp -> term exp_action . recexp
    (119) exp -> term exp_action .
    (121) recexp -> . EX add_operator exp

    RELOP           reduce using rule 119 (exp -> term exp_action .)
    LOGIC           reduce using rule 119 (exp -> term exp_action .)
    COMMA           reduce using rule 119 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 119 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 119 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 119 (exp -> term exp_action .)
    EX              shift and go to state 251

    recexp                         shift and go to state 250

state 198

    (122) term -> factor term_action . recterm
    (123) term -> factor term_action .
    (125) recterm -> . TERMS add_operator term

    EX              reduce using rule 123 (term -> factor term_action .)
    RELOP           reduce using rule 123 (term -> factor term_action .)
    LOGIC           reduce using rule 123 (term -> factor term_action .)
    COMMA           reduce using rule 123 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 123 (term -> factor term_action .)
    SEMICOLON       reduce using rule 123 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 123 (term -> factor term_action .)
    TERMS           shift and go to state 253

    recterm                        shift and go to state 252

state 199

    (127) factor -> factor_action1 LEFTPAR . expression RIGHTPAR factor_action2
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    factor_action1                 shift and go to state 165
    expression                     shift and go to state 254
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 200

    (128) factor -> EX cte .

    TERMS           reduce using rule 128 (factor -> EX cte .)
    EX              reduce using rule 128 (factor -> EX cte .)
    RELOP           reduce using rule 128 (factor -> EX cte .)
    LOGIC           reduce using rule 128 (factor -> EX cte .)
    COMMA           reduce using rule 128 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 128 (factor -> EX cte .)
    SEMICOLON       reduce using rule 128 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 128 (factor -> EX cte .)


state 201

    (48) pow -> POW pow_action1 LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 255


state 202

    (50) sqrt -> SQRT LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 50 (sqrt -> SQRT LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 50 (sqrt -> SQRT LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 50 (sqrt -> SQRT LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 50 (sqrt -> SQRT LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 50 (sqrt -> SQRT LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 50 (sqrt -> SQRT LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 50 (sqrt -> SQRT LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 50 (sqrt -> SQRT LEFTPAR expression RIGHTPAR .)


state 203

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 204

    (10) run -> VOID FUNC run_action1 RUN startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 256


state 205

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 257

state 206

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (14) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CAPIGAME        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    TAIL            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    LAST            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    POW             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SQRT            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 258

state 207

    (93) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 93 (recparams -> ID COLON type COMMA recparams .)


state 208

    (84) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 259

state 209

    (19) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 260


state 210

    (20) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 261


state 211

    (21) recstatement -> statement . recstatement
    (22) recstatement -> statement .
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (65) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (66) assign -> . assign_list EQUAL assign_action2 expression
    (69) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (70) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (74) loop -> . for
    (75) loop -> . while
    (96) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (103) return -> . RETURN expression
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (140) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (76) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (80) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (144) nestedvalue -> . ID DOT ID
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

    RIGHTKEY        reduce using rule 22 (recstatement -> statement .)
    ID              shift and go to state 221
    IF              shift and go to state 223
    VAR             shift and go to state 40
    PRINT           shift and go to state 226
    RETURN          shift and go to state 227
    FOR             shift and go to state 229
    WHILE           shift and go to state 230
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

    statement                      shift and go to state 211
    recstatement                   shift and go to state 262
    assign                         shift and go to state 212
    condition                      shift and go to state 213
    vars                           shift and go to state 214
    loop                           shift and go to state 215
    write                          shift and go to state 216
    return                         shift and go to state 217
    functioncall                   shift and go to state 218
    nestedassign                   shift and go to state 219
    specialfunction                shift and go to state 220
    assign_list                    shift and go to state 222
    for                            shift and go to state 224
    while                          shift and go to state 225
    nestedvalue                    shift and go to state 228
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 212

    (23) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 263


state 213

    (24) statement -> condition .

    ID              reduce using rule 24 (statement -> condition .)
    IF              reduce using rule 24 (statement -> condition .)
    VAR             reduce using rule 24 (statement -> condition .)
    PRINT           reduce using rule 24 (statement -> condition .)
    RETURN          reduce using rule 24 (statement -> condition .)
    FOR             reduce using rule 24 (statement -> condition .)
    WHILE           reduce using rule 24 (statement -> condition .)
    CAPIGAME        reduce using rule 24 (statement -> condition .)
    TAIL            reduce using rule 24 (statement -> condition .)
    LAST            reduce using rule 24 (statement -> condition .)
    CREATE_TEXT     reduce using rule 24 (statement -> condition .)
    POW             reduce using rule 24 (statement -> condition .)
    SQRT            reduce using rule 24 (statement -> condition .)
    RIGHTKEY        reduce using rule 24 (statement -> condition .)


state 214

    (25) statement -> vars .

    ID              reduce using rule 25 (statement -> vars .)
    IF              reduce using rule 25 (statement -> vars .)
    VAR             reduce using rule 25 (statement -> vars .)
    PRINT           reduce using rule 25 (statement -> vars .)
    RETURN          reduce using rule 25 (statement -> vars .)
    FOR             reduce using rule 25 (statement -> vars .)
    WHILE           reduce using rule 25 (statement -> vars .)
    CAPIGAME        reduce using rule 25 (statement -> vars .)
    TAIL            reduce using rule 25 (statement -> vars .)
    LAST            reduce using rule 25 (statement -> vars .)
    CREATE_TEXT     reduce using rule 25 (statement -> vars .)
    POW             reduce using rule 25 (statement -> vars .)
    SQRT            reduce using rule 25 (statement -> vars .)
    RIGHTKEY        reduce using rule 25 (statement -> vars .)


state 215

    (26) statement -> loop .

    ID              reduce using rule 26 (statement -> loop .)
    IF              reduce using rule 26 (statement -> loop .)
    VAR             reduce using rule 26 (statement -> loop .)
    PRINT           reduce using rule 26 (statement -> loop .)
    RETURN          reduce using rule 26 (statement -> loop .)
    FOR             reduce using rule 26 (statement -> loop .)
    WHILE           reduce using rule 26 (statement -> loop .)
    CAPIGAME        reduce using rule 26 (statement -> loop .)
    TAIL            reduce using rule 26 (statement -> loop .)
    LAST            reduce using rule 26 (statement -> loop .)
    CREATE_TEXT     reduce using rule 26 (statement -> loop .)
    POW             reduce using rule 26 (statement -> loop .)
    SQRT            reduce using rule 26 (statement -> loop .)
    RIGHTKEY        reduce using rule 26 (statement -> loop .)


state 216

    (27) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 264


state 217

    (28) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 265


state 218

    (29) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 266


state 219

    (30) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 267


state 220

    (31) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 268


state 221

    (65) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (104) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (140) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (144) nestedvalue -> ID . DOT ID
    (53) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (67) assign_action1 -> .
    (106) function_call_action1 -> .
    (142) list_action1 -> .

    DOT             shift and go to state 121
    EQUAL           reduce using rule 67 (assign_action1 -> .)
    LEFTPAR         reduce using rule 106 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 142 (list_action1 -> .)

    assign_action1                 shift and go to state 269
    function_call_action1          shift and go to state 122
    list_action1                   shift and go to state 270

state 222

    (66) assign -> assign_list . EQUAL assign_action2 expression

    EQUAL           shift and go to state 271


state 223

    (69) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (70) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 272


state 224

    (74) loop -> for .

    ID              reduce using rule 74 (loop -> for .)
    IF              reduce using rule 74 (loop -> for .)
    VAR             reduce using rule 74 (loop -> for .)
    PRINT           reduce using rule 74 (loop -> for .)
    RETURN          reduce using rule 74 (loop -> for .)
    FOR             reduce using rule 74 (loop -> for .)
    WHILE           reduce using rule 74 (loop -> for .)
    CAPIGAME        reduce using rule 74 (loop -> for .)
    TAIL            reduce using rule 74 (loop -> for .)
    LAST            reduce using rule 74 (loop -> for .)
    CREATE_TEXT     reduce using rule 74 (loop -> for .)
    POW             reduce using rule 74 (loop -> for .)
    SQRT            reduce using rule 74 (loop -> for .)
    RIGHTKEY        reduce using rule 74 (loop -> for .)


state 225

    (75) loop -> while .

    ID              reduce using rule 75 (loop -> while .)
    IF              reduce using rule 75 (loop -> while .)
    VAR             reduce using rule 75 (loop -> while .)
    PRINT           reduce using rule 75 (loop -> while .)
    RETURN          reduce using rule 75 (loop -> while .)
    FOR             reduce using rule 75 (loop -> while .)
    WHILE           reduce using rule 75 (loop -> while .)
    CAPIGAME        reduce using rule 75 (loop -> while .)
    TAIL            reduce using rule 75 (loop -> while .)
    LAST            reduce using rule 75 (loop -> while .)
    CREATE_TEXT     reduce using rule 75 (loop -> while .)
    POW             reduce using rule 75 (loop -> while .)
    SQRT            reduce using rule 75 (loop -> while .)
    RIGHTKEY        reduce using rule 75 (loop -> while .)


state 226

    (96) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 273


state 227

    (103) return -> RETURN . expression
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 274
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 228

    (145) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 275


state 229

    (76) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (88) startscope_action -> .

    LEFTPAR         reduce using rule 88 (startscope_action -> .)

    startscope_action              shift and go to state 276

state 230

    (80) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (88) startscope_action -> .

    LEFTPAR         reduce using rule 88 (startscope_action -> .)

    startscope_action              shift and go to state 277

state 231

    (86) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 278

state 232

    (53) size -> ID DOT SIZE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 53 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 53 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 53 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 53 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 53 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 53 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 53 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 53 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)


state 233

    (54) head -> ID DOT HEAD LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 54 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 54 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 54 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 54 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 54 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 54 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 54 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 54 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)


state 234

    (104) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 279


state 235

    (105) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .

    RIGHTBRACKET    reduce using rule 105 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    TERMS           reduce using rule 105 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    EX              reduce using rule 105 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RELOP           reduce using rule 105 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    LOGIC           reduce using rule 105 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    COMMA           reduce using rule 105 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTPAR        reduce using rule 105 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    SEMICOLON       reduce using rule 105 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)


state 236

    (108) recfuncexp -> expression . COMMA recfuncexp
    (109) recfuncexp -> expression . recfunc_action1
    (110) recfunc_action1 -> .

    COMMA           shift and go to state 280
    RIGHTPAR        reduce using rule 110 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 281

state 237

    (141) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 282


state 238

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression . COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 283


state 239

    (52) init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 52 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 52 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 52 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 52 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 52 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 52 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 52 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 52 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)


state 240

    (60) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 284


state 241

    (59) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 285


state 242

    (63) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 63 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 63 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 63 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 63 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 63 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 63 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 63 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 63 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)


state 243

    (62) update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 62 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 62 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 62 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 62 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 62 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 62 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 62 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 62 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)


state 244

    (55) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 55 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 55 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    EX              reduce using rule 55 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 55 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 55 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 55 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 55 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 55 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)


state 245

    (56) window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 56 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 56 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    EX              reduce using rule 56 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 56 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 56 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 56 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 56 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 56 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)


state 246

    (61) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 286


state 247

    (64) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 287


state 248

    (111) expression -> exp RELOP relop_action1 . exp relop_action2
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    exp                            shift and go to state 288
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 249

    (112) expression -> exp LOGIC logic_action1 . exp logic_action2
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    exp                            shift and go to state 289
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 250

    (118) exp -> term exp_action recexp .

    RELOP           reduce using rule 118 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 118 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 118 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 118 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 118 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 118 (exp -> term exp_action recexp .)


state 251

    (121) recexp -> EX . add_operator exp
    (126) add_operator -> .

    EX              reduce using rule 126 (add_operator -> .)
    ID              reduce using rule 126 (add_operator -> .)
    INT             reduce using rule 126 (add_operator -> .)
    FLOAT           reduce using rule 126 (add_operator -> .)
    TRUE            reduce using rule 126 (add_operator -> .)
    FALSE           reduce using rule 126 (add_operator -> .)
    STRING          reduce using rule 126 (add_operator -> .)
    CAPIGAME        reduce using rule 126 (add_operator -> .)
    TAIL            reduce using rule 126 (add_operator -> .)
    LAST            reduce using rule 126 (add_operator -> .)
    CREATE_TEXT     reduce using rule 126 (add_operator -> .)
    POW             reduce using rule 126 (add_operator -> .)
    SQRT            reduce using rule 126 (add_operator -> .)
    TERMS           reduce using rule 126 (add_operator -> .)
    LEFTPAR         reduce using rule 126 (add_operator -> .)
    RELOP           reduce using rule 126 (add_operator -> .)
    LOGIC           reduce using rule 126 (add_operator -> .)
    COMMA           reduce using rule 126 (add_operator -> .)
    RIGHTPAR        reduce using rule 126 (add_operator -> .)
    SEMICOLON       reduce using rule 126 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 126 (add_operator -> .)

    add_operator                   shift and go to state 290

state 252

    (122) term -> factor term_action recterm .

    EX              reduce using rule 122 (term -> factor term_action recterm .)
    RELOP           reduce using rule 122 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 122 (term -> factor term_action recterm .)
    COMMA           reduce using rule 122 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 122 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 122 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 122 (term -> factor term_action recterm .)


state 253

    (125) recterm -> TERMS . add_operator term
    (126) add_operator -> .

    EX              reduce using rule 126 (add_operator -> .)
    ID              reduce using rule 126 (add_operator -> .)
    INT             reduce using rule 126 (add_operator -> .)
    FLOAT           reduce using rule 126 (add_operator -> .)
    TRUE            reduce using rule 126 (add_operator -> .)
    FALSE           reduce using rule 126 (add_operator -> .)
    STRING          reduce using rule 126 (add_operator -> .)
    CAPIGAME        reduce using rule 126 (add_operator -> .)
    TAIL            reduce using rule 126 (add_operator -> .)
    LAST            reduce using rule 126 (add_operator -> .)
    CREATE_TEXT     reduce using rule 126 (add_operator -> .)
    POW             reduce using rule 126 (add_operator -> .)
    SQRT            reduce using rule 126 (add_operator -> .)
    TERMS           reduce using rule 126 (add_operator -> .)
    LEFTPAR         reduce using rule 126 (add_operator -> .)
    RELOP           reduce using rule 126 (add_operator -> .)
    LOGIC           reduce using rule 126 (add_operator -> .)
    COMMA           reduce using rule 126 (add_operator -> .)
    RIGHTPAR        reduce using rule 126 (add_operator -> .)
    SEMICOLON       reduce using rule 126 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 126 (add_operator -> .)

    add_operator                   shift and go to state 291

state 254

    (127) factor -> factor_action1 LEFTPAR expression . RIGHTPAR factor_action2

    RIGHTPAR        shift and go to state 292


state 255

    (48) pow -> POW pow_action1 LEFTPAR expression COMMA . expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 293
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 256

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 294


state 257

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 295

state 258

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CAPIGAME        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    TAIL            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    LAST            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    POW             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SQRT            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 259

    (84) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 84 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 260

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 296


state 261

    (20) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    POW             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SQRT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 262

    (21) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 21 (recstatement -> statement recstatement .)


state 263

    (23) statement -> assign SEMICOLON .

    ID              reduce using rule 23 (statement -> assign SEMICOLON .)
    IF              reduce using rule 23 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 23 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 23 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> assign SEMICOLON .)
    CAPIGAME        reduce using rule 23 (statement -> assign SEMICOLON .)
    TAIL            reduce using rule 23 (statement -> assign SEMICOLON .)
    LAST            reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> assign SEMICOLON .)
    POW             reduce using rule 23 (statement -> assign SEMICOLON .)
    SQRT            reduce using rule 23 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> assign SEMICOLON .)


state 264

    (27) statement -> write SEMICOLON .

    ID              reduce using rule 27 (statement -> write SEMICOLON .)
    IF              reduce using rule 27 (statement -> write SEMICOLON .)
    VAR             reduce using rule 27 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> write SEMICOLON .)
    FOR             reduce using rule 27 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> write SEMICOLON .)
    CAPIGAME        reduce using rule 27 (statement -> write SEMICOLON .)
    TAIL            reduce using rule 27 (statement -> write SEMICOLON .)
    LAST            reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 27 (statement -> write SEMICOLON .)
    POW             reduce using rule 27 (statement -> write SEMICOLON .)
    SQRT            reduce using rule 27 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 27 (statement -> write SEMICOLON .)


state 265

    (28) statement -> return SEMICOLON .

    ID              reduce using rule 28 (statement -> return SEMICOLON .)
    IF              reduce using rule 28 (statement -> return SEMICOLON .)
    VAR             reduce using rule 28 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 28 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> return SEMICOLON .)
    FOR             reduce using rule 28 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> return SEMICOLON .)
    CAPIGAME        reduce using rule 28 (statement -> return SEMICOLON .)
    TAIL            reduce using rule 28 (statement -> return SEMICOLON .)
    LAST            reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 28 (statement -> return SEMICOLON .)
    POW             reduce using rule 28 (statement -> return SEMICOLON .)
    SQRT            reduce using rule 28 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 28 (statement -> return SEMICOLON .)


state 266

    (29) statement -> functioncall SEMICOLON .

    ID              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CAPIGAME        reduce using rule 29 (statement -> functioncall SEMICOLON .)
    TAIL            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    LAST            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 29 (statement -> functioncall SEMICOLON .)
    POW             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SQRT            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 29 (statement -> functioncall SEMICOLON .)


state 267

    (30) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CAPIGAME        reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    TAIL            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    LAST            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    POW             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SQRT            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 30 (statement -> nestedassign SEMICOLON .)


state 268

    (31) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CAPIGAME        reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    TAIL            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    LAST            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    POW             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SQRT            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 31 (statement -> specialfunction SEMICOLON .)


state 269

    (65) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 297


state 270

    (140) assign_list -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 298


state 271

    (66) assign -> assign_list EQUAL . assign_action2 expression
    (68) assign_action2 -> .

    EX              reduce using rule 68 (assign_action2 -> .)
    ID              reduce using rule 68 (assign_action2 -> .)
    INT             reduce using rule 68 (assign_action2 -> .)
    FLOAT           reduce using rule 68 (assign_action2 -> .)
    TRUE            reduce using rule 68 (assign_action2 -> .)
    FALSE           reduce using rule 68 (assign_action2 -> .)
    STRING          reduce using rule 68 (assign_action2 -> .)
    CAPIGAME        reduce using rule 68 (assign_action2 -> .)
    TAIL            reduce using rule 68 (assign_action2 -> .)
    LAST            reduce using rule 68 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 68 (assign_action2 -> .)
    POW             reduce using rule 68 (assign_action2 -> .)
    SQRT            reduce using rule 68 (assign_action2 -> .)
    RELOP           reduce using rule 68 (assign_action2 -> .)
    LOGIC           reduce using rule 68 (assign_action2 -> .)
    TERMS           reduce using rule 68 (assign_action2 -> .)
    LEFTPAR         reduce using rule 68 (assign_action2 -> .)
    SEMICOLON       reduce using rule 68 (assign_action2 -> .)

    assign_action2                 shift and go to state 299

state 272

    (69) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (70) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 300
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 273

    (96) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (97) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (98) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (99) recwrite -> . expression action_recwrite_exp
    (100) recwrite -> . STRING action_recwrite_cte
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 303
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    recwrite                       shift and go to state 301
    expression                     shift and go to state 302
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 274

    (103) return -> RETURN expression .

    SEMICOLON       reduce using rule 103 (return -> RETURN expression .)


state 275

    (145) nestedassign -> nestedvalue EQUAL . expression
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    nestedvalue                    shift and go to state 75
    expression                     shift and go to state 304
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 276

    (76) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 305


state 277

    (80) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (81) while_action1 -> .

    LEFTPAR         reduce using rule 81 (while_action1 -> .)

    while_action1                  shift and go to state 306

state 278

    (86) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 86 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 279

    (104) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    EX              reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 104 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)


state 280

    (108) recfuncexp -> expression COMMA . recfuncexp
    (108) recfuncexp -> . expression COMMA recfuncexp
    (109) recfuncexp -> . expression recfunc_action1
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 236
    recfuncexp                     shift and go to state 307
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 281

    (109) recfuncexp -> expression recfunc_action1 .

    RIGHTPAR        reduce using rule 109 (recfuncexp -> expression recfunc_action1 .)


state 282

    (141) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    RIGHTBRACKET    reduce using rule 141 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    TERMS           reduce using rule 141 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    EX              reduce using rule 141 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RELOP           reduce using rule 141 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    LOGIC           reduce using rule 141 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    COMMA           reduce using rule 141 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RIGHTPAR        reduce using rule 141 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    SEMICOLON       reduce using rule 141 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 283

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 308
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 284

    (60) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 309
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 285

    (59) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 59 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 59 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 59 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 59 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 59 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 59 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 59 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 59 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)


state 286

    (61) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 310
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 287

    (64) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 311
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 288

    (111) expression -> exp RELOP relop_action1 exp . relop_action2
    (115) relop_action2 -> .

    COMMA           reduce using rule 115 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 115 (relop_action2 -> .)
    SEMICOLON       reduce using rule 115 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 115 (relop_action2 -> .)

    relop_action2                  shift and go to state 312

state 289

    (112) expression -> exp LOGIC logic_action1 exp . logic_action2
    (117) logic_action2 -> .

    COMMA           reduce using rule 117 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 117 (logic_action2 -> .)
    SEMICOLON       reduce using rule 117 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 117 (logic_action2 -> .)

    logic_action2                  shift and go to state 313

state 290

    (121) recexp -> EX add_operator . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    exp                            shift and go to state 314
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 291

    (125) recterm -> TERMS add_operator . term
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    term                           shift and go to state 315
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 292

    (127) factor -> factor_action1 LEFTPAR expression RIGHTPAR . factor_action2
    (131) factor_action2 -> .

    TERMS           reduce using rule 131 (factor_action2 -> .)
    EX              reduce using rule 131 (factor_action2 -> .)
    RELOP           reduce using rule 131 (factor_action2 -> .)
    LOGIC           reduce using rule 131 (factor_action2 -> .)
    COMMA           reduce using rule 131 (factor_action2 -> .)
    RIGHTPAR        reduce using rule 131 (factor_action2 -> .)
    SEMICOLON       reduce using rule 131 (factor_action2 -> .)
    RIGHTBRACKET    reduce using rule 131 (factor_action2 -> .)

    factor_action2                 shift and go to state 316

state 293

    (48) pow -> POW pow_action1 LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 317


state 294

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 318

state 295

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .

    VOID            reduce using rule 8 (start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 296

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    POW             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SQRT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 297

    (65) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (68) assign_action2 -> .

    EX              reduce using rule 68 (assign_action2 -> .)
    ID              reduce using rule 68 (assign_action2 -> .)
    INT             reduce using rule 68 (assign_action2 -> .)
    FLOAT           reduce using rule 68 (assign_action2 -> .)
    TRUE            reduce using rule 68 (assign_action2 -> .)
    FALSE           reduce using rule 68 (assign_action2 -> .)
    STRING          reduce using rule 68 (assign_action2 -> .)
    CAPIGAME        reduce using rule 68 (assign_action2 -> .)
    TAIL            reduce using rule 68 (assign_action2 -> .)
    LAST            reduce using rule 68 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 68 (assign_action2 -> .)
    POW             reduce using rule 68 (assign_action2 -> .)
    SQRT            reduce using rule 68 (assign_action2 -> .)
    RELOP           reduce using rule 68 (assign_action2 -> .)
    LOGIC           reduce using rule 68 (assign_action2 -> .)
    TERMS           reduce using rule 68 (assign_action2 -> .)
    LEFTPAR         reduce using rule 68 (assign_action2 -> .)
    SEMICOLON       reduce using rule 68 (assign_action2 -> .)

    assign_action2                 shift and go to state 319

state 298

    (140) assign_list -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 320
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 299

    (66) assign -> assign_list EQUAL assign_action2 . expression
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 321
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 300

    (69) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (70) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (71) condition_action1 -> .

    RIGHTPAR        reduce using rule 71 (condition_action1 -> .)

    condition_action1              shift and go to state 322

state 301

    (96) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 323


state 302

    (97) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (99) recwrite -> expression . action_recwrite_exp
    (101) action_recwrite_exp -> .

    COMMA           reduce using rule 101 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 101 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 324

state 303

    (98) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (100) recwrite -> STRING . action_recwrite_cte
    (157) string -> STRING .
    (102) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 102 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 102 (action_recwrite_cte -> .)
    TERMS           reduce using rule 157 (string -> STRING .)
    EX              reduce using rule 157 (string -> STRING .)
    RELOP           reduce using rule 157 (string -> STRING .)
    LOGIC           reduce using rule 157 (string -> STRING .)
    COMMA           reduce using rule 102 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 102 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 157 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 157 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 325

state 304

    (145) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 145 (nestedassign -> nestedvalue EQUAL expression .)


state 305

    (76) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (65) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (66) assign -> . assign_list EQUAL assign_action2 expression
    (140) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 327

    assign                         shift and go to state 326
    assign_list                    shift and go to state 222

state 306

    (80) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 328


state 307

    (108) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 108 (recfuncexp -> expression COMMA recfuncexp .)


state 308

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 329


state 309

    (60) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 330


state 310

    (61) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 331


state 311

    (64) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 332


state 312

    (111) expression -> exp RELOP relop_action1 exp relop_action2 .

    COMMA           reduce using rule 111 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 111 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    SEMICOLON       reduce using rule 111 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 111 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 313

    (112) expression -> exp LOGIC logic_action1 exp logic_action2 .

    COMMA           reduce using rule 112 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 112 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    SEMICOLON       reduce using rule 112 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 112 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 314

    (121) recexp -> EX add_operator exp .

    RELOP           reduce using rule 121 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 121 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 121 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 121 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 121 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 121 (recexp -> EX add_operator exp .)


state 315

    (125) recterm -> TERMS add_operator term .

    EX              reduce using rule 125 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 125 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 125 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 125 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 125 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 125 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 125 (recterm -> TERMS add_operator term .)


state 316

    (127) factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .

    TERMS           reduce using rule 127 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    EX              reduce using rule 127 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RELOP           reduce using rule 127 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    LOGIC           reduce using rule 127 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    COMMA           reduce using rule 127 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTPAR        reduce using rule 127 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    SEMICOLON       reduce using rule 127 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTBRACKET    reduce using rule 127 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)


state 317

    (48) pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)


state 318

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 333

state 319

    (65) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 334
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 320

    (140) assign_list -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (143) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 143 (list_action_3 -> .)

    list_action_3                  shift and go to state 335

state 321

    (66) assign -> assign_list EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 66 (assign -> assign_list EQUAL assign_action2 expression .)


state 322

    (69) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (70) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 336


state 323

    (96) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 96 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 324

    (97) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (99) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 337
    RIGHTPAR        reduce using rule 99 (recwrite -> expression action_recwrite_exp .)


state 325

    (98) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (100) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 338
    RIGHTPAR        reduce using rule 100 (recwrite -> STRING action_recwrite_cte .)


state 326

    (76) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 339


state 327

    (65) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (140) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (67) assign_action1 -> .
    (142) list_action1 -> .

    EQUAL           reduce using rule 67 (assign_action1 -> .)
    LEFTBRACKET     reduce using rule 142 (list_action1 -> .)

    assign_action1                 shift and go to state 269
    list_action1                   shift and go to state 270

state 328

    (80) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 340
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 329

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 341
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 330

    (60) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 342
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 331

    (61) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 61 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 61 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 61 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 61 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 61 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 61 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 61 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 61 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 332

    (64) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 343
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 333

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .

    RIGHTKEY        reduce using rule 10 (run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 334

    (65) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 65 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 335

    (140) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 344


state 336

    (69) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (70) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 345

state 337

    (97) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (97) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (98) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (99) recwrite -> . expression action_recwrite_exp
    (100) recwrite -> . STRING action_recwrite_cte
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 303
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 302
    recwrite                       shift and go to state 346
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 338

    (98) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (97) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (98) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (99) recwrite -> . expression action_recwrite_exp
    (100) recwrite -> . STRING action_recwrite_cte
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 303
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    recwrite                       shift and go to state 347
    expression                     shift and go to state 302
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 339

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (77) for_action1 -> .

    EX              reduce using rule 77 (for_action1 -> .)
    ID              reduce using rule 77 (for_action1 -> .)
    INT             reduce using rule 77 (for_action1 -> .)
    FLOAT           reduce using rule 77 (for_action1 -> .)
    TRUE            reduce using rule 77 (for_action1 -> .)
    FALSE           reduce using rule 77 (for_action1 -> .)
    STRING          reduce using rule 77 (for_action1 -> .)
    CAPIGAME        reduce using rule 77 (for_action1 -> .)
    TAIL            reduce using rule 77 (for_action1 -> .)
    LAST            reduce using rule 77 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 77 (for_action1 -> .)
    POW             reduce using rule 77 (for_action1 -> .)
    SQRT            reduce using rule 77 (for_action1 -> .)
    SEMICOLON       reduce using rule 77 (for_action1 -> .)
    RELOP           reduce using rule 77 (for_action1 -> .)
    LOGIC           reduce using rule 77 (for_action1 -> .)
    TERMS           reduce using rule 77 (for_action1 -> .)
    LEFTPAR         reduce using rule 77 (for_action1 -> .)

    for_action1                    shift and go to state 348

state 340

    (80) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (82) while_action2 -> .

    RIGHTPAR        reduce using rule 82 (while_action2 -> .)

    while_action2                  shift and go to state 349

state 341

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 350


state 342

    (60) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 351


state 343

    (64) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 352


state 344

    (140) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    EQUAL           reduce using rule 140 (assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 345

    (69) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (70) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (72) condition_action2 -> .
    (73) condition_action3 -> .

    ID              reduce using rule 72 (condition_action2 -> .)
    IF              reduce using rule 72 (condition_action2 -> .)
    VAR             reduce using rule 72 (condition_action2 -> .)
    PRINT           reduce using rule 72 (condition_action2 -> .)
    RETURN          reduce using rule 72 (condition_action2 -> .)
    FOR             reduce using rule 72 (condition_action2 -> .)
    WHILE           reduce using rule 72 (condition_action2 -> .)
    CAPIGAME        reduce using rule 72 (condition_action2 -> .)
    TAIL            reduce using rule 72 (condition_action2 -> .)
    LAST            reduce using rule 72 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 72 (condition_action2 -> .)
    POW             reduce using rule 72 (condition_action2 -> .)
    SQRT            reduce using rule 72 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 72 (condition_action2 -> .)
    ELSE            reduce using rule 73 (condition_action3 -> .)

    condition_action2              shift and go to state 353
    condition_action3              shift and go to state 354

state 346

    (97) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 97 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 347

    (98) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 98 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 348

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 355
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 349

    (80) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 356


state 350

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 357
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 351

    (60) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 60 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 60 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 60 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 60 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 60 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 60 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 60 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 60 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 352

    (64) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 64 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 64 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 64 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 64 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 64 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 64 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 64 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 64 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 353

    (69) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CAPIGAME        reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    TAIL            reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    LAST            reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    POW             reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SQRT            reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 69 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 354

    (70) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 358


state 355

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (78) for_action2 -> .

    SEMICOLON       reduce using rule 78 (for_action2 -> .)

    for_action2                    shift and go to state 359

state 356

    (80) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 360

state 357

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 361


state 358

    (70) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 362

state 359

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 363


state 360

    (80) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (83) while_action3 -> .

    ID              reduce using rule 83 (while_action3 -> .)
    IF              reduce using rule 83 (while_action3 -> .)
    VAR             reduce using rule 83 (while_action3 -> .)
    PRINT           reduce using rule 83 (while_action3 -> .)
    RETURN          reduce using rule 83 (while_action3 -> .)
    FOR             reduce using rule 83 (while_action3 -> .)
    WHILE           reduce using rule 83 (while_action3 -> .)
    CAPIGAME        reduce using rule 83 (while_action3 -> .)
    TAIL            reduce using rule 83 (while_action3 -> .)
    LAST            reduce using rule 83 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 83 (while_action3 -> .)
    POW             reduce using rule 83 (while_action3 -> .)
    SQRT            reduce using rule 83 (while_action3 -> .)
    RIGHTKEY        reduce using rule 83 (while_action3 -> .)

    while_action3                  shift and go to state 364

state 361

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (111) expression -> . exp RELOP relop_action1 exp relop_action2
    (112) expression -> . exp LOGIC logic_action1 exp logic_action2
    (113) expression -> . exp
    (118) exp -> . term exp_action recexp
    (119) exp -> . term exp_action
    (122) term -> . factor term_action recterm
    (123) term -> . factor term_action
    (127) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (128) factor -> . EX cte
    (129) factor -> . cte
    (130) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . nestedvalue
    (153) cte -> . functioncall
    (154) cte -> . listaccess
    (155) cte -> . specialfunction
    (156) id -> . ID
    (158) int -> . INT
    (159) float -> . FLOAT
    (160) bool -> . TRUE
    (161) bool -> . FALSE
    (157) string -> . STRING
    (144) nestedvalue -> . ID DOT ID
    (104) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (105) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (141) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . tail
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . pow
    (47) specialfunction -> . sqrt
    (51) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (52) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (53) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (54) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (57) tail -> . TAIL LEFTPAR RIGHTPAR
    (58) last -> . LAST LEFTPAR RIGHTPAR
    (60) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (59) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (63) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (62) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (55) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (56) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (61) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (64) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT LEFTPAR expression RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 130 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    CAPIGAME        shift and go to state 101
    TAIL            shift and go to state 102
    LAST            shift and go to state 103
    CREATE_TEXT     shift and go to state 104
    POW             shift and go to state 105
    SQRT            shift and go to state 106

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 365
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    init                           shift and go to state 86
    size                           shift and go to state 87
    head                           shift and go to state 88
    tail                           shift and go to state 89
    last                           shift and go to state 90
    set_fill                       shift and go to state 91
    set_title                      shift and go to state 92
    get_event                      shift and go to state 93
    update                         shift and go to state 94
    window_h                       shift and go to state 95
    window_w                       shift and go to state 96
    set_dimension                  shift and go to state 97
    create_text                    shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100

state 362

    (70) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (72) condition_action2 -> .

    ID              reduce using rule 72 (condition_action2 -> .)
    IF              reduce using rule 72 (condition_action2 -> .)
    VAR             reduce using rule 72 (condition_action2 -> .)
    PRINT           reduce using rule 72 (condition_action2 -> .)
    RETURN          reduce using rule 72 (condition_action2 -> .)
    FOR             reduce using rule 72 (condition_action2 -> .)
    WHILE           reduce using rule 72 (condition_action2 -> .)
    CAPIGAME        reduce using rule 72 (condition_action2 -> .)
    TAIL            reduce using rule 72 (condition_action2 -> .)
    LAST            reduce using rule 72 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 72 (condition_action2 -> .)
    POW             reduce using rule 72 (condition_action2 -> .)
    SQRT            reduce using rule 72 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 72 (condition_action2 -> .)

    condition_action2              shift and go to state 366

state 363

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (65) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (66) assign -> . assign_list EQUAL assign_action2 expression
    (140) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 327

    assign                         shift and go to state 367
    assign_list                    shift and go to state 222

state 364

    (80) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CAPIGAME        reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    TAIL            reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    LAST            reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    POW             reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SQRT            reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 80 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 365

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 368


state 366

    (70) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CAPIGAME        reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    TAIL            reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    LAST            reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    POW             reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SQRT            reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 70 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 367

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 369


state 368

    (51) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 51 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 51 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 51 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 51 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 51 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 51 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 51 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 51 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 369

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 370


state 370

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 141

    block                          shift and go to state 371

state 371

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (79) for_action3 -> .

    ID              reduce using rule 79 (for_action3 -> .)
    IF              reduce using rule 79 (for_action3 -> .)
    VAR             reduce using rule 79 (for_action3 -> .)
    PRINT           reduce using rule 79 (for_action3 -> .)
    RETURN          reduce using rule 79 (for_action3 -> .)
    FOR             reduce using rule 79 (for_action3 -> .)
    WHILE           reduce using rule 79 (for_action3 -> .)
    CAPIGAME        reduce using rule 79 (for_action3 -> .)
    TAIL            reduce using rule 79 (for_action3 -> .)
    LAST            reduce using rule 79 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 79 (for_action3 -> .)
    POW             reduce using rule 79 (for_action3 -> .)
    SQRT            reduce using rule 79 (for_action3 -> .)
    RIGHTKEY        reduce using rule 79 (for_action3 -> .)

    for_action3                    shift and go to state 372

state 372

    (76) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CAPIGAME        reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    TAIL            reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    LAST            reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    POW             reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SQRT            reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 76 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EX in state 127 resolved as shift
WARNING: shift/reduce conflict for EX in state 129 resolved as shift
WARNING: shift/reduce conflict for EX in state 136 resolved as shift
WARNING: shift/reduce conflict for VAR in state 137 resolved as shift
WARNING: shift/reduce conflict for EX in state 149 resolved as shift
WARNING: shift/reduce conflict for EX in state 168 resolved as shift
WARNING: shift/reduce conflict for EX in state 183 resolved as shift
WARNING: shift/reduce conflict for RIGHTPAR in state 183 resolved as shift
WARNING: shift/reduce conflict for EX in state 185 resolved as shift
WARNING: shift/reduce conflict for EX in state 187 resolved as shift
WARNING: shift/reduce conflict for EX in state 188 resolved as shift
WARNING: shift/reduce conflict for EX in state 193 resolved as shift
WARNING: shift/reduce conflict for EX in state 194 resolved as shift
WARNING: shift/reduce conflict for EX in state 199 resolved as shift
WARNING: shift/reduce conflict for VAR in state 206 resolved as shift
WARNING: shift/reduce conflict for EX in state 227 resolved as shift
WARNING: shift/reduce conflict for EX in state 248 resolved as shift
WARNING: shift/reduce conflict for EX in state 249 resolved as shift
WARNING: shift/reduce conflict for EX in state 255 resolved as shift
WARNING: shift/reduce conflict for EX in state 272 resolved as shift
WARNING: shift/reduce conflict for EX in state 273 resolved as shift
WARNING: shift/reduce conflict for EX in state 275 resolved as shift
WARNING: shift/reduce conflict for EX in state 280 resolved as shift
WARNING: shift/reduce conflict for EX in state 283 resolved as shift
WARNING: shift/reduce conflict for EX in state 284 resolved as shift
WARNING: shift/reduce conflict for EX in state 286 resolved as shift
WARNING: shift/reduce conflict for EX in state 287 resolved as shift
WARNING: shift/reduce conflict for EX in state 290 resolved as shift
WARNING: shift/reduce conflict for EX in state 291 resolved as shift
WARNING: shift/reduce conflict for EX in state 298 resolved as shift
WARNING: shift/reduce conflict for EX in state 299 resolved as shift
WARNING: shift/reduce conflict for EX in state 319 resolved as shift
WARNING: shift/reduce conflict for EX in state 328 resolved as shift
WARNING: shift/reduce conflict for EX in state 329 resolved as shift
WARNING: shift/reduce conflict for EX in state 330 resolved as shift
WARNING: shift/reduce conflict for EX in state 332 resolved as shift
WARNING: shift/reduce conflict for EX in state 337 resolved as shift
WARNING: shift/reduce conflict for EX in state 338 resolved as shift
WARNING: shift/reduce conflict for EX in state 348 resolved as shift
WARNING: shift/reduce conflict for EX in state 350 resolved as shift
WARNING: shift/reduce conflict for EX in state 361 resolved as shift
WARNING: reduce/reduce conflict in state 303 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 303
