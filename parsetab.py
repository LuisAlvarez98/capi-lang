
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BAR CAPIGAME COLON COMMA COMMENT CREATE_TEXT DOT DRAW ELSE EQUAL EX FALSE FIND FLOAT FOR FUNC GET_EVENT GLOBAL HEAD ID IF INIT INT LAST LEFTBRACKET LEFTKEY LEFTPAR LIST LOGIC MAIN OBJECT POW PRINT QUIT RAND RELOP RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR RUN SEMICOLON SET_DIMENSION SET_FILL SET_TITLE SIZE SQRT START STRING TBOOL TERMS TFLOAT TINT TLIST TOBJECT TRUE TSTRING UPDATE VAR VOID WHILE WINDOW_H WINDOW_W \n    capi : capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n    \n    capi_action1 :\n    \n    capi_action2 :\n    \n    global : GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON\n    \n    start : VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    start_action1 :\n    \n    run : VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    run_action1 :\n    \n    main_cont :\n     \n    vars :    VAR recids COLON type EQUAL expression SEMICOLON vars \n            | VAR recids COLON type EQUAL expression SEMICOLON\n            | VAR recids COLON type SEMICOLON vars\n            | VAR recids COLON type SEMICOLON\n     \n    recids : ID \n           | ID COMMA recids \n    \n    block : COLON LEFTKEY recstatement RIGHTKEY SEMICOLON\n          | COLON LEFTKEY RIGHTKEY SEMICOLON\n     \n    recstatement : statement recstatement  \n                 | statement  \n    \n    statement : assign SEMICOLON\n              | condition\n              | vars\n              | loop\n              | write SEMICOLON\n              | return SEMICOLON\n              | functioncall SEMICOLON\n              | specialfunction SEMICOLON\n    \n    specialfunction : draw\n                    | init\n                    | size\n                    | head\n                    | find\n                    | last\n                    | set_fill\n                    | set_title\n                    | get_event\n                    | update\n                    | window_h\n                    | window_w\n                    | set_dimension\n                    | create_text\n                    | rand\n                    | pow\n                    | sqrt\n                    | quit\n    \n    quit : QUIT LEFTPAR RIGHTPAR\n    \n    pow : POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR\n    \n    pow_action1 :\n    \n    sqrt : SQRT sqrt_action1 LEFTPAR expression RIGHTPAR\n    \n    sqrt_action1 :\n    \n    draw : CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    init : CAPIGAME DOT INIT LEFTPAR RIGHTPAR\n    \n    size : ID DOT SIZE LEFTPAR RIGHTPAR\n    \n    head : ID DOT HEAD LEFTPAR RIGHTPAR\n    \n    window_h : CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR\n    \n    window_w : CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR\n    \n    rand : CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR\n    \n    find : ID DOT FIND LEFTPAR expression RIGHTPAR\n    \n    last : ID DOT LAST LEFTPAR RIGHTPAR\n    \n    set_title : CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR\n    \n    set_fill : CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    set_dimension : CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR\n    \n    update : CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR\n    \n    get_event : CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR\n    \n    create_text : CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    assign : ID assign_action1 EQUAL assign_action2 expression \n           | assign_list EQUAL assign_action2 expression\n    \n    assign_action1 : \n    \n    assign_action2 : \n     condition : IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action2\n                  | IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action3 ELSE  block condition_action2\n     \n    condition_action1 :\n    \n    condition_action2 :\n    \n    condition_action3 :\n    \n    loop : for\n        | while\n    \n    for : FOR startscope_action LEFTPAR  assign  SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3\n    \n    for_action1 : \n    \n    for_action2 : \n    \n    for_action3 : \n    \n    while : WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3\n    \n    while_action1 :\n    \n    while_action2 :\n    \n    while_action3 :\n    \n    function : type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n    \n    startscope_action : \n    \n    function_action1 :\n    \n    function_action2 :\n    \n    function_action3 :\n    \n    recparams : ID COLON type\n              | ID COLON type COMMA recparams\n    \n    recfunc : function recfunc\n            | function\n     \n    write : PRINT LEFTPAR recwrite RIGHTPAR \n     \n    recwrite : expression action_recwrite_exp COMMA recwrite \n               | STRING action_recwrite_cte COMMA  recwrite \n               | expression action_recwrite_exp \n               | STRING action_recwrite_cte\n    \n    action_recwrite_exp :\n    \n    action_recwrite_cte : \n    \n     return : RETURN expression\n    \n    functioncall : ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR \n                 | ID function_call_action1 LEFTPAR  function_call_action2 RIGHTPAR \n    \n    function_call_action1 : \n    \n    function_call_action2 : \n    \n    recfuncexp : expression COMMA recfuncexp\n               | expression recfunc_action1\n    \n    recfunc_action1 :\n    \n    expression : exp RELOP relop_action1 exp relop_action2\n               | exp LOGIC logic_action1 exp logic_action2\n               | exp\n    \n    relop_action1 : \n    \n    relop_action2 : \n    \n    logic_action1 : \n    \n    logic_action2 : \n     \n    exp : term exp_action recexp\n        | term exp_action \n        \n    exp_action :\n     \n    recexp : EX add_operator exp \n     \n    term : factor term_action recterm \n         | factor term_action \n    \n    term_action :\n     \n    recterm : TERMS add_operator term\n    \n    add_operator :\n     factor : factor_action1 LEFTPAR expression RIGHTPAR factor_action2 \n               | EX cte \n               | cte \n    \n    factor_action1 :\n    \n    factor_action2 :\n    \n    type : primitivetype\n        | TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1\n    \n    action_list1 :\n    \n    primitivetype : TINT\n                  | TFLOAT\n                  | TSTRING\n                  | TBOOL\n    \n    assign_list : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    listaccess : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    list_action1 :\n    \n    list_action_3 :\n    \n    cte :    \n        | id\n        | int\n        | float\n        | bool\n        | string\n        | functioncall\n        | listaccess\n        | specialfunction\n    \n    id : ID\n    \n    string : STRING\n    \n    int : INT\n    \n    float : FLOAT\n    \n    bool : TRUE \n         | FALSE\n    '
    
_lr_action_items = {'MAIN':([0,2,3,4,7,16,21,60,138,141,263,265,280,300,],[-5,5,17,18,-99,25,-98,-7,-89,-91,-88,-20,-90,-19,]),'GLOBAL':([0,2,],[-5,6,]),'VOID':([0,2,3,7,28,34,35,36,43,44,45,46,54,55,56,60,106,138,141,263,265,280,299,300,],[-5,9,9,9,37,37,37,-6,37,-6,-6,58,-6,58,58,-7,58,-89,-91,-88,-20,-90,-8,-19,]),'TLIST':([0,2,3,7,60,61,114,138,141,263,265,280,300,],[-5,11,11,11,-7,11,11,-89,-91,-88,-20,-90,-19,]),'TINT':([0,2,3,7,24,60,61,114,138,141,263,265,280,300,],[-5,12,12,12,12,-7,12,12,-89,-91,-88,-20,-90,-19,]),'TFLOAT':([0,2,3,7,24,60,61,114,138,141,263,265,280,300,],[-5,13,13,13,13,-7,13,13,-89,-91,-88,-20,-90,-19,]),'TSTRING':([0,2,3,7,24,60,61,114,138,141,263,265,280,300,],[-5,14,14,14,14,-7,14,14,-89,-91,-88,-20,-90,-19,]),'TBOOL':([0,2,3,7,24,60,61,114,138,141,263,265,280,300,],[-5,15,15,15,15,-7,15,15,-89,-91,-88,-20,-90,-19,]),'$end':([1,131,170,171,205,],[0,-4,-3,-2,-1,]),'COLON':([5,6,17,18,25,49,50,63,65,67,113,116,118,137,140,177,179,207,210,231,261,298,322,341,361,363,375,],[19,20,26,27,33,61,-17,114,-95,-95,-18,139,139,-94,-94,-95,-95,-12,139,139,139,-12,139,139,139,139,139,]),'FUNC':([8,9,10,12,13,14,15,37,58,119,142,],[22,23,-136,-139,-140,-141,-142,47,110,-138,-137,]),'EQUAL':([10,12,13,14,15,112,119,142,222,223,272,331,349,],[-136,-139,-140,-141,-142,134,-138,-137,-71,274,301,-71,-143,]),'SEMICOLON':([10,12,13,14,15,48,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,109,112,119,129,130,134,142,160,161,162,164,165,168,169,174,197,198,199,200,202,212,214,218,219,220,221,228,233,236,237,239,241,244,245,246,247,251,252,253,254,255,256,259,264,274,277,281,284,285,288,292,293,294,295,296,301,303,316,317,318,319,320,321,323,325,327,330,335,336,339,344,353,356,357,360,364,372,373,],[-136,-139,-140,-141,-142,60,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,131,135,-138,170,171,-147,-137,-117,-124,-128,-147,-133,-49,205,208,-118,-120,-123,-127,-132,265,267,268,269,270,271,-147,-109,-56,-57,-62,-55,-67,-66,-58,-59,-147,-147,-122,-130,-126,-130,-52,300,-72,-107,-108,-144,-61,-63,-119,-121,-147,-147,-135,-72,-147,-115,-116,-125,-129,-131,-50,-147,-70,-100,344,-65,-60,-69,-81,-147,-64,-68,-82,368,374,-54,]),'COMMA':([10,12,13,14,15,50,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,119,124,136,142,143,159,160,161,162,164,165,166,168,180,186,188,194,195,196,197,198,199,200,202,203,233,234,236,237,239,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,259,276,281,282,284,285,286,287,288,291,292,293,294,295,296,306,307,311,312,315,316,317,318,319,320,321,328,329,333,335,336,342,343,346,355,356,357,362,373,],[-136,-139,-140,-141,-142,62,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-138,-147,176,-137,-111,196,-117,-124,-128,-147,-133,-147,-49,-147,-147,-147,-147,-147,-147,-118,-120,-123,-127,-132,258,-109,282,-56,-57,-62,286,-55,287,-67,-66,-58,-59,289,290,291,-147,-147,-122,-130,-126,-130,-52,-147,-108,-147,-144,-61,-147,-147,-63,-147,-119,-121,-147,-147,-135,-105,-106,333,334,337,-115,-116,-125,-129,-131,-50,342,343,-147,-65,-60,-147,-147,355,-147,-64,-68,366,-54,]),'RIGHTPAR':([10,12,13,14,15,51,52,64,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,115,117,119,127,136,142,143,160,161,162,164,165,167,168,173,180,182,183,184,185,187,189,190,191,192,193,197,198,199,200,201,202,204,209,232,233,234,236,237,238,239,241,243,244,245,246,247,251,252,253,254,255,256,257,258,259,260,275,276,281,282,283,284,285,288,289,290,292,293,294,295,296,297,304,305,306,307,310,313,314,316,317,318,319,320,321,326,328,329,332,334,335,336,337,342,343,345,347,348,351,352,354,356,357,366,370,373,374,],[-136,-139,-140,-141,-142,65,67,-93,-93,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,137,140,-138,168,-96,-137,-111,-117,-124,-128,-147,-133,-147,-49,207,233,236,237,-147,239,241,-147,244,245,246,247,-118,-120,-123,-127,-147,-132,259,-97,281,-109,-114,-56,-57,285,-62,-55,288,-67,-66,-58,-59,-147,-147,-122,-130,-126,-130,296,-147,-52,298,-147,-147,-108,-147,-113,-144,-61,-63,-147,-147,-119,-121,-147,-147,-135,321,-75,327,-105,-106,-112,335,336,-115,-116,-125,-129,-131,-50,341,-103,-104,-147,-147,-65,-60,-147,-147,-147,-86,356,357,-101,-102,361,-64,-68,-147,373,-54,375,]),'BAR':([11,12,13,14,15,32,],[24,-139,-140,-141,-142,42,]),'LEFTKEY':([19,20,26,27,33,139,],[28,29,34,35,43,178,]),'ID':([22,23,39,51,52,53,62,124,134,135,143,144,164,166,167,175,176,178,180,184,186,188,189,194,195,196,197,198,201,208,213,215,216,217,225,226,228,251,252,254,256,258,262,265,267,268,269,270,271,274,275,276,282,286,287,289,290,291,294,295,300,301,302,303,308,323,332,333,334,337,342,343,344,350,353,355,358,365,366,367,368,369,371,376,377,],[30,31,50,63,63,77,50,77,77,-16,-111,77,77,77,77,-15,63,222,77,77,77,77,77,77,77,77,-118,-120,77,-14,222,-24,-25,-26,-78,-79,77,77,77,-130,-130,77,-13,-20,-23,-27,-28,-29,-30,-72,77,77,77,77,77,77,77,77,77,77,-19,-72,77,77,331,77,77,77,77,77,77,77,-81,-76,77,77,-73,-87,77,-76,331,-84,-74,-83,-80,]),'VAR':([29,135,175,178,208,213,215,216,217,225,226,262,265,267,268,269,270,271,300,350,358,365,367,369,371,376,377,],[39,39,-15,39,39,39,-24,-25,-26,-78,-79,-13,-20,-23,-27,-28,-29,-30,-19,-76,-73,-87,-76,-84,-74,-83,-80,]),'LEFTPAR':([30,31,40,41,77,102,103,104,105,111,120,124,125,126,133,134,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,163,166,167,172,180,184,186,188,189,194,195,196,197,198,201,206,222,224,227,228,229,230,251,252,254,256,258,274,275,276,278,279,282,286,287,289,290,291,294,295,301,302,303,309,323,332,333,334,337,342,343,344,353,355,366,],[-92,-92,51,52,-110,124,-51,-53,127,-92,143,-134,166,167,173,-134,-111,-134,182,183,184,185,186,187,188,189,190,191,192,193,194,195,201,-134,-134,-92,-134,-134,-134,-134,-134,-134,-134,-134,-118,-120,-134,260,-110,275,276,-134,-92,-92,-134,-134,-130,-130,-134,-72,-134,-134,308,-85,-134,-134,-134,-134,-134,-134,-134,-134,-72,-134,-134,332,-134,-134,-134,-134,-134,-134,-134,-81,-134,-134,-134,]),'RIGHTKEY':([38,57,107,108,128,135,175,178,208,211,213,215,216,217,225,226,262,265,266,267,268,269,270,271,300,338,350,358,365,367,369,371,376,377,],[48,109,129,130,169,-16,-15,212,-14,264,-22,-24,-25,-26,-78,-79,-13,-20,-21,-23,-27,-28,-29,-30,-19,-10,-76,-73,-87,-76,-84,-74,-83,-80,]),'LEFTBRACKET':([42,77,121,222,273,331,],[53,-145,144,-145,302,-145,]),'START':([47,59,],[-9,111,]),'RIGHTBRACKET':([53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,144,160,161,162,164,165,168,181,197,198,199,200,202,233,235,236,237,239,241,244,245,246,247,251,252,253,254,255,256,259,281,284,285,288,292,293,294,295,296,302,316,317,318,319,320,321,324,335,336,340,356,357,373,],[-147,119,-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-147,-117,-124,-128,-147,-133,-49,-146,-118,-120,-123,-127,-132,-109,284,-56,-57,-62,-55,-67,-66,-58,-59,-147,-147,-122,-130,-126,-130,-52,-108,-144,-61,-63,-119,-121,-147,-147,-135,-147,-115,-116,-125,-129,-131,-50,-146,-65,-60,349,-64,-68,-54,]),'INT':([53,124,134,143,144,164,166,167,180,184,186,188,189,194,195,196,197,198,201,228,251,252,254,256,258,274,275,276,282,286,287,289,290,291,294,295,301,302,303,323,332,333,334,337,342,343,344,353,355,366,],[78,78,78,-111,78,78,78,78,78,78,78,78,78,78,78,78,-118,-120,78,78,78,78,-130,-130,78,-72,78,78,78,78,78,78,78,78,78,78,-72,78,78,78,78,78,78,78,78,78,-81,78,78,78,]),'FLOAT':([53,124,134,143,144,164,166,167,180,184,186,188,189,194,195,196,197,198,201,228,251,252,254,256,258,274,275,276,282,286,287,289,290,291,294,295,301,302,303,323,332,333,334,337,342,343,344,353,355,366,],[79,79,79,-111,79,79,79,79,79,79,79,79,79,79,79,79,-118,-120,79,79,79,79,-130,-130,79,-72,79,79,79,79,79,79,79,79,79,79,-72,79,79,79,79,79,79,79,79,79,-81,79,79,79,]),'TRUE':([53,124,134,143,144,164,166,167,180,184,186,188,189,194,195,196,197,198,201,228,251,252,254,256,258,274,275,276,282,286,287,289,290,291,294,295,301,302,303,323,332,333,334,337,342,343,344,353,355,366,],[80,80,80,-111,80,80,80,80,80,80,80,80,80,80,80,80,-118,-120,80,80,80,80,-130,-130,80,-72,80,80,80,80,80,80,80,80,80,80,-72,80,80,80,80,80,80,80,80,80,-81,80,80,80,]),'FALSE':([53,124,134,143,144,164,166,167,180,184,186,188,189,194,195,196,197,198,201,228,251,252,254,256,258,274,275,276,282,286,287,289,290,291,294,295,301,302,303,323,332,333,334,337,342,343,344,353,355,366,],[81,81,81,-111,81,81,81,81,81,81,81,81,81,81,81,81,-118,-120,81,81,81,81,-130,-130,81,-72,81,81,81,81,81,81,81,81,81,81,-72,81,81,81,81,81,81,81,81,81,-81,81,81,81,]),'STRING':([53,124,134,143,144,164,166,167,180,184,186,188,189,194,195,196,197,198,201,228,251,252,254,256,258,274,275,276,282,286,287,289,290,291,294,295,301,302,303,323,332,333,334,337,342,343,344,353,355,366,],[82,82,82,-111,82,82,82,82,82,82,82,82,82,82,82,82,-118,-120,82,82,82,82,-130,-130,82,-72,82,307,82,82,82,82,82,82,82,82,-72,82,82,82,82,82,82,82,307,307,-81,82,82,82,]),'CAPIGAME':([53,124,134,135,143,144,164,166,167,175,178,180,184,186,188,189,194,195,196,197,198,201,208,213,215,216,217,225,226,228,251,252,254,256,258,262,265,267,268,269,270,271,274,275,276,282,286,287,289,290,291,294,295,300,301,302,303,323,332,333,334,337,342,343,344,350,353,355,358,365,366,367,369,371,376,377,],[101,101,101,-16,-111,101,101,101,101,-15,101,101,101,101,101,101,101,101,101,-118,-120,101,-14,101,-24,-25,-26,-78,-79,101,101,101,-130,-130,101,-13,-20,-23,-27,-28,-29,-30,-72,101,101,101,101,101,101,101,101,101,101,-19,-72,101,101,101,101,101,101,101,101,101,-81,-76,101,101,-73,-87,101,-76,-84,-74,-83,-80,]),'CREATE_TEXT':([53,124,134,135,143,144,164,166,167,175,178,180,184,186,188,189,194,195,196,197,198,201,208,213,215,216,217,225,226,228,251,252,254,256,258,262,265,267,268,269,270,271,274,275,276,282,286,287,289,290,291,294,295,300,301,302,303,323,332,333,334,337,342,343,344,350,353,355,358,365,366,367,369,371,376,377,],[102,102,102,-16,-111,102,102,102,102,-15,102,102,102,102,102,102,102,102,102,-118,-120,102,-14,102,-24,-25,-26,-78,-79,102,102,102,-130,-130,102,-13,-20,-23,-27,-28,-29,-30,-72,102,102,102,102,102,102,102,102,102,102,-19,-72,102,102,102,102,102,102,102,102,102,-81,-76,102,102,-73,-87,102,-76,-84,-74,-83,-80,]),'POW':([53,124,134,135,143,144,164,166,167,175,178,180,184,186,188,189,194,195,196,197,198,201,208,213,215,216,217,225,226,228,251,252,254,256,258,262,265,267,268,269,270,271,274,275,276,282,286,287,289,290,291,294,295,300,301,302,303,323,332,333,334,337,342,343,344,350,353,355,358,365,366,367,369,371,376,377,],[103,103,103,-16,-111,103,103,103,103,-15,103,103,103,103,103,103,103,103,103,-118,-120,103,-14,103,-24,-25,-26,-78,-79,103,103,103,-130,-130,103,-13,-20,-23,-27,-28,-29,-30,-72,103,103,103,103,103,103,103,103,103,103,-19,-72,103,103,103,103,103,103,103,103,103,-81,-76,103,103,-73,-87,103,-76,-84,-74,-83,-80,]),'SQRT':([53,124,134,135,143,144,164,166,167,175,178,180,184,186,188,189,194,195,196,197,198,201,208,213,215,216,217,225,226,228,251,252,254,256,258,262,265,267,268,269,270,271,274,275,276,282,286,287,289,290,291,294,295,300,301,302,303,323,332,333,334,337,342,343,344,350,353,355,358,365,366,367,369,371,376,377,],[104,104,104,-16,-111,104,104,104,104,-15,104,104,104,104,104,104,104,104,104,-118,-120,104,-14,104,-24,-25,-26,-78,-79,104,104,104,-130,-130,104,-13,-20,-23,-27,-28,-29,-30,-72,104,104,104,104,104,104,104,104,104,104,-19,-72,104,104,104,104,104,104,104,104,104,-81,-76,104,104,-73,-87,104,-76,-84,-74,-83,-80,]),'QUIT':([53,124,134,135,143,144,164,166,167,175,178,180,184,186,188,189,194,195,196,197,198,201,208,213,215,216,217,225,226,228,251,252,254,256,258,262,265,267,268,269,270,271,274,275,276,282,286,287,289,290,291,294,295,300,301,302,303,323,332,333,334,337,342,343,344,350,353,355,358,365,366,367,369,371,376,377,],[105,105,105,-16,-111,105,105,105,105,-15,105,105,105,105,105,105,105,105,105,-118,-120,105,-14,105,-24,-25,-26,-78,-79,105,105,105,-130,-130,105,-13,-20,-23,-27,-28,-29,-30,-72,105,105,105,105,105,105,105,105,105,105,-19,-72,105,105,105,105,105,105,105,105,105,-81,-76,105,105,-73,-87,105,-76,-84,-74,-83,-80,]),'TERMS':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,124,134,143,144,162,164,165,166,167,168,180,184,186,188,189,194,195,196,197,198,200,201,202,228,233,236,237,239,241,244,245,246,247,251,252,254,256,258,259,274,275,276,281,282,284,285,286,287,288,289,290,291,294,295,296,301,302,303,307,320,321,323,332,333,334,335,336,337,342,343,344,353,355,356,357,366,373,],[-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-147,-147,-111,-147,-128,-147,-133,-147,-147,-49,-147,-147,-147,-147,-147,-147,-147,-147,-118,-120,256,-147,-132,-147,-109,-56,-57,-62,-55,-67,-66,-58,-59,-147,-147,-130,-130,-147,-52,-72,-147,-147,-108,-147,-144,-61,-147,-147,-63,-147,-147,-147,-147,-147,-135,-72,-147,-147,-157,-131,-50,-147,-147,-147,-147,-65,-60,-147,-147,-147,-81,-147,-147,-64,-68,-147,-54,]),'EX':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,124,134,143,144,161,162,164,165,166,167,168,180,184,186,188,189,194,195,196,197,198,199,200,201,202,228,233,236,237,239,241,244,245,246,247,251,252,254,255,256,258,259,274,275,276,281,282,284,285,286,287,288,289,290,291,294,295,296,301,302,303,307,319,320,321,323,332,333,334,335,336,337,342,343,344,353,355,356,357,366,373,],[-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,164,164,-111,164,-124,-128,-147,-133,164,164,-49,164,164,164,164,164,164,164,164,-118,-120,254,-127,164,-132,164,-109,-56,-57,-62,-55,-67,-66,-58,-59,164,164,-130,-126,-130,164,-52,-72,164,164,-108,164,-144,-61,164,164,-63,164,164,164,164,164,-135,-72,164,164,-157,-129,-131,-50,164,164,164,164,-65,-60,164,164,164,-81,164,164,-64,-68,164,-54,]),'RELOP':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,124,134,143,144,160,161,162,164,165,166,167,168,180,184,186,188,189,194,195,196,199,200,201,202,228,233,236,237,239,241,244,245,246,247,253,254,255,256,258,259,274,275,276,281,282,284,285,286,287,288,289,290,291,294,295,296,301,302,303,307,318,319,320,321,323,332,333,334,335,336,337,342,343,344,353,355,356,357,366,373,],[-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-147,-147,-111,-147,197,-124,-128,-147,-133,-147,-147,-49,-147,-147,-147,-147,-147,-147,-147,-147,-123,-127,-147,-132,-147,-109,-56,-57,-62,-55,-67,-66,-58,-59,-122,-130,-126,-130,-147,-52,-72,-147,-147,-108,-147,-144,-61,-147,-147,-63,-147,-147,-147,-147,-147,-135,-72,-147,-147,-157,-125,-129,-131,-50,-147,-147,-147,-147,-65,-60,-147,-147,-147,-81,-147,-147,-64,-68,-147,-54,]),'LOGIC':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,124,134,143,144,160,161,162,164,165,166,167,168,180,184,186,188,189,194,195,196,199,200,201,202,228,233,236,237,239,241,244,245,246,247,253,254,255,256,258,259,274,275,276,281,282,284,285,286,287,288,289,290,291,294,295,296,301,302,303,307,318,319,320,321,323,332,333,334,335,336,337,342,343,344,353,355,356,357,366,373,],[-148,-149,-150,-151,-152,-153,-154,-155,-156,-158,-159,-160,-161,-157,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-147,-147,-111,-147,198,-124,-128,-147,-133,-147,-147,-49,-147,-147,-147,-147,-147,-147,-147,-147,-123,-127,-147,-132,-147,-109,-56,-57,-62,-55,-67,-66,-58,-59,-122,-130,-126,-130,-147,-52,-72,-147,-147,-108,-147,-144,-61,-147,-147,-63,-147,-147,-147,-147,-147,-135,-72,-147,-147,-157,-125,-129,-131,-50,-147,-147,-147,-147,-65,-60,-147,-147,-147,-81,-147,-147,-64,-68,-147,-54,]),'DOT':([77,101,222,],[122,123,122,]),'RUN':([110,132,],[-11,172,]),'SIZE':([122,],[145,]),'HEAD':([122,],[146,]),'FIND':([122,],[147,]),'LAST':([122,],[148,]),'DRAW':([123,],[149,]),'INIT':([123,],[150,]),'SET_FILL':([123,],[151,]),'SET_TITLE':([123,],[152,]),'GET_EVENT':([123,],[153,]),'UPDATE':([123,],[154,]),'WINDOW_H':([123,],[155,]),'WINDOW_W':([123,],[156,]),'SET_DIMENSION':([123,],[157,]),'RAND':([123,],[158,]),'IF':([135,175,178,208,213,215,216,217,225,226,262,265,267,268,269,270,271,300,350,358,365,367,369,371,376,377,],[-16,-15,224,-14,224,-24,-25,-26,-78,-79,-13,-20,-23,-27,-28,-29,-30,-19,-76,-73,-87,-76,-84,-74,-83,-80,]),'PRINT':([135,175,178,208,213,215,216,217,225,226,262,265,267,268,269,270,271,300,350,358,365,367,369,371,376,377,],[-16,-15,227,-14,227,-24,-25,-26,-78,-79,-13,-20,-23,-27,-28,-29,-30,-19,-76,-73,-87,-76,-84,-74,-83,-80,]),'RETURN':([135,175,178,208,213,215,216,217,225,226,262,265,267,268,269,270,271,300,350,358,365,367,369,371,376,377,],[-16,-15,228,-14,228,-24,-25,-26,-78,-79,-13,-20,-23,-27,-28,-29,-30,-19,-76,-73,-87,-76,-84,-74,-83,-80,]),'FOR':([135,175,178,208,213,215,216,217,225,226,262,265,267,268,269,270,271,300,350,358,365,367,369,371,376,377,],[-16,-15,229,-14,229,-24,-25,-26,-78,-79,-13,-20,-23,-27,-28,-29,-30,-19,-76,-73,-87,-76,-84,-74,-83,-80,]),'WHILE':([135,175,178,208,213,215,216,217,225,226,262,265,267,268,269,270,271,300,350,358,365,367,369,371,376,377,],[-16,-15,230,-14,230,-24,-25,-26,-78,-79,-13,-20,-23,-27,-28,-29,-30,-19,-76,-73,-87,-76,-84,-74,-83,-80,]),'ELSE':([265,300,350,359,],[-20,-19,-77,363,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'capi':([0,],[1,]),'capi_action1':([0,],[2,]),'global':([2,],[3,]),'recfunc':([2,3,7,],[4,16,21,]),'function':([2,3,7,],[7,7,7,]),'type':([2,3,7,61,114,],[8,8,8,112,136,]),'primitivetype':([2,3,7,24,61,114,],[10,10,10,32,10,10,]),'start':([28,34,35,43,],[36,44,45,54,]),'vars':([29,135,178,208,213,],[38,175,216,262,216,]),'startscope_action':([30,31,111,172,229,230,],[40,41,133,206,278,279,]),'capi_action2':([36,44,45,54,],[46,55,56,106,]),'recids':([39,62,],[49,113,]),'run':([46,55,56,106,],[57,107,108,128,]),'start_action1':([47,],[59,]),'recparams':([51,52,176,],[64,66,209,]),'cte':([53,124,134,144,164,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[68,165,165,165,202,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,]),'id':([53,124,134,144,164,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'int':([53,124,134,144,164,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'float':([53,124,134,144,164,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'bool':([53,124,134,144,164,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'string':([53,124,134,144,164,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'functioncall':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[74,74,74,74,74,74,74,220,74,74,74,74,74,74,74,74,74,220,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'listaccess':([53,124,134,144,164,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'specialfunction':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[76,76,76,76,76,76,76,221,76,76,76,76,76,76,76,76,76,221,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'draw':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'init':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'size':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'head':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'find':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'last':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'set_fill':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'set_title':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'get_event':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'update':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'window_h':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'window_w':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'set_dimension':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'create_text':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'rand':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'pow':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'sqrt':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'quit':([53,124,134,144,164,166,167,178,180,184,186,188,189,194,195,196,201,213,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'function_action1':([64,66,],[115,117,]),'function_action3':([65,67,177,179,],[116,118,210,231,]),'function_call_action1':([77,222,],[120,120,]),'list_action1':([77,222,331,],[121,273,273,]),'pow_action1':([103,],[125,]),'sqrt_action1':([104,],[126,]),'run_action1':([110,],[132,]),'block':([116,118,210,231,261,322,341,361,363,375,],[138,141,263,280,299,338,350,365,367,376,]),'action_list1':([119,],[142,]),'expression':([124,134,144,166,167,180,184,186,188,189,194,195,196,201,228,258,275,276,282,286,287,289,290,291,302,303,323,332,333,334,337,342,343,353,355,366,],[159,174,181,203,204,234,238,240,242,243,248,249,250,257,277,297,304,306,234,311,312,313,314,315,324,325,339,345,346,347,348,306,306,360,362,370,]),'exp':([124,134,144,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,302,303,323,332,333,334,337,342,343,353,355,366,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,292,293,160,160,160,160,160,160,160,160,160,318,160,160,160,160,160,160,160,160,160,160,160,160,]),'term':([124,134,144,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,319,161,161,161,161,161,161,161,161,161,161,161,161,]),'factor':([124,134,144,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'factor_action1':([124,134,144,166,167,180,184,186,188,189,194,195,196,201,228,251,252,258,275,276,282,286,287,289,290,291,294,295,302,303,323,332,333,334,337,342,343,353,355,366,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'function_action2':([137,140,],[177,179,]),'function_call_action2':([143,],[180,]),'exp_action':([161,],[199,]),'term_action':([162,],[200,]),'recstatement':([178,213,],[211,266,]),'statement':([178,213,],[213,213,]),'assign':([178,213,308,368,],[214,214,330,372,]),'condition':([178,213,],[215,215,]),'loop':([178,213,],[217,217,]),'write':([178,213,],[218,218,]),'return':([178,213,],[219,219,]),'assign_list':([178,213,308,368,],[223,223,223,223,]),'for':([178,213,],[225,225,]),'while':([178,213,],[226,226,]),'recfuncexp':([180,282,],[232,310,]),'list_action_3':([181,324,],[235,340,]),'relop_action1':([197,],[251,]),'logic_action1':([198,],[252,]),'recexp':([199,],[253,]),'recterm':([200,],[255,]),'main_cont':([207,298,],[261,322,]),'assign_action1':([222,331,],[272,272,]),'recfunc_action1':([234,],[283,]),'add_operator':([254,256,],[294,295,]),'assign_action2':([274,301,],[303,323,]),'recwrite':([276,342,343,],[305,351,352,]),'while_action1':([279,],[309,]),'relop_action2':([292,],[316,]),'logic_action2':([293,],[317,]),'factor_action2':([296,],[320,]),'condition_action1':([304,],[326,]),'action_recwrite_exp':([306,],[328,]),'action_recwrite_cte':([307,],[329,]),'for_action1':([344,],[353,]),'while_action2':([345,],[354,]),'condition_action2':([350,367,],[358,371,]),'condition_action3':([350,],[359,]),'for_action2':([360,],[364,]),'while_action3':([365,],[369,]),'for_action3':([376,],[377,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> capi","S'",1,None,None,None),
  ('capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',11,'p_capi','capi.py',270),
  ('capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',271),
  ('capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',272),
  ('capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',9,'p_capi','capi.py',273),
  ('capi_action1 -> <empty>','capi_action1',0,'p_capi_action1','capi.py',277),
  ('capi_action2 -> <empty>','capi_action2',0,'p_capi_action2','capi.py',285),
  ('global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON','global',6,'p_global','capi.py',291),
  ('start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block','start',9,'p_start','capi.py',300),
  ('start_action1 -> <empty>','start_action1',0,'p_start_action1','capi.py',317),
  ('run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block','run',9,'p_run','capi.py',324),
  ('run_action1 -> <empty>','run_action1',0,'p_run_action1','capi.py',340),
  ('main_cont -> <empty>','main_cont',0,'p_main_cont','capi.py',348),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON vars','vars',8,'p_vars','capi.py',354),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON','vars',7,'p_vars','capi.py',355),
  ('vars -> VAR recids COLON type SEMICOLON vars','vars',6,'p_vars','capi.py',356),
  ('vars -> VAR recids COLON type SEMICOLON','vars',5,'p_vars','capi.py',357),
  ('recids -> ID','recids',1,'p_recids','capi.py',391),
  ('recids -> ID COMMA recids','recids',3,'p_recids','capi.py',392),
  ('block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON','block',5,'p_block','capi.py',402),
  ('block -> COLON LEFTKEY RIGHTKEY SEMICOLON','block',4,'p_block','capi.py',403),
  ('recstatement -> statement recstatement','recstatement',2,'p_recstatement','capi.py',408),
  ('recstatement -> statement','recstatement',1,'p_recstatement','capi.py',409),
  ('statement -> assign SEMICOLON','statement',2,'p_statement','capi.py',415),
  ('statement -> condition','statement',1,'p_statement','capi.py',416),
  ('statement -> vars','statement',1,'p_statement','capi.py',417),
  ('statement -> loop','statement',1,'p_statement','capi.py',418),
  ('statement -> write SEMICOLON','statement',2,'p_statement','capi.py',419),
  ('statement -> return SEMICOLON','statement',2,'p_statement','capi.py',420),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement','capi.py',421),
  ('statement -> specialfunction SEMICOLON','statement',2,'p_statement','capi.py',422),
  ('specialfunction -> draw','specialfunction',1,'p_specialfunction','capi.py',429),
  ('specialfunction -> init','specialfunction',1,'p_specialfunction','capi.py',430),
  ('specialfunction -> size','specialfunction',1,'p_specialfunction','capi.py',431),
  ('specialfunction -> head','specialfunction',1,'p_specialfunction','capi.py',432),
  ('specialfunction -> find','specialfunction',1,'p_specialfunction','capi.py',433),
  ('specialfunction -> last','specialfunction',1,'p_specialfunction','capi.py',434),
  ('specialfunction -> set_fill','specialfunction',1,'p_specialfunction','capi.py',435),
  ('specialfunction -> set_title','specialfunction',1,'p_specialfunction','capi.py',436),
  ('specialfunction -> get_event','specialfunction',1,'p_specialfunction','capi.py',437),
  ('specialfunction -> update','specialfunction',1,'p_specialfunction','capi.py',438),
  ('specialfunction -> window_h','specialfunction',1,'p_specialfunction','capi.py',439),
  ('specialfunction -> window_w','specialfunction',1,'p_specialfunction','capi.py',440),
  ('specialfunction -> set_dimension','specialfunction',1,'p_specialfunction','capi.py',441),
  ('specialfunction -> create_text','specialfunction',1,'p_specialfunction','capi.py',442),
  ('specialfunction -> rand','specialfunction',1,'p_specialfunction','capi.py',443),
  ('specialfunction -> pow','specialfunction',1,'p_specialfunction','capi.py',444),
  ('specialfunction -> sqrt','specialfunction',1,'p_specialfunction','capi.py',445),
  ('specialfunction -> quit','specialfunction',1,'p_specialfunction','capi.py',446),
  ('quit -> QUIT LEFTPAR RIGHTPAR','quit',3,'p_quit','capi.py',452),
  ('pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR','pow',7,'p_pow','capi.py',458),
  ('pow_action1 -> <empty>','pow_action1',0,'p_pow_action1','capi.py',471),
  ('sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR','sqrt',5,'p_sqrt','capi.py',477),
  ('sqrt_action1 -> <empty>','sqrt_action1',0,'p_sqrt_action1','capi.py',488),
  ('draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR','draw',14,'p_draw','capi.py',496),
  ('init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR','init',5,'p_init','capi.py',514),
  ('size -> ID DOT SIZE LEFTPAR RIGHTPAR','size',5,'p_size','capi.py',520),
  ('head -> ID DOT HEAD LEFTPAR RIGHTPAR','head',5,'p_head','capi.py',548),
  ('window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR','window_h',5,'p_window_h','capi.py',578),
  ('window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR','window_w',5,'p_window_w','capi.py',587),
  ('rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR','rand',8,'p_rand','capi.py',595),
  ('find -> ID DOT FIND LEFTPAR expression RIGHTPAR','find',6,'p_find','capi.py',607),
  ('last -> ID DOT LAST LEFTPAR RIGHTPAR','last',5,'p_last','capi.py',640),
  ('set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR','set_title',6,'p_set_title','capi.py',672),
  ('set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_fill',10,'p_set_fill','capi.py',685),
  ('set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR','set_dimension',8,'p_set_dimension','capi.py',696),
  ('update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR','update',5,'p_update','capi.py',707),
  ('get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR','get_event',5,'p_get_event','capi.py',713),
  ('create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR','create_text',10,'p_create_text','capi.py',722),
  ('assign -> ID assign_action1 EQUAL assign_action2 expression','assign',5,'p_assign','capi.py',739),
  ('assign -> assign_list EQUAL assign_action2 expression','assign',4,'p_assign','capi.py',740),
  ('assign_action1 -> <empty>','assign_action1',0,'p_assign_action1','capi.py',805),
  ('assign_action2 -> <empty>','assign_action2',0,'p_assign_action2','capi.py',814),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2','condition',7,'p_condition','capi.py',820),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2','condition',10,'p_condition','capi.py',821),
  ('condition_action1 -> <empty>','condition_action1',0,'p_condition_action1','capi.py',826),
  ('condition_action2 -> <empty>','condition_action2',0,'p_condition_action2','capi.py',839),
  ('condition_action3 -> <empty>','condition_action3',0,'p_condition_action3','capi.py',846),
  ('loop -> for','loop',1,'p_loop','capi.py',856),
  ('loop -> while','loop',1,'p_loop','capi.py',857),
  ('for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3','for',14,'p_for','capi.py',862),
  ('for_action1 -> <empty>','for_action1',0,'p_for_action1','capi.py',870),
  ('for_action2 -> <empty>','for_action2',0,'p_for_action2','capi.py',878),
  ('for_action3 -> <empty>','for_action3',0,'p_for_action3','capi.py',892),
  ('while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3','while',9,'p_while','capi.py',906),
  ('while_action1 -> <empty>','while_action1',0,'p_while_action1','capi.py',915),
  ('while_action2 -> <empty>','while_action2',0,'p_while_action2','capi.py',921),
  ('while_action3 -> <empty>','while_action3',0,'p_while_action3','capi.py',935),
  ('function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',945),
  ('function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',946),
  ('function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',947),
  ('function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',948),
  ('startscope_action -> <empty>','startscope_action',0,'p_startscope_action','capi.py',978),
  ('function_action1 -> <empty>','function_action1',0,'p_function_action1','capi.py',997),
  ('function_action2 -> <empty>','function_action2',0,'p_function_action2','capi.py',1003),
  ('function_action3 -> <empty>','function_action3',0,'p_function_action3','capi.py',1014),
  ('recparams -> ID COLON type','recparams',3,'p_recparams','capi.py',1023),
  ('recparams -> ID COLON type COMMA recparams','recparams',5,'p_recparams','capi.py',1024),
  ('recfunc -> function recfunc','recfunc',2,'p_recfunc','capi.py',1037),
  ('recfunc -> function','recfunc',1,'p_recfunc','capi.py',1038),
  ('write -> PRINT LEFTPAR recwrite RIGHTPAR','write',4,'p_write','capi.py',1043),
  ('recwrite -> expression action_recwrite_exp COMMA recwrite','recwrite',4,'p_recwrite','capi.py',1048),
  ('recwrite -> STRING action_recwrite_cte COMMA recwrite','recwrite',4,'p_recwrite','capi.py',1049),
  ('recwrite -> expression action_recwrite_exp','recwrite',2,'p_recwrite','capi.py',1050),
  ('recwrite -> STRING action_recwrite_cte','recwrite',2,'p_recwrite','capi.py',1051),
  ('action_recwrite_exp -> <empty>','action_recwrite_exp',0,'p_action_recwrite_exp','capi.py',1055),
  ('action_recwrite_cte -> <empty>','action_recwrite_cte',0,'p_action_recwrite_cte','capi.py',1064),
  ('return -> RETURN expression','return',2,'p_return','capi.py',1071),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR','functioncall',6,'p_functioncall','capi.py',1099),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR','functioncall',5,'p_functioncall','capi.py',1100),
  ('function_call_action1 -> <empty>','function_call_action1',0,'p_function_call_action1','capi.py',1142),
  ('function_call_action2 -> <empty>','function_call_action2',0,'p_function_call_action2','capi.py',1154),
  ('recfuncexp -> expression COMMA recfuncexp','recfuncexp',3,'p_recfuncexp','capi.py',1163),
  ('recfuncexp -> expression recfunc_action1','recfuncexp',2,'p_recfuncexp','capi.py',1164),
  ('recfunc_action1 -> <empty>','recfunc_action1',0,'p_recfunc_action1','capi.py',1175),
  ('expression -> exp RELOP relop_action1 exp relop_action2','expression',5,'p_expression','capi.py',1219),
  ('expression -> exp LOGIC logic_action1 exp logic_action2','expression',5,'p_expression','capi.py',1220),
  ('expression -> exp','expression',1,'p_expression','capi.py',1221),
  ('relop_action1 -> <empty>','relop_action1',0,'p_relop_action1','capi.py',1226),
  ('relop_action2 -> <empty>','relop_action2',0,'p_relop_action2','capi.py',1232),
  ('logic_action1 -> <empty>','logic_action1',0,'p_logic_action1','capi.py',1255),
  ('logic_action2 -> <empty>','logic_action2',0,'p_logic_action2','capi.py',1261),
  ('exp -> term exp_action recexp','exp',3,'p_exp','capi.py',1284),
  ('exp -> term exp_action','exp',2,'p_exp','capi.py',1285),
  ('exp_action -> <empty>','exp_action',0,'p_exp_action','capi.py',1290),
  ('recexp -> EX add_operator exp','recexp',3,'p_recexp','capi.py',1314),
  ('term -> factor term_action recterm','term',3,'p_term','capi.py',1319),
  ('term -> factor term_action','term',2,'p_term','capi.py',1320),
  ('term_action -> <empty>','term_action',0,'p_term_action','capi.py',1325),
  ('recterm -> TERMS add_operator term','recterm',3,'p_recterm','capi.py',1348),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','capi.py',1353),
  ('factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2','factor',5,'p_factor','capi.py',1359),
  ('factor -> EX cte','factor',2,'p_factor','capi.py',1360),
  ('factor -> cte','factor',1,'p_factor','capi.py',1361),
  ('factor_action1 -> <empty>','factor_action1',0,'p_factor_action1','capi.py',1375),
  ('factor_action2 -> <empty>','factor_action2',0,'p_factor_action2','capi.py',1381),
  ('type -> primitivetype','type',1,'p_type','capi.py',1387),
  ('type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1','type',8,'p_type','capi.py',1388),
  ('action_list1 -> <empty>','action_list1',0,'p_action_list1','capi.py',1397),
  ('primitivetype -> TINT','primitivetype',1,'p_primitivetype','capi.py',1406),
  ('primitivetype -> TFLOAT','primitivetype',1,'p_primitivetype','capi.py',1407),
  ('primitivetype -> TSTRING','primitivetype',1,'p_primitivetype','capi.py',1408),
  ('primitivetype -> TBOOL','primitivetype',1,'p_primitivetype','capi.py',1409),
  ('assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','assign_list',6,'p_assign_list','capi.py',1416),
  ('listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','listaccess',6,'p_listaccess','capi.py',1428),
  ('list_action1 -> <empty>','list_action1',0,'p_list_action1','capi.py',1441),
  ('list_action_3 -> <empty>','list_action_3',0,'p_list_action_3','capi.py',1450),
  ('cte -> <empty>','cte',0,'p_cte','capi.py',1472),
  ('cte -> id','cte',1,'p_cte','capi.py',1473),
  ('cte -> int','cte',1,'p_cte','capi.py',1474),
  ('cte -> float','cte',1,'p_cte','capi.py',1475),
  ('cte -> bool','cte',1,'p_cte','capi.py',1476),
  ('cte -> string','cte',1,'p_cte','capi.py',1477),
  ('cte -> functioncall','cte',1,'p_cte','capi.py',1478),
  ('cte -> listaccess','cte',1,'p_cte','capi.py',1479),
  ('cte -> specialfunction','cte',1,'p_cte','capi.py',1480),
  ('id -> ID','id',1,'p_id','capi.py',1486),
  ('string -> STRING','string',1,'p_string','capi.py',1508),
  ('int -> INT','int',1,'p_int','capi.py',1515),
  ('float -> FLOAT','float',1,'p_float','capi.py',1522),
  ('bool -> TRUE','bool',1,'p_bool','capi.py',1529),
  ('bool -> FALSE','bool',1,'p_bool','capi.py',1530),
]
