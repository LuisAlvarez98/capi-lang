
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BAR CAPIGAME COLON COMMA COMMENT CREATE_TEXT DOT DRAW ELSE EQUAL EX FALSE FIND FLOAT FOR FUNC GET_EVENT GLOBAL HEAD ID IF INIT INT LAST LEFTBRACKET LEFTKEY LEFTPAR LIST LOGIC MAIN OBJECT POW PRINT QUIT RAND RELOP RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR RUN SEMICOLON SET_DIMENSION SET_FILL SET_TITLE SIZE SQRT START STRING TBOOL TERMS TFLOAT TINT TLIST TOBJECT TRUE TSTRING UPDATE VAR VOID WHILE WINDOW_H WINDOW_W \n    capi : capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n    \n    capi_action1 :\n    \n    capi_action2 :\n    \n    global : GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON\n    \n    start : VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    start_action1 :\n    \n    run : VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    run_action1 :\n    \n    main_cont :\n     \n    vars : VAR recids COLON type SEMICOLON vars\n            | VAR recids COLON type SEMICOLON\n     \n    recids : ID \n           | ID COMMA recids \n    \n    block : COLON LEFTKEY recstatement RIGHTKEY SEMICOLON\n          | COLON LEFTKEY RIGHTKEY SEMICOLON\n     \n    recstatement : statement recstatement  \n                 | statement  \n    \n    statement : assign SEMICOLON\n              | condition\n              | vars\n              | loop\n              | write SEMICOLON\n              | return SEMICOLON\n              | functioncall SEMICOLON\n              | specialfunction SEMICOLON\n    \n    specialfunction : draw\n                    | init\n                    | size\n                    | head\n                    | find\n                    | last\n                    | set_fill\n                    | set_title\n                    | get_event\n                    | update\n                    | window_h\n                    | window_w\n                    | set_dimension\n                    | create_text\n                    | rand\n                    | pow\n                    | sqrt\n                    | quit\n    \n    quit : QUIT LEFTPAR RIGHTPAR\n    \n    pow : POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR\n    \n    pow_action1 :\n    \n    sqrt : SQRT sqrt_action1 LEFTPAR expression RIGHTPAR\n    \n    sqrt_action1 :\n    \n    draw : CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    init : CAPIGAME DOT INIT LEFTPAR RIGHTPAR\n    \n    size : ID DOT SIZE LEFTPAR RIGHTPAR\n    \n    head : ID DOT HEAD LEFTPAR RIGHTPAR\n    \n    window_h : CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR\n    \n    window_w : CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR\n    \n    rand : CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR\n    \n    find : ID DOT FIND LEFTPAR expression RIGHTPAR\n    \n    last : ID DOT LAST LEFTPAR RIGHTPAR\n    \n    set_title : CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR\n    \n    set_fill : CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    set_dimension : CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR\n    \n    update : CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR\n    \n    get_event : CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR\n    \n    create_text : CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    assign : ID assign_action1 EQUAL assign_action2 expression \n           | assign_list EQUAL assign_action2 expression\n    \n    assign_action1 : \n    \n    assign_action2 : \n     condition : IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action2\n                  | IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action3 ELSE  block condition_action2\n     \n    condition_action1 :\n    \n    condition_action2 :\n    \n    condition_action3 :\n    \n    loop : for\n        | while\n    \n    for : FOR startscope_action LEFTPAR  assign  SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3\n    \n    for_action1 : \n    \n    for_action2 : \n    \n    for_action3 : \n    \n    while : WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3\n    \n    while_action1 :\n    \n    while_action2 :\n    \n    while_action3 :\n    \n    function : type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n    \n    startscope_action : \n    \n    function_action1 :\n    \n    function_action2 :\n    \n    function_action3 :\n    \n    recparams : ID COLON type\n              | ID COLON type COMMA recparams\n    \n    recfunc : function recfunc\n            | function\n     \n    write : PRINT LEFTPAR recwrite RIGHTPAR \n     \n    recwrite : expression action_recwrite_exp COMMA recwrite \n               | STRING action_recwrite_cte COMMA  recwrite \n               | expression action_recwrite_exp \n               | STRING action_recwrite_cte\n    \n    action_recwrite_exp :\n    \n    action_recwrite_cte : \n    \n     return : RETURN expression\n    \n    functioncall : ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR \n                 | ID function_call_action1 LEFTPAR  function_call_action2 RIGHTPAR \n    \n    function_call_action1 : \n    \n    function_call_action2 : \n    \n    recfuncexp : expression exp_action1 COMMA recfuncexp\n               | expression exp_action1 recfunc_action1\n    \n    exp_action1 :\n    \n    recfunc_action1 :\n    \n    expression : exp RELOP relop_action1 exp relop_action2\n               | exp LOGIC logic_action1 exp logic_action2\n               | exp\n    \n    relop_action1 : \n    \n    relop_action2 : \n    \n    logic_action1 : \n    \n    logic_action2 : \n     \n    exp : term exp_action recexp\n        | term exp_action \n        \n    exp_action :\n     \n    recexp : EX add_operator exp \n     \n    term : factor term_action recterm \n         | factor term_action \n    \n    term_action :\n     \n    recterm : TERMS add_operator term\n    \n    add_operator :\n     factor : factor_action1 LEFTPAR expression RIGHTPAR factor_action2 \n               | EX cte \n               | cte \n    \n    factor_action1 :\n    \n    factor_action2 :\n    \n    type : primitivetype\n        | TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1\n    \n    action_list1 :\n    \n    primitivetype : TINT\n                  | TFLOAT\n                  | TSTRING\n                  | TBOOL\n    \n    assign_list : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    listaccess : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    list_action1 :\n    \n    list_action_3 :\n    \n    cte :    \n        | id\n        | int\n        | float\n        | bool\n        | string\n        | functioncall\n        | listaccess\n        | specialfunction\n    \n    id : ID\n    \n    string : STRING\n    \n    int : INT\n    \n    float : FLOAT\n    \n    bool : TRUE \n         | FALSE\n    '
    
_lr_action_items = {'MAIN':([0,2,3,4,7,16,21,60,137,140,259,261,276,295,],[-5,5,17,18,-97,25,-96,-7,-87,-89,-86,-18,-88,-17,]),'GLOBAL':([0,2,],[-5,6,]),'VOID':([0,2,3,7,28,34,35,36,43,44,45,46,54,55,56,60,106,137,140,259,261,276,294,295,],[-5,9,9,9,37,37,37,-6,37,-6,-6,58,-6,58,58,-7,58,-87,-89,-86,-18,-88,-8,-17,]),'TLIST':([0,2,3,7,60,61,114,137,140,259,261,276,295,],[-5,11,11,11,-7,11,11,-87,-89,-86,-18,-88,-17,]),'TINT':([0,2,3,7,24,60,61,114,137,140,259,261,276,295,],[-5,12,12,12,12,-7,12,12,-87,-89,-86,-18,-88,-17,]),'TFLOAT':([0,2,3,7,24,60,61,114,137,140,259,261,276,295,],[-5,13,13,13,13,-7,13,13,-87,-89,-86,-18,-88,-17,]),'TSTRING':([0,2,3,7,24,60,61,114,137,140,259,261,276,295,],[-5,14,14,14,14,-7,14,14,-87,-89,-86,-18,-88,-17,]),'TBOOL':([0,2,3,7,24,60,61,114,137,140,259,261,276,295,],[-5,15,15,15,15,-7,15,15,-87,-89,-86,-18,-88,-17,]),'$end':([1,131,169,170,203,],[0,-4,-3,-2,-1,]),'COLON':([5,6,17,18,25,49,50,63,65,67,113,116,118,136,139,175,177,205,207,228,258,293,318,338,358,360,372,],[19,20,26,27,33,61,-15,114,-93,-93,-16,138,138,-92,-92,-93,-93,-12,138,138,138,-12,138,138,138,138,138,]),'FUNC':([8,9,10,12,13,14,15,37,58,119,141,],[22,23,-135,-138,-139,-140,-141,47,110,-137,-136,]),'SEMICOLON':([10,12,13,14,15,48,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,109,112,119,129,130,141,159,160,161,163,164,167,168,195,196,197,198,200,209,211,215,216,217,218,225,230,233,234,236,238,241,242,243,244,248,249,250,251,252,253,256,260,270,273,277,279,280,283,287,288,289,290,291,296,298,312,313,314,315,316,317,319,321,323,326,332,333,336,341,350,353,354,357,361,369,370,],[-135,-138,-139,-140,-141,60,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,131,134,-137,169,170,-136,-116,-123,-127,-146,-132,-47,203,-117,-119,-122,-126,-131,261,263,264,265,266,267,-146,-107,-54,-55,-60,-53,-65,-64,-56,-57,-146,-146,-121,-129,-125,-129,-50,295,-70,-105,-106,-143,-59,-61,-118,-120,-146,-146,-134,-70,-146,-114,-115,-124,-128,-130,-48,-146,-68,-98,341,-63,-58,-67,-79,-146,-62,-66,-80,365,371,-52,]),'COMMA':([10,12,13,14,15,50,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,119,124,135,141,142,158,159,160,161,163,164,165,167,178,184,186,192,193,194,195,196,197,198,200,201,230,231,233,234,236,237,238,239,241,242,243,244,245,246,247,248,249,250,251,252,253,256,272,277,278,279,280,281,282,283,286,287,288,289,290,291,301,302,305,307,308,311,312,313,314,315,316,317,324,325,330,332,333,339,340,343,352,353,354,359,370,],[-135,-138,-139,-140,-141,62,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-137,-146,174,-136,-109,194,-116,-123,-127,-146,-132,-146,-47,-146,-146,-146,-146,-146,-146,-117,-119,-122,-126,-131,255,-107,-112,-54,-55,-60,281,-53,282,-65,-64,-56,-57,284,285,286,-146,-146,-121,-129,-125,-129,-50,-146,-106,305,-143,-59,-146,-146,-61,-146,-118,-120,-146,-146,-134,-103,-104,-146,330,331,334,-114,-115,-124,-128,-130,-48,339,340,-146,-63,-58,-146,-146,352,-146,-62,-66,363,-52,]),'RIGHTPAR':([10,12,13,14,15,51,52,64,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,115,117,119,127,135,141,142,159,160,161,163,164,166,167,172,178,180,181,182,183,185,187,188,189,190,191,195,196,197,198,199,200,202,206,229,230,231,233,234,235,236,238,240,241,242,243,244,248,249,250,251,252,253,254,255,256,257,271,272,277,278,279,280,283,284,285,287,288,289,290,291,292,299,300,301,302,305,306,309,310,312,313,314,315,316,317,322,324,325,328,329,331,332,333,334,339,340,342,344,345,348,349,351,353,354,363,367,370,371,],[-135,-138,-139,-140,-141,65,67,-91,-91,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,136,139,-137,167,-94,-136,-109,-116,-123,-127,-146,-132,-146,-47,205,230,233,234,-146,236,238,-146,241,242,243,244,-117,-119,-122,-126,-146,-131,256,-95,277,-107,-112,-54,-55,280,-60,-53,283,-65,-64,-56,-57,-146,-146,-121,-129,-125,-129,291,-146,-50,293,-146,-146,-106,-113,-143,-59,-61,-146,-146,-118,-120,-146,-146,-134,317,-73,323,-103,-104,-146,-111,332,333,-114,-115,-124,-128,-130,-48,338,-101,-102,-146,-110,-146,-63,-58,-146,-146,-146,-84,353,354,-99,-100,358,-62,-66,-146,370,-52,372,]),'BAR':([11,12,13,14,15,32,],[24,-138,-139,-140,-141,42,]),'LEFTKEY':([19,20,26,27,33,138,],[28,29,34,35,43,176,]),'ID':([22,23,39,51,52,53,62,124,134,142,143,163,165,166,173,174,176,178,182,184,186,187,192,193,194,195,196,199,210,212,213,214,222,223,225,248,249,251,253,255,261,263,264,265,266,267,270,271,272,281,282,284,285,286,289,290,295,296,297,298,303,305,319,328,330,331,334,339,340,341,347,350,352,355,362,363,364,365,366,368,373,374,],[30,31,50,63,63,77,50,77,-14,-109,77,77,77,77,-13,63,219,77,77,77,77,77,77,77,77,-117,-119,77,219,-22,-23,-24,-76,-77,77,77,77,-129,-129,77,-18,-21,-25,-26,-27,-28,-70,77,77,77,77,77,77,77,77,77,-17,-70,77,77,327,77,77,77,77,77,77,77,77,-79,-74,77,77,-71,-85,77,-74,327,-82,-72,-81,-78,]),'VAR':([29,134,173,176,210,212,213,214,222,223,261,263,264,265,266,267,295,347,355,362,364,366,368,373,374,],[39,39,-13,39,39,-22,-23,-24,-76,-77,-18,-21,-25,-26,-27,-28,-17,-74,-71,-85,-74,-82,-72,-81,-78,]),'LEFTPAR':([30,31,40,41,77,102,103,104,105,111,120,124,125,126,133,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,162,165,166,171,178,182,184,186,187,192,193,194,195,196,199,204,219,221,224,225,226,227,248,249,251,253,255,270,271,272,274,275,281,282,284,285,286,289,290,296,297,298,304,305,319,328,330,331,334,339,340,341,350,352,363,],[-90,-90,51,52,-108,124,-49,-51,127,-90,142,-133,165,166,172,-109,-133,180,181,182,183,184,185,186,187,188,189,190,191,192,193,199,-133,-133,-90,-133,-133,-133,-133,-133,-133,-133,-133,-117,-119,-133,257,-108,271,272,-133,-90,-90,-133,-133,-129,-129,-133,-70,-133,-133,303,-83,-133,-133,-133,-133,-133,-133,-133,-70,-133,-133,328,-133,-133,-133,-133,-133,-133,-133,-133,-79,-133,-133,-133,]),'RIGHTKEY':([38,57,107,108,128,134,173,176,208,210,212,213,214,222,223,261,262,263,264,265,266,267,295,335,347,355,362,364,366,368,373,374,],[48,109,129,130,168,-14,-13,209,260,-20,-22,-23,-24,-76,-77,-18,-19,-21,-25,-26,-27,-28,-17,-10,-74,-71,-85,-74,-82,-72,-81,-78,]),'LEFTBRACKET':([42,77,121,219,269,327,],[53,-144,143,-144,297,-144,]),'START':([47,59,],[-9,111,]),'RIGHTBRACKET':([53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,143,159,160,161,163,164,167,179,195,196,197,198,200,230,232,233,234,236,238,241,242,243,244,248,249,250,251,252,253,256,277,279,280,283,287,288,289,290,291,297,312,313,314,315,316,317,320,332,333,337,353,354,370,],[-146,119,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-146,-116,-123,-127,-146,-132,-47,-145,-117,-119,-122,-126,-131,-107,279,-54,-55,-60,-53,-65,-64,-56,-57,-146,-146,-121,-129,-125,-129,-50,-106,-143,-59,-61,-118,-120,-146,-146,-134,-146,-114,-115,-124,-128,-130,-48,-145,-63,-58,346,-62,-66,-52,]),'INT':([53,124,142,143,163,165,166,178,182,184,186,187,192,193,194,195,196,199,225,248,249,251,253,255,270,271,272,281,282,284,285,286,289,290,296,297,298,305,319,328,330,331,334,339,340,341,350,352,363,],[78,78,-109,78,78,78,78,78,78,78,78,78,78,78,78,-117,-119,78,78,78,78,-129,-129,78,-70,78,78,78,78,78,78,78,78,78,-70,78,78,78,78,78,78,78,78,78,78,-79,78,78,78,]),'FLOAT':([53,124,142,143,163,165,166,178,182,184,186,187,192,193,194,195,196,199,225,248,249,251,253,255,270,271,272,281,282,284,285,286,289,290,296,297,298,305,319,328,330,331,334,339,340,341,350,352,363,],[79,79,-109,79,79,79,79,79,79,79,79,79,79,79,79,-117,-119,79,79,79,79,-129,-129,79,-70,79,79,79,79,79,79,79,79,79,-70,79,79,79,79,79,79,79,79,79,79,-79,79,79,79,]),'TRUE':([53,124,142,143,163,165,166,178,182,184,186,187,192,193,194,195,196,199,225,248,249,251,253,255,270,271,272,281,282,284,285,286,289,290,296,297,298,305,319,328,330,331,334,339,340,341,350,352,363,],[80,80,-109,80,80,80,80,80,80,80,80,80,80,80,80,-117,-119,80,80,80,80,-129,-129,80,-70,80,80,80,80,80,80,80,80,80,-70,80,80,80,80,80,80,80,80,80,80,-79,80,80,80,]),'FALSE':([53,124,142,143,163,165,166,178,182,184,186,187,192,193,194,195,196,199,225,248,249,251,253,255,270,271,272,281,282,284,285,286,289,290,296,297,298,305,319,328,330,331,334,339,340,341,350,352,363,],[81,81,-109,81,81,81,81,81,81,81,81,81,81,81,81,-117,-119,81,81,81,81,-129,-129,81,-70,81,81,81,81,81,81,81,81,81,-70,81,81,81,81,81,81,81,81,81,81,-79,81,81,81,]),'STRING':([53,124,142,143,163,165,166,178,182,184,186,187,192,193,194,195,196,199,225,248,249,251,253,255,270,271,272,281,282,284,285,286,289,290,296,297,298,305,319,328,330,331,334,339,340,341,350,352,363,],[82,82,-109,82,82,82,82,82,82,82,82,82,82,82,82,-117,-119,82,82,82,82,-129,-129,82,-70,82,302,82,82,82,82,82,82,82,-70,82,82,82,82,82,82,82,82,302,302,-79,82,82,82,]),'CAPIGAME':([53,124,134,142,143,163,165,166,173,176,178,182,184,186,187,192,193,194,195,196,199,210,212,213,214,222,223,225,248,249,251,253,255,261,263,264,265,266,267,270,271,272,281,282,284,285,286,289,290,295,296,297,298,305,319,328,330,331,334,339,340,341,347,350,352,355,362,363,364,366,368,373,374,],[101,101,-14,-109,101,101,101,101,-13,101,101,101,101,101,101,101,101,101,-117,-119,101,101,-22,-23,-24,-76,-77,101,101,101,-129,-129,101,-18,-21,-25,-26,-27,-28,-70,101,101,101,101,101,101,101,101,101,-17,-70,101,101,101,101,101,101,101,101,101,101,-79,-74,101,101,-71,-85,101,-74,-82,-72,-81,-78,]),'CREATE_TEXT':([53,124,134,142,143,163,165,166,173,176,178,182,184,186,187,192,193,194,195,196,199,210,212,213,214,222,223,225,248,249,251,253,255,261,263,264,265,266,267,270,271,272,281,282,284,285,286,289,290,295,296,297,298,305,319,328,330,331,334,339,340,341,347,350,352,355,362,363,364,366,368,373,374,],[102,102,-14,-109,102,102,102,102,-13,102,102,102,102,102,102,102,102,102,-117,-119,102,102,-22,-23,-24,-76,-77,102,102,102,-129,-129,102,-18,-21,-25,-26,-27,-28,-70,102,102,102,102,102,102,102,102,102,-17,-70,102,102,102,102,102,102,102,102,102,102,-79,-74,102,102,-71,-85,102,-74,-82,-72,-81,-78,]),'POW':([53,124,134,142,143,163,165,166,173,176,178,182,184,186,187,192,193,194,195,196,199,210,212,213,214,222,223,225,248,249,251,253,255,261,263,264,265,266,267,270,271,272,281,282,284,285,286,289,290,295,296,297,298,305,319,328,330,331,334,339,340,341,347,350,352,355,362,363,364,366,368,373,374,],[103,103,-14,-109,103,103,103,103,-13,103,103,103,103,103,103,103,103,103,-117,-119,103,103,-22,-23,-24,-76,-77,103,103,103,-129,-129,103,-18,-21,-25,-26,-27,-28,-70,103,103,103,103,103,103,103,103,103,-17,-70,103,103,103,103,103,103,103,103,103,103,-79,-74,103,103,-71,-85,103,-74,-82,-72,-81,-78,]),'SQRT':([53,124,134,142,143,163,165,166,173,176,178,182,184,186,187,192,193,194,195,196,199,210,212,213,214,222,223,225,248,249,251,253,255,261,263,264,265,266,267,270,271,272,281,282,284,285,286,289,290,295,296,297,298,305,319,328,330,331,334,339,340,341,347,350,352,355,362,363,364,366,368,373,374,],[104,104,-14,-109,104,104,104,104,-13,104,104,104,104,104,104,104,104,104,-117,-119,104,104,-22,-23,-24,-76,-77,104,104,104,-129,-129,104,-18,-21,-25,-26,-27,-28,-70,104,104,104,104,104,104,104,104,104,-17,-70,104,104,104,104,104,104,104,104,104,104,-79,-74,104,104,-71,-85,104,-74,-82,-72,-81,-78,]),'QUIT':([53,124,134,142,143,163,165,166,173,176,178,182,184,186,187,192,193,194,195,196,199,210,212,213,214,222,223,225,248,249,251,253,255,261,263,264,265,266,267,270,271,272,281,282,284,285,286,289,290,295,296,297,298,305,319,328,330,331,334,339,340,341,347,350,352,355,362,363,364,366,368,373,374,],[105,105,-14,-109,105,105,105,105,-13,105,105,105,105,105,105,105,105,105,-117,-119,105,105,-22,-23,-24,-76,-77,105,105,105,-129,-129,105,-18,-21,-25,-26,-27,-28,-70,105,105,105,105,105,105,105,105,105,-17,-70,105,105,105,105,105,105,105,105,105,105,-79,-74,105,105,-71,-85,105,-74,-82,-72,-81,-78,]),'TERMS':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,124,142,143,161,163,164,165,166,167,178,182,184,186,187,192,193,194,195,196,198,199,200,225,230,233,234,236,238,241,242,243,244,248,249,251,253,255,256,270,271,272,277,279,280,281,282,283,284,285,286,289,290,291,296,297,298,302,305,316,317,319,328,330,331,332,333,334,339,340,341,350,352,353,354,363,370,],[-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-146,-109,-146,-127,-146,-132,-146,-146,-47,-146,-146,-146,-146,-146,-146,-146,-146,-117,-119,253,-146,-131,-146,-107,-54,-55,-60,-53,-65,-64,-56,-57,-146,-146,-129,-129,-146,-50,-70,-146,-146,-106,-143,-59,-146,-146,-61,-146,-146,-146,-146,-146,-134,-70,-146,-146,-156,-146,-130,-48,-146,-146,-146,-146,-63,-58,-146,-146,-146,-79,-146,-146,-62,-66,-146,-52,]),'EX':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,124,142,143,160,161,163,164,165,166,167,178,182,184,186,187,192,193,194,195,196,197,198,199,200,225,230,233,234,236,238,241,242,243,244,248,249,251,252,253,255,256,270,271,272,277,279,280,281,282,283,284,285,286,289,290,291,296,297,298,302,305,315,316,317,319,328,330,331,332,333,334,339,340,341,350,352,353,354,363,370,],[-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,163,-109,163,-123,-127,-146,-132,163,163,-47,163,163,163,163,163,163,163,163,-117,-119,251,-126,163,-131,163,-107,-54,-55,-60,-53,-65,-64,-56,-57,163,163,-129,-125,-129,163,-50,-70,163,163,-106,-143,-59,163,163,-61,163,163,163,163,163,-134,-70,163,163,-156,163,-128,-130,-48,163,163,163,163,-63,-58,163,163,163,-79,163,163,-62,-66,163,-52,]),'RELOP':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,124,142,143,159,160,161,163,164,165,166,167,178,182,184,186,187,192,193,194,197,198,199,200,225,230,233,234,236,238,241,242,243,244,250,251,252,253,255,256,270,271,272,277,279,280,281,282,283,284,285,286,289,290,291,296,297,298,302,305,314,315,316,317,319,328,330,331,332,333,334,339,340,341,350,352,353,354,363,370,],[-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-146,-109,-146,195,-123,-127,-146,-132,-146,-146,-47,-146,-146,-146,-146,-146,-146,-146,-146,-122,-126,-146,-131,-146,-107,-54,-55,-60,-53,-65,-64,-56,-57,-121,-129,-125,-129,-146,-50,-70,-146,-146,-106,-143,-59,-146,-146,-61,-146,-146,-146,-146,-146,-134,-70,-146,-146,-156,-146,-124,-128,-130,-48,-146,-146,-146,-146,-63,-58,-146,-146,-146,-79,-146,-146,-62,-66,-146,-52,]),'LOGIC':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,124,142,143,159,160,161,163,164,165,166,167,178,182,184,186,187,192,193,194,197,198,199,200,225,230,233,234,236,238,241,242,243,244,250,251,252,253,255,256,270,271,272,277,279,280,281,282,283,284,285,286,289,290,291,296,297,298,302,305,314,315,316,317,319,328,330,331,332,333,334,339,340,341,350,352,353,354,363,370,],[-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-146,-109,-146,196,-123,-127,-146,-132,-146,-146,-47,-146,-146,-146,-146,-146,-146,-146,-146,-122,-126,-146,-131,-146,-107,-54,-55,-60,-53,-65,-64,-56,-57,-121,-129,-125,-129,-146,-50,-70,-146,-146,-106,-143,-59,-146,-146,-61,-146,-146,-146,-146,-146,-134,-70,-146,-146,-156,-146,-124,-128,-130,-48,-146,-146,-146,-146,-63,-58,-146,-146,-146,-79,-146,-146,-62,-66,-146,-52,]),'DOT':([77,101,219,],[122,123,122,]),'RUN':([110,132,],[-11,171,]),'SIZE':([122,],[144,]),'HEAD':([122,],[145,]),'FIND':([122,],[146,]),'LAST':([122,],[147,]),'DRAW':([123,],[148,]),'INIT':([123,],[149,]),'SET_FILL':([123,],[150,]),'SET_TITLE':([123,],[151,]),'GET_EVENT':([123,],[152,]),'UPDATE':([123,],[153,]),'WINDOW_H':([123,],[154,]),'WINDOW_W':([123,],[155,]),'SET_DIMENSION':([123,],[156,]),'RAND':([123,],[157,]),'IF':([134,173,176,210,212,213,214,222,223,261,263,264,265,266,267,295,347,355,362,364,366,368,373,374,],[-14,-13,221,221,-22,-23,-24,-76,-77,-18,-21,-25,-26,-27,-28,-17,-74,-71,-85,-74,-82,-72,-81,-78,]),'PRINT':([134,173,176,210,212,213,214,222,223,261,263,264,265,266,267,295,347,355,362,364,366,368,373,374,],[-14,-13,224,224,-22,-23,-24,-76,-77,-18,-21,-25,-26,-27,-28,-17,-74,-71,-85,-74,-82,-72,-81,-78,]),'RETURN':([134,173,176,210,212,213,214,222,223,261,263,264,265,266,267,295,347,355,362,364,366,368,373,374,],[-14,-13,225,225,-22,-23,-24,-76,-77,-18,-21,-25,-26,-27,-28,-17,-74,-71,-85,-74,-82,-72,-81,-78,]),'FOR':([134,173,176,210,212,213,214,222,223,261,263,264,265,266,267,295,347,355,362,364,366,368,373,374,],[-14,-13,226,226,-22,-23,-24,-76,-77,-18,-21,-25,-26,-27,-28,-17,-74,-71,-85,-74,-82,-72,-81,-78,]),'WHILE':([134,173,176,210,212,213,214,222,223,261,263,264,265,266,267,295,347,355,362,364,366,368,373,374,],[-14,-13,227,227,-22,-23,-24,-76,-77,-18,-21,-25,-26,-27,-28,-17,-74,-71,-85,-74,-82,-72,-81,-78,]),'EQUAL':([219,220,268,327,346,],[-69,270,296,-69,-142,]),'ELSE':([261,295,347,356,],[-18,-17,-75,360,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'capi':([0,],[1,]),'capi_action1':([0,],[2,]),'global':([2,],[3,]),'recfunc':([2,3,7,],[4,16,21,]),'function':([2,3,7,],[7,7,7,]),'type':([2,3,7,61,114,],[8,8,8,112,135,]),'primitivetype':([2,3,7,24,61,114,],[10,10,10,32,10,10,]),'start':([28,34,35,43,],[36,44,45,54,]),'vars':([29,134,176,210,],[38,173,213,213,]),'startscope_action':([30,31,111,171,226,227,],[40,41,133,204,274,275,]),'capi_action2':([36,44,45,54,],[46,55,56,106,]),'recids':([39,62,],[49,113,]),'run':([46,55,56,106,],[57,107,108,128,]),'start_action1':([47,],[59,]),'recparams':([51,52,174,],[64,66,206,]),'cte':([53,124,143,163,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[68,164,164,200,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'id':([53,124,143,163,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'int':([53,124,143,163,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'float':([53,124,143,163,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'bool':([53,124,143,163,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'string':([53,124,143,163,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'functioncall':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[74,74,74,74,74,74,217,74,74,74,74,74,74,74,74,74,217,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'listaccess':([53,124,143,163,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'specialfunction':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[76,76,76,76,76,76,218,76,76,76,76,76,76,76,76,76,218,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'draw':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'init':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'size':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'head':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'find':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'last':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'set_fill':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'set_title':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'get_event':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'update':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'window_h':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'window_w':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'set_dimension':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'create_text':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'rand':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'pow':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'sqrt':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'quit':([53,124,143,163,165,166,176,178,182,184,186,187,192,193,194,199,210,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'function_action1':([64,66,],[115,117,]),'function_action3':([65,67,175,177,],[116,118,207,228,]),'function_call_action1':([77,219,],[120,120,]),'list_action1':([77,219,327,],[121,269,269,]),'pow_action1':([103,],[125,]),'sqrt_action1':([104,],[126,]),'run_action1':([110,],[132,]),'block':([116,118,207,228,258,318,338,358,360,372,],[137,140,259,276,294,335,347,362,364,373,]),'action_list1':([119,],[141,]),'expression':([124,143,165,166,178,182,184,186,187,192,193,194,199,225,255,271,272,281,282,284,285,286,297,298,305,319,328,330,331,334,339,340,350,352,363,],[158,179,201,202,231,235,237,239,240,245,246,247,254,273,292,299,301,307,308,309,310,311,320,321,231,336,342,343,344,345,301,301,357,359,367,]),'exp':([124,143,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,297,298,305,319,328,330,331,334,339,340,350,352,363,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,287,288,159,159,159,159,159,159,159,159,314,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'term':([124,143,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,315,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'factor':([124,143,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'factor_action1':([124,143,165,166,178,182,184,186,187,192,193,194,199,225,248,249,255,271,272,281,282,284,285,286,289,290,297,298,305,319,328,330,331,334,339,340,350,352,363,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'function_action2':([136,139,],[175,177,]),'function_call_action2':([142,],[178,]),'exp_action':([160,],[197,]),'term_action':([161,],[198,]),'recstatement':([176,210,],[208,262,]),'statement':([176,210,],[210,210,]),'assign':([176,210,303,365,],[211,211,326,369,]),'condition':([176,210,],[212,212,]),'loop':([176,210,],[214,214,]),'write':([176,210,],[215,215,]),'return':([176,210,],[216,216,]),'assign_list':([176,210,303,365,],[220,220,220,220,]),'for':([176,210,],[222,222,]),'while':([176,210,],[223,223,]),'recfuncexp':([178,305,],[229,329,]),'list_action_3':([179,320,],[232,337,]),'relop_action1':([195,],[248,]),'logic_action1':([196,],[249,]),'recexp':([197,],[250,]),'recterm':([198,],[252,]),'main_cont':([205,293,],[258,318,]),'assign_action1':([219,327,],[268,268,]),'exp_action1':([231,],[278,]),'add_operator':([251,253,],[289,290,]),'assign_action2':([270,296,],[298,319,]),'recwrite':([272,339,340,],[300,348,349,]),'while_action1':([275,],[304,]),'recfunc_action1':([278,],[306,]),'relop_action2':([287,],[312,]),'logic_action2':([288,],[313,]),'factor_action2':([291,],[316,]),'condition_action1':([299,],[322,]),'action_recwrite_exp':([301,],[324,]),'action_recwrite_cte':([302,],[325,]),'for_action1':([341,],[350,]),'while_action2':([342,],[351,]),'condition_action2':([347,364,],[355,368,]),'condition_action3':([347,],[356,]),'for_action2':([357,],[361,]),'while_action3':([362,],[366,]),'for_action3':([373,],[374,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> capi","S'",1,None,None,None),
  ('capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',11,'p_capi','capi.py',272),
  ('capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',273),
  ('capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',274),
  ('capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',9,'p_capi','capi.py',275),
  ('capi_action1 -> <empty>','capi_action1',0,'p_capi_action1','capi.py',279),
  ('capi_action2 -> <empty>','capi_action2',0,'p_capi_action2','capi.py',287),
  ('global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON','global',6,'p_global','capi.py',293),
  ('start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block','start',9,'p_start','capi.py',302),
  ('start_action1 -> <empty>','start_action1',0,'p_start_action1','capi.py',319),
  ('run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block','run',9,'p_run','capi.py',326),
  ('run_action1 -> <empty>','run_action1',0,'p_run_action1','capi.py',342),
  ('main_cont -> <empty>','main_cont',0,'p_main_cont','capi.py',350),
  ('vars -> VAR recids COLON type SEMICOLON vars','vars',6,'p_vars','capi.py',356),
  ('vars -> VAR recids COLON type SEMICOLON','vars',5,'p_vars','capi.py',357),
  ('recids -> ID','recids',1,'p_recids','capi.py',391),
  ('recids -> ID COMMA recids','recids',3,'p_recids','capi.py',392),
  ('block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON','block',5,'p_block','capi.py',402),
  ('block -> COLON LEFTKEY RIGHTKEY SEMICOLON','block',4,'p_block','capi.py',403),
  ('recstatement -> statement recstatement','recstatement',2,'p_recstatement','capi.py',408),
  ('recstatement -> statement','recstatement',1,'p_recstatement','capi.py',409),
  ('statement -> assign SEMICOLON','statement',2,'p_statement','capi.py',415),
  ('statement -> condition','statement',1,'p_statement','capi.py',416),
  ('statement -> vars','statement',1,'p_statement','capi.py',417),
  ('statement -> loop','statement',1,'p_statement','capi.py',418),
  ('statement -> write SEMICOLON','statement',2,'p_statement','capi.py',419),
  ('statement -> return SEMICOLON','statement',2,'p_statement','capi.py',420),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement','capi.py',421),
  ('statement -> specialfunction SEMICOLON','statement',2,'p_statement','capi.py',422),
  ('specialfunction -> draw','specialfunction',1,'p_specialfunction','capi.py',429),
  ('specialfunction -> init','specialfunction',1,'p_specialfunction','capi.py',430),
  ('specialfunction -> size','specialfunction',1,'p_specialfunction','capi.py',431),
  ('specialfunction -> head','specialfunction',1,'p_specialfunction','capi.py',432),
  ('specialfunction -> find','specialfunction',1,'p_specialfunction','capi.py',433),
  ('specialfunction -> last','specialfunction',1,'p_specialfunction','capi.py',434),
  ('specialfunction -> set_fill','specialfunction',1,'p_specialfunction','capi.py',435),
  ('specialfunction -> set_title','specialfunction',1,'p_specialfunction','capi.py',436),
  ('specialfunction -> get_event','specialfunction',1,'p_specialfunction','capi.py',437),
  ('specialfunction -> update','specialfunction',1,'p_specialfunction','capi.py',438),
  ('specialfunction -> window_h','specialfunction',1,'p_specialfunction','capi.py',439),
  ('specialfunction -> window_w','specialfunction',1,'p_specialfunction','capi.py',440),
  ('specialfunction -> set_dimension','specialfunction',1,'p_specialfunction','capi.py',441),
  ('specialfunction -> create_text','specialfunction',1,'p_specialfunction','capi.py',442),
  ('specialfunction -> rand','specialfunction',1,'p_specialfunction','capi.py',443),
  ('specialfunction -> pow','specialfunction',1,'p_specialfunction','capi.py',444),
  ('specialfunction -> sqrt','specialfunction',1,'p_specialfunction','capi.py',445),
  ('specialfunction -> quit','specialfunction',1,'p_specialfunction','capi.py',446),
  ('quit -> QUIT LEFTPAR RIGHTPAR','quit',3,'p_quit','capi.py',452),
  ('pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR','pow',7,'p_pow','capi.py',458),
  ('pow_action1 -> <empty>','pow_action1',0,'p_pow_action1','capi.py',471),
  ('sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR','sqrt',5,'p_sqrt','capi.py',477),
  ('sqrt_action1 -> <empty>','sqrt_action1',0,'p_sqrt_action1','capi.py',488),
  ('draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR','draw',14,'p_draw','capi.py',496),
  ('init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR','init',5,'p_init','capi.py',514),
  ('size -> ID DOT SIZE LEFTPAR RIGHTPAR','size',5,'p_size','capi.py',520),
  ('head -> ID DOT HEAD LEFTPAR RIGHTPAR','head',5,'p_head','capi.py',548),
  ('window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR','window_h',5,'p_window_h','capi.py',578),
  ('window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR','window_w',5,'p_window_w','capi.py',587),
  ('rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR','rand',8,'p_rand','capi.py',595),
  ('find -> ID DOT FIND LEFTPAR expression RIGHTPAR','find',6,'p_find','capi.py',607),
  ('last -> ID DOT LAST LEFTPAR RIGHTPAR','last',5,'p_last','capi.py',640),
  ('set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR','set_title',6,'p_set_title','capi.py',672),
  ('set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_fill',10,'p_set_fill','capi.py',685),
  ('set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR','set_dimension',8,'p_set_dimension','capi.py',696),
  ('update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR','update',5,'p_update','capi.py',707),
  ('get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR','get_event',5,'p_get_event','capi.py',713),
  ('create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR','create_text',10,'p_create_text','capi.py',722),
  ('assign -> ID assign_action1 EQUAL assign_action2 expression','assign',5,'p_assign','capi.py',739),
  ('assign -> assign_list EQUAL assign_action2 expression','assign',4,'p_assign','capi.py',740),
  ('assign_action1 -> <empty>','assign_action1',0,'p_assign_action1','capi.py',805),
  ('assign_action2 -> <empty>','assign_action2',0,'p_assign_action2','capi.py',814),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2','condition',7,'p_condition','capi.py',820),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2','condition',10,'p_condition','capi.py',821),
  ('condition_action1 -> <empty>','condition_action1',0,'p_condition_action1','capi.py',826),
  ('condition_action2 -> <empty>','condition_action2',0,'p_condition_action2','capi.py',839),
  ('condition_action3 -> <empty>','condition_action3',0,'p_condition_action3','capi.py',846),
  ('loop -> for','loop',1,'p_loop','capi.py',856),
  ('loop -> while','loop',1,'p_loop','capi.py',857),
  ('for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3','for',14,'p_for','capi.py',862),
  ('for_action1 -> <empty>','for_action1',0,'p_for_action1','capi.py',870),
  ('for_action2 -> <empty>','for_action2',0,'p_for_action2','capi.py',878),
  ('for_action3 -> <empty>','for_action3',0,'p_for_action3','capi.py',892),
  ('while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3','while',9,'p_while','capi.py',906),
  ('while_action1 -> <empty>','while_action1',0,'p_while_action1','capi.py',915),
  ('while_action2 -> <empty>','while_action2',0,'p_while_action2','capi.py',921),
  ('while_action3 -> <empty>','while_action3',0,'p_while_action3','capi.py',935),
  ('function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',945),
  ('function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',946),
  ('function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',947),
  ('function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',948),
  ('startscope_action -> <empty>','startscope_action',0,'p_startscope_action','capi.py',978),
  ('function_action1 -> <empty>','function_action1',0,'p_function_action1','capi.py',997),
  ('function_action2 -> <empty>','function_action2',0,'p_function_action2','capi.py',1003),
  ('function_action3 -> <empty>','function_action3',0,'p_function_action3','capi.py',1014),
  ('recparams -> ID COLON type','recparams',3,'p_recparams','capi.py',1023),
  ('recparams -> ID COLON type COMMA recparams','recparams',5,'p_recparams','capi.py',1024),
  ('recfunc -> function recfunc','recfunc',2,'p_recfunc','capi.py',1037),
  ('recfunc -> function','recfunc',1,'p_recfunc','capi.py',1038),
  ('write -> PRINT LEFTPAR recwrite RIGHTPAR','write',4,'p_write','capi.py',1043),
  ('recwrite -> expression action_recwrite_exp COMMA recwrite','recwrite',4,'p_recwrite','capi.py',1048),
  ('recwrite -> STRING action_recwrite_cte COMMA recwrite','recwrite',4,'p_recwrite','capi.py',1049),
  ('recwrite -> expression action_recwrite_exp','recwrite',2,'p_recwrite','capi.py',1050),
  ('recwrite -> STRING action_recwrite_cte','recwrite',2,'p_recwrite','capi.py',1051),
  ('action_recwrite_exp -> <empty>','action_recwrite_exp',0,'p_action_recwrite_exp','capi.py',1055),
  ('action_recwrite_cte -> <empty>','action_recwrite_cte',0,'p_action_recwrite_cte','capi.py',1064),
  ('return -> RETURN expression','return',2,'p_return','capi.py',1071),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR','functioncall',6,'p_functioncall','capi.py',1099),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR','functioncall',5,'p_functioncall','capi.py',1100),
  ('function_call_action1 -> <empty>','function_call_action1',0,'p_function_call_action1','capi.py',1142),
  ('function_call_action2 -> <empty>','function_call_action2',0,'p_function_call_action2','capi.py',1154),
  ('recfuncexp -> expression exp_action1 COMMA recfuncexp','recfuncexp',4,'p_recfuncexp','capi.py',1163),
  ('recfuncexp -> expression exp_action1 recfunc_action1','recfuncexp',3,'p_recfuncexp','capi.py',1164),
  ('exp_action1 -> <empty>','exp_action1',0,'p_exp_action1','capi.py',1174),
  ('recfunc_action1 -> <empty>','recfunc_action1',0,'p_recfunc_action1','capi.py',1181),
  ('expression -> exp RELOP relop_action1 exp relop_action2','expression',5,'p_expression','capi.py',1226),
  ('expression -> exp LOGIC logic_action1 exp logic_action2','expression',5,'p_expression','capi.py',1227),
  ('expression -> exp','expression',1,'p_expression','capi.py',1228),
  ('relop_action1 -> <empty>','relop_action1',0,'p_relop_action1','capi.py',1233),
  ('relop_action2 -> <empty>','relop_action2',0,'p_relop_action2','capi.py',1239),
  ('logic_action1 -> <empty>','logic_action1',0,'p_logic_action1','capi.py',1262),
  ('logic_action2 -> <empty>','logic_action2',0,'p_logic_action2','capi.py',1268),
  ('exp -> term exp_action recexp','exp',3,'p_exp','capi.py',1291),
  ('exp -> term exp_action','exp',2,'p_exp','capi.py',1292),
  ('exp_action -> <empty>','exp_action',0,'p_exp_action','capi.py',1297),
  ('recexp -> EX add_operator exp','recexp',3,'p_recexp','capi.py',1321),
  ('term -> factor term_action recterm','term',3,'p_term','capi.py',1326),
  ('term -> factor term_action','term',2,'p_term','capi.py',1327),
  ('term_action -> <empty>','term_action',0,'p_term_action','capi.py',1332),
  ('recterm -> TERMS add_operator term','recterm',3,'p_recterm','capi.py',1355),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','capi.py',1360),
  ('factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2','factor',5,'p_factor','capi.py',1366),
  ('factor -> EX cte','factor',2,'p_factor','capi.py',1367),
  ('factor -> cte','factor',1,'p_factor','capi.py',1368),
  ('factor_action1 -> <empty>','factor_action1',0,'p_factor_action1','capi.py',1382),
  ('factor_action2 -> <empty>','factor_action2',0,'p_factor_action2','capi.py',1388),
  ('type -> primitivetype','type',1,'p_type','capi.py',1394),
  ('type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1','type',8,'p_type','capi.py',1395),
  ('action_list1 -> <empty>','action_list1',0,'p_action_list1','capi.py',1404),
  ('primitivetype -> TINT','primitivetype',1,'p_primitivetype','capi.py',1413),
  ('primitivetype -> TFLOAT','primitivetype',1,'p_primitivetype','capi.py',1414),
  ('primitivetype -> TSTRING','primitivetype',1,'p_primitivetype','capi.py',1415),
  ('primitivetype -> TBOOL','primitivetype',1,'p_primitivetype','capi.py',1416),
  ('assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','assign_list',6,'p_assign_list','capi.py',1423),
  ('listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','listaccess',6,'p_listaccess','capi.py',1435),
  ('list_action1 -> <empty>','list_action1',0,'p_list_action1','capi.py',1448),
  ('list_action_3 -> <empty>','list_action_3',0,'p_list_action_3','capi.py',1457),
  ('cte -> <empty>','cte',0,'p_cte','capi.py',1479),
  ('cte -> id','cte',1,'p_cte','capi.py',1480),
  ('cte -> int','cte',1,'p_cte','capi.py',1481),
  ('cte -> float','cte',1,'p_cte','capi.py',1482),
  ('cte -> bool','cte',1,'p_cte','capi.py',1483),
  ('cte -> string','cte',1,'p_cte','capi.py',1484),
  ('cte -> functioncall','cte',1,'p_cte','capi.py',1485),
  ('cte -> listaccess','cte',1,'p_cte','capi.py',1486),
  ('cte -> specialfunction','cte',1,'p_cte','capi.py',1487),
  ('id -> ID','id',1,'p_id','capi.py',1493),
  ('string -> STRING','string',1,'p_string','capi.py',1515),
  ('int -> INT','int',1,'p_int','capi.py',1522),
  ('float -> FLOAT','float',1,'p_float','capi.py',1529),
  ('bool -> TRUE','bool',1,'p_bool','capi.py',1536),
  ('bool -> FALSE','bool',1,'p_bool','capi.py',1537),
]
