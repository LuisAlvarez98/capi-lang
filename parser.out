Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    LIST
    OBJECT

Grammar

Rule 0     S' -> capi
Rule 1     capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 2     capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 3     capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 4     capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 5     capi_action1 -> <empty>
Rule 6     capi_action2 -> <empty>
Rule 7     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 8     start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 9     start_action1 -> <empty>
Rule 10    run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 11    run_action1 -> <empty>
Rule 12    main_cont -> <empty>
Rule 13    vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 14    vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 15    vars -> VAR recids COLON type SEMICOLON vars
Rule 16    vars -> VAR recids COLON type SEMICOLON
Rule 17    recids -> ID
Rule 18    recids -> ID COMMA recids
Rule 19    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 20    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 21    recstatement -> statement recstatement
Rule 22    recstatement -> statement
Rule 23    statement -> assign SEMICOLON
Rule 24    statement -> condition
Rule 25    statement -> vars
Rule 26    statement -> loop
Rule 27    statement -> write SEMICOLON
Rule 28    statement -> return SEMICOLON
Rule 29    statement -> functioncall SEMICOLON
Rule 30    statement -> nestedassign SEMICOLON
Rule 31    statement -> specialfunction SEMICOLON
Rule 32    specialfunction -> draw
Rule 33    specialfunction -> size
Rule 34    specialfunction -> head
Rule 35    specialfunction -> tail
Rule 36    specialfunction -> last
Rule 37    specialfunction -> set_title
Rule 38    specialfunction -> set_dimension
Rule 39    specialfunction -> set_color
Rule 40    specialfunction -> create_object
Rule 41    specialfunction -> create_text
Rule 42    draw -> DRAW LEFTPAR recfuncexp RIGHTPAR
Rule 43    size -> SIZE LEFTPAR RIGHTPAR
Rule 44    head -> HEAD LEFTPAR RIGHTPAR
Rule 45    tail -> TAIL LEFTPAR RIGHTPAR
Rule 46    last -> LAST LEFTPAR RIGHTPAR
Rule 47    set_title -> SET_TITLE LEFTPAR expression RIGHTPAR
Rule 48    set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 49    set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 50    create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
Rule 51    create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR
Rule 52    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 53    assign -> assign_list EQUAL assign_action2 expression
Rule 54    assign_action1 -> <empty>
Rule 55    assign_action2 -> <empty>
Rule 56    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 57    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 58    condition_action1 -> <empty>
Rule 59    condition_action2 -> <empty>
Rule 60    condition_action3 -> <empty>
Rule 61    loop -> for
Rule 62    loop -> while
Rule 63    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 64    for_action1 -> <empty>
Rule 65    for_action2 -> <empty>
Rule 66    for_action3 -> <empty>
Rule 67    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 68    while_action1 -> <empty>
Rule 69    while_action2 -> <empty>
Rule 70    while_action3 -> <empty>
Rule 71    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 72    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 73    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 74    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 75    startscope_action -> <empty>
Rule 76    function_action1 -> <empty>
Rule 77    function_action2 -> <empty>
Rule 78    function_action3 -> <empty>
Rule 79    recparams -> ID COLON type
Rule 80    recparams -> ID COLON type COMMA recparams
Rule 81    recfunc -> function recfunc
Rule 82    recfunc -> function
Rule 83    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 84    recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 85    recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 86    recwrite -> expression action_recwrite_exp
Rule 87    recwrite -> STRING action_recwrite_cte
Rule 88    action_recwrite_exp -> <empty>
Rule 89    action_recwrite_cte -> <empty>
Rule 90    return -> RETURN expression
Rule 91    functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
Rule 92    functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
Rule 93    function_call_action1 -> <empty>
Rule 94    function_call_action2 -> <empty>
Rule 95    recfuncexp -> expression COMMA recfuncexp
Rule 96    recfuncexp -> expression recfunc_action1
Rule 97    recfunc_action1 -> <empty>
Rule 98    expression -> exp RELOP relop_action1 exp relop_action2
Rule 99    expression -> exp LOGIC logic_action1 exp logic_action2
Rule 100   expression -> exp
Rule 101   relop_action1 -> <empty>
Rule 102   relop_action2 -> <empty>
Rule 103   logic_action1 -> <empty>
Rule 104   logic_action2 -> <empty>
Rule 105   exp -> term exp_action recexp
Rule 106   exp -> term exp_action
Rule 107   exp_action -> <empty>
Rule 108   recexp -> EX add_operator exp
Rule 109   term -> factor term_action recterm
Rule 110   term -> factor term_action
Rule 111   term_action -> <empty>
Rule 112   recterm -> TERMS add_operator term
Rule 113   add_operator -> <empty>
Rule 114   factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2
Rule 115   factor -> EX cte
Rule 116   factor -> cte
Rule 117   factor_action1 -> <empty>
Rule 118   factor_action2 -> <empty>
Rule 119   type -> primitivetype
Rule 120   type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
Rule 121   action_list1 -> <empty>
Rule 122   primitivetype -> TINT
Rule 123   primitivetype -> TFLOAT
Rule 124   primitivetype -> TSTRING
Rule 125   primitivetype -> TBOOL
Rule 126   primitivetype -> TOBJECT
Rule 127   assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 128   listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 129   list_action1 -> <empty>
Rule 130   list_action_3 -> <empty>
Rule 131   nestedvalue -> ID DOT ID
Rule 132   nestedassign -> nestedvalue EQUAL expression
Rule 133   cte -> <empty>
Rule 134   cte -> id
Rule 135   cte -> int
Rule 136   cte -> float
Rule 137   cte -> bool
Rule 138   cte -> string
Rule 139   cte -> nestedvalue
Rule 140   cte -> functioncall
Rule 141   cte -> listaccess
Rule 142   cte -> specialfunction
Rule 143   id -> ID
Rule 144   string -> STRING
Rule 145   int -> INT
Rule 146   float -> FLOAT
Rule 147   bool -> TRUE
Rule 148   bool -> FALSE

Terminals, with rules where they appear

BAR                  : 120 120
COLON                : 1 2 3 4 7 13 14 15 16 19 20 79 80
COMMA                : 18 48 49 49 80 84 85 95
COMMENT              : 
CREATE_OBJECT        : 50
CREATE_TEXT          : 51
DOT                  : 131
DRAW                 : 42
ELSE                 : 57
EQUAL                : 13 14 52 53 132
EX                   : 108 115
FALSE                : 148
FLOAT                : 146
FOR                  : 63
FUNC                 : 8 10 71 72 73 74
GLOBAL               : 7
HEAD                 : 44
ID                   : 17 18 52 71 72 73 74 79 80 91 92 127 128 131 131 143
IF                   : 56 57
INT                  : 145
LAST                 : 46
LEFTBRACKET          : 120 127 128
LEFTKEY              : 1 2 3 4 7 19 20
LEFTPAR              : 8 10 42 43 44 45 46 47 48 49 50 51 56 57 63 67 71 72 73 74 83 91 92 114
LIST                 : 
LOGIC                : 99
MAIN                 : 1 2 3 4
OBJECT               : 
PRINT                : 83
RELOP                : 98
RETURN               : 90
RIGHTBRACKET         : 120 127 128
RIGHTKEY             : 1 2 3 4 7 19 20
RIGHTPAR             : 8 10 42 43 44 45 46 47 48 49 50 51 56 57 63 67 71 72 73 74 83 91 92 114
RUN                  : 10
SEMICOLON            : 1 2 3 4 7 13 14 15 16 19 20 23 27 28 29 30 31 63 63 63
SET_COLOR            : 49
SET_DIMENSION        : 48
SET_TITLE            : 47
SIZE                 : 43
START                : 8
STRING               : 85 87 144
TAIL                 : 45
TBOOL                : 125
TERMS                : 112
TFLOAT               : 123
TINT                 : 122
TLIST                : 120
TOBJECT              : 126
TRUE                 : 147
TSTRING              : 124
VAR                  : 13 14 15 16
VOID                 : 8 10 73 74
WHILE                : 67
error                : 

Nonterminals, with rules where they appear

action_list1         : 120
action_recwrite_cte  : 85 87
action_recwrite_exp  : 84 86
add_operator         : 108 112
assign               : 23 63 63
assign_action1       : 52
assign_action2       : 52 53
assign_list          : 53
block                : 8 10 56 57 57 63 67 71 72 73 74
bool                 : 137
capi                 : 0
capi_action1         : 1 2 3 4
capi_action2         : 1 2 3 4
condition            : 24
condition_action1    : 56 57
condition_action2    : 56 57
condition_action3    : 57
create_object        : 40
create_text          : 41
cte                  : 115 116 120
draw                 : 32
exp                  : 98 98 99 99 100 108
exp_action           : 105 106
expression           : 13 14 47 48 48 49 49 49 52 53 56 57 63 67 84 86 90 95 96 114 127 128 132
factor               : 109 110
factor_action1       : 114
factor_action2       : 114
float                : 136
for                  : 61
for_action1          : 63
for_action2          : 63
for_action3          : 63
function             : 81 82
function_action1     : 71 73
function_action2     : 71 73
function_action3     : 71 72 73 74
function_call_action1 : 91 92
function_call_action2 : 91 92
functioncall         : 29 140
global               : 1 3
head                 : 34
id                   : 134
int                  : 135
last                 : 36
list_action1         : 127 128
list_action_3        : 127 128
listaccess           : 141
logic_action1        : 99
logic_action2        : 99
loop                 : 26
main_cont            : 8 10
nestedassign         : 30
nestedvalue          : 132 139
primitivetype        : 119 120
recexp               : 105
recfunc              : 1 2 81
recfunc_action1      : 96
recfuncexp           : 42 50 51 91 95
recids               : 13 14 15 16 18
recparams            : 71 73 80
recstatement         : 19 21
recterm              : 109
recwrite             : 83 84 85
relop_action1        : 98
relop_action2        : 98
return               : 28
run                  : 1 2 3 4
run_action1          : 10
set_color            : 39
set_dimension        : 38
set_title            : 37
size                 : 33
specialfunction      : 31 142
start                : 1 2 3 4
start_action1        : 8
startscope_action    : 8 10 63 67 71 72 73 74
statement            : 21 22
string               : 138
tail                 : 35
term                 : 105 106 112
term_action          : 109 110
type                 : 13 14 15 16 71 72 79 80
vars                 : 7 13 15 25
while                : 62
while_action1        : 67
while_action2        : 67
while_action3        : 67
write                : 27

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> . capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> . capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> . capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (5) capi_action1 -> .

    MAIN            reduce using rule 5 (capi_action1 -> .)
    GLOBAL          reduce using rule 5 (capi_action1 -> .)
    VOID            reduce using rule 5 (capi_action1 -> .)
    TLIST           reduce using rule 5 (capi_action1 -> .)
    TINT            reduce using rule 5 (capi_action1 -> .)
    TFLOAT          reduce using rule 5 (capi_action1 -> .)
    TSTRING         reduce using rule 5 (capi_action1 -> .)
    TBOOL           reduce using rule 5 (capi_action1 -> .)
    TOBJECT         reduce using rule 5 (capi_action1 -> .)

    capi                           shift and go to state 1
    capi_action1                   shift and go to state 2

state 1

    (0) S' -> capi .



state 2

    (1) capi -> capi_action1 . global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> capi_action1 . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 . global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> capi_action1 . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (7) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (81) recfunc -> . function recfunc
    (82) recfunc -> . function
    (71) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (73) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (74) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (119) type -> . primitivetype
    (120) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (122) primitivetype -> . TINT
    (123) primitivetype -> . TFLOAT
    (124) primitivetype -> . TSTRING
    (125) primitivetype -> . TBOOL
    (126) primitivetype -> . TOBJECT

    MAIN            shift and go to state 5
    GLOBAL          shift and go to state 6
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    global                         shift and go to state 3
    recfunc                        shift and go to state 4
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 3

    (1) capi -> capi_action1 global . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 global . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (81) recfunc -> . function recfunc
    (82) recfunc -> . function
    (71) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (73) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (74) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (119) type -> . primitivetype
    (120) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (122) primitivetype -> . TINT
    (123) primitivetype -> . TFLOAT
    (124) primitivetype -> . TSTRING
    (125) primitivetype -> . TBOOL
    (126) primitivetype -> . TOBJECT

    MAIN            shift and go to state 18
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    recfunc                        shift and go to state 17
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 4

    (2) capi -> capi_action1 recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 19


state 5

    (4) capi -> capi_action1 MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 6

    (7) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 21


state 7

    (81) recfunc -> function . recfunc
    (82) recfunc -> function .
    (81) recfunc -> . function recfunc
    (82) recfunc -> . function
    (71) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (73) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (74) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (119) type -> . primitivetype
    (120) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (122) primitivetype -> . TINT
    (123) primitivetype -> . TFLOAT
    (124) primitivetype -> . TSTRING
    (125) primitivetype -> . TBOOL
    (126) primitivetype -> . TOBJECT

    MAIN            reduce using rule 82 (recfunc -> function .)
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    function                       shift and go to state 7
    recfunc                        shift and go to state 22
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 8

    (71) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 9

    (73) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (74) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 24


state 10

    (119) type -> primitivetype .

    FUNC            reduce using rule 119 (type -> primitivetype .)
    EQUAL           reduce using rule 119 (type -> primitivetype .)
    SEMICOLON       reduce using rule 119 (type -> primitivetype .)
    COMMA           reduce using rule 119 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 119 (type -> primitivetype .)


state 11

    (120) type -> TLIST . BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 25


state 12

    (122) primitivetype -> TINT .

    FUNC            reduce using rule 122 (primitivetype -> TINT .)
    BAR             reduce using rule 122 (primitivetype -> TINT .)
    EQUAL           reduce using rule 122 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 122 (primitivetype -> TINT .)
    COMMA           reduce using rule 122 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 122 (primitivetype -> TINT .)


state 13

    (123) primitivetype -> TFLOAT .

    FUNC            reduce using rule 123 (primitivetype -> TFLOAT .)
    BAR             reduce using rule 123 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 123 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 123 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 123 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 123 (primitivetype -> TFLOAT .)


state 14

    (124) primitivetype -> TSTRING .

    FUNC            reduce using rule 124 (primitivetype -> TSTRING .)
    BAR             reduce using rule 124 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 124 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 124 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 124 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 124 (primitivetype -> TSTRING .)


state 15

    (125) primitivetype -> TBOOL .

    FUNC            reduce using rule 125 (primitivetype -> TBOOL .)
    BAR             reduce using rule 125 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 125 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 125 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 125 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 125 (primitivetype -> TBOOL .)


state 16

    (126) primitivetype -> TOBJECT .

    FUNC            reduce using rule 126 (primitivetype -> TOBJECT .)
    BAR             reduce using rule 126 (primitivetype -> TOBJECT .)
    EQUAL           reduce using rule 126 (primitivetype -> TOBJECT .)
    SEMICOLON       reduce using rule 126 (primitivetype -> TOBJECT .)
    COMMA           reduce using rule 126 (primitivetype -> TOBJECT .)
    RIGHTPAR        reduce using rule 126 (primitivetype -> TOBJECT .)


state 17

    (1) capi -> capi_action1 global recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 26


state 18

    (3) capi -> capi_action1 global MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (2) capi -> capi_action1 recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 28


state 20

    (4) capi -> capi_action1 MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (7) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 30


state 22

    (81) recfunc -> function recfunc .

    MAIN            reduce using rule 81 (recfunc -> function recfunc .)


state 23

    (71) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (73) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (74) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 32


state 25

    (120) type -> TLIST BAR . primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (122) primitivetype -> . TINT
    (123) primitivetype -> . TFLOAT
    (124) primitivetype -> . TSTRING
    (125) primitivetype -> . TBOOL
    (126) primitivetype -> . TOBJECT

    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    primitivetype                  shift and go to state 33

state 26

    (1) capi -> capi_action1 global recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 34


state 27

    (3) capi -> capi_action1 global MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (2) capi -> capi_action1 recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 36


state 29

    (4) capi -> capi_action1 MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 37

state 30

    (7) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 40

    vars                           shift and go to state 39

state 31

    (71) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (75) startscope_action -> .

    LEFTPAR         reduce using rule 75 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (73) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (74) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (75) startscope_action -> .

    LEFTPAR         reduce using rule 75 (startscope_action -> .)

    startscope_action              shift and go to state 42

state 33

    (120) type -> TLIST BAR primitivetype . BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 43


state 34

    (1) capi -> capi_action1 global recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 44


state 35

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 45

state 36

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 46

state 37

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 47

state 38

    (8) start -> VOID . FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 48


state 39

    (7) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 49


state 40

    (13) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR . recids COLON type SEMICOLON vars
    (16) vars -> VAR . recids COLON type SEMICOLON
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 50

state 41

    (71) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 42

    (73) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (74) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 53


state 43

    (120) type -> TLIST BAR primitivetype BAR . LEFTBRACKET cte RIGHTBRACKET action_list1

    LEFTBRACKET     shift and go to state 54


state 44

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 38

    start                          shift and go to state 55

state 45

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 56

state 46

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 57

state 47

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 58

state 48

    (8) start -> VOID FUNC . start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
    (9) start_action1 -> .

    START           reduce using rule 9 (start_action1 -> .)

    start_action1                  shift and go to state 60

state 49

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 61


state 50

    (13) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR recids . COLON type SEMICOLON vars
    (16) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 62


state 51

    (17) recids -> ID .
    (18) recids -> ID . COMMA recids

    COLON           reduce using rule 17 (recids -> ID .)
    COMMA           shift and go to state 63


state 52

    (71) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (79) recparams -> . ID COLON type
    (80) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 66
    ID              shift and go to state 64

    recparams                      shift and go to state 65

state 53

    (73) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (74) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (79) recparams -> . ID COLON type
    (80) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 68
    ID              shift and go to state 64

    recparams                      shift and go to state 67

state 54

    (120) type -> TLIST BAR primitivetype BAR LEFTBRACKET . cte RIGHTBRACKET action_list1
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTBRACKET    reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

    cte                            shift and go to state 69
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 55

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 105

state 56

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 106

state 57

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 107

state 58

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 108


state 59

    (10) run -> VOID . FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 109


state 60

    (8) start -> VOID FUNC start_action1 . START startscope_action LEFTPAR RIGHTPAR main_cont block

    START           shift and go to state 110


state 61

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 62

    (13) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON . type SEMICOLON vars
    (16) vars -> VAR recids COLON . type SEMICOLON
    (119) type -> . primitivetype
    (120) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (122) primitivetype -> . TINT
    (123) primitivetype -> . TFLOAT
    (124) primitivetype -> . TSTRING
    (125) primitivetype -> . TBOOL
    (126) primitivetype -> . TOBJECT

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 111
    primitivetype                  shift and go to state 10

state 63

    (18) recids -> ID COMMA . recids
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 112

state 64

    (79) recparams -> ID . COLON type
    (80) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 113


state 65

    (71) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (76) function_action1 -> .

    RIGHTPAR        reduce using rule 76 (function_action1 -> .)

    function_action1               shift and go to state 114

state 66

    (72) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (78) function_action3 -> .

    COLON           reduce using rule 78 (function_action3 -> .)

    function_action3               shift and go to state 115

state 67

    (73) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (76) function_action1 -> .

    RIGHTPAR        reduce using rule 76 (function_action1 -> .)

    function_action1               shift and go to state 116

state 68

    (74) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (78) function_action3 -> .

    COLON           reduce using rule 78 (function_action3 -> .)

    function_action3               shift and go to state 117

state 69

    (120) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte . RIGHTBRACKET action_list1

    RIGHTBRACKET    shift and go to state 118


state 70

    (134) cte -> id .

    RIGHTBRACKET    reduce using rule 134 (cte -> id .)
    TERMS           reduce using rule 134 (cte -> id .)
    EX              reduce using rule 134 (cte -> id .)
    RELOP           reduce using rule 134 (cte -> id .)
    LOGIC           reduce using rule 134 (cte -> id .)
    COMMA           reduce using rule 134 (cte -> id .)
    RIGHTPAR        reduce using rule 134 (cte -> id .)
    SEMICOLON       reduce using rule 134 (cte -> id .)


state 71

    (135) cte -> int .

    RIGHTBRACKET    reduce using rule 135 (cte -> int .)
    TERMS           reduce using rule 135 (cte -> int .)
    EX              reduce using rule 135 (cte -> int .)
    RELOP           reduce using rule 135 (cte -> int .)
    LOGIC           reduce using rule 135 (cte -> int .)
    COMMA           reduce using rule 135 (cte -> int .)
    RIGHTPAR        reduce using rule 135 (cte -> int .)
    SEMICOLON       reduce using rule 135 (cte -> int .)


state 72

    (136) cte -> float .

    RIGHTBRACKET    reduce using rule 136 (cte -> float .)
    TERMS           reduce using rule 136 (cte -> float .)
    EX              reduce using rule 136 (cte -> float .)
    RELOP           reduce using rule 136 (cte -> float .)
    LOGIC           reduce using rule 136 (cte -> float .)
    COMMA           reduce using rule 136 (cte -> float .)
    RIGHTPAR        reduce using rule 136 (cte -> float .)
    SEMICOLON       reduce using rule 136 (cte -> float .)


state 73

    (137) cte -> bool .

    RIGHTBRACKET    reduce using rule 137 (cte -> bool .)
    TERMS           reduce using rule 137 (cte -> bool .)
    EX              reduce using rule 137 (cte -> bool .)
    RELOP           reduce using rule 137 (cte -> bool .)
    LOGIC           reduce using rule 137 (cte -> bool .)
    COMMA           reduce using rule 137 (cte -> bool .)
    RIGHTPAR        reduce using rule 137 (cte -> bool .)
    SEMICOLON       reduce using rule 137 (cte -> bool .)


state 74

    (138) cte -> string .

    RIGHTBRACKET    reduce using rule 138 (cte -> string .)
    TERMS           reduce using rule 138 (cte -> string .)
    EX              reduce using rule 138 (cte -> string .)
    RELOP           reduce using rule 138 (cte -> string .)
    LOGIC           reduce using rule 138 (cte -> string .)
    COMMA           reduce using rule 138 (cte -> string .)
    RIGHTPAR        reduce using rule 138 (cte -> string .)
    SEMICOLON       reduce using rule 138 (cte -> string .)


state 75

    (139) cte -> nestedvalue .

    RIGHTBRACKET    reduce using rule 139 (cte -> nestedvalue .)
    TERMS           reduce using rule 139 (cte -> nestedvalue .)
    EX              reduce using rule 139 (cte -> nestedvalue .)
    RELOP           reduce using rule 139 (cte -> nestedvalue .)
    LOGIC           reduce using rule 139 (cte -> nestedvalue .)
    COMMA           reduce using rule 139 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 139 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 139 (cte -> nestedvalue .)


state 76

    (140) cte -> functioncall .

    RIGHTBRACKET    reduce using rule 140 (cte -> functioncall .)
    TERMS           reduce using rule 140 (cte -> functioncall .)
    EX              reduce using rule 140 (cte -> functioncall .)
    RELOP           reduce using rule 140 (cte -> functioncall .)
    LOGIC           reduce using rule 140 (cte -> functioncall .)
    COMMA           reduce using rule 140 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 140 (cte -> functioncall .)
    SEMICOLON       reduce using rule 140 (cte -> functioncall .)


state 77

    (141) cte -> listaccess .

    RIGHTBRACKET    reduce using rule 141 (cte -> listaccess .)
    TERMS           reduce using rule 141 (cte -> listaccess .)
    EX              reduce using rule 141 (cte -> listaccess .)
    RELOP           reduce using rule 141 (cte -> listaccess .)
    LOGIC           reduce using rule 141 (cte -> listaccess .)
    COMMA           reduce using rule 141 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 141 (cte -> listaccess .)
    SEMICOLON       reduce using rule 141 (cte -> listaccess .)


state 78

    (142) cte -> specialfunction .

    RIGHTBRACKET    reduce using rule 142 (cte -> specialfunction .)
    TERMS           reduce using rule 142 (cte -> specialfunction .)
    EX              reduce using rule 142 (cte -> specialfunction .)
    RELOP           reduce using rule 142 (cte -> specialfunction .)
    LOGIC           reduce using rule 142 (cte -> specialfunction .)
    COMMA           reduce using rule 142 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 142 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 142 (cte -> specialfunction .)


state 79

    (143) id -> ID .
    (131) nestedvalue -> ID . DOT ID
    (91) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (93) function_call_action1 -> .
    (129) list_action1 -> .

    RIGHTBRACKET    reduce using rule 143 (id -> ID .)
    TERMS           reduce using rule 143 (id -> ID .)
    EX              reduce using rule 143 (id -> ID .)
    RELOP           reduce using rule 143 (id -> ID .)
    LOGIC           reduce using rule 143 (id -> ID .)
    COMMA           reduce using rule 143 (id -> ID .)
    RIGHTPAR        reduce using rule 143 (id -> ID .)
    SEMICOLON       reduce using rule 143 (id -> ID .)
    DOT             shift and go to state 119
    LEFTPAR         reduce using rule 93 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 129 (list_action1 -> .)

    function_call_action1          shift and go to state 120
    list_action1                   shift and go to state 121

state 80

    (145) int -> INT .

    RIGHTBRACKET    reduce using rule 145 (int -> INT .)
    TERMS           reduce using rule 145 (int -> INT .)
    EX              reduce using rule 145 (int -> INT .)
    RELOP           reduce using rule 145 (int -> INT .)
    LOGIC           reduce using rule 145 (int -> INT .)
    COMMA           reduce using rule 145 (int -> INT .)
    RIGHTPAR        reduce using rule 145 (int -> INT .)
    SEMICOLON       reduce using rule 145 (int -> INT .)


state 81

    (146) float -> FLOAT .

    RIGHTBRACKET    reduce using rule 146 (float -> FLOAT .)
    TERMS           reduce using rule 146 (float -> FLOAT .)
    EX              reduce using rule 146 (float -> FLOAT .)
    RELOP           reduce using rule 146 (float -> FLOAT .)
    LOGIC           reduce using rule 146 (float -> FLOAT .)
    COMMA           reduce using rule 146 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 146 (float -> FLOAT .)
    SEMICOLON       reduce using rule 146 (float -> FLOAT .)


state 82

    (147) bool -> TRUE .

    RIGHTBRACKET    reduce using rule 147 (bool -> TRUE .)
    TERMS           reduce using rule 147 (bool -> TRUE .)
    EX              reduce using rule 147 (bool -> TRUE .)
    RELOP           reduce using rule 147 (bool -> TRUE .)
    LOGIC           reduce using rule 147 (bool -> TRUE .)
    COMMA           reduce using rule 147 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 147 (bool -> TRUE .)
    SEMICOLON       reduce using rule 147 (bool -> TRUE .)


state 83

    (148) bool -> FALSE .

    RIGHTBRACKET    reduce using rule 148 (bool -> FALSE .)
    TERMS           reduce using rule 148 (bool -> FALSE .)
    EX              reduce using rule 148 (bool -> FALSE .)
    RELOP           reduce using rule 148 (bool -> FALSE .)
    LOGIC           reduce using rule 148 (bool -> FALSE .)
    COMMA           reduce using rule 148 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 148 (bool -> FALSE .)
    SEMICOLON       reduce using rule 148 (bool -> FALSE .)


state 84

    (144) string -> STRING .

    RIGHTBRACKET    reduce using rule 144 (string -> STRING .)
    TERMS           reduce using rule 144 (string -> STRING .)
    EX              reduce using rule 144 (string -> STRING .)
    RELOP           reduce using rule 144 (string -> STRING .)
    LOGIC           reduce using rule 144 (string -> STRING .)
    COMMA           reduce using rule 144 (string -> STRING .)
    RIGHTPAR        reduce using rule 144 (string -> STRING .)
    SEMICOLON       reduce using rule 144 (string -> STRING .)


state 85

    (32) specialfunction -> draw .

    RIGHTBRACKET    reduce using rule 32 (specialfunction -> draw .)
    TERMS           reduce using rule 32 (specialfunction -> draw .)
    EX              reduce using rule 32 (specialfunction -> draw .)
    RELOP           reduce using rule 32 (specialfunction -> draw .)
    LOGIC           reduce using rule 32 (specialfunction -> draw .)
    COMMA           reduce using rule 32 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 32 (specialfunction -> draw .)


state 86

    (33) specialfunction -> size .

    RIGHTBRACKET    reduce using rule 33 (specialfunction -> size .)
    TERMS           reduce using rule 33 (specialfunction -> size .)
    EX              reduce using rule 33 (specialfunction -> size .)
    RELOP           reduce using rule 33 (specialfunction -> size .)
    LOGIC           reduce using rule 33 (specialfunction -> size .)
    COMMA           reduce using rule 33 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> size .)
    SEMICOLON       reduce using rule 33 (specialfunction -> size .)


state 87

    (34) specialfunction -> head .

    RIGHTBRACKET    reduce using rule 34 (specialfunction -> head .)
    TERMS           reduce using rule 34 (specialfunction -> head .)
    EX              reduce using rule 34 (specialfunction -> head .)
    RELOP           reduce using rule 34 (specialfunction -> head .)
    LOGIC           reduce using rule 34 (specialfunction -> head .)
    COMMA           reduce using rule 34 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> head .)
    SEMICOLON       reduce using rule 34 (specialfunction -> head .)


state 88

    (35) specialfunction -> tail .

    RIGHTBRACKET    reduce using rule 35 (specialfunction -> tail .)
    TERMS           reduce using rule 35 (specialfunction -> tail .)
    EX              reduce using rule 35 (specialfunction -> tail .)
    RELOP           reduce using rule 35 (specialfunction -> tail .)
    LOGIC           reduce using rule 35 (specialfunction -> tail .)
    COMMA           reduce using rule 35 (specialfunction -> tail .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> tail .)
    SEMICOLON       reduce using rule 35 (specialfunction -> tail .)


state 89

    (36) specialfunction -> last .

    RIGHTBRACKET    reduce using rule 36 (specialfunction -> last .)
    TERMS           reduce using rule 36 (specialfunction -> last .)
    EX              reduce using rule 36 (specialfunction -> last .)
    RELOP           reduce using rule 36 (specialfunction -> last .)
    LOGIC           reduce using rule 36 (specialfunction -> last .)
    COMMA           reduce using rule 36 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> last .)
    SEMICOLON       reduce using rule 36 (specialfunction -> last .)


state 90

    (37) specialfunction -> set_title .

    RIGHTBRACKET    reduce using rule 37 (specialfunction -> set_title .)
    TERMS           reduce using rule 37 (specialfunction -> set_title .)
    EX              reduce using rule 37 (specialfunction -> set_title .)
    RELOP           reduce using rule 37 (specialfunction -> set_title .)
    LOGIC           reduce using rule 37 (specialfunction -> set_title .)
    COMMA           reduce using rule 37 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 37 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 37 (specialfunction -> set_title .)


state 91

    (38) specialfunction -> set_dimension .

    RIGHTBRACKET    reduce using rule 38 (specialfunction -> set_dimension .)
    TERMS           reduce using rule 38 (specialfunction -> set_dimension .)
    EX              reduce using rule 38 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 38 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 38 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 38 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 38 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 38 (specialfunction -> set_dimension .)


state 92

    (39) specialfunction -> set_color .

    RIGHTBRACKET    reduce using rule 39 (specialfunction -> set_color .)
    TERMS           reduce using rule 39 (specialfunction -> set_color .)
    EX              reduce using rule 39 (specialfunction -> set_color .)
    RELOP           reduce using rule 39 (specialfunction -> set_color .)
    LOGIC           reduce using rule 39 (specialfunction -> set_color .)
    COMMA           reduce using rule 39 (specialfunction -> set_color .)
    RIGHTPAR        reduce using rule 39 (specialfunction -> set_color .)
    SEMICOLON       reduce using rule 39 (specialfunction -> set_color .)


state 93

    (40) specialfunction -> create_object .

    RIGHTBRACKET    reduce using rule 40 (specialfunction -> create_object .)
    TERMS           reduce using rule 40 (specialfunction -> create_object .)
    EX              reduce using rule 40 (specialfunction -> create_object .)
    RELOP           reduce using rule 40 (specialfunction -> create_object .)
    LOGIC           reduce using rule 40 (specialfunction -> create_object .)
    COMMA           reduce using rule 40 (specialfunction -> create_object .)
    RIGHTPAR        reduce using rule 40 (specialfunction -> create_object .)
    SEMICOLON       reduce using rule 40 (specialfunction -> create_object .)


state 94

    (41) specialfunction -> create_text .

    RIGHTBRACKET    reduce using rule 41 (specialfunction -> create_text .)
    TERMS           reduce using rule 41 (specialfunction -> create_text .)
    EX              reduce using rule 41 (specialfunction -> create_text .)
    RELOP           reduce using rule 41 (specialfunction -> create_text .)
    LOGIC           reduce using rule 41 (specialfunction -> create_text .)
    COMMA           reduce using rule 41 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 41 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 41 (specialfunction -> create_text .)


state 95

    (42) draw -> DRAW . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 122


state 96

    (43) size -> SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 123


state 97

    (44) head -> HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 124


state 98

    (45) tail -> TAIL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 125


state 99

    (46) last -> LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 126


state 100

    (47) set_title -> SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 127


state 101

    (48) set_dimension -> SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 128


state 102

    (49) set_color -> SET_COLOR . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 129


state 103

    (50) create_object -> CREATE_OBJECT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 130


state 104

    (51) create_text -> CREATE_TEXT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 131


state 105

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 59

    run                            shift and go to state 132

state 106

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 133


state 107

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 134


state 108

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 135


state 109

    (10) run -> VOID FUNC . run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
    (11) run_action1 -> .

    RUN             reduce using rule 11 (run_action1 -> .)

    run_action1                    shift and go to state 136

state 110

    (8) start -> VOID FUNC start_action1 START . startscope_action LEFTPAR RIGHTPAR main_cont block
    (75) startscope_action -> .

    LEFTPAR         reduce using rule 75 (startscope_action -> .)

    startscope_action              shift and go to state 137

state 111

    (13) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON type . SEMICOLON vars
    (16) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 138
    SEMICOLON       shift and go to state 139


state 112

    (18) recids -> ID COMMA recids .

    COLON           reduce using rule 18 (recids -> ID COMMA recids .)


state 113

    (79) recparams -> ID COLON . type
    (80) recparams -> ID COLON . type COMMA recparams
    (119) type -> . primitivetype
    (120) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (122) primitivetype -> . TINT
    (123) primitivetype -> . TFLOAT
    (124) primitivetype -> . TSTRING
    (125) primitivetype -> . TBOOL
    (126) primitivetype -> . TOBJECT

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 140
    primitivetype                  shift and go to state 10

state 114

    (71) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 141


state 115

    (72) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 142

state 116

    (73) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 144


state 117

    (74) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 145

state 118

    (120) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET . action_list1
    (121) action_list1 -> .

    FUNC            reduce using rule 121 (action_list1 -> .)
    EQUAL           reduce using rule 121 (action_list1 -> .)
    SEMICOLON       reduce using rule 121 (action_list1 -> .)
    COMMA           reduce using rule 121 (action_list1 -> .)
    RIGHTPAR        reduce using rule 121 (action_list1 -> .)

    action_list1                   shift and go to state 146

state 119

    (131) nestedvalue -> ID DOT . ID

    ID              shift and go to state 147


state 120

    (91) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 RIGHTPAR

    LEFTPAR         shift and go to state 148


state 121

    (128) listaccess -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 149


state 122

    (42) draw -> DRAW LEFTPAR . recfuncexp RIGHTPAR
    (95) recfuncexp -> . expression COMMA recfuncexp
    (96) recfuncexp -> . expression recfunc_action1
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    recfuncexp                     shift and go to state 150
    expression                     shift and go to state 151
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 123

    (43) size -> SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 158


state 124

    (44) head -> HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 159


state 125

    (45) tail -> TAIL LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 160


state 126

    (46) last -> LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 161


state 127

    (47) set_title -> SET_TITLE LEFTPAR . expression RIGHTPAR
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 162
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 128

    (48) set_dimension -> SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 163
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 129

    (49) set_color -> SET_COLOR LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 164
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 130

    (50) create_object -> CREATE_OBJECT LEFTPAR . recfuncexp RIGHTPAR
    (95) recfuncexp -> . expression COMMA recfuncexp
    (96) recfuncexp -> . expression recfunc_action1
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    recfuncexp                     shift and go to state 165
    expression                     shift and go to state 151
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 131

    (51) create_text -> CREATE_TEXT LEFTPAR . recfuncexp RIGHTPAR
    (95) recfuncexp -> . expression COMMA recfuncexp
    (96) recfuncexp -> . expression recfunc_action1
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    recfuncexp                     shift and go to state 166
    expression                     shift and go to state 151
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 132

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 167


state 133

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 168


state 134

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 169


state 135

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 136

    (10) run -> VOID FUNC run_action1 . RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    RUN             shift and go to state 170


state 137

    (8) start -> VOID FUNC start_action1 START startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 171


state 138

    (13) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 172
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 139

    (15) vars -> VAR recids COLON type SEMICOLON . vars
    (16) vars -> VAR recids COLON type SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    DRAW            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SIZE            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    HEAD            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    TAIL            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    LAST            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_TITLE       reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_DIMENSION   reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SET_COLOR       reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_OBJECT   reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 173

state 140

    (79) recparams -> ID COLON type .
    (80) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 79 (recparams -> ID COLON type .)
    COMMA           shift and go to state 174


state 141

    (71) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (77) function_action2 -> .

    COLON           reduce using rule 77 (function_action2 -> .)

    function_action2               shift and go to state 175

state 142

    (72) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 72 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 72 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 72 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 72 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 72 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 72 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 72 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 72 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 143

    (19) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 176


state 144

    (73) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (77) function_action2 -> .

    COLON           reduce using rule 77 (function_action2 -> .)

    function_action2               shift and go to state 177

state 145

    (74) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 74 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 74 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 74 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 74 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 74 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 74 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 74 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 74 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 146

    (120) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .

    FUNC            reduce using rule 120 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    EQUAL           reduce using rule 120 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    SEMICOLON       reduce using rule 120 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    COMMA           reduce using rule 120 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    RIGHTPAR        reduce using rule 120 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)


state 147

    (131) nestedvalue -> ID DOT ID .

    RIGHTBRACKET    reduce using rule 131 (nestedvalue -> ID DOT ID .)
    TERMS           reduce using rule 131 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 131 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 131 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 131 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 131 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 131 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 131 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 131 (nestedvalue -> ID DOT ID .)


state 148

    (91) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 RIGHTPAR
    (94) function_call_action2 -> .

    RIGHTPAR        reduce using rule 94 (function_call_action2 -> .)
    EX              reduce using rule 94 (function_call_action2 -> .)
    ID              reduce using rule 94 (function_call_action2 -> .)
    INT             reduce using rule 94 (function_call_action2 -> .)
    FLOAT           reduce using rule 94 (function_call_action2 -> .)
    TRUE            reduce using rule 94 (function_call_action2 -> .)
    FALSE           reduce using rule 94 (function_call_action2 -> .)
    STRING          reduce using rule 94 (function_call_action2 -> .)
    DRAW            reduce using rule 94 (function_call_action2 -> .)
    SIZE            reduce using rule 94 (function_call_action2 -> .)
    HEAD            reduce using rule 94 (function_call_action2 -> .)
    TAIL            reduce using rule 94 (function_call_action2 -> .)
    LAST            reduce using rule 94 (function_call_action2 -> .)
    SET_TITLE       reduce using rule 94 (function_call_action2 -> .)
    SET_DIMENSION   reduce using rule 94 (function_call_action2 -> .)
    SET_COLOR       reduce using rule 94 (function_call_action2 -> .)
    CREATE_OBJECT   reduce using rule 94 (function_call_action2 -> .)
    CREATE_TEXT     reduce using rule 94 (function_call_action2 -> .)
    COMMA           reduce using rule 94 (function_call_action2 -> .)
    RELOP           reduce using rule 94 (function_call_action2 -> .)
    LOGIC           reduce using rule 94 (function_call_action2 -> .)
    TERMS           reduce using rule 94 (function_call_action2 -> .)
    LEFTPAR         reduce using rule 94 (function_call_action2 -> .)

    function_call_action2          shift and go to state 178

state 149

    (128) listaccess -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    RIGHTBRACKET    reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 179
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 150

    (42) draw -> DRAW LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 180


state 151

    (95) recfuncexp -> expression . COMMA recfuncexp
    (96) recfuncexp -> expression . recfunc_action1
    (97) recfunc_action1 -> .

    COMMA           shift and go to state 181
    RIGHTPAR        reduce using rule 97 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 182

state 152

    (98) expression -> exp . RELOP relop_action1 exp relop_action2
    (99) expression -> exp . LOGIC logic_action1 exp logic_action2
    (100) expression -> exp .

    RELOP           shift and go to state 183
    LOGIC           shift and go to state 184
    COMMA           reduce using rule 100 (expression -> exp .)
    RIGHTPAR        reduce using rule 100 (expression -> exp .)
    SEMICOLON       reduce using rule 100 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 100 (expression -> exp .)


state 153

    (105) exp -> term . exp_action recexp
    (106) exp -> term . exp_action
    (107) exp_action -> .

    EX              reduce using rule 107 (exp_action -> .)
    RELOP           reduce using rule 107 (exp_action -> .)
    LOGIC           reduce using rule 107 (exp_action -> .)
    COMMA           reduce using rule 107 (exp_action -> .)
    RIGHTPAR        reduce using rule 107 (exp_action -> .)
    SEMICOLON       reduce using rule 107 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 107 (exp_action -> .)

    exp_action                     shift and go to state 185

state 154

    (109) term -> factor . term_action recterm
    (110) term -> factor . term_action
    (111) term_action -> .

    TERMS           reduce using rule 111 (term_action -> .)
    EX              reduce using rule 111 (term_action -> .)
    RELOP           reduce using rule 111 (term_action -> .)
    LOGIC           reduce using rule 111 (term_action -> .)
    COMMA           reduce using rule 111 (term_action -> .)
    RIGHTPAR        reduce using rule 111 (term_action -> .)
    SEMICOLON       reduce using rule 111 (term_action -> .)
    RIGHTBRACKET    reduce using rule 111 (term_action -> .)

    term_action                    shift and go to state 186

state 155

    (114) factor -> factor_action1 . LEFTPAR expression RIGHTPAR factor_action2

    LEFTPAR         shift and go to state 187


state 156

    (115) factor -> EX . cte
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    TERMS           reduce using rule 133 (cte -> .)
    EX              reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    RIGHTBRACKET    reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

    cte                            shift and go to state 188
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 157

    (116) factor -> cte .

    TERMS           reduce using rule 116 (factor -> cte .)
    EX              reduce using rule 116 (factor -> cte .)
    RELOP           reduce using rule 116 (factor -> cte .)
    LOGIC           reduce using rule 116 (factor -> cte .)
    COMMA           reduce using rule 116 (factor -> cte .)
    RIGHTPAR        reduce using rule 116 (factor -> cte .)
    SEMICOLON       reduce using rule 116 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 116 (factor -> cte .)


state 158

    (43) size -> SIZE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 43 (size -> SIZE LEFTPAR RIGHTPAR .)


state 159

    (44) head -> HEAD LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 44 (head -> HEAD LEFTPAR RIGHTPAR .)


state 160

    (45) tail -> TAIL LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    EX              reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 45 (tail -> TAIL LEFTPAR RIGHTPAR .)


state 161

    (46) last -> LAST LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 46 (last -> LAST LEFTPAR RIGHTPAR .)


state 162

    (47) set_title -> SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 189


state 163

    (48) set_dimension -> SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 190


state 164

    (49) set_color -> SET_COLOR LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 191


state 165

    (50) create_object -> CREATE_OBJECT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 192


state 166

    (51) create_text -> CREATE_TEXT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 193


state 167

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 194


state 168

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 169

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 170

    (10) run -> VOID FUNC run_action1 RUN . startscope_action LEFTPAR RIGHTPAR main_cont block
    (75) startscope_action -> .

    LEFTPAR         reduce using rule 75 (startscope_action -> .)

    startscope_action              shift and go to state 195

state 171

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 196


state 172

    (13) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 197


state 173

    (15) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    DRAW            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SIZE            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    HEAD            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    TAIL            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    LAST            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_TITLE       reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_COLOR       reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)


state 174

    (80) recparams -> ID COLON type COMMA . recparams
    (79) recparams -> . ID COLON type
    (80) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 64

    recparams                      shift and go to state 198

state 175

    (71) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (78) function_action3 -> .

    COLON           reduce using rule 78 (function_action3 -> .)

    function_action3               shift and go to state 199

state 176

    (19) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (52) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (53) assign -> . assign_list EQUAL assign_action2 expression
    (56) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (57) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (61) loop -> . for
    (62) loop -> . while
    (83) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (90) return -> . RETURN expression
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (132) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (127) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (63) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (67) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (131) nestedvalue -> . ID DOT ID
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        shift and go to state 201
    ID              shift and go to state 212
    IF              shift and go to state 214
    VAR             shift and go to state 40
    PRINT           shift and go to state 217
    RETURN          shift and go to state 218
    FOR             shift and go to state 220
    WHILE           shift and go to state 221
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

    recstatement                   shift and go to state 200
    statement                      shift and go to state 202
    assign                         shift and go to state 203
    condition                      shift and go to state 204
    vars                           shift and go to state 205
    loop                           shift and go to state 206
    write                          shift and go to state 207
    return                         shift and go to state 208
    functioncall                   shift and go to state 209
    nestedassign                   shift and go to state 210
    specialfunction                shift and go to state 211
    assign_list                    shift and go to state 213
    for                            shift and go to state 215
    while                          shift and go to state 216
    nestedvalue                    shift and go to state 219
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 177

    (73) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (78) function_action3 -> .

    COLON           reduce using rule 78 (function_action3 -> .)

    function_action3               shift and go to state 222

state 178

    (91) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . recfuncexp RIGHTPAR
    (92) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . RIGHTPAR
    (95) recfuncexp -> . expression COMMA recfuncexp
    (96) recfuncexp -> . expression recfunc_action1
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
  ! shift/reduce conflict for RIGHTPAR resolved as shift
    RIGHTPAR        shift and go to state 224
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]
  ! RIGHTPAR        [ reduce using rule 133 (cte -> .) ]

    recfuncexp                     shift and go to state 223
    expression                     shift and go to state 151
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 179

    (128) listaccess -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (130) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 130 (list_action_3 -> .)

    list_action_3                  shift and go to state 225

state 180

    (42) draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 42 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)


state 181

    (95) recfuncexp -> expression COMMA . recfuncexp
    (95) recfuncexp -> . expression COMMA recfuncexp
    (96) recfuncexp -> . expression recfunc_action1
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 151
    recfuncexp                     shift and go to state 226
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 182

    (96) recfuncexp -> expression recfunc_action1 .

    RIGHTPAR        reduce using rule 96 (recfuncexp -> expression recfunc_action1 .)


state 183

    (98) expression -> exp RELOP . relop_action1 exp relop_action2
    (101) relop_action1 -> .

    EX              reduce using rule 101 (relop_action1 -> .)
    ID              reduce using rule 101 (relop_action1 -> .)
    INT             reduce using rule 101 (relop_action1 -> .)
    FLOAT           reduce using rule 101 (relop_action1 -> .)
    TRUE            reduce using rule 101 (relop_action1 -> .)
    FALSE           reduce using rule 101 (relop_action1 -> .)
    STRING          reduce using rule 101 (relop_action1 -> .)
    DRAW            reduce using rule 101 (relop_action1 -> .)
    SIZE            reduce using rule 101 (relop_action1 -> .)
    HEAD            reduce using rule 101 (relop_action1 -> .)
    TAIL            reduce using rule 101 (relop_action1 -> .)
    LAST            reduce using rule 101 (relop_action1 -> .)
    SET_TITLE       reduce using rule 101 (relop_action1 -> .)
    SET_DIMENSION   reduce using rule 101 (relop_action1 -> .)
    SET_COLOR       reduce using rule 101 (relop_action1 -> .)
    CREATE_OBJECT   reduce using rule 101 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 101 (relop_action1 -> .)
    TERMS           reduce using rule 101 (relop_action1 -> .)
    LEFTPAR         reduce using rule 101 (relop_action1 -> .)
    COMMA           reduce using rule 101 (relop_action1 -> .)
    RIGHTPAR        reduce using rule 101 (relop_action1 -> .)
    SEMICOLON       reduce using rule 101 (relop_action1 -> .)
    RIGHTBRACKET    reduce using rule 101 (relop_action1 -> .)

    relop_action1                  shift and go to state 227

state 184

    (99) expression -> exp LOGIC . logic_action1 exp logic_action2
    (103) logic_action1 -> .

    EX              reduce using rule 103 (logic_action1 -> .)
    ID              reduce using rule 103 (logic_action1 -> .)
    INT             reduce using rule 103 (logic_action1 -> .)
    FLOAT           reduce using rule 103 (logic_action1 -> .)
    TRUE            reduce using rule 103 (logic_action1 -> .)
    FALSE           reduce using rule 103 (logic_action1 -> .)
    STRING          reduce using rule 103 (logic_action1 -> .)
    DRAW            reduce using rule 103 (logic_action1 -> .)
    SIZE            reduce using rule 103 (logic_action1 -> .)
    HEAD            reduce using rule 103 (logic_action1 -> .)
    TAIL            reduce using rule 103 (logic_action1 -> .)
    LAST            reduce using rule 103 (logic_action1 -> .)
    SET_TITLE       reduce using rule 103 (logic_action1 -> .)
    SET_DIMENSION   reduce using rule 103 (logic_action1 -> .)
    SET_COLOR       reduce using rule 103 (logic_action1 -> .)
    CREATE_OBJECT   reduce using rule 103 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 103 (logic_action1 -> .)
    TERMS           reduce using rule 103 (logic_action1 -> .)
    LEFTPAR         reduce using rule 103 (logic_action1 -> .)
    COMMA           reduce using rule 103 (logic_action1 -> .)
    RIGHTPAR        reduce using rule 103 (logic_action1 -> .)
    SEMICOLON       reduce using rule 103 (logic_action1 -> .)
    RIGHTBRACKET    reduce using rule 103 (logic_action1 -> .)

    logic_action1                  shift and go to state 228

state 185

    (105) exp -> term exp_action . recexp
    (106) exp -> term exp_action .
    (108) recexp -> . EX add_operator exp

    RELOP           reduce using rule 106 (exp -> term exp_action .)
    LOGIC           reduce using rule 106 (exp -> term exp_action .)
    COMMA           reduce using rule 106 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 106 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 106 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 106 (exp -> term exp_action .)
    EX              shift and go to state 230

    recexp                         shift and go to state 229

state 186

    (109) term -> factor term_action . recterm
    (110) term -> factor term_action .
    (112) recterm -> . TERMS add_operator term

    EX              reduce using rule 110 (term -> factor term_action .)
    RELOP           reduce using rule 110 (term -> factor term_action .)
    LOGIC           reduce using rule 110 (term -> factor term_action .)
    COMMA           reduce using rule 110 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 110 (term -> factor term_action .)
    SEMICOLON       reduce using rule 110 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 110 (term -> factor term_action .)
    TERMS           shift and go to state 232

    recterm                        shift and go to state 231

state 187

    (114) factor -> factor_action1 LEFTPAR . expression RIGHTPAR factor_action2
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    factor_action1                 shift and go to state 155
    expression                     shift and go to state 233
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 188

    (115) factor -> EX cte .

    TERMS           reduce using rule 115 (factor -> EX cte .)
    EX              reduce using rule 115 (factor -> EX cte .)
    RELOP           reduce using rule 115 (factor -> EX cte .)
    LOGIC           reduce using rule 115 (factor -> EX cte .)
    COMMA           reduce using rule 115 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 115 (factor -> EX cte .)
    SEMICOLON       reduce using rule 115 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 115 (factor -> EX cte .)


state 189

    (47) set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 47 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)


state 190

    (48) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 234
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 191

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 235
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 192

    (50) create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 50 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)


state 193

    (51) create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 51 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)


state 194

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 195

    (10) run -> VOID FUNC run_action1 RUN startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 236


state 196

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 237

state 197

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (14) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    DRAW            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SIZE            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    HEAD            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    TAIL            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    LAST            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_TITLE       reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_DIMENSION   reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_COLOR       reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_OBJECT   reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 238

state 198

    (80) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 80 (recparams -> ID COLON type COMMA recparams .)


state 199

    (71) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 239

state 200

    (19) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 240


state 201

    (20) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 241


state 202

    (21) recstatement -> statement . recstatement
    (22) recstatement -> statement .
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (52) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (53) assign -> . assign_list EQUAL assign_action2 expression
    (56) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (57) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (61) loop -> . for
    (62) loop -> . while
    (83) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (90) return -> . RETURN expression
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (132) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (127) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (63) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (67) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (131) nestedvalue -> . ID DOT ID
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        reduce using rule 22 (recstatement -> statement .)
    ID              shift and go to state 212
    IF              shift and go to state 214
    VAR             shift and go to state 40
    PRINT           shift and go to state 217
    RETURN          shift and go to state 218
    FOR             shift and go to state 220
    WHILE           shift and go to state 221
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

    statement                      shift and go to state 202
    recstatement                   shift and go to state 242
    assign                         shift and go to state 203
    condition                      shift and go to state 204
    vars                           shift and go to state 205
    loop                           shift and go to state 206
    write                          shift and go to state 207
    return                         shift and go to state 208
    functioncall                   shift and go to state 209
    nestedassign                   shift and go to state 210
    specialfunction                shift and go to state 211
    assign_list                    shift and go to state 213
    for                            shift and go to state 215
    while                          shift and go to state 216
    nestedvalue                    shift and go to state 219
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 203

    (23) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 243


state 204

    (24) statement -> condition .

    ID              reduce using rule 24 (statement -> condition .)
    IF              reduce using rule 24 (statement -> condition .)
    VAR             reduce using rule 24 (statement -> condition .)
    PRINT           reduce using rule 24 (statement -> condition .)
    RETURN          reduce using rule 24 (statement -> condition .)
    FOR             reduce using rule 24 (statement -> condition .)
    WHILE           reduce using rule 24 (statement -> condition .)
    DRAW            reduce using rule 24 (statement -> condition .)
    SIZE            reduce using rule 24 (statement -> condition .)
    HEAD            reduce using rule 24 (statement -> condition .)
    TAIL            reduce using rule 24 (statement -> condition .)
    LAST            reduce using rule 24 (statement -> condition .)
    SET_TITLE       reduce using rule 24 (statement -> condition .)
    SET_DIMENSION   reduce using rule 24 (statement -> condition .)
    SET_COLOR       reduce using rule 24 (statement -> condition .)
    CREATE_OBJECT   reduce using rule 24 (statement -> condition .)
    CREATE_TEXT     reduce using rule 24 (statement -> condition .)
    RIGHTKEY        reduce using rule 24 (statement -> condition .)


state 205

    (25) statement -> vars .

    ID              reduce using rule 25 (statement -> vars .)
    IF              reduce using rule 25 (statement -> vars .)
    VAR             reduce using rule 25 (statement -> vars .)
    PRINT           reduce using rule 25 (statement -> vars .)
    RETURN          reduce using rule 25 (statement -> vars .)
    FOR             reduce using rule 25 (statement -> vars .)
    WHILE           reduce using rule 25 (statement -> vars .)
    DRAW            reduce using rule 25 (statement -> vars .)
    SIZE            reduce using rule 25 (statement -> vars .)
    HEAD            reduce using rule 25 (statement -> vars .)
    TAIL            reduce using rule 25 (statement -> vars .)
    LAST            reduce using rule 25 (statement -> vars .)
    SET_TITLE       reduce using rule 25 (statement -> vars .)
    SET_DIMENSION   reduce using rule 25 (statement -> vars .)
    SET_COLOR       reduce using rule 25 (statement -> vars .)
    CREATE_OBJECT   reduce using rule 25 (statement -> vars .)
    CREATE_TEXT     reduce using rule 25 (statement -> vars .)
    RIGHTKEY        reduce using rule 25 (statement -> vars .)


state 206

    (26) statement -> loop .

    ID              reduce using rule 26 (statement -> loop .)
    IF              reduce using rule 26 (statement -> loop .)
    VAR             reduce using rule 26 (statement -> loop .)
    PRINT           reduce using rule 26 (statement -> loop .)
    RETURN          reduce using rule 26 (statement -> loop .)
    FOR             reduce using rule 26 (statement -> loop .)
    WHILE           reduce using rule 26 (statement -> loop .)
    DRAW            reduce using rule 26 (statement -> loop .)
    SIZE            reduce using rule 26 (statement -> loop .)
    HEAD            reduce using rule 26 (statement -> loop .)
    TAIL            reduce using rule 26 (statement -> loop .)
    LAST            reduce using rule 26 (statement -> loop .)
    SET_TITLE       reduce using rule 26 (statement -> loop .)
    SET_DIMENSION   reduce using rule 26 (statement -> loop .)
    SET_COLOR       reduce using rule 26 (statement -> loop .)
    CREATE_OBJECT   reduce using rule 26 (statement -> loop .)
    CREATE_TEXT     reduce using rule 26 (statement -> loop .)
    RIGHTKEY        reduce using rule 26 (statement -> loop .)


state 207

    (27) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 244


state 208

    (28) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 245


state 209

    (29) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 246


state 210

    (30) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 247


state 211

    (31) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 248


state 212

    (52) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (91) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (127) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (131) nestedvalue -> ID . DOT ID
    (54) assign_action1 -> .
    (93) function_call_action1 -> .
    (129) list_action1 -> .

    DOT             shift and go to state 119
    EQUAL           reduce using rule 54 (assign_action1 -> .)
    LEFTPAR         reduce using rule 93 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 129 (list_action1 -> .)

    assign_action1                 shift and go to state 249
    function_call_action1          shift and go to state 120
    list_action1                   shift and go to state 250

state 213

    (53) assign -> assign_list . EQUAL assign_action2 expression

    EQUAL           shift and go to state 251


state 214

    (56) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (57) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 252


state 215

    (61) loop -> for .

    ID              reduce using rule 61 (loop -> for .)
    IF              reduce using rule 61 (loop -> for .)
    VAR             reduce using rule 61 (loop -> for .)
    PRINT           reduce using rule 61 (loop -> for .)
    RETURN          reduce using rule 61 (loop -> for .)
    FOR             reduce using rule 61 (loop -> for .)
    WHILE           reduce using rule 61 (loop -> for .)
    DRAW            reduce using rule 61 (loop -> for .)
    SIZE            reduce using rule 61 (loop -> for .)
    HEAD            reduce using rule 61 (loop -> for .)
    TAIL            reduce using rule 61 (loop -> for .)
    LAST            reduce using rule 61 (loop -> for .)
    SET_TITLE       reduce using rule 61 (loop -> for .)
    SET_DIMENSION   reduce using rule 61 (loop -> for .)
    SET_COLOR       reduce using rule 61 (loop -> for .)
    CREATE_OBJECT   reduce using rule 61 (loop -> for .)
    CREATE_TEXT     reduce using rule 61 (loop -> for .)
    RIGHTKEY        reduce using rule 61 (loop -> for .)


state 216

    (62) loop -> while .

    ID              reduce using rule 62 (loop -> while .)
    IF              reduce using rule 62 (loop -> while .)
    VAR             reduce using rule 62 (loop -> while .)
    PRINT           reduce using rule 62 (loop -> while .)
    RETURN          reduce using rule 62 (loop -> while .)
    FOR             reduce using rule 62 (loop -> while .)
    WHILE           reduce using rule 62 (loop -> while .)
    DRAW            reduce using rule 62 (loop -> while .)
    SIZE            reduce using rule 62 (loop -> while .)
    HEAD            reduce using rule 62 (loop -> while .)
    TAIL            reduce using rule 62 (loop -> while .)
    LAST            reduce using rule 62 (loop -> while .)
    SET_TITLE       reduce using rule 62 (loop -> while .)
    SET_DIMENSION   reduce using rule 62 (loop -> while .)
    SET_COLOR       reduce using rule 62 (loop -> while .)
    CREATE_OBJECT   reduce using rule 62 (loop -> while .)
    CREATE_TEXT     reduce using rule 62 (loop -> while .)
    RIGHTKEY        reduce using rule 62 (loop -> while .)


state 217

    (83) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 253


state 218

    (90) return -> RETURN . expression
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 254
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 219

    (132) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 255


state 220

    (63) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (75) startscope_action -> .

    LEFTPAR         reduce using rule 75 (startscope_action -> .)

    startscope_action              shift and go to state 256

state 221

    (67) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (75) startscope_action -> .

    LEFTPAR         reduce using rule 75 (startscope_action -> .)

    startscope_action              shift and go to state 257

state 222

    (73) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 258

state 223

    (91) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 259


state 224

    (92) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .

    RIGHTBRACKET    reduce using rule 92 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    TERMS           reduce using rule 92 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    EX              reduce using rule 92 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RELOP           reduce using rule 92 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    LOGIC           reduce using rule 92 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    COMMA           reduce using rule 92 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTPAR        reduce using rule 92 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    SEMICOLON       reduce using rule 92 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)


state 225

    (128) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 260


state 226

    (95) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 95 (recfuncexp -> expression COMMA recfuncexp .)


state 227

    (98) expression -> exp RELOP relop_action1 . exp relop_action2
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    RIGHTBRACKET    reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    exp                            shift and go to state 261
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 228

    (99) expression -> exp LOGIC logic_action1 . exp logic_action2
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    RIGHTBRACKET    reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    exp                            shift and go to state 262
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 229

    (105) exp -> term exp_action recexp .

    RELOP           reduce using rule 105 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 105 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 105 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 105 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 105 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 105 (exp -> term exp_action recexp .)


state 230

    (108) recexp -> EX . add_operator exp
    (113) add_operator -> .

    EX              reduce using rule 113 (add_operator -> .)
    ID              reduce using rule 113 (add_operator -> .)
    INT             reduce using rule 113 (add_operator -> .)
    FLOAT           reduce using rule 113 (add_operator -> .)
    TRUE            reduce using rule 113 (add_operator -> .)
    FALSE           reduce using rule 113 (add_operator -> .)
    STRING          reduce using rule 113 (add_operator -> .)
    DRAW            reduce using rule 113 (add_operator -> .)
    SIZE            reduce using rule 113 (add_operator -> .)
    HEAD            reduce using rule 113 (add_operator -> .)
    TAIL            reduce using rule 113 (add_operator -> .)
    LAST            reduce using rule 113 (add_operator -> .)
    SET_TITLE       reduce using rule 113 (add_operator -> .)
    SET_DIMENSION   reduce using rule 113 (add_operator -> .)
    SET_COLOR       reduce using rule 113 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 113 (add_operator -> .)
    CREATE_TEXT     reduce using rule 113 (add_operator -> .)
    TERMS           reduce using rule 113 (add_operator -> .)
    LEFTPAR         reduce using rule 113 (add_operator -> .)
    RELOP           reduce using rule 113 (add_operator -> .)
    LOGIC           reduce using rule 113 (add_operator -> .)
    COMMA           reduce using rule 113 (add_operator -> .)
    RIGHTPAR        reduce using rule 113 (add_operator -> .)
    SEMICOLON       reduce using rule 113 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 113 (add_operator -> .)

    add_operator                   shift and go to state 263

state 231

    (109) term -> factor term_action recterm .

    EX              reduce using rule 109 (term -> factor term_action recterm .)
    RELOP           reduce using rule 109 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 109 (term -> factor term_action recterm .)
    COMMA           reduce using rule 109 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 109 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 109 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 109 (term -> factor term_action recterm .)


state 232

    (112) recterm -> TERMS . add_operator term
    (113) add_operator -> .

    EX              reduce using rule 113 (add_operator -> .)
    ID              reduce using rule 113 (add_operator -> .)
    INT             reduce using rule 113 (add_operator -> .)
    FLOAT           reduce using rule 113 (add_operator -> .)
    TRUE            reduce using rule 113 (add_operator -> .)
    FALSE           reduce using rule 113 (add_operator -> .)
    STRING          reduce using rule 113 (add_operator -> .)
    DRAW            reduce using rule 113 (add_operator -> .)
    SIZE            reduce using rule 113 (add_operator -> .)
    HEAD            reduce using rule 113 (add_operator -> .)
    TAIL            reduce using rule 113 (add_operator -> .)
    LAST            reduce using rule 113 (add_operator -> .)
    SET_TITLE       reduce using rule 113 (add_operator -> .)
    SET_DIMENSION   reduce using rule 113 (add_operator -> .)
    SET_COLOR       reduce using rule 113 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 113 (add_operator -> .)
    CREATE_TEXT     reduce using rule 113 (add_operator -> .)
    TERMS           reduce using rule 113 (add_operator -> .)
    LEFTPAR         reduce using rule 113 (add_operator -> .)
    RELOP           reduce using rule 113 (add_operator -> .)
    LOGIC           reduce using rule 113 (add_operator -> .)
    COMMA           reduce using rule 113 (add_operator -> .)
    RIGHTPAR        reduce using rule 113 (add_operator -> .)
    SEMICOLON       reduce using rule 113 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 113 (add_operator -> .)

    add_operator                   shift and go to state 264

state 233

    (114) factor -> factor_action1 LEFTPAR expression . RIGHTPAR factor_action2

    RIGHTPAR        shift and go to state 265


state 234

    (48) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 266


state 235

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 267


state 236

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 268


state 237

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 269

state 238

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    DRAW            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SIZE            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    HEAD            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    TAIL            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    LAST            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_TITLE       reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_COLOR       reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 239

    (71) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 71 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 240

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 270


state 241

    (20) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 242

    (21) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 21 (recstatement -> statement recstatement .)


state 243

    (23) statement -> assign SEMICOLON .

    ID              reduce using rule 23 (statement -> assign SEMICOLON .)
    IF              reduce using rule 23 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 23 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 23 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> assign SEMICOLON .)
    DRAW            reduce using rule 23 (statement -> assign SEMICOLON .)
    SIZE            reduce using rule 23 (statement -> assign SEMICOLON .)
    HEAD            reduce using rule 23 (statement -> assign SEMICOLON .)
    TAIL            reduce using rule 23 (statement -> assign SEMICOLON .)
    LAST            reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_TITLE       reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_DIMENSION   reduce using rule 23 (statement -> assign SEMICOLON .)
    SET_COLOR       reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> assign SEMICOLON .)


state 244

    (27) statement -> write SEMICOLON .

    ID              reduce using rule 27 (statement -> write SEMICOLON .)
    IF              reduce using rule 27 (statement -> write SEMICOLON .)
    VAR             reduce using rule 27 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> write SEMICOLON .)
    FOR             reduce using rule 27 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> write SEMICOLON .)
    DRAW            reduce using rule 27 (statement -> write SEMICOLON .)
    SIZE            reduce using rule 27 (statement -> write SEMICOLON .)
    HEAD            reduce using rule 27 (statement -> write SEMICOLON .)
    TAIL            reduce using rule 27 (statement -> write SEMICOLON .)
    LAST            reduce using rule 27 (statement -> write SEMICOLON .)
    SET_TITLE       reduce using rule 27 (statement -> write SEMICOLON .)
    SET_DIMENSION   reduce using rule 27 (statement -> write SEMICOLON .)
    SET_COLOR       reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_OBJECT   reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 27 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 27 (statement -> write SEMICOLON .)


state 245

    (28) statement -> return SEMICOLON .

    ID              reduce using rule 28 (statement -> return SEMICOLON .)
    IF              reduce using rule 28 (statement -> return SEMICOLON .)
    VAR             reduce using rule 28 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 28 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> return SEMICOLON .)
    FOR             reduce using rule 28 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> return SEMICOLON .)
    DRAW            reduce using rule 28 (statement -> return SEMICOLON .)
    SIZE            reduce using rule 28 (statement -> return SEMICOLON .)
    HEAD            reduce using rule 28 (statement -> return SEMICOLON .)
    TAIL            reduce using rule 28 (statement -> return SEMICOLON .)
    LAST            reduce using rule 28 (statement -> return SEMICOLON .)
    SET_TITLE       reduce using rule 28 (statement -> return SEMICOLON .)
    SET_DIMENSION   reduce using rule 28 (statement -> return SEMICOLON .)
    SET_COLOR       reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_OBJECT   reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 28 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 28 (statement -> return SEMICOLON .)


state 246

    (29) statement -> functioncall SEMICOLON .

    ID              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    DRAW            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SIZE            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    HEAD            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    TAIL            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    LAST            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_TITLE       reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_DIMENSION   reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SET_COLOR       reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_OBJECT   reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 29 (statement -> functioncall SEMICOLON .)


state 247

    (30) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    DRAW            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SIZE            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    HEAD            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    TAIL            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    LAST            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_TITLE       reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_DIMENSION   reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SET_COLOR       reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 30 (statement -> nestedassign SEMICOLON .)


state 248

    (31) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    DRAW            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SIZE            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    HEAD            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    TAIL            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    LAST            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_TITLE       reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_DIMENSION   reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SET_COLOR       reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_OBJECT   reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 31 (statement -> specialfunction SEMICOLON .)


state 249

    (52) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 271


state 250

    (127) assign_list -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 272


state 251

    (53) assign -> assign_list EQUAL . assign_action2 expression
    (55) assign_action2 -> .

    EX              reduce using rule 55 (assign_action2 -> .)
    ID              reduce using rule 55 (assign_action2 -> .)
    INT             reduce using rule 55 (assign_action2 -> .)
    FLOAT           reduce using rule 55 (assign_action2 -> .)
    TRUE            reduce using rule 55 (assign_action2 -> .)
    FALSE           reduce using rule 55 (assign_action2 -> .)
    STRING          reduce using rule 55 (assign_action2 -> .)
    DRAW            reduce using rule 55 (assign_action2 -> .)
    SIZE            reduce using rule 55 (assign_action2 -> .)
    HEAD            reduce using rule 55 (assign_action2 -> .)
    TAIL            reduce using rule 55 (assign_action2 -> .)
    LAST            reduce using rule 55 (assign_action2 -> .)
    SET_TITLE       reduce using rule 55 (assign_action2 -> .)
    SET_DIMENSION   reduce using rule 55 (assign_action2 -> .)
    SET_COLOR       reduce using rule 55 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 55 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 55 (assign_action2 -> .)
    RELOP           reduce using rule 55 (assign_action2 -> .)
    LOGIC           reduce using rule 55 (assign_action2 -> .)
    TERMS           reduce using rule 55 (assign_action2 -> .)
    LEFTPAR         reduce using rule 55 (assign_action2 -> .)
    SEMICOLON       reduce using rule 55 (assign_action2 -> .)

    assign_action2                 shift and go to state 273

state 252

    (56) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (57) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 274
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 253

    (83) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (84) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (85) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (86) recwrite -> . expression action_recwrite_exp
    (87) recwrite -> . STRING action_recwrite_cte
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 277
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    recwrite                       shift and go to state 275
    expression                     shift and go to state 276
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 254

    (90) return -> RETURN expression .

    SEMICOLON       reduce using rule 90 (return -> RETURN expression .)


state 255

    (132) nestedassign -> nestedvalue EQUAL . expression
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    nestedvalue                    shift and go to state 75
    expression                     shift and go to state 278
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 256

    (63) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 279


state 257

    (67) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (68) while_action1 -> .

    LEFTPAR         reduce using rule 68 (while_action1 -> .)

    while_action1                  shift and go to state 280

state 258

    (73) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 73 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 259

    (91) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    EX              reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 91 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)


state 260

    (128) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    RIGHTBRACKET    reduce using rule 128 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    TERMS           reduce using rule 128 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    EX              reduce using rule 128 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RELOP           reduce using rule 128 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    LOGIC           reduce using rule 128 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    COMMA           reduce using rule 128 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RIGHTPAR        reduce using rule 128 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    SEMICOLON       reduce using rule 128 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 261

    (98) expression -> exp RELOP relop_action1 exp . relop_action2
    (102) relop_action2 -> .

    COMMA           reduce using rule 102 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 102 (relop_action2 -> .)
    SEMICOLON       reduce using rule 102 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 102 (relop_action2 -> .)

    relop_action2                  shift and go to state 281

state 262

    (99) expression -> exp LOGIC logic_action1 exp . logic_action2
    (104) logic_action2 -> .

    COMMA           reduce using rule 104 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 104 (logic_action2 -> .)
    SEMICOLON       reduce using rule 104 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 104 (logic_action2 -> .)

    logic_action2                  shift and go to state 282

state 263

    (108) recexp -> EX add_operator . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    RIGHTBRACKET    reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    exp                            shift and go to state 283
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 264

    (112) recterm -> TERMS add_operator . term
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    RIGHTBRACKET    reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    term                           shift and go to state 284
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 265

    (114) factor -> factor_action1 LEFTPAR expression RIGHTPAR . factor_action2
    (118) factor_action2 -> .

    TERMS           reduce using rule 118 (factor_action2 -> .)
    EX              reduce using rule 118 (factor_action2 -> .)
    RELOP           reduce using rule 118 (factor_action2 -> .)
    LOGIC           reduce using rule 118 (factor_action2 -> .)
    COMMA           reduce using rule 118 (factor_action2 -> .)
    RIGHTPAR        reduce using rule 118 (factor_action2 -> .)
    SEMICOLON       reduce using rule 118 (factor_action2 -> .)
    RIGHTBRACKET    reduce using rule 118 (factor_action2 -> .)

    factor_action2                 shift and go to state 285

state 266

    (48) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 48 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 267

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 286
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 268

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 287

state 269

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .

    VOID            reduce using rule 8 (start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 270

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 271

    (52) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (55) assign_action2 -> .

    EX              reduce using rule 55 (assign_action2 -> .)
    ID              reduce using rule 55 (assign_action2 -> .)
    INT             reduce using rule 55 (assign_action2 -> .)
    FLOAT           reduce using rule 55 (assign_action2 -> .)
    TRUE            reduce using rule 55 (assign_action2 -> .)
    FALSE           reduce using rule 55 (assign_action2 -> .)
    STRING          reduce using rule 55 (assign_action2 -> .)
    DRAW            reduce using rule 55 (assign_action2 -> .)
    SIZE            reduce using rule 55 (assign_action2 -> .)
    HEAD            reduce using rule 55 (assign_action2 -> .)
    TAIL            reduce using rule 55 (assign_action2 -> .)
    LAST            reduce using rule 55 (assign_action2 -> .)
    SET_TITLE       reduce using rule 55 (assign_action2 -> .)
    SET_DIMENSION   reduce using rule 55 (assign_action2 -> .)
    SET_COLOR       reduce using rule 55 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 55 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 55 (assign_action2 -> .)
    RELOP           reduce using rule 55 (assign_action2 -> .)
    LOGIC           reduce using rule 55 (assign_action2 -> .)
    TERMS           reduce using rule 55 (assign_action2 -> .)
    LEFTPAR         reduce using rule 55 (assign_action2 -> .)
    SEMICOLON       reduce using rule 55 (assign_action2 -> .)

    assign_action2                 shift and go to state 288

state 272

    (127) assign_list -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    RIGHTBRACKET    reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 289
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 273

    (53) assign -> assign_list EQUAL assign_action2 . expression
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 290
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 274

    (56) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (57) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (58) condition_action1 -> .

    RIGHTPAR        reduce using rule 58 (condition_action1 -> .)

    condition_action1              shift and go to state 291

state 275

    (83) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 292


state 276

    (84) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (86) recwrite -> expression . action_recwrite_exp
    (88) action_recwrite_exp -> .

    COMMA           reduce using rule 88 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 88 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 293

state 277

    (85) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (87) recwrite -> STRING . action_recwrite_cte
    (144) string -> STRING .
    (89) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 89 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 89 (action_recwrite_cte -> .)
    TERMS           reduce using rule 144 (string -> STRING .)
    EX              reduce using rule 144 (string -> STRING .)
    RELOP           reduce using rule 144 (string -> STRING .)
    LOGIC           reduce using rule 144 (string -> STRING .)
    COMMA           reduce using rule 89 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 89 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 144 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 144 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 294

state 278

    (132) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 132 (nestedassign -> nestedvalue EQUAL expression .)


state 279

    (63) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (52) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (53) assign -> . assign_list EQUAL assign_action2 expression
    (127) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 296

    assign                         shift and go to state 295
    assign_list                    shift and go to state 213

state 280

    (67) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 297


state 281

    (98) expression -> exp RELOP relop_action1 exp relop_action2 .

    COMMA           reduce using rule 98 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 98 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    SEMICOLON       reduce using rule 98 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 98 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 282

    (99) expression -> exp LOGIC logic_action1 exp logic_action2 .

    COMMA           reduce using rule 99 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 99 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    SEMICOLON       reduce using rule 99 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 99 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 283

    (108) recexp -> EX add_operator exp .

    RELOP           reduce using rule 108 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 108 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 108 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 108 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 108 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 108 (recexp -> EX add_operator exp .)


state 284

    (112) recterm -> TERMS add_operator term .

    EX              reduce using rule 112 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 112 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 112 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 112 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 112 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 112 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 112 (recterm -> TERMS add_operator term .)


state 285

    (114) factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .

    TERMS           reduce using rule 114 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    EX              reduce using rule 114 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RELOP           reduce using rule 114 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    LOGIC           reduce using rule 114 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    COMMA           reduce using rule 114 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTPAR        reduce using rule 114 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    SEMICOLON       reduce using rule 114 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTBRACKET    reduce using rule 114 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)


state 286

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 298


state 287

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 299

state 288

    (52) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 300
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 289

    (127) assign_list -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (130) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 130 (list_action_3 -> .)

    list_action_3                  shift and go to state 301

state 290

    (53) assign -> assign_list EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 53 (assign -> assign_list EQUAL assign_action2 expression .)


state 291

    (56) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (57) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 302


state 292

    (83) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 83 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 293

    (84) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (86) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 303
    RIGHTPAR        reduce using rule 86 (recwrite -> expression action_recwrite_exp .)


state 294

    (85) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (87) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 304
    RIGHTPAR        reduce using rule 87 (recwrite -> STRING action_recwrite_cte .)


state 295

    (63) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 305


state 296

    (52) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (127) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (54) assign_action1 -> .
    (129) list_action1 -> .

    EQUAL           reduce using rule 54 (assign_action1 -> .)
    LEFTBRACKET     reduce using rule 129 (list_action1 -> .)

    assign_action1                 shift and go to state 249
    list_action1                   shift and go to state 250

state 297

    (67) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 306
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 298

    (49) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 49 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 299

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .

    RIGHTKEY        reduce using rule 10 (run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 300

    (52) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 52 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 301

    (127) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 307


state 302

    (56) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (57) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 308

state 303

    (84) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (84) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (85) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (86) recwrite -> . expression action_recwrite_exp
    (87) recwrite -> . STRING action_recwrite_cte
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 277
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 276
    recwrite                       shift and go to state 309
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 304

    (85) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (84) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (85) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (86) recwrite -> . expression action_recwrite_exp
    (87) recwrite -> . STRING action_recwrite_cte
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 277
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    COMMA           reduce using rule 133 (cte -> .)
    RIGHTPAR        reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    recwrite                       shift and go to state 310
    expression                     shift and go to state 276
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 305

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (64) for_action1 -> .

    EX              reduce using rule 64 (for_action1 -> .)
    ID              reduce using rule 64 (for_action1 -> .)
    INT             reduce using rule 64 (for_action1 -> .)
    FLOAT           reduce using rule 64 (for_action1 -> .)
    TRUE            reduce using rule 64 (for_action1 -> .)
    FALSE           reduce using rule 64 (for_action1 -> .)
    STRING          reduce using rule 64 (for_action1 -> .)
    DRAW            reduce using rule 64 (for_action1 -> .)
    SIZE            reduce using rule 64 (for_action1 -> .)
    HEAD            reduce using rule 64 (for_action1 -> .)
    TAIL            reduce using rule 64 (for_action1 -> .)
    LAST            reduce using rule 64 (for_action1 -> .)
    SET_TITLE       reduce using rule 64 (for_action1 -> .)
    SET_DIMENSION   reduce using rule 64 (for_action1 -> .)
    SET_COLOR       reduce using rule 64 (for_action1 -> .)
    CREATE_OBJECT   reduce using rule 64 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 64 (for_action1 -> .)
    SEMICOLON       reduce using rule 64 (for_action1 -> .)
    RELOP           reduce using rule 64 (for_action1 -> .)
    LOGIC           reduce using rule 64 (for_action1 -> .)
    TERMS           reduce using rule 64 (for_action1 -> .)
    LEFTPAR         reduce using rule 64 (for_action1 -> .)

    for_action1                    shift and go to state 311

state 306

    (67) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (69) while_action2 -> .

    RIGHTPAR        reduce using rule 69 (while_action2 -> .)

    while_action2                  shift and go to state 312

state 307

    (127) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    EQUAL           reduce using rule 127 (assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 308

    (56) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (57) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (59) condition_action2 -> .
    (60) condition_action3 -> .

    ID              reduce using rule 59 (condition_action2 -> .)
    IF              reduce using rule 59 (condition_action2 -> .)
    VAR             reduce using rule 59 (condition_action2 -> .)
    PRINT           reduce using rule 59 (condition_action2 -> .)
    RETURN          reduce using rule 59 (condition_action2 -> .)
    FOR             reduce using rule 59 (condition_action2 -> .)
    WHILE           reduce using rule 59 (condition_action2 -> .)
    DRAW            reduce using rule 59 (condition_action2 -> .)
    SIZE            reduce using rule 59 (condition_action2 -> .)
    HEAD            reduce using rule 59 (condition_action2 -> .)
    TAIL            reduce using rule 59 (condition_action2 -> .)
    LAST            reduce using rule 59 (condition_action2 -> .)
    SET_TITLE       reduce using rule 59 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 59 (condition_action2 -> .)
    SET_COLOR       reduce using rule 59 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 59 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 59 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 59 (condition_action2 -> .)
    ELSE            reduce using rule 60 (condition_action3 -> .)

    condition_action2              shift and go to state 313
    condition_action3              shift and go to state 314

state 309

    (84) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 84 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 310

    (85) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 85 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 311

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (98) expression -> . exp RELOP relop_action1 exp relop_action2
    (99) expression -> . exp LOGIC logic_action1 exp logic_action2
    (100) expression -> . exp
    (105) exp -> . term exp_action recexp
    (106) exp -> . term exp_action
    (109) term -> . factor term_action recterm
    (110) term -> . factor term_action
    (114) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (115) factor -> . EX cte
    (116) factor -> . cte
    (117) factor_action1 -> .
    (133) cte -> .
    (134) cte -> . id
    (135) cte -> . int
    (136) cte -> . float
    (137) cte -> . bool
    (138) cte -> . string
    (139) cte -> . nestedvalue
    (140) cte -> . functioncall
    (141) cte -> . listaccess
    (142) cte -> . specialfunction
    (143) id -> . ID
    (145) int -> . INT
    (146) float -> . FLOAT
    (147) bool -> . TRUE
    (148) bool -> . FALSE
    (144) string -> . STRING
    (131) nestedvalue -> . ID DOT ID
    (91) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (92) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (128) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . size
    (34) specialfunction -> . head
    (35) specialfunction -> . tail
    (36) specialfunction -> . last
    (37) specialfunction -> . set_title
    (38) specialfunction -> . set_dimension
    (39) specialfunction -> . set_color
    (40) specialfunction -> . create_object
    (41) specialfunction -> . create_text
    (42) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (43) size -> . SIZE LEFTPAR RIGHTPAR
    (44) head -> . HEAD LEFTPAR RIGHTPAR
    (45) tail -> . TAIL LEFTPAR RIGHTPAR
    (46) last -> . LAST LEFTPAR RIGHTPAR
    (47) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (48) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (49) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (50) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (51) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 156
    LEFTPAR         reduce using rule 117 (factor_action1 -> .)
    TERMS           reduce using rule 133 (cte -> .)
    RELOP           reduce using rule 133 (cte -> .)
    LOGIC           reduce using rule 133 (cte -> .)
    SEMICOLON       reduce using rule 133 (cte -> .)
    ID              shift and go to state 79
    INT             shift and go to state 80
    FLOAT           shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83
    STRING          shift and go to state 84
    DRAW            shift and go to state 95
    SIZE            shift and go to state 96
    HEAD            shift and go to state 97
    TAIL            shift and go to state 98
    LAST            shift and go to state 99
    SET_TITLE       shift and go to state 100
    SET_DIMENSION   shift and go to state 101
    SET_COLOR       shift and go to state 102
    CREATE_OBJECT   shift and go to state 103
    CREATE_TEXT     shift and go to state 104

  ! EX              [ reduce using rule 133 (cte -> .) ]

    expression                     shift and go to state 315
    exp                            shift and go to state 152
    term                           shift and go to state 153
    factor                         shift and go to state 154
    factor_action1                 shift and go to state 155
    cte                            shift and go to state 157
    id                             shift and go to state 70
    int                            shift and go to state 71
    float                          shift and go to state 72
    bool                           shift and go to state 73
    string                         shift and go to state 74
    nestedvalue                    shift and go to state 75
    functioncall                   shift and go to state 76
    listaccess                     shift and go to state 77
    specialfunction                shift and go to state 78
    draw                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    tail                           shift and go to state 88
    last                           shift and go to state 89
    set_title                      shift and go to state 90
    set_dimension                  shift and go to state 91
    set_color                      shift and go to state 92
    create_object                  shift and go to state 93
    create_text                    shift and go to state 94

state 312

    (67) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 316


state 313

    (56) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    DRAW            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SIZE            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    HEAD            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    TAIL            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    LAST            reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_TITLE       reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_DIMENSION   reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_COLOR       reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_OBJECT   reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 56 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 314

    (57) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 317


state 315

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (65) for_action2 -> .

    SEMICOLON       reduce using rule 65 (for_action2 -> .)

    for_action2                    shift and go to state 318

state 316

    (67) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 319

state 317

    (57) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 320

state 318

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 321


state 319

    (67) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (70) while_action3 -> .

    ID              reduce using rule 70 (while_action3 -> .)
    IF              reduce using rule 70 (while_action3 -> .)
    VAR             reduce using rule 70 (while_action3 -> .)
    PRINT           reduce using rule 70 (while_action3 -> .)
    RETURN          reduce using rule 70 (while_action3 -> .)
    FOR             reduce using rule 70 (while_action3 -> .)
    WHILE           reduce using rule 70 (while_action3 -> .)
    DRAW            reduce using rule 70 (while_action3 -> .)
    SIZE            reduce using rule 70 (while_action3 -> .)
    HEAD            reduce using rule 70 (while_action3 -> .)
    TAIL            reduce using rule 70 (while_action3 -> .)
    LAST            reduce using rule 70 (while_action3 -> .)
    SET_TITLE       reduce using rule 70 (while_action3 -> .)
    SET_DIMENSION   reduce using rule 70 (while_action3 -> .)
    SET_COLOR       reduce using rule 70 (while_action3 -> .)
    CREATE_OBJECT   reduce using rule 70 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 70 (while_action3 -> .)
    RIGHTKEY        reduce using rule 70 (while_action3 -> .)

    while_action3                  shift and go to state 322

state 320

    (57) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (59) condition_action2 -> .

    ID              reduce using rule 59 (condition_action2 -> .)
    IF              reduce using rule 59 (condition_action2 -> .)
    VAR             reduce using rule 59 (condition_action2 -> .)
    PRINT           reduce using rule 59 (condition_action2 -> .)
    RETURN          reduce using rule 59 (condition_action2 -> .)
    FOR             reduce using rule 59 (condition_action2 -> .)
    WHILE           reduce using rule 59 (condition_action2 -> .)
    DRAW            reduce using rule 59 (condition_action2 -> .)
    SIZE            reduce using rule 59 (condition_action2 -> .)
    HEAD            reduce using rule 59 (condition_action2 -> .)
    TAIL            reduce using rule 59 (condition_action2 -> .)
    LAST            reduce using rule 59 (condition_action2 -> .)
    SET_TITLE       reduce using rule 59 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 59 (condition_action2 -> .)
    SET_COLOR       reduce using rule 59 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 59 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 59 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 59 (condition_action2 -> .)

    condition_action2              shift and go to state 323

state 321

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (52) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (53) assign -> . assign_list EQUAL assign_action2 expression
    (127) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 296

    assign                         shift and go to state 324
    assign_list                    shift and go to state 213

state 322

    (67) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    DRAW            reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SIZE            reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    HEAD            reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    TAIL            reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    LAST            reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_TITLE       reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_DIMENSION   reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_COLOR       reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_OBJECT   reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 67 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 323

    (57) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    DRAW            reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SIZE            reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    HEAD            reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    TAIL            reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    LAST            reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_TITLE       reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_DIMENSION   reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_COLOR       reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_OBJECT   reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 57 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 324

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 325


state 325

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 326


state 326

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 143

    block                          shift and go to state 327

state 327

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (66) for_action3 -> .

    ID              reduce using rule 66 (for_action3 -> .)
    IF              reduce using rule 66 (for_action3 -> .)
    VAR             reduce using rule 66 (for_action3 -> .)
    PRINT           reduce using rule 66 (for_action3 -> .)
    RETURN          reduce using rule 66 (for_action3 -> .)
    FOR             reduce using rule 66 (for_action3 -> .)
    WHILE           reduce using rule 66 (for_action3 -> .)
    DRAW            reduce using rule 66 (for_action3 -> .)
    SIZE            reduce using rule 66 (for_action3 -> .)
    HEAD            reduce using rule 66 (for_action3 -> .)
    TAIL            reduce using rule 66 (for_action3 -> .)
    LAST            reduce using rule 66 (for_action3 -> .)
    SET_TITLE       reduce using rule 66 (for_action3 -> .)
    SET_DIMENSION   reduce using rule 66 (for_action3 -> .)
    SET_COLOR       reduce using rule 66 (for_action3 -> .)
    CREATE_OBJECT   reduce using rule 66 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 66 (for_action3 -> .)
    RIGHTKEY        reduce using rule 66 (for_action3 -> .)

    for_action3                    shift and go to state 328

state 328

    (63) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    DRAW            reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SIZE            reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    HEAD            reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    TAIL            reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    LAST            reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_TITLE       reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_DIMENSION   reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_COLOR       reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_OBJECT   reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 63 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EX in state 122 resolved as shift
WARNING: shift/reduce conflict for EX in state 127 resolved as shift
WARNING: shift/reduce conflict for EX in state 128 resolved as shift
WARNING: shift/reduce conflict for EX in state 129 resolved as shift
WARNING: shift/reduce conflict for EX in state 130 resolved as shift
WARNING: shift/reduce conflict for EX in state 131 resolved as shift
WARNING: shift/reduce conflict for EX in state 138 resolved as shift
WARNING: shift/reduce conflict for VAR in state 139 resolved as shift
WARNING: shift/reduce conflict for EX in state 149 resolved as shift
WARNING: shift/reduce conflict for EX in state 178 resolved as shift
WARNING: shift/reduce conflict for RIGHTPAR in state 178 resolved as shift
WARNING: shift/reduce conflict for EX in state 181 resolved as shift
WARNING: shift/reduce conflict for EX in state 187 resolved as shift
WARNING: shift/reduce conflict for EX in state 190 resolved as shift
WARNING: shift/reduce conflict for EX in state 191 resolved as shift
WARNING: shift/reduce conflict for VAR in state 197 resolved as shift
WARNING: shift/reduce conflict for EX in state 218 resolved as shift
WARNING: shift/reduce conflict for EX in state 227 resolved as shift
WARNING: shift/reduce conflict for EX in state 228 resolved as shift
WARNING: shift/reduce conflict for EX in state 252 resolved as shift
WARNING: shift/reduce conflict for EX in state 253 resolved as shift
WARNING: shift/reduce conflict for EX in state 255 resolved as shift
WARNING: shift/reduce conflict for EX in state 263 resolved as shift
WARNING: shift/reduce conflict for EX in state 264 resolved as shift
WARNING: shift/reduce conflict for EX in state 267 resolved as shift
WARNING: shift/reduce conflict for EX in state 272 resolved as shift
WARNING: shift/reduce conflict for EX in state 273 resolved as shift
WARNING: shift/reduce conflict for EX in state 288 resolved as shift
WARNING: shift/reduce conflict for EX in state 297 resolved as shift
WARNING: shift/reduce conflict for EX in state 303 resolved as shift
WARNING: shift/reduce conflict for EX in state 304 resolved as shift
WARNING: shift/reduce conflict for EX in state 311 resolved as shift
WARNING: reduce/reduce conflict in state 277 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 277
