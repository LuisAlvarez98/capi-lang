Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OBJECT
    TLIST

Grammar

Rule 0     S' -> capi
Rule 1     capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 2     capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 3     capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 4     capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 5     capi_action1 -> <empty>
Rule 6     capi_action2 -> <empty>
Rule 7     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 8     start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 9     run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 10    vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 11    vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 12    vars -> VAR recids COLON type SEMICOLON vars
Rule 13    vars -> VAR recids COLON type SEMICOLON
Rule 14    recids -> ID
Rule 15    recids -> ID COMMA recids
Rule 16    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 17    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 18    recstatement -> statement recstatement
Rule 19    recstatement -> statement
Rule 20    statement -> assign SEMICOLON
Rule 21    statement -> condition
Rule 22    statement -> vars
Rule 23    statement -> loop
Rule 24    statement -> write SEMICOLON
Rule 25    statement -> return SEMICOLON
Rule 26    statement -> functioncall SEMICOLON
Rule 27    statement -> nestedassign SEMICOLON
Rule 28    statement -> specialfunction SEMICOLON
Rule 29    specialfunction -> draw
Rule 30    specialfunction -> size
Rule 31    specialfunction -> head
Rule 32    specialfunction -> tail
Rule 33    specialfunction -> last
Rule 34    specialfunction -> set_title
Rule 35    specialfunction -> set_dimension
Rule 36    specialfunction -> set_color
Rule 37    specialfunction -> create_object
Rule 38    specialfunction -> create_text
Rule 39    draw -> DRAW LEFTPAR recfuncexp RIGHTPAR
Rule 40    size -> SIZE LEFTPAR RIGHTPAR
Rule 41    head -> HEAD LEFTPAR RIGHTPAR
Rule 42    tail -> TAIL LEFTPAR RIGHTPAR
Rule 43    last -> LAST LEFTPAR RIGHTPAR
Rule 44    set_title -> SET_TITLE LEFTPAR expression RIGHTPAR
Rule 45    set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 46    set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 47    create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
Rule 48    create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR
Rule 49    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 50    assign_action1 -> <empty>
Rule 51    assign_action2 -> <empty>
Rule 52    condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 53    condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 54    condition_action1 -> <empty>
Rule 55    condition_action2 -> <empty>
Rule 56    condition_action3 -> <empty>
Rule 57    loop -> for
Rule 58    loop -> while
Rule 59    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 60    for_action1 -> <empty>
Rule 61    for_action2 -> <empty>
Rule 62    for_action3 -> <empty>
Rule 63    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 64    while_action1 -> <empty>
Rule 65    while_action2 -> <empty>
Rule 66    while_action3 -> <empty>
Rule 67    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 68    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 69    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 70    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 71    startscope_action -> <empty>
Rule 72    function_action1 -> <empty>
Rule 73    function_action2 -> <empty>
Rule 74    function_action3 -> <empty>
Rule 75    recparams -> ID COLON type
Rule 76    recparams -> ID COLON type COMMA recparams
Rule 77    recfunc -> function recfunc
Rule 78    recfunc -> function
Rule 79    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 80    recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 81    recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 82    recwrite -> expression action_recwrite_exp
Rule 83    recwrite -> STRING action_recwrite_cte
Rule 84    action_recwrite_exp -> <empty>
Rule 85    action_recwrite_cte -> <empty>
Rule 86    return -> RETURN expression
Rule 87    functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
Rule 88    functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
Rule 89    function_call_action1 -> <empty>
Rule 90    function_call_action2 -> <empty>
Rule 91    recfuncexp -> expression COMMA recfuncexp
Rule 92    recfuncexp -> expression recfunc_action1
Rule 93    recfunc_action1 -> <empty>
Rule 94    expression -> exp RELOP relop_action1 exp relop_action2
Rule 95    expression -> exp LOGIC logic_action1 exp logic_action2
Rule 96    expression -> exp
Rule 97    relop_action1 -> <empty>
Rule 98    relop_action2 -> <empty>
Rule 99    logic_action1 -> <empty>
Rule 100   logic_action2 -> <empty>
Rule 101   exp -> term exp_action recexp
Rule 102   exp -> term exp_action
Rule 103   exp_action -> <empty>
Rule 104   recexp -> EX add_operator exp
Rule 105   term -> factor term_action recterm
Rule 106   term -> factor term_action
Rule 107   term_action -> <empty>
Rule 108   recterm -> TERMS add_operator term
Rule 109   add_operator -> <empty>
Rule 110   factor -> LEFTPAR expression RIGHTPAR
Rule 111   factor -> EX cte
Rule 112   factor -> cte
Rule 113   type -> primitivetype
Rule 114   type -> LIST LEFTHAT primitivetype RIGHTHAT
Rule 115   primitivetype -> TINT
Rule 116   primitivetype -> TFLOAT
Rule 117   primitivetype -> TSTRING
Rule 118   primitivetype -> TBOOL
Rule 119   primitivetype -> TOBJECT
Rule 120   listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
Rule 121   nestedvalue -> ID DOT ID
Rule 122   nestedassign -> nestedvalue EQUAL expression
Rule 123   cte -> <empty>
Rule 124   cte -> id
Rule 125   cte -> int
Rule 126   cte -> float
Rule 127   cte -> bool
Rule 128   cte -> string
Rule 129   cte -> nestedvalue
Rule 130   cte -> functioncall
Rule 131   cte -> listaccess
Rule 132   cte -> specialfunction
Rule 133   id -> ID
Rule 134   string -> STRING
Rule 135   int -> INT
Rule 136   float -> FLOAT
Rule 137   bool -> TRUE
Rule 138   bool -> FALSE

Terminals, with rules where they appear

COLON                : 1 2 3 4 7 10 11 12 13 16 17 75 76
COMMA                : 15 45 46 46 76 80 81 91
COMMENT              : 
CREATE_OBJECT        : 47
CREATE_TEXT          : 48
DOT                  : 121
DRAW                 : 39
ELSE                 : 53
EQUAL                : 10 11 49 122
EX                   : 104 111
FALSE                : 138
FLOAT                : 136
FOR                  : 59
FUNC                 : 8 9 67 68 69 70
GLOBAL               : 7
HEAD                 : 41
ID                   : 14 15 49 67 68 69 70 75 76 87 88 120 121 121 133
IF                   : 52 53
INT                  : 135
LAST                 : 43
LEFTBRACKET          : 120
LEFTHAT              : 114
LEFTKEY              : 1 2 3 4 7 16 17
LEFTPAR              : 8 9 39 40 41 42 43 44 45 46 47 48 52 53 59 63 67 68 69 70 79 87 88 110
LIST                 : 114
LOGIC                : 95
MAIN                 : 1 2 3 4
OBJECT               : 
PRINT                : 79
RELOP                : 94
RETURN               : 86
RIGHTBRACKET         : 120
RIGHTHAT             : 114
RIGHTKEY             : 1 2 3 4 7 16 17
RIGHTPAR             : 8 9 39 40 41 42 43 44 45 46 47 48 52 53 59 63 67 68 69 70 79 87 88 110
RUN                  : 9
SEMICOLON            : 1 2 3 4 7 10 11 12 13 16 17 20 24 25 26 27 28 59 59 59 120
SET_COLOR            : 46
SET_DIMENSION        : 45
SET_TITLE            : 44
SIZE                 : 40
START                : 8
STRING               : 81 83 134
TAIL                 : 42
TBOOL                : 118
TERMS                : 108
TFLOAT               : 116
TINT                 : 115
TLIST                : 
TOBJECT              : 119
TRUE                 : 137
TSTRING              : 117
VAR                  : 10 11 12 13
VOID                 : 8 9 69 70
WHILE                : 63
error                : 

Nonterminals, with rules where they appear

action_recwrite_cte  : 81 83
action_recwrite_exp  : 80 82
add_operator         : 104 108
assign               : 20 59 59
assign_action1       : 49
assign_action2       : 49
block                : 8 9 52 53 53 59 63 67 68 69 70
bool                 : 127
capi                 : 0
capi_action1         : 1 2 3 4
capi_action2         : 1 2 3 4
condition            : 21
condition_action1    : 52 53
condition_action2    : 52 53
condition_action3    : 53
create_object        : 37
create_text          : 38
cte                  : 111 112
draw                 : 29
exp                  : 94 94 95 95 96 104
exp_action           : 101 102
expression           : 10 11 44 45 45 46 46 46 49 52 53 59 63 80 82 86 91 92 110 120 122
factor               : 105 106
float                : 126
for                  : 57
for_action1          : 59
for_action2          : 59
for_action3          : 59
function             : 77 78
function_action1     : 67 69
function_action2     : 67 69
function_action3     : 8 9 67 68 69 70
function_call_action1 : 87 88
function_call_action2 : 87 88
functioncall         : 26 130
global               : 1 3
head                 : 31
id                   : 124
int                  : 125
last                 : 33
listaccess           : 131
logic_action1        : 95
logic_action2        : 95
loop                 : 23
nestedassign         : 27
nestedvalue          : 122 129
primitivetype        : 113 114
recexp               : 101
recfunc              : 1 2 77
recfunc_action1      : 92
recfuncexp           : 39 47 48 87 91
recids               : 10 11 12 13 15
recparams            : 67 69 76
recstatement         : 16 18
recterm              : 105
recwrite             : 79 80 81
relop_action1        : 94
relop_action2        : 94
return               : 25
run                  : 1 2 3 4
set_color            : 36
set_dimension        : 35
set_title            : 34
size                 : 30
specialfunction      : 28 132
start                : 1 2 3 4
startscope_action    : 8 9 52 53 59 63 67 68 69 70
statement            : 18 19
string               : 128
tail                 : 32
term                 : 101 102 108
term_action          : 105 106
type                 : 10 11 12 13 67 68 75 76
vars                 : 7 10 12 22
while                : 58
while_action1        : 63
while_action2        : 63
while_action3        : 63
write                : 24

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> . capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> . capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> . capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (5) capi_action1 -> .

    MAIN            reduce using rule 5 (capi_action1 -> .)
    GLOBAL          reduce using rule 5 (capi_action1 -> .)
    VOID            reduce using rule 5 (capi_action1 -> .)
    LIST            reduce using rule 5 (capi_action1 -> .)
    TINT            reduce using rule 5 (capi_action1 -> .)
    TFLOAT          reduce using rule 5 (capi_action1 -> .)
    TSTRING         reduce using rule 5 (capi_action1 -> .)
    TBOOL           reduce using rule 5 (capi_action1 -> .)
    TOBJECT         reduce using rule 5 (capi_action1 -> .)

    capi                           shift and go to state 1
    capi_action1                   shift and go to state 2

state 1

    (0) S' -> capi .



state 2

    (1) capi -> capi_action1 . global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> capi_action1 . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 . global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> capi_action1 . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (7) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (77) recfunc -> . function recfunc
    (78) recfunc -> . function
    (67) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (69) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (113) type -> . primitivetype
    (114) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (115) primitivetype -> . TINT
    (116) primitivetype -> . TFLOAT
    (117) primitivetype -> . TSTRING
    (118) primitivetype -> . TBOOL
    (119) primitivetype -> . TOBJECT

    MAIN            shift and go to state 5
    GLOBAL          shift and go to state 6
    VOID            shift and go to state 9
    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    global                         shift and go to state 3
    recfunc                        shift and go to state 4
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 3

    (1) capi -> capi_action1 global . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 global . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (77) recfunc -> . function recfunc
    (78) recfunc -> . function
    (67) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (69) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (113) type -> . primitivetype
    (114) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (115) primitivetype -> . TINT
    (116) primitivetype -> . TFLOAT
    (117) primitivetype -> . TSTRING
    (118) primitivetype -> . TBOOL
    (119) primitivetype -> . TOBJECT

    MAIN            shift and go to state 18
    VOID            shift and go to state 9
    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    recfunc                        shift and go to state 17
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 4

    (2) capi -> capi_action1 recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 19


state 5

    (4) capi -> capi_action1 MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 6

    (7) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 21


state 7

    (77) recfunc -> function . recfunc
    (78) recfunc -> function .
    (77) recfunc -> . function recfunc
    (78) recfunc -> . function
    (67) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (69) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (113) type -> . primitivetype
    (114) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (115) primitivetype -> . TINT
    (116) primitivetype -> . TFLOAT
    (117) primitivetype -> . TSTRING
    (118) primitivetype -> . TBOOL
    (119) primitivetype -> . TOBJECT

    MAIN            reduce using rule 78 (recfunc -> function .)
    VOID            shift and go to state 9
    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    function                       shift and go to state 7
    recfunc                        shift and go to state 22
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 8

    (67) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 9

    (69) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 24


state 10

    (113) type -> primitivetype .

    FUNC            reduce using rule 113 (type -> primitivetype .)
    EQUAL           reduce using rule 113 (type -> primitivetype .)
    SEMICOLON       reduce using rule 113 (type -> primitivetype .)
    COMMA           reduce using rule 113 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 113 (type -> primitivetype .)


state 11

    (114) type -> LIST . LEFTHAT primitivetype RIGHTHAT

    LEFTHAT         shift and go to state 25


state 12

    (115) primitivetype -> TINT .

    FUNC            reduce using rule 115 (primitivetype -> TINT .)
    RIGHTHAT        reduce using rule 115 (primitivetype -> TINT .)
    EQUAL           reduce using rule 115 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 115 (primitivetype -> TINT .)
    COMMA           reduce using rule 115 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 115 (primitivetype -> TINT .)


state 13

    (116) primitivetype -> TFLOAT .

    FUNC            reduce using rule 116 (primitivetype -> TFLOAT .)
    RIGHTHAT        reduce using rule 116 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 116 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 116 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 116 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 116 (primitivetype -> TFLOAT .)


state 14

    (117) primitivetype -> TSTRING .

    FUNC            reduce using rule 117 (primitivetype -> TSTRING .)
    RIGHTHAT        reduce using rule 117 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 117 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 117 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 117 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 117 (primitivetype -> TSTRING .)


state 15

    (118) primitivetype -> TBOOL .

    FUNC            reduce using rule 118 (primitivetype -> TBOOL .)
    RIGHTHAT        reduce using rule 118 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 118 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 118 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 118 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 118 (primitivetype -> TBOOL .)


state 16

    (119) primitivetype -> TOBJECT .

    FUNC            reduce using rule 119 (primitivetype -> TOBJECT .)
    RIGHTHAT        reduce using rule 119 (primitivetype -> TOBJECT .)
    EQUAL           reduce using rule 119 (primitivetype -> TOBJECT .)
    SEMICOLON       reduce using rule 119 (primitivetype -> TOBJECT .)
    COMMA           reduce using rule 119 (primitivetype -> TOBJECT .)
    RIGHTPAR        reduce using rule 119 (primitivetype -> TOBJECT .)


state 17

    (1) capi -> capi_action1 global recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 26


state 18

    (3) capi -> capi_action1 global MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (2) capi -> capi_action1 recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 28


state 20

    (4) capi -> capi_action1 MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (7) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 30


state 22

    (77) recfunc -> function recfunc .

    MAIN            reduce using rule 77 (recfunc -> function recfunc .)


state 23

    (67) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (69) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 32


state 25

    (114) type -> LIST LEFTHAT . primitivetype RIGHTHAT
    (115) primitivetype -> . TINT
    (116) primitivetype -> . TFLOAT
    (117) primitivetype -> . TSTRING
    (118) primitivetype -> . TBOOL
    (119) primitivetype -> . TOBJECT

    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    primitivetype                  shift and go to state 33

state 26

    (1) capi -> capi_action1 global recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 34


state 27

    (3) capi -> capi_action1 global MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (2) capi -> capi_action1 recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 36


state 29

    (4) capi -> capi_action1 MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 38

    start                          shift and go to state 37

state 30

    (7) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (10) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (11) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (12) vars -> . VAR recids COLON type SEMICOLON vars
    (13) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 40

    vars                           shift and go to state 39

state 31

    (67) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (71) startscope_action -> .

    LEFTPAR         reduce using rule 71 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (69) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (71) startscope_action -> .

    LEFTPAR         reduce using rule 71 (startscope_action -> .)

    startscope_action              shift and go to state 42

state 33

    (114) type -> LIST LEFTHAT primitivetype . RIGHTHAT

    RIGHTHAT        shift and go to state 43


state 34

    (1) capi -> capi_action1 global recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 44


state 35

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 38

    start                          shift and go to state 45

state 36

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 38

    start                          shift and go to state 46

state 37

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 47

state 38

    (8) start -> VOID . FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 48


state 39

    (7) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 49


state 40

    (10) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (11) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (12) vars -> VAR . recids COLON type SEMICOLON vars
    (13) vars -> VAR . recids COLON type SEMICOLON
    (14) recids -> . ID
    (15) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 50

state 41

    (67) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 42

    (69) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 53


state 43

    (114) type -> LIST LEFTHAT primitivetype RIGHTHAT .

    FUNC            reduce using rule 114 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    EQUAL           reduce using rule 114 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    SEMICOLON       reduce using rule 114 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    COMMA           reduce using rule 114 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    RIGHTPAR        reduce using rule 114 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)


state 44

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 38

    start                          shift and go to state 54

state 45

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 55

state 46

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 56

state 47

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (9) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 58

    run                            shift and go to state 57

state 48

    (8) start -> VOID FUNC . START startscope_action LEFTPAR RIGHTPAR function_action3 block

    START           shift and go to state 59


state 49

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 60


state 50

    (10) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (11) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (12) vars -> VAR recids . COLON type SEMICOLON vars
    (13) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 61


state 51

    (14) recids -> ID .
    (15) recids -> ID . COMMA recids

    COLON           reduce using rule 14 (recids -> ID .)
    COMMA           shift and go to state 62


state 52

    (67) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (68) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (75) recparams -> . ID COLON type
    (76) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 65
    ID              shift and go to state 63

    recparams                      shift and go to state 64

state 53

    (69) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (70) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (75) recparams -> . ID COLON type
    (76) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 67
    ID              shift and go to state 63

    recparams                      shift and go to state 66

state 54

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 68

state 55

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (9) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 58

    run                            shift and go to state 69

state 56

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (9) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 58

    run                            shift and go to state 70

state 57

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 71


state 58

    (9) run -> VOID . FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 72


state 59

    (8) start -> VOID FUNC START . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (71) startscope_action -> .

    LEFTPAR         reduce using rule 71 (startscope_action -> .)

    startscope_action              shift and go to state 73

state 60

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 61

    (10) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (11) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (12) vars -> VAR recids COLON . type SEMICOLON vars
    (13) vars -> VAR recids COLON . type SEMICOLON
    (113) type -> . primitivetype
    (114) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (115) primitivetype -> . TINT
    (116) primitivetype -> . TFLOAT
    (117) primitivetype -> . TSTRING
    (118) primitivetype -> . TBOOL
    (119) primitivetype -> . TOBJECT

    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 74
    primitivetype                  shift and go to state 10

state 62

    (15) recids -> ID COMMA . recids
    (14) recids -> . ID
    (15) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 75

state 63

    (75) recparams -> ID . COLON type
    (76) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 76


state 64

    (67) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function_action1 -> .

    RIGHTPAR        reduce using rule 72 (function_action1 -> .)

    function_action1               shift and go to state 77

state 65

    (68) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (74) function_action3 -> .

    COLON           reduce using rule 74 (function_action3 -> .)

    function_action3               shift and go to state 78

state 66

    (69) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (72) function_action1 -> .

    RIGHTPAR        reduce using rule 72 (function_action1 -> .)

    function_action1               shift and go to state 79

state 67

    (70) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (74) function_action3 -> .

    COLON           reduce using rule 74 (function_action3 -> .)

    function_action3               shift and go to state 80

state 68

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (9) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    VOID            shift and go to state 58

    run                            shift and go to state 81

state 69

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 82


state 70

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 83


state 71

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 84


state 72

    (9) run -> VOID FUNC . RUN startscope_action LEFTPAR RIGHTPAR function_action3 block

    RUN             shift and go to state 85


state 73

    (8) start -> VOID FUNC START startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 86


state 74

    (10) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (11) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (12) vars -> VAR recids COLON type . SEMICOLON vars
    (13) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 87
    SEMICOLON       shift and go to state 88


state 75

    (15) recids -> ID COMMA recids .

    COLON           reduce using rule 15 (recids -> ID COMMA recids .)


state 76

    (75) recparams -> ID COLON . type
    (76) recparams -> ID COLON . type COMMA recparams
    (113) type -> . primitivetype
    (114) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (115) primitivetype -> . TINT
    (116) primitivetype -> . TFLOAT
    (117) primitivetype -> . TSTRING
    (118) primitivetype -> . TBOOL
    (119) primitivetype -> . TOBJECT

    LIST            shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15
    TOBJECT         shift and go to state 16

    type                           shift and go to state 89
    primitivetype                  shift and go to state 10

state 77

    (67) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 90


state 78

    (68) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 91

state 79

    (69) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 93


state 80

    (70) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 94

state 81

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 95


state 82

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 96


state 83

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 97


state 84

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 85

    (9) run -> VOID FUNC RUN . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (71) startscope_action -> .

    LEFTPAR         reduce using rule 71 (startscope_action -> .)

    startscope_action              shift and go to state 98

state 86

    (8) start -> VOID FUNC START startscope_action LEFTPAR . RIGHTPAR function_action3 block

    RIGHTPAR        shift and go to state 99


state 87

    (10) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (11) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 100
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 88

    (12) vars -> VAR recids COLON type SEMICOLON . vars
    (13) vars -> VAR recids COLON type SEMICOLON .
    (10) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (11) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (12) vars -> . VAR recids COLON type SEMICOLON vars
    (13) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    DRAW            reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    SIZE            reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    HEAD            reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    TAIL            reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    LAST            reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    SET_TITLE       reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    SET_DIMENSION   reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    SET_COLOR       reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_OBJECT   reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 142

state 89

    (75) recparams -> ID COLON type .
    (76) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 75 (recparams -> ID COLON type .)
    COMMA           shift and go to state 143


state 90

    (67) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (73) function_action2 -> .

    COLON           reduce using rule 73 (function_action2 -> .)

    function_action2               shift and go to state 144

state 91

    (68) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 68 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    LIST            reduce using rule 68 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 68 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 68 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 68 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 68 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 68 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 68 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 92

    (16) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 145


state 93

    (69) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (73) function_action2 -> .

    COLON           reduce using rule 73 (function_action2 -> .)

    function_action2               shift and go to state 146

state 94

    (70) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 70 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    LIST            reduce using rule 70 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 70 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 70 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 70 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 70 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TOBJECT         reduce using rule 70 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 70 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 95

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 147


state 96

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 97

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 98

    (9) run -> VOID FUNC RUN startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 148


state 99

    (8) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (74) function_action3 -> .

    COLON           reduce using rule 74 (function_action3 -> .)

    function_action3               shift and go to state 149

state 100

    (10) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (11) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 150


state 101

    (94) expression -> exp . RELOP relop_action1 exp relop_action2
    (95) expression -> exp . LOGIC logic_action1 exp logic_action2
    (96) expression -> exp .

    RELOP           shift and go to state 151
    LOGIC           shift and go to state 152
    SEMICOLON       reduce using rule 96 (expression -> exp .)
    RIGHTPAR        reduce using rule 96 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 96 (expression -> exp .)
    COMMA           reduce using rule 96 (expression -> exp .)


state 102

    (101) exp -> term . exp_action recexp
    (102) exp -> term . exp_action
    (103) exp_action -> .

    EX              reduce using rule 103 (exp_action -> .)
    RELOP           reduce using rule 103 (exp_action -> .)
    LOGIC           reduce using rule 103 (exp_action -> .)
    SEMICOLON       reduce using rule 103 (exp_action -> .)
    RIGHTPAR        reduce using rule 103 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 103 (exp_action -> .)
    COMMA           reduce using rule 103 (exp_action -> .)

    exp_action                     shift and go to state 153

state 103

    (105) term -> factor . term_action recterm
    (106) term -> factor . term_action
    (107) term_action -> .

    TERMS           reduce using rule 107 (term_action -> .)
    EX              reduce using rule 107 (term_action -> .)
    RELOP           reduce using rule 107 (term_action -> .)
    LOGIC           reduce using rule 107 (term_action -> .)
    SEMICOLON       reduce using rule 107 (term_action -> .)
    RIGHTPAR        reduce using rule 107 (term_action -> .)
    RIGHTBRACKET    reduce using rule 107 (term_action -> .)
    COMMA           reduce using rule 107 (term_action -> .)

    term_action                    shift and go to state 154

state 104

    (110) factor -> LEFTPAR . expression RIGHTPAR
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 155
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 105

    (111) factor -> EX . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    TERMS           reduce using rule 123 (cte -> .)
    EX              reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    RIGHTBRACKET    reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

    cte                            shift and go to state 156
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 106

    (112) factor -> cte .

    TERMS           reduce using rule 112 (factor -> cte .)
    EX              reduce using rule 112 (factor -> cte .)
    RELOP           reduce using rule 112 (factor -> cte .)
    LOGIC           reduce using rule 112 (factor -> cte .)
    SEMICOLON       reduce using rule 112 (factor -> cte .)
    RIGHTPAR        reduce using rule 112 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 112 (factor -> cte .)
    COMMA           reduce using rule 112 (factor -> cte .)


state 107

    (124) cte -> id .

    TERMS           reduce using rule 124 (cte -> id .)
    EX              reduce using rule 124 (cte -> id .)
    RELOP           reduce using rule 124 (cte -> id .)
    LOGIC           reduce using rule 124 (cte -> id .)
    SEMICOLON       reduce using rule 124 (cte -> id .)
    RIGHTPAR        reduce using rule 124 (cte -> id .)
    RIGHTBRACKET    reduce using rule 124 (cte -> id .)
    COMMA           reduce using rule 124 (cte -> id .)


state 108

    (125) cte -> int .

    TERMS           reduce using rule 125 (cte -> int .)
    EX              reduce using rule 125 (cte -> int .)
    RELOP           reduce using rule 125 (cte -> int .)
    LOGIC           reduce using rule 125 (cte -> int .)
    SEMICOLON       reduce using rule 125 (cte -> int .)
    RIGHTPAR        reduce using rule 125 (cte -> int .)
    RIGHTBRACKET    reduce using rule 125 (cte -> int .)
    COMMA           reduce using rule 125 (cte -> int .)


state 109

    (126) cte -> float .

    TERMS           reduce using rule 126 (cte -> float .)
    EX              reduce using rule 126 (cte -> float .)
    RELOP           reduce using rule 126 (cte -> float .)
    LOGIC           reduce using rule 126 (cte -> float .)
    SEMICOLON       reduce using rule 126 (cte -> float .)
    RIGHTPAR        reduce using rule 126 (cte -> float .)
    RIGHTBRACKET    reduce using rule 126 (cte -> float .)
    COMMA           reduce using rule 126 (cte -> float .)


state 110

    (127) cte -> bool .

    TERMS           reduce using rule 127 (cte -> bool .)
    EX              reduce using rule 127 (cte -> bool .)
    RELOP           reduce using rule 127 (cte -> bool .)
    LOGIC           reduce using rule 127 (cte -> bool .)
    SEMICOLON       reduce using rule 127 (cte -> bool .)
    RIGHTPAR        reduce using rule 127 (cte -> bool .)
    RIGHTBRACKET    reduce using rule 127 (cte -> bool .)
    COMMA           reduce using rule 127 (cte -> bool .)


state 111

    (128) cte -> string .

    TERMS           reduce using rule 128 (cte -> string .)
    EX              reduce using rule 128 (cte -> string .)
    RELOP           reduce using rule 128 (cte -> string .)
    LOGIC           reduce using rule 128 (cte -> string .)
    SEMICOLON       reduce using rule 128 (cte -> string .)
    RIGHTPAR        reduce using rule 128 (cte -> string .)
    RIGHTBRACKET    reduce using rule 128 (cte -> string .)
    COMMA           reduce using rule 128 (cte -> string .)


state 112

    (129) cte -> nestedvalue .

    TERMS           reduce using rule 129 (cte -> nestedvalue .)
    EX              reduce using rule 129 (cte -> nestedvalue .)
    RELOP           reduce using rule 129 (cte -> nestedvalue .)
    LOGIC           reduce using rule 129 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 129 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 129 (cte -> nestedvalue .)
    RIGHTBRACKET    reduce using rule 129 (cte -> nestedvalue .)
    COMMA           reduce using rule 129 (cte -> nestedvalue .)


state 113

    (130) cte -> functioncall .

    TERMS           reduce using rule 130 (cte -> functioncall .)
    EX              reduce using rule 130 (cte -> functioncall .)
    RELOP           reduce using rule 130 (cte -> functioncall .)
    LOGIC           reduce using rule 130 (cte -> functioncall .)
    SEMICOLON       reduce using rule 130 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 130 (cte -> functioncall .)
    RIGHTBRACKET    reduce using rule 130 (cte -> functioncall .)
    COMMA           reduce using rule 130 (cte -> functioncall .)


state 114

    (131) cte -> listaccess .

    TERMS           reduce using rule 131 (cte -> listaccess .)
    EX              reduce using rule 131 (cte -> listaccess .)
    RELOP           reduce using rule 131 (cte -> listaccess .)
    LOGIC           reduce using rule 131 (cte -> listaccess .)
    SEMICOLON       reduce using rule 131 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 131 (cte -> listaccess .)
    RIGHTBRACKET    reduce using rule 131 (cte -> listaccess .)
    COMMA           reduce using rule 131 (cte -> listaccess .)


state 115

    (132) cte -> specialfunction .

    TERMS           reduce using rule 132 (cte -> specialfunction .)
    EX              reduce using rule 132 (cte -> specialfunction .)
    RELOP           reduce using rule 132 (cte -> specialfunction .)
    LOGIC           reduce using rule 132 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 132 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 132 (cte -> specialfunction .)
    RIGHTBRACKET    reduce using rule 132 (cte -> specialfunction .)
    COMMA           reduce using rule 132 (cte -> specialfunction .)


state 116

    (133) id -> ID .
    (121) nestedvalue -> ID . DOT ID
    (87) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> ID . LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (89) function_call_action1 -> .

    TERMS           reduce using rule 133 (id -> ID .)
    EX              reduce using rule 133 (id -> ID .)
    RELOP           reduce using rule 133 (id -> ID .)
    LOGIC           reduce using rule 133 (id -> ID .)
    SEMICOLON       reduce using rule 133 (id -> ID .)
    RIGHTPAR        reduce using rule 133 (id -> ID .)
    RIGHTBRACKET    reduce using rule 133 (id -> ID .)
    COMMA           reduce using rule 133 (id -> ID .)
    DOT             shift and go to state 157
    LEFTBRACKET     shift and go to state 159
    LEFTPAR         reduce using rule 89 (function_call_action1 -> .)

    function_call_action1          shift and go to state 158

state 117

    (135) int -> INT .

    TERMS           reduce using rule 135 (int -> INT .)
    EX              reduce using rule 135 (int -> INT .)
    RELOP           reduce using rule 135 (int -> INT .)
    LOGIC           reduce using rule 135 (int -> INT .)
    SEMICOLON       reduce using rule 135 (int -> INT .)
    RIGHTPAR        reduce using rule 135 (int -> INT .)
    RIGHTBRACKET    reduce using rule 135 (int -> INT .)
    COMMA           reduce using rule 135 (int -> INT .)


state 118

    (136) float -> FLOAT .

    TERMS           reduce using rule 136 (float -> FLOAT .)
    EX              reduce using rule 136 (float -> FLOAT .)
    RELOP           reduce using rule 136 (float -> FLOAT .)
    LOGIC           reduce using rule 136 (float -> FLOAT .)
    SEMICOLON       reduce using rule 136 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 136 (float -> FLOAT .)
    RIGHTBRACKET    reduce using rule 136 (float -> FLOAT .)
    COMMA           reduce using rule 136 (float -> FLOAT .)


state 119

    (137) bool -> TRUE .

    TERMS           reduce using rule 137 (bool -> TRUE .)
    EX              reduce using rule 137 (bool -> TRUE .)
    RELOP           reduce using rule 137 (bool -> TRUE .)
    LOGIC           reduce using rule 137 (bool -> TRUE .)
    SEMICOLON       reduce using rule 137 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 137 (bool -> TRUE .)
    RIGHTBRACKET    reduce using rule 137 (bool -> TRUE .)
    COMMA           reduce using rule 137 (bool -> TRUE .)


state 120

    (138) bool -> FALSE .

    TERMS           reduce using rule 138 (bool -> FALSE .)
    EX              reduce using rule 138 (bool -> FALSE .)
    RELOP           reduce using rule 138 (bool -> FALSE .)
    LOGIC           reduce using rule 138 (bool -> FALSE .)
    SEMICOLON       reduce using rule 138 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 138 (bool -> FALSE .)
    RIGHTBRACKET    reduce using rule 138 (bool -> FALSE .)
    COMMA           reduce using rule 138 (bool -> FALSE .)


state 121

    (134) string -> STRING .

    TERMS           reduce using rule 134 (string -> STRING .)
    EX              reduce using rule 134 (string -> STRING .)
    RELOP           reduce using rule 134 (string -> STRING .)
    LOGIC           reduce using rule 134 (string -> STRING .)
    SEMICOLON       reduce using rule 134 (string -> STRING .)
    RIGHTPAR        reduce using rule 134 (string -> STRING .)
    RIGHTBRACKET    reduce using rule 134 (string -> STRING .)
    COMMA           reduce using rule 134 (string -> STRING .)


state 122

    (29) specialfunction -> draw .

    TERMS           reduce using rule 29 (specialfunction -> draw .)
    EX              reduce using rule 29 (specialfunction -> draw .)
    RELOP           reduce using rule 29 (specialfunction -> draw .)
    LOGIC           reduce using rule 29 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 29 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 29 (specialfunction -> draw .)
    RIGHTBRACKET    reduce using rule 29 (specialfunction -> draw .)
    COMMA           reduce using rule 29 (specialfunction -> draw .)


state 123

    (30) specialfunction -> size .

    TERMS           reduce using rule 30 (specialfunction -> size .)
    EX              reduce using rule 30 (specialfunction -> size .)
    RELOP           reduce using rule 30 (specialfunction -> size .)
    LOGIC           reduce using rule 30 (specialfunction -> size .)
    SEMICOLON       reduce using rule 30 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 30 (specialfunction -> size .)
    RIGHTBRACKET    reduce using rule 30 (specialfunction -> size .)
    COMMA           reduce using rule 30 (specialfunction -> size .)


state 124

    (31) specialfunction -> head .

    TERMS           reduce using rule 31 (specialfunction -> head .)
    EX              reduce using rule 31 (specialfunction -> head .)
    RELOP           reduce using rule 31 (specialfunction -> head .)
    LOGIC           reduce using rule 31 (specialfunction -> head .)
    SEMICOLON       reduce using rule 31 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 31 (specialfunction -> head .)
    RIGHTBRACKET    reduce using rule 31 (specialfunction -> head .)
    COMMA           reduce using rule 31 (specialfunction -> head .)


state 125

    (32) specialfunction -> tail .

    TERMS           reduce using rule 32 (specialfunction -> tail .)
    EX              reduce using rule 32 (specialfunction -> tail .)
    RELOP           reduce using rule 32 (specialfunction -> tail .)
    LOGIC           reduce using rule 32 (specialfunction -> tail .)
    SEMICOLON       reduce using rule 32 (specialfunction -> tail .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> tail .)
    RIGHTBRACKET    reduce using rule 32 (specialfunction -> tail .)
    COMMA           reduce using rule 32 (specialfunction -> tail .)


state 126

    (33) specialfunction -> last .

    TERMS           reduce using rule 33 (specialfunction -> last .)
    EX              reduce using rule 33 (specialfunction -> last .)
    RELOP           reduce using rule 33 (specialfunction -> last .)
    LOGIC           reduce using rule 33 (specialfunction -> last .)
    SEMICOLON       reduce using rule 33 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> last .)
    RIGHTBRACKET    reduce using rule 33 (specialfunction -> last .)
    COMMA           reduce using rule 33 (specialfunction -> last .)


state 127

    (34) specialfunction -> set_title .

    TERMS           reduce using rule 34 (specialfunction -> set_title .)
    EX              reduce using rule 34 (specialfunction -> set_title .)
    RELOP           reduce using rule 34 (specialfunction -> set_title .)
    LOGIC           reduce using rule 34 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 34 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> set_title .)
    RIGHTBRACKET    reduce using rule 34 (specialfunction -> set_title .)
    COMMA           reduce using rule 34 (specialfunction -> set_title .)


state 128

    (35) specialfunction -> set_dimension .

    TERMS           reduce using rule 35 (specialfunction -> set_dimension .)
    EX              reduce using rule 35 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 35 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 35 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 35 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> set_dimension .)
    RIGHTBRACKET    reduce using rule 35 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 35 (specialfunction -> set_dimension .)


state 129

    (36) specialfunction -> set_color .

    TERMS           reduce using rule 36 (specialfunction -> set_color .)
    EX              reduce using rule 36 (specialfunction -> set_color .)
    RELOP           reduce using rule 36 (specialfunction -> set_color .)
    LOGIC           reduce using rule 36 (specialfunction -> set_color .)
    SEMICOLON       reduce using rule 36 (specialfunction -> set_color .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> set_color .)
    RIGHTBRACKET    reduce using rule 36 (specialfunction -> set_color .)
    COMMA           reduce using rule 36 (specialfunction -> set_color .)


state 130

    (37) specialfunction -> create_object .

    TERMS           reduce using rule 37 (specialfunction -> create_object .)
    EX              reduce using rule 37 (specialfunction -> create_object .)
    RELOP           reduce using rule 37 (specialfunction -> create_object .)
    LOGIC           reduce using rule 37 (specialfunction -> create_object .)
    SEMICOLON       reduce using rule 37 (specialfunction -> create_object .)
    RIGHTPAR        reduce using rule 37 (specialfunction -> create_object .)
    RIGHTBRACKET    reduce using rule 37 (specialfunction -> create_object .)
    COMMA           reduce using rule 37 (specialfunction -> create_object .)


state 131

    (38) specialfunction -> create_text .

    TERMS           reduce using rule 38 (specialfunction -> create_text .)
    EX              reduce using rule 38 (specialfunction -> create_text .)
    RELOP           reduce using rule 38 (specialfunction -> create_text .)
    LOGIC           reduce using rule 38 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 38 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 38 (specialfunction -> create_text .)
    RIGHTBRACKET    reduce using rule 38 (specialfunction -> create_text .)
    COMMA           reduce using rule 38 (specialfunction -> create_text .)


state 132

    (39) draw -> DRAW . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 160


state 133

    (40) size -> SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 161


state 134

    (41) head -> HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 162


state 135

    (42) tail -> TAIL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 163


state 136

    (43) last -> LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 164


state 137

    (44) set_title -> SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 165


state 138

    (45) set_dimension -> SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 166


state 139

    (46) set_color -> SET_COLOR . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 167


state 140

    (47) create_object -> CREATE_OBJECT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 168


state 141

    (48) create_text -> CREATE_TEXT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 169


state 142

    (12) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    DRAW            reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    SIZE            reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    HEAD            reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    TAIL            reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    LAST            reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_TITLE       reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_COLOR       reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 12 (vars -> VAR recids COLON type SEMICOLON vars .)


state 143

    (76) recparams -> ID COLON type COMMA . recparams
    (75) recparams -> . ID COLON type
    (76) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 63

    recparams                      shift and go to state 170

state 144

    (67) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (74) function_action3 -> .

    COLON           reduce using rule 74 (function_action3 -> .)

    function_action3               shift and go to state 171

state 145

    (16) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (17) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (18) recstatement -> . statement recstatement
    (19) recstatement -> . statement
    (20) statement -> . assign SEMICOLON
    (21) statement -> . condition
    (22) statement -> . vars
    (23) statement -> . loop
    (24) statement -> . write SEMICOLON
    (25) statement -> . return SEMICOLON
    (26) statement -> . functioncall SEMICOLON
    (27) statement -> . nestedassign SEMICOLON
    (28) statement -> . specialfunction SEMICOLON
    (49) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (52) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (53) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (10) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (11) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (12) vars -> . VAR recids COLON type SEMICOLON vars
    (13) vars -> . VAR recids COLON type SEMICOLON
    (57) loop -> . for
    (58) loop -> . while
    (79) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (86) return -> . RETURN expression
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (122) nestedassign -> . nestedvalue EQUAL expression
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (59) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (63) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (121) nestedvalue -> . ID DOT ID
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        shift and go to state 173
    ID              shift and go to state 184
    IF              shift and go to state 185
    VAR             shift and go to state 40
    PRINT           shift and go to state 188
    RETURN          shift and go to state 189
    FOR             shift and go to state 191
    WHILE           shift and go to state 192
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

    recstatement                   shift and go to state 172
    statement                      shift and go to state 174
    assign                         shift and go to state 175
    condition                      shift and go to state 176
    vars                           shift and go to state 177
    loop                           shift and go to state 178
    write                          shift and go to state 179
    return                         shift and go to state 180
    functioncall                   shift and go to state 181
    nestedassign                   shift and go to state 182
    specialfunction                shift and go to state 183
    for                            shift and go to state 186
    while                          shift and go to state 187
    nestedvalue                    shift and go to state 190
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 146

    (69) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (74) function_action3 -> .

    COLON           reduce using rule 74 (function_action3 -> .)

    function_action3               shift and go to state 193

state 147

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 148

    (9) run -> VOID FUNC RUN startscope_action LEFTPAR . RIGHTPAR function_action3 block

    RIGHTPAR        shift and go to state 194


state 149

    (8) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 195

state 150

    (10) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (11) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (10) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (11) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (12) vars -> . VAR recids COLON type SEMICOLON vars
    (13) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    DRAW            reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SIZE            reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    HEAD            reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    TAIL            reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    LAST            reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_TITLE       reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_DIMENSION   reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_COLOR       reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_OBJECT   reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 40

  ! VAR             [ reduce using rule 11 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 196

state 151

    (94) expression -> exp RELOP . relop_action1 exp relop_action2
    (97) relop_action1 -> .

    LEFTPAR         reduce using rule 97 (relop_action1 -> .)
    EX              reduce using rule 97 (relop_action1 -> .)
    ID              reduce using rule 97 (relop_action1 -> .)
    INT             reduce using rule 97 (relop_action1 -> .)
    FLOAT           reduce using rule 97 (relop_action1 -> .)
    TRUE            reduce using rule 97 (relop_action1 -> .)
    FALSE           reduce using rule 97 (relop_action1 -> .)
    STRING          reduce using rule 97 (relop_action1 -> .)
    DRAW            reduce using rule 97 (relop_action1 -> .)
    SIZE            reduce using rule 97 (relop_action1 -> .)
    HEAD            reduce using rule 97 (relop_action1 -> .)
    TAIL            reduce using rule 97 (relop_action1 -> .)
    LAST            reduce using rule 97 (relop_action1 -> .)
    SET_TITLE       reduce using rule 97 (relop_action1 -> .)
    SET_DIMENSION   reduce using rule 97 (relop_action1 -> .)
    SET_COLOR       reduce using rule 97 (relop_action1 -> .)
    CREATE_OBJECT   reduce using rule 97 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 97 (relop_action1 -> .)
    TERMS           reduce using rule 97 (relop_action1 -> .)
    SEMICOLON       reduce using rule 97 (relop_action1 -> .)
    RIGHTPAR        reduce using rule 97 (relop_action1 -> .)
    RIGHTBRACKET    reduce using rule 97 (relop_action1 -> .)
    COMMA           reduce using rule 97 (relop_action1 -> .)

    relop_action1                  shift and go to state 197

state 152

    (95) expression -> exp LOGIC . logic_action1 exp logic_action2
    (99) logic_action1 -> .

    LEFTPAR         reduce using rule 99 (logic_action1 -> .)
    EX              reduce using rule 99 (logic_action1 -> .)
    ID              reduce using rule 99 (logic_action1 -> .)
    INT             reduce using rule 99 (logic_action1 -> .)
    FLOAT           reduce using rule 99 (logic_action1 -> .)
    TRUE            reduce using rule 99 (logic_action1 -> .)
    FALSE           reduce using rule 99 (logic_action1 -> .)
    STRING          reduce using rule 99 (logic_action1 -> .)
    DRAW            reduce using rule 99 (logic_action1 -> .)
    SIZE            reduce using rule 99 (logic_action1 -> .)
    HEAD            reduce using rule 99 (logic_action1 -> .)
    TAIL            reduce using rule 99 (logic_action1 -> .)
    LAST            reduce using rule 99 (logic_action1 -> .)
    SET_TITLE       reduce using rule 99 (logic_action1 -> .)
    SET_DIMENSION   reduce using rule 99 (logic_action1 -> .)
    SET_COLOR       reduce using rule 99 (logic_action1 -> .)
    CREATE_OBJECT   reduce using rule 99 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 99 (logic_action1 -> .)
    TERMS           reduce using rule 99 (logic_action1 -> .)
    SEMICOLON       reduce using rule 99 (logic_action1 -> .)
    RIGHTPAR        reduce using rule 99 (logic_action1 -> .)
    RIGHTBRACKET    reduce using rule 99 (logic_action1 -> .)
    COMMA           reduce using rule 99 (logic_action1 -> .)

    logic_action1                  shift and go to state 198

state 153

    (101) exp -> term exp_action . recexp
    (102) exp -> term exp_action .
    (104) recexp -> . EX add_operator exp

    RELOP           reduce using rule 102 (exp -> term exp_action .)
    LOGIC           reduce using rule 102 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 102 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 102 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 102 (exp -> term exp_action .)
    COMMA           reduce using rule 102 (exp -> term exp_action .)
    EX              shift and go to state 200

    recexp                         shift and go to state 199

state 154

    (105) term -> factor term_action . recterm
    (106) term -> factor term_action .
    (108) recterm -> . TERMS add_operator term

    EX              reduce using rule 106 (term -> factor term_action .)
    RELOP           reduce using rule 106 (term -> factor term_action .)
    LOGIC           reduce using rule 106 (term -> factor term_action .)
    SEMICOLON       reduce using rule 106 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 106 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 106 (term -> factor term_action .)
    COMMA           reduce using rule 106 (term -> factor term_action .)
    TERMS           shift and go to state 202

    recterm                        shift and go to state 201

state 155

    (110) factor -> LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 203


state 156

    (111) factor -> EX cte .

    TERMS           reduce using rule 111 (factor -> EX cte .)
    EX              reduce using rule 111 (factor -> EX cte .)
    RELOP           reduce using rule 111 (factor -> EX cte .)
    LOGIC           reduce using rule 111 (factor -> EX cte .)
    SEMICOLON       reduce using rule 111 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 111 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 111 (factor -> EX cte .)
    COMMA           reduce using rule 111 (factor -> EX cte .)


state 157

    (121) nestedvalue -> ID DOT . ID

    ID              shift and go to state 204


state 158

    (87) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 RIGHTPAR

    LEFTPAR         shift and go to state 205


state 159

    (120) listaccess -> ID LEFTBRACKET . expression RIGHTBRACKET SEMICOLON
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    RIGHTBRACKET    reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 206
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 160

    (39) draw -> DRAW LEFTPAR . recfuncexp RIGHTPAR
    (91) recfuncexp -> . expression COMMA recfuncexp
    (92) recfuncexp -> . expression recfunc_action1
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    recfuncexp                     shift and go to state 207
    expression                     shift and go to state 208
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 161

    (40) size -> SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 209


state 162

    (41) head -> HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 210


state 163

    (42) tail -> TAIL LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 211


state 164

    (43) last -> LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 212


state 165

    (44) set_title -> SET_TITLE LEFTPAR . expression RIGHTPAR
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 213
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 166

    (45) set_dimension -> SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 214
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 167

    (46) set_color -> SET_COLOR LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 215
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 168

    (47) create_object -> CREATE_OBJECT LEFTPAR . recfuncexp RIGHTPAR
    (91) recfuncexp -> . expression COMMA recfuncexp
    (92) recfuncexp -> . expression recfunc_action1
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    recfuncexp                     shift and go to state 216
    expression                     shift and go to state 208
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 169

    (48) create_text -> CREATE_TEXT LEFTPAR . recfuncexp RIGHTPAR
    (91) recfuncexp -> . expression COMMA recfuncexp
    (92) recfuncexp -> . expression recfunc_action1
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    recfuncexp                     shift and go to state 217
    expression                     shift and go to state 208
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 170

    (76) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 76 (recparams -> ID COLON type COMMA recparams .)


state 171

    (67) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 218

state 172

    (16) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 219


state 173

    (17) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 220


state 174

    (18) recstatement -> statement . recstatement
    (19) recstatement -> statement .
    (18) recstatement -> . statement recstatement
    (19) recstatement -> . statement
    (20) statement -> . assign SEMICOLON
    (21) statement -> . condition
    (22) statement -> . vars
    (23) statement -> . loop
    (24) statement -> . write SEMICOLON
    (25) statement -> . return SEMICOLON
    (26) statement -> . functioncall SEMICOLON
    (27) statement -> . nestedassign SEMICOLON
    (28) statement -> . specialfunction SEMICOLON
    (49) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (52) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (53) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (10) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (11) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (12) vars -> . VAR recids COLON type SEMICOLON vars
    (13) vars -> . VAR recids COLON type SEMICOLON
    (57) loop -> . for
    (58) loop -> . while
    (79) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (86) return -> . RETURN expression
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (122) nestedassign -> . nestedvalue EQUAL expression
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (59) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (63) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (121) nestedvalue -> . ID DOT ID
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        reduce using rule 19 (recstatement -> statement .)
    ID              shift and go to state 184
    IF              shift and go to state 185
    VAR             shift and go to state 40
    PRINT           shift and go to state 188
    RETURN          shift and go to state 189
    FOR             shift and go to state 191
    WHILE           shift and go to state 192
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

    statement                      shift and go to state 174
    recstatement                   shift and go to state 221
    assign                         shift and go to state 175
    condition                      shift and go to state 176
    vars                           shift and go to state 177
    loop                           shift and go to state 178
    write                          shift and go to state 179
    return                         shift and go to state 180
    functioncall                   shift and go to state 181
    nestedassign                   shift and go to state 182
    specialfunction                shift and go to state 183
    for                            shift and go to state 186
    while                          shift and go to state 187
    nestedvalue                    shift and go to state 190
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 175

    (20) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 222


state 176

    (21) statement -> condition .

    ID              reduce using rule 21 (statement -> condition .)
    IF              reduce using rule 21 (statement -> condition .)
    VAR             reduce using rule 21 (statement -> condition .)
    PRINT           reduce using rule 21 (statement -> condition .)
    RETURN          reduce using rule 21 (statement -> condition .)
    FOR             reduce using rule 21 (statement -> condition .)
    WHILE           reduce using rule 21 (statement -> condition .)
    DRAW            reduce using rule 21 (statement -> condition .)
    SIZE            reduce using rule 21 (statement -> condition .)
    HEAD            reduce using rule 21 (statement -> condition .)
    TAIL            reduce using rule 21 (statement -> condition .)
    LAST            reduce using rule 21 (statement -> condition .)
    SET_TITLE       reduce using rule 21 (statement -> condition .)
    SET_DIMENSION   reduce using rule 21 (statement -> condition .)
    SET_COLOR       reduce using rule 21 (statement -> condition .)
    CREATE_OBJECT   reduce using rule 21 (statement -> condition .)
    CREATE_TEXT     reduce using rule 21 (statement -> condition .)
    RIGHTKEY        reduce using rule 21 (statement -> condition .)


state 177

    (22) statement -> vars .

    ID              reduce using rule 22 (statement -> vars .)
    IF              reduce using rule 22 (statement -> vars .)
    VAR             reduce using rule 22 (statement -> vars .)
    PRINT           reduce using rule 22 (statement -> vars .)
    RETURN          reduce using rule 22 (statement -> vars .)
    FOR             reduce using rule 22 (statement -> vars .)
    WHILE           reduce using rule 22 (statement -> vars .)
    DRAW            reduce using rule 22 (statement -> vars .)
    SIZE            reduce using rule 22 (statement -> vars .)
    HEAD            reduce using rule 22 (statement -> vars .)
    TAIL            reduce using rule 22 (statement -> vars .)
    LAST            reduce using rule 22 (statement -> vars .)
    SET_TITLE       reduce using rule 22 (statement -> vars .)
    SET_DIMENSION   reduce using rule 22 (statement -> vars .)
    SET_COLOR       reduce using rule 22 (statement -> vars .)
    CREATE_OBJECT   reduce using rule 22 (statement -> vars .)
    CREATE_TEXT     reduce using rule 22 (statement -> vars .)
    RIGHTKEY        reduce using rule 22 (statement -> vars .)


state 178

    (23) statement -> loop .

    ID              reduce using rule 23 (statement -> loop .)
    IF              reduce using rule 23 (statement -> loop .)
    VAR             reduce using rule 23 (statement -> loop .)
    PRINT           reduce using rule 23 (statement -> loop .)
    RETURN          reduce using rule 23 (statement -> loop .)
    FOR             reduce using rule 23 (statement -> loop .)
    WHILE           reduce using rule 23 (statement -> loop .)
    DRAW            reduce using rule 23 (statement -> loop .)
    SIZE            reduce using rule 23 (statement -> loop .)
    HEAD            reduce using rule 23 (statement -> loop .)
    TAIL            reduce using rule 23 (statement -> loop .)
    LAST            reduce using rule 23 (statement -> loop .)
    SET_TITLE       reduce using rule 23 (statement -> loop .)
    SET_DIMENSION   reduce using rule 23 (statement -> loop .)
    SET_COLOR       reduce using rule 23 (statement -> loop .)
    CREATE_OBJECT   reduce using rule 23 (statement -> loop .)
    CREATE_TEXT     reduce using rule 23 (statement -> loop .)
    RIGHTKEY        reduce using rule 23 (statement -> loop .)


state 179

    (24) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 223


state 180

    (25) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 224


state 181

    (26) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 225


state 182

    (27) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 226


state 183

    (28) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 227


state 184

    (49) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (87) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (121) nestedvalue -> ID . DOT ID
    (50) assign_action1 -> .
    (89) function_call_action1 -> .

    DOT             shift and go to state 157
    EQUAL           reduce using rule 50 (assign_action1 -> .)
    LEFTPAR         reduce using rule 89 (function_call_action1 -> .)

    assign_action1                 shift and go to state 228
    function_call_action1          shift and go to state 158

state 185

    (52) condition -> IF . startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (53) condition -> IF . startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (71) startscope_action -> .

    LEFTPAR         reduce using rule 71 (startscope_action -> .)

    startscope_action              shift and go to state 229

state 186

    (57) loop -> for .

    ID              reduce using rule 57 (loop -> for .)
    IF              reduce using rule 57 (loop -> for .)
    VAR             reduce using rule 57 (loop -> for .)
    PRINT           reduce using rule 57 (loop -> for .)
    RETURN          reduce using rule 57 (loop -> for .)
    FOR             reduce using rule 57 (loop -> for .)
    WHILE           reduce using rule 57 (loop -> for .)
    DRAW            reduce using rule 57 (loop -> for .)
    SIZE            reduce using rule 57 (loop -> for .)
    HEAD            reduce using rule 57 (loop -> for .)
    TAIL            reduce using rule 57 (loop -> for .)
    LAST            reduce using rule 57 (loop -> for .)
    SET_TITLE       reduce using rule 57 (loop -> for .)
    SET_DIMENSION   reduce using rule 57 (loop -> for .)
    SET_COLOR       reduce using rule 57 (loop -> for .)
    CREATE_OBJECT   reduce using rule 57 (loop -> for .)
    CREATE_TEXT     reduce using rule 57 (loop -> for .)
    RIGHTKEY        reduce using rule 57 (loop -> for .)


state 187

    (58) loop -> while .

    ID              reduce using rule 58 (loop -> while .)
    IF              reduce using rule 58 (loop -> while .)
    VAR             reduce using rule 58 (loop -> while .)
    PRINT           reduce using rule 58 (loop -> while .)
    RETURN          reduce using rule 58 (loop -> while .)
    FOR             reduce using rule 58 (loop -> while .)
    WHILE           reduce using rule 58 (loop -> while .)
    DRAW            reduce using rule 58 (loop -> while .)
    SIZE            reduce using rule 58 (loop -> while .)
    HEAD            reduce using rule 58 (loop -> while .)
    TAIL            reduce using rule 58 (loop -> while .)
    LAST            reduce using rule 58 (loop -> while .)
    SET_TITLE       reduce using rule 58 (loop -> while .)
    SET_DIMENSION   reduce using rule 58 (loop -> while .)
    SET_COLOR       reduce using rule 58 (loop -> while .)
    CREATE_OBJECT   reduce using rule 58 (loop -> while .)
    CREATE_TEXT     reduce using rule 58 (loop -> while .)
    RIGHTKEY        reduce using rule 58 (loop -> while .)


state 188

    (79) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 230


state 189

    (86) return -> RETURN . expression
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 231
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 190

    (122) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 232


state 191

    (59) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (71) startscope_action -> .

    LEFTPAR         reduce using rule 71 (startscope_action -> .)

    startscope_action              shift and go to state 233

state 192

    (63) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (71) startscope_action -> .

    LEFTPAR         reduce using rule 71 (startscope_action -> .)

    startscope_action              shift and go to state 234

state 193

    (69) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 235

state 194

    (9) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (74) function_action3 -> .

    COLON           reduce using rule 74 (function_action3 -> .)

    function_action3               shift and go to state 236

state 195

    (8) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 8 (start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 196

    (10) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    DRAW            reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SIZE            reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    HEAD            reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    TAIL            reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    LAST            reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_TITLE       reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_COLOR       reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 10 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 197

    (94) expression -> exp RELOP relop_action1 . exp relop_action2
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    RIGHTBRACKET    reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    exp                            shift and go to state 237
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 198

    (95) expression -> exp LOGIC logic_action1 . exp logic_action2
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    RIGHTBRACKET    reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    exp                            shift and go to state 238
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 199

    (101) exp -> term exp_action recexp .

    RELOP           reduce using rule 101 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 101 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 101 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 101 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 101 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 101 (exp -> term exp_action recexp .)


state 200

    (104) recexp -> EX . add_operator exp
    (109) add_operator -> .

    LEFTPAR         reduce using rule 109 (add_operator -> .)
    EX              reduce using rule 109 (add_operator -> .)
    ID              reduce using rule 109 (add_operator -> .)
    INT             reduce using rule 109 (add_operator -> .)
    FLOAT           reduce using rule 109 (add_operator -> .)
    TRUE            reduce using rule 109 (add_operator -> .)
    FALSE           reduce using rule 109 (add_operator -> .)
    STRING          reduce using rule 109 (add_operator -> .)
    DRAW            reduce using rule 109 (add_operator -> .)
    SIZE            reduce using rule 109 (add_operator -> .)
    HEAD            reduce using rule 109 (add_operator -> .)
    TAIL            reduce using rule 109 (add_operator -> .)
    LAST            reduce using rule 109 (add_operator -> .)
    SET_TITLE       reduce using rule 109 (add_operator -> .)
    SET_DIMENSION   reduce using rule 109 (add_operator -> .)
    SET_COLOR       reduce using rule 109 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 109 (add_operator -> .)
    CREATE_TEXT     reduce using rule 109 (add_operator -> .)
    TERMS           reduce using rule 109 (add_operator -> .)
    RELOP           reduce using rule 109 (add_operator -> .)
    LOGIC           reduce using rule 109 (add_operator -> .)
    SEMICOLON       reduce using rule 109 (add_operator -> .)
    RIGHTPAR        reduce using rule 109 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 109 (add_operator -> .)
    COMMA           reduce using rule 109 (add_operator -> .)

    add_operator                   shift and go to state 239

state 201

    (105) term -> factor term_action recterm .

    EX              reduce using rule 105 (term -> factor term_action recterm .)
    RELOP           reduce using rule 105 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 105 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 105 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 105 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 105 (term -> factor term_action recterm .)
    COMMA           reduce using rule 105 (term -> factor term_action recterm .)


state 202

    (108) recterm -> TERMS . add_operator term
    (109) add_operator -> .

    LEFTPAR         reduce using rule 109 (add_operator -> .)
    EX              reduce using rule 109 (add_operator -> .)
    ID              reduce using rule 109 (add_operator -> .)
    INT             reduce using rule 109 (add_operator -> .)
    FLOAT           reduce using rule 109 (add_operator -> .)
    TRUE            reduce using rule 109 (add_operator -> .)
    FALSE           reduce using rule 109 (add_operator -> .)
    STRING          reduce using rule 109 (add_operator -> .)
    DRAW            reduce using rule 109 (add_operator -> .)
    SIZE            reduce using rule 109 (add_operator -> .)
    HEAD            reduce using rule 109 (add_operator -> .)
    TAIL            reduce using rule 109 (add_operator -> .)
    LAST            reduce using rule 109 (add_operator -> .)
    SET_TITLE       reduce using rule 109 (add_operator -> .)
    SET_DIMENSION   reduce using rule 109 (add_operator -> .)
    SET_COLOR       reduce using rule 109 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 109 (add_operator -> .)
    CREATE_TEXT     reduce using rule 109 (add_operator -> .)
    TERMS           reduce using rule 109 (add_operator -> .)
    RELOP           reduce using rule 109 (add_operator -> .)
    LOGIC           reduce using rule 109 (add_operator -> .)
    SEMICOLON       reduce using rule 109 (add_operator -> .)
    RIGHTPAR        reduce using rule 109 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 109 (add_operator -> .)
    COMMA           reduce using rule 109 (add_operator -> .)

    add_operator                   shift and go to state 240

state 203

    (110) factor -> LEFTPAR expression RIGHTPAR .

    TERMS           reduce using rule 110 (factor -> LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 110 (factor -> LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 110 (factor -> LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 110 (factor -> LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 110 (factor -> LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 110 (factor -> LEFTPAR expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 110 (factor -> LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 110 (factor -> LEFTPAR expression RIGHTPAR .)


state 204

    (121) nestedvalue -> ID DOT ID .

    TERMS           reduce using rule 121 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 121 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 121 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 121 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 121 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 121 (nestedvalue -> ID DOT ID .)
    RIGHTBRACKET    reduce using rule 121 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 121 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 121 (nestedvalue -> ID DOT ID .)


state 205

    (87) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 RIGHTPAR
    (90) function_call_action2 -> .

    RIGHTPAR        reduce using rule 90 (function_call_action2 -> .)
    LEFTPAR         reduce using rule 90 (function_call_action2 -> .)
    EX              reduce using rule 90 (function_call_action2 -> .)
    ID              reduce using rule 90 (function_call_action2 -> .)
    INT             reduce using rule 90 (function_call_action2 -> .)
    FLOAT           reduce using rule 90 (function_call_action2 -> .)
    TRUE            reduce using rule 90 (function_call_action2 -> .)
    FALSE           reduce using rule 90 (function_call_action2 -> .)
    STRING          reduce using rule 90 (function_call_action2 -> .)
    DRAW            reduce using rule 90 (function_call_action2 -> .)
    SIZE            reduce using rule 90 (function_call_action2 -> .)
    HEAD            reduce using rule 90 (function_call_action2 -> .)
    TAIL            reduce using rule 90 (function_call_action2 -> .)
    LAST            reduce using rule 90 (function_call_action2 -> .)
    SET_TITLE       reduce using rule 90 (function_call_action2 -> .)
    SET_DIMENSION   reduce using rule 90 (function_call_action2 -> .)
    SET_COLOR       reduce using rule 90 (function_call_action2 -> .)
    CREATE_OBJECT   reduce using rule 90 (function_call_action2 -> .)
    CREATE_TEXT     reduce using rule 90 (function_call_action2 -> .)
    COMMA           reduce using rule 90 (function_call_action2 -> .)
    RELOP           reduce using rule 90 (function_call_action2 -> .)
    LOGIC           reduce using rule 90 (function_call_action2 -> .)
    TERMS           reduce using rule 90 (function_call_action2 -> .)

    function_call_action2          shift and go to state 241

state 206

    (120) listaccess -> ID LEFTBRACKET expression . RIGHTBRACKET SEMICOLON

    RIGHTBRACKET    shift and go to state 242


state 207

    (39) draw -> DRAW LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 243


state 208

    (91) recfuncexp -> expression . COMMA recfuncexp
    (92) recfuncexp -> expression . recfunc_action1
    (93) recfunc_action1 -> .

    COMMA           shift and go to state 244
    RIGHTPAR        reduce using rule 93 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 245

state 209

    (40) size -> SIZE LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 40 (size -> SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 40 (size -> SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 40 (size -> SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 40 (size -> SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 40 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 40 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 40 (size -> SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 40 (size -> SIZE LEFTPAR RIGHTPAR .)


state 210

    (41) head -> HEAD LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 41 (head -> HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 41 (head -> HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 41 (head -> HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 41 (head -> HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 41 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 41 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 41 (head -> HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 41 (head -> HEAD LEFTPAR RIGHTPAR .)


state 211

    (42) tail -> TAIL LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 42 (tail -> TAIL LEFTPAR RIGHTPAR .)
    EX              reduce using rule 42 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 42 (tail -> TAIL LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 42 (tail -> TAIL LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 42 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 42 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 42 (tail -> TAIL LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 42 (tail -> TAIL LEFTPAR RIGHTPAR .)


state 212

    (43) last -> LAST LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 43 (last -> LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 43 (last -> LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 43 (last -> LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 43 (last -> LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 43 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 43 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 43 (last -> LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 43 (last -> LAST LEFTPAR RIGHTPAR .)


state 213

    (44) set_title -> SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 246


state 214

    (45) set_dimension -> SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 247


state 215

    (46) set_color -> SET_COLOR LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 248


state 216

    (47) create_object -> CREATE_OBJECT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 249


state 217

    (48) create_text -> CREATE_TEXT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 250


state 218

    (67) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 67 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    LIST            reduce using rule 67 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 67 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 67 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 67 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 67 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 67 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 67 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 219

    (16) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 251


state 220

    (17) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 17 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 221

    (18) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 18 (recstatement -> statement recstatement .)


state 222

    (20) statement -> assign SEMICOLON .

    ID              reduce using rule 20 (statement -> assign SEMICOLON .)
    IF              reduce using rule 20 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 20 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 20 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 20 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 20 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 20 (statement -> assign SEMICOLON .)
    DRAW            reduce using rule 20 (statement -> assign SEMICOLON .)
    SIZE            reduce using rule 20 (statement -> assign SEMICOLON .)
    HEAD            reduce using rule 20 (statement -> assign SEMICOLON .)
    TAIL            reduce using rule 20 (statement -> assign SEMICOLON .)
    LAST            reduce using rule 20 (statement -> assign SEMICOLON .)
    SET_TITLE       reduce using rule 20 (statement -> assign SEMICOLON .)
    SET_DIMENSION   reduce using rule 20 (statement -> assign SEMICOLON .)
    SET_COLOR       reduce using rule 20 (statement -> assign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 20 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 20 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 20 (statement -> assign SEMICOLON .)


state 223

    (24) statement -> write SEMICOLON .

    ID              reduce using rule 24 (statement -> write SEMICOLON .)
    IF              reduce using rule 24 (statement -> write SEMICOLON .)
    VAR             reduce using rule 24 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 24 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 24 (statement -> write SEMICOLON .)
    FOR             reduce using rule 24 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 24 (statement -> write SEMICOLON .)
    DRAW            reduce using rule 24 (statement -> write SEMICOLON .)
    SIZE            reduce using rule 24 (statement -> write SEMICOLON .)
    HEAD            reduce using rule 24 (statement -> write SEMICOLON .)
    TAIL            reduce using rule 24 (statement -> write SEMICOLON .)
    LAST            reduce using rule 24 (statement -> write SEMICOLON .)
    SET_TITLE       reduce using rule 24 (statement -> write SEMICOLON .)
    SET_DIMENSION   reduce using rule 24 (statement -> write SEMICOLON .)
    SET_COLOR       reduce using rule 24 (statement -> write SEMICOLON .)
    CREATE_OBJECT   reduce using rule 24 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 24 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 24 (statement -> write SEMICOLON .)


state 224

    (25) statement -> return SEMICOLON .

    ID              reduce using rule 25 (statement -> return SEMICOLON .)
    IF              reduce using rule 25 (statement -> return SEMICOLON .)
    VAR             reduce using rule 25 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 25 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 25 (statement -> return SEMICOLON .)
    FOR             reduce using rule 25 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> return SEMICOLON .)
    DRAW            reduce using rule 25 (statement -> return SEMICOLON .)
    SIZE            reduce using rule 25 (statement -> return SEMICOLON .)
    HEAD            reduce using rule 25 (statement -> return SEMICOLON .)
    TAIL            reduce using rule 25 (statement -> return SEMICOLON .)
    LAST            reduce using rule 25 (statement -> return SEMICOLON .)
    SET_TITLE       reduce using rule 25 (statement -> return SEMICOLON .)
    SET_DIMENSION   reduce using rule 25 (statement -> return SEMICOLON .)
    SET_COLOR       reduce using rule 25 (statement -> return SEMICOLON .)
    CREATE_OBJECT   reduce using rule 25 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 25 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 25 (statement -> return SEMICOLON .)


state 225

    (26) statement -> functioncall SEMICOLON .

    ID              reduce using rule 26 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 26 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 26 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 26 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 26 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 26 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> functioncall SEMICOLON .)
    DRAW            reduce using rule 26 (statement -> functioncall SEMICOLON .)
    SIZE            reduce using rule 26 (statement -> functioncall SEMICOLON .)
    HEAD            reduce using rule 26 (statement -> functioncall SEMICOLON .)
    TAIL            reduce using rule 26 (statement -> functioncall SEMICOLON .)
    LAST            reduce using rule 26 (statement -> functioncall SEMICOLON .)
    SET_TITLE       reduce using rule 26 (statement -> functioncall SEMICOLON .)
    SET_DIMENSION   reduce using rule 26 (statement -> functioncall SEMICOLON .)
    SET_COLOR       reduce using rule 26 (statement -> functioncall SEMICOLON .)
    CREATE_OBJECT   reduce using rule 26 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 26 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 26 (statement -> functioncall SEMICOLON .)


state 226

    (27) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    DRAW            reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    SIZE            reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    HEAD            reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    TAIL            reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    LAST            reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    SET_TITLE       reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    SET_DIMENSION   reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    SET_COLOR       reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 27 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 27 (statement -> nestedassign SEMICOLON .)


state 227

    (28) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    DRAW            reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    SIZE            reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    HEAD            reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    TAIL            reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    LAST            reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    SET_TITLE       reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    SET_DIMENSION   reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    SET_COLOR       reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    CREATE_OBJECT   reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 28 (statement -> specialfunction SEMICOLON .)


state 228

    (49) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 252


state 229

    (52) condition -> IF startscope_action . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (53) condition -> IF startscope_action . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 253


state 230

    (79) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (80) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (81) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (82) recwrite -> . expression action_recwrite_exp
    (83) recwrite -> . STRING action_recwrite_cte
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 256
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    recwrite                       shift and go to state 254
    expression                     shift and go to state 255
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 231

    (86) return -> RETURN expression .

    SEMICOLON       reduce using rule 86 (return -> RETURN expression .)


state 232

    (122) nestedassign -> nestedvalue EQUAL . expression
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    nestedvalue                    shift and go to state 112
    expression                     shift and go to state 257
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 233

    (59) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 258


state 234

    (63) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (64) while_action1 -> .

    LEFTPAR         reduce using rule 64 (while_action1 -> .)

    while_action1                  shift and go to state 259

state 235

    (69) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 69 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    LIST            reduce using rule 69 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 69 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 69 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 69 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 69 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TOBJECT         reduce using rule 69 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 69 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 236

    (9) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 260

state 237

    (94) expression -> exp RELOP relop_action1 exp . relop_action2
    (98) relop_action2 -> .

    SEMICOLON       reduce using rule 98 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 98 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 98 (relop_action2 -> .)
    COMMA           reduce using rule 98 (relop_action2 -> .)

    relop_action2                  shift and go to state 261

state 238

    (95) expression -> exp LOGIC logic_action1 exp . logic_action2
    (100) logic_action2 -> .

    SEMICOLON       reduce using rule 100 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 100 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 100 (logic_action2 -> .)
    COMMA           reduce using rule 100 (logic_action2 -> .)

    logic_action2                  shift and go to state 262

state 239

    (104) recexp -> EX add_operator . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    RIGHTBRACKET    reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    exp                            shift and go to state 263
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 240

    (108) recterm -> TERMS add_operator . term
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    RIGHTBRACKET    reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    term                           shift and go to state 264
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 241

    (87) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . recfuncexp RIGHTPAR
    (88) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . RIGHTPAR
    (91) recfuncexp -> . expression COMMA recfuncexp
    (92) recfuncexp -> . expression recfunc_action1
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
  ! shift/reduce conflict for RIGHTPAR resolved as shift
    RIGHTPAR        shift and go to state 266
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]
  ! RIGHTPAR        [ reduce using rule 123 (cte -> .) ]

    recfuncexp                     shift and go to state 265
    expression                     shift and go to state 208
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 242

    (120) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 267


state 243

    (39) draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 39 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 39 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 39 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 39 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 39 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 39 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 39 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 39 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)


state 244

    (91) recfuncexp -> expression COMMA . recfuncexp
    (91) recfuncexp -> . expression COMMA recfuncexp
    (92) recfuncexp -> . expression recfunc_action1
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 208
    recfuncexp                     shift and go to state 268
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 245

    (92) recfuncexp -> expression recfunc_action1 .

    RIGHTPAR        reduce using rule 92 (recfuncexp -> expression recfunc_action1 .)


state 246

    (44) set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .

    TERMS           reduce using rule 44 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 44 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 44 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 44 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 44 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 44 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 44 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 44 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)


state 247

    (45) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 269
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 248

    (46) set_color -> SET_COLOR LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 270
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 249

    (47) create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 47 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 47 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 47 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 47 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 47 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 47 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 47 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 47 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)


state 250

    (48) create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 48 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 48 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 48 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 48 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 48 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 48 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 48 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 48 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)


state 251

    (16) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 16 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 252

    (49) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (51) assign_action2 -> .

    LEFTPAR         reduce using rule 51 (assign_action2 -> .)
    EX              reduce using rule 51 (assign_action2 -> .)
    ID              reduce using rule 51 (assign_action2 -> .)
    INT             reduce using rule 51 (assign_action2 -> .)
    FLOAT           reduce using rule 51 (assign_action2 -> .)
    TRUE            reduce using rule 51 (assign_action2 -> .)
    FALSE           reduce using rule 51 (assign_action2 -> .)
    STRING          reduce using rule 51 (assign_action2 -> .)
    DRAW            reduce using rule 51 (assign_action2 -> .)
    SIZE            reduce using rule 51 (assign_action2 -> .)
    HEAD            reduce using rule 51 (assign_action2 -> .)
    TAIL            reduce using rule 51 (assign_action2 -> .)
    LAST            reduce using rule 51 (assign_action2 -> .)
    SET_TITLE       reduce using rule 51 (assign_action2 -> .)
    SET_DIMENSION   reduce using rule 51 (assign_action2 -> .)
    SET_COLOR       reduce using rule 51 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 51 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 51 (assign_action2 -> .)
    RELOP           reduce using rule 51 (assign_action2 -> .)
    LOGIC           reduce using rule 51 (assign_action2 -> .)
    TERMS           reduce using rule 51 (assign_action2 -> .)
    SEMICOLON       reduce using rule 51 (assign_action2 -> .)

    assign_action2                 shift and go to state 271

state 253

    (52) condition -> IF startscope_action LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (53) condition -> IF startscope_action LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 272
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 254

    (79) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 273


state 255

    (80) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (82) recwrite -> expression . action_recwrite_exp
    (84) action_recwrite_exp -> .

    COMMA           reduce using rule 84 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 84 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 274

state 256

    (81) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (83) recwrite -> STRING . action_recwrite_cte
    (134) string -> STRING .
    (85) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 85 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 85 (action_recwrite_cte -> .)
    TERMS           reduce using rule 134 (string -> STRING .)
    EX              reduce using rule 134 (string -> STRING .)
    RELOP           reduce using rule 134 (string -> STRING .)
    LOGIC           reduce using rule 134 (string -> STRING .)
    COMMA           reduce using rule 85 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 85 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 134 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 134 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 275

state 257

    (122) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 122 (nestedassign -> nestedvalue EQUAL expression .)


state 258

    (59) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (49) assign -> . ID assign_action1 EQUAL assign_action2 expression

    ID              shift and go to state 277

    assign                         shift and go to state 276

state 259

    (63) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 278


state 260

    (9) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block .

    RIGHTKEY        reduce using rule 9 (run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 261

    (94) expression -> exp RELOP relop_action1 exp relop_action2 .

    SEMICOLON       reduce using rule 94 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 94 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 94 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    COMMA           reduce using rule 94 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 262

    (95) expression -> exp LOGIC logic_action1 exp logic_action2 .

    SEMICOLON       reduce using rule 95 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 95 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 95 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    COMMA           reduce using rule 95 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 263

    (104) recexp -> EX add_operator exp .

    RELOP           reduce using rule 104 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 104 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 104 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 104 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 104 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 104 (recexp -> EX add_operator exp .)


state 264

    (108) recterm -> TERMS add_operator term .

    EX              reduce using rule 108 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 108 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 108 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 108 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 108 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 108 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 108 (recterm -> TERMS add_operator term .)


state 265

    (87) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 279


state 266

    (88) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .

    TERMS           reduce using rule 88 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    EX              reduce using rule 88 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RELOP           reduce using rule 88 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    LOGIC           reduce using rule 88 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    SEMICOLON       reduce using rule 88 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTPAR        reduce using rule 88 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 88 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    COMMA           reduce using rule 88 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)


state 267

    (120) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .

    TERMS           reduce using rule 120 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    EX              reduce using rule 120 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RELOP           reduce using rule 120 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    LOGIC           reduce using rule 120 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 120 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTPAR        reduce using rule 120 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTBRACKET    reduce using rule 120 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    COMMA           reduce using rule 120 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)


state 268

    (91) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 91 (recfuncexp -> expression COMMA recfuncexp .)


state 269

    (45) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 280


state 270

    (46) set_color -> SET_COLOR LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 281


state 271

    (49) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 282
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 272

    (52) condition -> IF startscope_action LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (53) condition -> IF startscope_action LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (54) condition_action1 -> .

    RIGHTPAR        reduce using rule 54 (condition_action1 -> .)

    condition_action1              shift and go to state 283

state 273

    (79) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 79 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 274

    (80) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (82) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 284
    RIGHTPAR        reduce using rule 82 (recwrite -> expression action_recwrite_exp .)


state 275

    (81) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (83) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 285
    RIGHTPAR        reduce using rule 83 (recwrite -> STRING action_recwrite_cte .)


state 276

    (59) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 286


state 277

    (49) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (50) assign_action1 -> .

    EQUAL           reduce using rule 50 (assign_action1 -> .)

    assign_action1                 shift and go to state 228

state 278

    (63) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 287
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 279

    (87) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .

    TERMS           reduce using rule 87 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    EX              reduce using rule 87 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 87 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 87 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 87 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 87 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 87 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 87 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)


state 280

    (45) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 45 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 45 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 45 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 45 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 45 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 45 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 45 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 45 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 281

    (46) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 288
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 282

    (49) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 49 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 283

    (52) condition -> IF startscope_action LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (53) condition -> IF startscope_action LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 289


state 284

    (80) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (80) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (81) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (82) recwrite -> . expression action_recwrite_exp
    (83) recwrite -> . STRING action_recwrite_cte
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 256
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 255
    recwrite                       shift and go to state 290
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 285

    (81) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (80) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (81) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (82) recwrite -> . expression action_recwrite_exp
    (83) recwrite -> . STRING action_recwrite_cte
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 256
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    COMMA           reduce using rule 123 (cte -> .)
    RIGHTPAR        reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    recwrite                       shift and go to state 291
    expression                     shift and go to state 255
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 286

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (60) for_action1 -> .

    LEFTPAR         reduce using rule 60 (for_action1 -> .)
    EX              reduce using rule 60 (for_action1 -> .)
    ID              reduce using rule 60 (for_action1 -> .)
    INT             reduce using rule 60 (for_action1 -> .)
    FLOAT           reduce using rule 60 (for_action1 -> .)
    TRUE            reduce using rule 60 (for_action1 -> .)
    FALSE           reduce using rule 60 (for_action1 -> .)
    STRING          reduce using rule 60 (for_action1 -> .)
    DRAW            reduce using rule 60 (for_action1 -> .)
    SIZE            reduce using rule 60 (for_action1 -> .)
    HEAD            reduce using rule 60 (for_action1 -> .)
    TAIL            reduce using rule 60 (for_action1 -> .)
    LAST            reduce using rule 60 (for_action1 -> .)
    SET_TITLE       reduce using rule 60 (for_action1 -> .)
    SET_DIMENSION   reduce using rule 60 (for_action1 -> .)
    SET_COLOR       reduce using rule 60 (for_action1 -> .)
    CREATE_OBJECT   reduce using rule 60 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 60 (for_action1 -> .)
    SEMICOLON       reduce using rule 60 (for_action1 -> .)
    RELOP           reduce using rule 60 (for_action1 -> .)
    LOGIC           reduce using rule 60 (for_action1 -> .)
    TERMS           reduce using rule 60 (for_action1 -> .)

    for_action1                    shift and go to state 292

state 287

    (63) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (65) while_action2 -> .

    RIGHTPAR        reduce using rule 65 (while_action2 -> .)

    while_action2                  shift and go to state 293

state 288

    (46) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 294


state 289

    (52) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (53) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 295

state 290

    (80) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 80 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 291

    (81) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 81 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 292

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (94) expression -> . exp RELOP relop_action1 exp relop_action2
    (95) expression -> . exp LOGIC logic_action1 exp logic_action2
    (96) expression -> . exp
    (101) exp -> . term exp_action recexp
    (102) exp -> . term exp_action
    (105) term -> . factor term_action recterm
    (106) term -> . factor term_action
    (110) factor -> . LEFTPAR expression RIGHTPAR
    (111) factor -> . EX cte
    (112) factor -> . cte
    (123) cte -> .
    (124) cte -> . id
    (125) cte -> . int
    (126) cte -> . float
    (127) cte -> . bool
    (128) cte -> . string
    (129) cte -> . nestedvalue
    (130) cte -> . functioncall
    (131) cte -> . listaccess
    (132) cte -> . specialfunction
    (133) id -> . ID
    (135) int -> . INT
    (136) float -> . FLOAT
    (137) bool -> . TRUE
    (138) bool -> . FALSE
    (134) string -> . STRING
    (121) nestedvalue -> . ID DOT ID
    (87) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (88) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (120) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (29) specialfunction -> . draw
    (30) specialfunction -> . size
    (31) specialfunction -> . head
    (32) specialfunction -> . tail
    (33) specialfunction -> . last
    (34) specialfunction -> . set_title
    (35) specialfunction -> . set_dimension
    (36) specialfunction -> . set_color
    (37) specialfunction -> . create_object
    (38) specialfunction -> . create_text
    (39) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (40) size -> . SIZE LEFTPAR RIGHTPAR
    (41) head -> . HEAD LEFTPAR RIGHTPAR
    (42) tail -> . TAIL LEFTPAR RIGHTPAR
    (43) last -> . LAST LEFTPAR RIGHTPAR
    (44) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (45) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (46) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (47) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (48) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    LEFTPAR         shift and go to state 104
    EX              shift and go to state 105
    TERMS           reduce using rule 123 (cte -> .)
    RELOP           reduce using rule 123 (cte -> .)
    LOGIC           reduce using rule 123 (cte -> .)
    SEMICOLON       reduce using rule 123 (cte -> .)
    ID              shift and go to state 116
    INT             shift and go to state 117
    FLOAT           shift and go to state 118
    TRUE            shift and go to state 119
    FALSE           shift and go to state 120
    STRING          shift and go to state 121
    DRAW            shift and go to state 132
    SIZE            shift and go to state 133
    HEAD            shift and go to state 134
    TAIL            shift and go to state 135
    LAST            shift and go to state 136
    SET_TITLE       shift and go to state 137
    SET_DIMENSION   shift and go to state 138
    SET_COLOR       shift and go to state 139
    CREATE_OBJECT   shift and go to state 140
    CREATE_TEXT     shift and go to state 141

  ! EX              [ reduce using rule 123 (cte -> .) ]

    expression                     shift and go to state 296
    exp                            shift and go to state 101
    term                           shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 106
    id                             shift and go to state 107
    int                            shift and go to state 108
    float                          shift and go to state 109
    bool                           shift and go to state 110
    string                         shift and go to state 111
    nestedvalue                    shift and go to state 112
    functioncall                   shift and go to state 113
    listaccess                     shift and go to state 114
    specialfunction                shift and go to state 115
    draw                           shift and go to state 122
    size                           shift and go to state 123
    head                           shift and go to state 124
    tail                           shift and go to state 125
    last                           shift and go to state 126
    set_title                      shift and go to state 127
    set_dimension                  shift and go to state 128
    set_color                      shift and go to state 129
    create_object                  shift and go to state 130
    create_text                    shift and go to state 131

state 293

    (63) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 297


state 294

    (46) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 46 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 46 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 46 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 46 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 46 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 46 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 46 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 46 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 295

    (52) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (53) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (55) condition_action2 -> .
    (56) condition_action3 -> .

    ID              reduce using rule 55 (condition_action2 -> .)
    IF              reduce using rule 55 (condition_action2 -> .)
    VAR             reduce using rule 55 (condition_action2 -> .)
    PRINT           reduce using rule 55 (condition_action2 -> .)
    RETURN          reduce using rule 55 (condition_action2 -> .)
    FOR             reduce using rule 55 (condition_action2 -> .)
    WHILE           reduce using rule 55 (condition_action2 -> .)
    DRAW            reduce using rule 55 (condition_action2 -> .)
    SIZE            reduce using rule 55 (condition_action2 -> .)
    HEAD            reduce using rule 55 (condition_action2 -> .)
    TAIL            reduce using rule 55 (condition_action2 -> .)
    LAST            reduce using rule 55 (condition_action2 -> .)
    SET_TITLE       reduce using rule 55 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 55 (condition_action2 -> .)
    SET_COLOR       reduce using rule 55 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 55 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 55 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 55 (condition_action2 -> .)
    ELSE            reduce using rule 56 (condition_action3 -> .)

    condition_action2              shift and go to state 298
    condition_action3              shift and go to state 299

state 296

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (61) for_action2 -> .

    SEMICOLON       reduce using rule 61 (for_action2 -> .)

    for_action2                    shift and go to state 300

state 297

    (63) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 301

state 298

    (52) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    DRAW            reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SIZE            reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    HEAD            reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    TAIL            reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    LAST            reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_TITLE       reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_DIMENSION   reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_COLOR       reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_OBJECT   reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 52 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 299

    (53) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 302


state 300

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 303


state 301

    (63) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (66) while_action3 -> .

    ID              reduce using rule 66 (while_action3 -> .)
    IF              reduce using rule 66 (while_action3 -> .)
    VAR             reduce using rule 66 (while_action3 -> .)
    PRINT           reduce using rule 66 (while_action3 -> .)
    RETURN          reduce using rule 66 (while_action3 -> .)
    FOR             reduce using rule 66 (while_action3 -> .)
    WHILE           reduce using rule 66 (while_action3 -> .)
    DRAW            reduce using rule 66 (while_action3 -> .)
    SIZE            reduce using rule 66 (while_action3 -> .)
    HEAD            reduce using rule 66 (while_action3 -> .)
    TAIL            reduce using rule 66 (while_action3 -> .)
    LAST            reduce using rule 66 (while_action3 -> .)
    SET_TITLE       reduce using rule 66 (while_action3 -> .)
    SET_DIMENSION   reduce using rule 66 (while_action3 -> .)
    SET_COLOR       reduce using rule 66 (while_action3 -> .)
    CREATE_OBJECT   reduce using rule 66 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 66 (while_action3 -> .)
    RIGHTKEY        reduce using rule 66 (while_action3 -> .)

    while_action3                  shift and go to state 304

state 302

    (53) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 305

state 303

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (49) assign -> . ID assign_action1 EQUAL assign_action2 expression

    ID              shift and go to state 277

    assign                         shift and go to state 306

state 304

    (63) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    DRAW            reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SIZE            reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    HEAD            reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    TAIL            reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    LAST            reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_TITLE       reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_DIMENSION   reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_COLOR       reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_OBJECT   reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 63 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 305

    (53) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (55) condition_action2 -> .

    ID              reduce using rule 55 (condition_action2 -> .)
    IF              reduce using rule 55 (condition_action2 -> .)
    VAR             reduce using rule 55 (condition_action2 -> .)
    PRINT           reduce using rule 55 (condition_action2 -> .)
    RETURN          reduce using rule 55 (condition_action2 -> .)
    FOR             reduce using rule 55 (condition_action2 -> .)
    WHILE           reduce using rule 55 (condition_action2 -> .)
    DRAW            reduce using rule 55 (condition_action2 -> .)
    SIZE            reduce using rule 55 (condition_action2 -> .)
    HEAD            reduce using rule 55 (condition_action2 -> .)
    TAIL            reduce using rule 55 (condition_action2 -> .)
    LAST            reduce using rule 55 (condition_action2 -> .)
    SET_TITLE       reduce using rule 55 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 55 (condition_action2 -> .)
    SET_COLOR       reduce using rule 55 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 55 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 55 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 55 (condition_action2 -> .)

    condition_action2              shift and go to state 307

state 306

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 308


state 307

    (53) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    DRAW            reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SIZE            reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    HEAD            reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    TAIL            reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    LAST            reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_TITLE       reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_DIMENSION   reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_COLOR       reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_OBJECT   reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 53 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 308

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 309


state 309

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (16) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (17) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 92

    block                          shift and go to state 310

state 310

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (62) for_action3 -> .

    ID              reduce using rule 62 (for_action3 -> .)
    IF              reduce using rule 62 (for_action3 -> .)
    VAR             reduce using rule 62 (for_action3 -> .)
    PRINT           reduce using rule 62 (for_action3 -> .)
    RETURN          reduce using rule 62 (for_action3 -> .)
    FOR             reduce using rule 62 (for_action3 -> .)
    WHILE           reduce using rule 62 (for_action3 -> .)
    DRAW            reduce using rule 62 (for_action3 -> .)
    SIZE            reduce using rule 62 (for_action3 -> .)
    HEAD            reduce using rule 62 (for_action3 -> .)
    TAIL            reduce using rule 62 (for_action3 -> .)
    LAST            reduce using rule 62 (for_action3 -> .)
    SET_TITLE       reduce using rule 62 (for_action3 -> .)
    SET_DIMENSION   reduce using rule 62 (for_action3 -> .)
    SET_COLOR       reduce using rule 62 (for_action3 -> .)
    CREATE_OBJECT   reduce using rule 62 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 62 (for_action3 -> .)
    RIGHTKEY        reduce using rule 62 (for_action3 -> .)

    for_action3                    shift and go to state 311

state 311

    (59) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    DRAW            reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SIZE            reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    HEAD            reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    TAIL            reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    LAST            reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_TITLE       reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_DIMENSION   reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_COLOR       reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_OBJECT   reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 59 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EX in state 87 resolved as shift
WARNING: shift/reduce conflict for VAR in state 88 resolved as shift
WARNING: shift/reduce conflict for EX in state 104 resolved as shift
WARNING: shift/reduce conflict for VAR in state 150 resolved as shift
WARNING: shift/reduce conflict for EX in state 159 resolved as shift
WARNING: shift/reduce conflict for EX in state 160 resolved as shift
WARNING: shift/reduce conflict for EX in state 165 resolved as shift
WARNING: shift/reduce conflict for EX in state 166 resolved as shift
WARNING: shift/reduce conflict for EX in state 167 resolved as shift
WARNING: shift/reduce conflict for EX in state 168 resolved as shift
WARNING: shift/reduce conflict for EX in state 169 resolved as shift
WARNING: shift/reduce conflict for EX in state 189 resolved as shift
WARNING: shift/reduce conflict for EX in state 197 resolved as shift
WARNING: shift/reduce conflict for EX in state 198 resolved as shift
WARNING: shift/reduce conflict for EX in state 230 resolved as shift
WARNING: shift/reduce conflict for EX in state 232 resolved as shift
WARNING: shift/reduce conflict for EX in state 239 resolved as shift
WARNING: shift/reduce conflict for EX in state 240 resolved as shift
WARNING: shift/reduce conflict for EX in state 241 resolved as shift
WARNING: shift/reduce conflict for RIGHTPAR in state 241 resolved as shift
WARNING: shift/reduce conflict for EX in state 244 resolved as shift
WARNING: shift/reduce conflict for EX in state 247 resolved as shift
WARNING: shift/reduce conflict for EX in state 248 resolved as shift
WARNING: shift/reduce conflict for EX in state 253 resolved as shift
WARNING: shift/reduce conflict for EX in state 271 resolved as shift
WARNING: shift/reduce conflict for EX in state 278 resolved as shift
WARNING: shift/reduce conflict for EX in state 281 resolved as shift
WARNING: shift/reduce conflict for EX in state 284 resolved as shift
WARNING: shift/reduce conflict for EX in state 285 resolved as shift
WARNING: shift/reduce conflict for EX in state 292 resolved as shift
WARNING: reduce/reduce conflict in state 256 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 256
