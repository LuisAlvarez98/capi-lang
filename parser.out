Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    LIST
    OBJECT
    TOBJECT

Grammar

Rule 0     S' -> capi
Rule 1     capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 2     capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 3     capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 4     capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 5     capi_action1 -> <empty>
Rule 6     capi_action2 -> <empty>
Rule 7     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 8     start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 9     start_action1 -> <empty>
Rule 10    run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 11    run_action1 -> <empty>
Rule 12    main_cont -> <empty>
Rule 13    vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 14    vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 15    vars -> VAR recids COLON type SEMICOLON vars
Rule 16    vars -> VAR recids COLON type SEMICOLON
Rule 17    recids -> ID
Rule 18    recids -> ID COMMA recids
Rule 19    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 20    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 21    recstatement -> statement recstatement
Rule 22    recstatement -> statement
Rule 23    statement -> assign SEMICOLON
Rule 24    statement -> condition
Rule 25    statement -> vars
Rule 26    statement -> loop
Rule 27    statement -> write SEMICOLON
Rule 28    statement -> return SEMICOLON
Rule 29    statement -> functioncall SEMICOLON
Rule 30    statement -> nestedassign SEMICOLON
Rule 31    statement -> specialfunction SEMICOLON
Rule 32    specialfunction -> draw
Rule 33    specialfunction -> init
Rule 34    specialfunction -> size
Rule 35    specialfunction -> head
Rule 36    specialfunction -> find
Rule 37    specialfunction -> last
Rule 38    specialfunction -> set_fill
Rule 39    specialfunction -> set_title
Rule 40    specialfunction -> get_event
Rule 41    specialfunction -> update
Rule 42    specialfunction -> window_h
Rule 43    specialfunction -> window_w
Rule 44    specialfunction -> set_dimension
Rule 45    specialfunction -> create_text
Rule 46    specialfunction -> rand
Rule 47    specialfunction -> pow
Rule 48    specialfunction -> sqrt
Rule 49    specialfunction -> quit
Rule 50    quit -> QUIT LEFTPAR RIGHTPAR
Rule 51    pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
Rule 52    pow_action1 -> <empty>
Rule 53    sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
Rule 54    sqrt_action1 -> <empty>
Rule 55    draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 56    init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR
Rule 57    size -> ID DOT SIZE LEFTPAR RIGHTPAR
Rule 58    head -> ID DOT HEAD LEFTPAR RIGHTPAR
Rule 59    window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
Rule 60    window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
Rule 61    rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
Rule 62    find -> ID DOT FIND LEFTPAR expression RIGHTPAR
Rule 63    last -> ID DOT LAST LEFTPAR RIGHTPAR
Rule 64    set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
Rule 65    set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 66    set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 67    update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
Rule 68    get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
Rule 69    create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 70    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 71    assign -> assign_list EQUAL assign_action2 expression
Rule 72    assign_action1 -> <empty>
Rule 73    assign_action2 -> <empty>
Rule 74    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 75    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 76    condition_action1 -> <empty>
Rule 77    condition_action2 -> <empty>
Rule 78    condition_action3 -> <empty>
Rule 79    loop -> for
Rule 80    loop -> while
Rule 81    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 82    for_action1 -> <empty>
Rule 83    for_action2 -> <empty>
Rule 84    for_action3 -> <empty>
Rule 85    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 86    while_action1 -> <empty>
Rule 87    while_action2 -> <empty>
Rule 88    while_action3 -> <empty>
Rule 89    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 90    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 91    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 92    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 93    startscope_action -> <empty>
Rule 94    function_action1 -> <empty>
Rule 95    function_action2 -> <empty>
Rule 96    function_action3 -> <empty>
Rule 97    recparams -> ID COLON type
Rule 98    recparams -> ID COLON type COMMA recparams
Rule 99    recfunc -> function recfunc
Rule 100   recfunc -> function
Rule 101   write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 102   recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 103   recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 104   recwrite -> expression action_recwrite_exp
Rule 105   recwrite -> STRING action_recwrite_cte
Rule 106   action_recwrite_exp -> <empty>
Rule 107   action_recwrite_cte -> <empty>
Rule 108   return -> RETURN expression
Rule 109   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
Rule 110   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
Rule 111   function_call_action1 -> <empty>
Rule 112   function_call_action2 -> <empty>
Rule 113   recfuncexp -> expression COMMA recfuncexp
Rule 114   recfuncexp -> expression recfunc_action1
Rule 115   recfunc_action1 -> <empty>
Rule 116   expression -> exp RELOP relop_action1 exp relop_action2
Rule 117   expression -> exp LOGIC logic_action1 exp logic_action2
Rule 118   expression -> exp
Rule 119   relop_action1 -> <empty>
Rule 120   relop_action2 -> <empty>
Rule 121   logic_action1 -> <empty>
Rule 122   logic_action2 -> <empty>
Rule 123   exp -> term exp_action recexp
Rule 124   exp -> term exp_action
Rule 125   exp_action -> <empty>
Rule 126   recexp -> EX add_operator exp
Rule 127   term -> factor term_action recterm
Rule 128   term -> factor term_action
Rule 129   term_action -> <empty>
Rule 130   recterm -> TERMS add_operator term
Rule 131   add_operator -> <empty>
Rule 132   factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2
Rule 133   factor -> EX cte
Rule 134   factor -> cte
Rule 135   factor_action1 -> <empty>
Rule 136   factor_action2 -> <empty>
Rule 137   type -> primitivetype
Rule 138   type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
Rule 139   action_list1 -> <empty>
Rule 140   primitivetype -> TINT
Rule 141   primitivetype -> TFLOAT
Rule 142   primitivetype -> TSTRING
Rule 143   primitivetype -> TBOOL
Rule 144   assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 145   listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 146   list_action1 -> <empty>
Rule 147   list_action_3 -> <empty>
Rule 148   nestedvalue -> ID DOT ID
Rule 149   nestedassign -> nestedvalue EQUAL expression
Rule 150   cte -> <empty>
Rule 151   cte -> id
Rule 152   cte -> int
Rule 153   cte -> float
Rule 154   cte -> bool
Rule 155   cte -> string
Rule 156   cte -> nestedvalue
Rule 157   cte -> functioncall
Rule 158   cte -> listaccess
Rule 159   cte -> specialfunction
Rule 160   id -> ID
Rule 161   string -> STRING
Rule 162   int -> INT
Rule 163   float -> FLOAT
Rule 164   bool -> TRUE
Rule 165   bool -> FALSE

Terminals, with rules where they appear

BAR                  : 138 138
CAPIGAME             : 55 56 59 60 61 64 65 66 67 68
COLON                : 1 2 3 4 7 13 14 15 16 19 20 97 98
COMMA                : 18 51 55 55 55 55 61 65 65 66 69 69 69 98 102 103 113
COMMENT              : 
CREATE_TEXT          : 69
DOT                  : 55 56 57 58 59 60 61 62 63 64 65 66 67 68 148
DRAW                 : 55
ELSE                 : 75
EQUAL                : 13 14 70 71 149
EX                   : 126 133
FALSE                : 165
FIND                 : 62
FLOAT                : 163
FOR                  : 81
FUNC                 : 8 10 89 90 91 92
GET_EVENT            : 68
GLOBAL               : 7
HEAD                 : 58
ID                   : 17 18 57 58 62 63 70 89 90 91 92 97 98 109 110 144 145 148 148 160
IF                   : 74 75
INIT                 : 56
INT                  : 162
LAST                 : 63
LEFTBRACKET          : 138 144 145
LEFTKEY              : 1 2 3 4 7 19 20
LEFTPAR              : 8 10 50 51 53 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 74 75 81 85 89 90 91 92 101 109 110 132
LIST                 : 
LOGIC                : 117
MAIN                 : 1 2 3 4
OBJECT               : 
POW                  : 51
PRINT                : 101
QUIT                 : 50
RAND                 : 61
RELOP                : 116
RETURN               : 108
RIGHTBRACKET         : 138 144 145
RIGHTKEY             : 1 2 3 4 7 19 20
RIGHTPAR             : 8 10 50 51 53 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 74 75 81 85 89 90 91 92 101 109 110 132
RUN                  : 10
SEMICOLON            : 1 2 3 4 7 13 14 15 16 19 20 23 27 28 29 30 31 81 81 81
SET_DIMENSION        : 66
SET_FILL             : 65
SET_TITLE            : 64
SIZE                 : 57
SQRT                 : 53
START                : 8
STRING               : 103 105 161
TBOOL                : 143
TERMS                : 130
TFLOAT               : 141
TINT                 : 140
TLIST                : 138
TOBJECT              : 
TRUE                 : 164
TSTRING              : 142
UPDATE               : 67
VAR                  : 13 14 15 16
VOID                 : 8 10 91 92
WHILE                : 85
WINDOW_H             : 59
WINDOW_W             : 60
error                : 

Nonterminals, with rules where they appear

action_list1         : 138
action_recwrite_cte  : 103 105
action_recwrite_exp  : 102 104
add_operator         : 126 130
assign               : 23 81 81
assign_action1       : 70
assign_action2       : 70 71
assign_list          : 71
block                : 8 10 74 75 75 81 85 89 90 91 92
bool                 : 154
capi                 : 0
capi_action1         : 1 2 3 4
capi_action2         : 1 2 3 4
condition            : 24
condition_action1    : 74 75
condition_action2    : 74 75
condition_action3    : 75
create_text          : 45
cte                  : 133 134 138
draw                 : 32
exp                  : 116 116 117 117 118 126
exp_action           : 123 124
expression           : 13 14 51 51 53 55 55 55 55 55 61 61 62 64 65 65 65 66 66 69 69 69 69 70 71 74 75 81 85 102 104 108 113 114 132 144 145 149
factor               : 127 128
factor_action1       : 132
factor_action2       : 132
find                 : 36
float                : 153
for                  : 79
for_action1          : 81
for_action2          : 81
for_action3          : 81
function             : 99 100
function_action1     : 89 91
function_action2     : 89 91
function_action3     : 89 90 91 92
function_call_action1 : 109 110
function_call_action2 : 109 110
functioncall         : 29 157
get_event            : 40
global               : 1 3
head                 : 35
id                   : 151
init                 : 33
int                  : 152
last                 : 37
list_action1         : 144 145
list_action_3        : 144 145
listaccess           : 158
logic_action1        : 117
logic_action2        : 117
loop                 : 26
main_cont            : 8 10
nestedassign         : 30
nestedvalue          : 149 156
pow                  : 47
pow_action1          : 51
primitivetype        : 137 138
quit                 : 49
rand                 : 46
recexp               : 123
recfunc              : 1 2 99
recfunc_action1      : 114
recfuncexp           : 109 113
recids               : 13 14 15 16 18
recparams            : 89 91 98
recstatement         : 19 21
recterm              : 127
recwrite             : 101 102 103
relop_action1        : 116
relop_action2        : 116
return               : 28
run                  : 1 2 3 4
run_action1          : 10
set_dimension        : 44
set_fill             : 38
set_title            : 39
size                 : 34
specialfunction      : 31 159
sqrt                 : 48
sqrt_action1         : 53
start                : 1 2 3 4
start_action1        : 8
startscope_action    : 8 10 81 85 89 90 91 92
statement            : 21 22
string               : 155
term                 : 123 124 130
term_action          : 127 128
type                 : 13 14 15 16 89 90 97 98
update               : 41
vars                 : 7 13 15 25
while                : 80
while_action1        : 85
while_action2        : 85
while_action3        : 85
window_h             : 42
window_w             : 43
write                : 27

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> . capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> . capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> . capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (5) capi_action1 -> .

    MAIN            reduce using rule 5 (capi_action1 -> .)
    GLOBAL          reduce using rule 5 (capi_action1 -> .)
    VOID            reduce using rule 5 (capi_action1 -> .)
    TLIST           reduce using rule 5 (capi_action1 -> .)
    TINT            reduce using rule 5 (capi_action1 -> .)
    TFLOAT          reduce using rule 5 (capi_action1 -> .)
    TSTRING         reduce using rule 5 (capi_action1 -> .)
    TBOOL           reduce using rule 5 (capi_action1 -> .)

    capi                           shift and go to state 1
    capi_action1                   shift and go to state 2

state 1

    (0) S' -> capi .



state 2

    (1) capi -> capi_action1 . global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> capi_action1 . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 . global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> capi_action1 . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (7) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (99) recfunc -> . function recfunc
    (100) recfunc -> . function
    (89) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (91) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (137) type -> . primitivetype
    (138) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (140) primitivetype -> . TINT
    (141) primitivetype -> . TFLOAT
    (142) primitivetype -> . TSTRING
    (143) primitivetype -> . TBOOL

    MAIN            shift and go to state 5
    GLOBAL          shift and go to state 6
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    global                         shift and go to state 3
    recfunc                        shift and go to state 4
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 3

    (1) capi -> capi_action1 global . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 global . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (99) recfunc -> . function recfunc
    (100) recfunc -> . function
    (89) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (91) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (137) type -> . primitivetype
    (138) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (140) primitivetype -> . TINT
    (141) primitivetype -> . TFLOAT
    (142) primitivetype -> . TSTRING
    (143) primitivetype -> . TBOOL

    MAIN            shift and go to state 17
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    recfunc                        shift and go to state 16
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 4

    (2) capi -> capi_action1 recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 18


state 5

    (4) capi -> capi_action1 MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 19


state 6

    (7) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 7

    (99) recfunc -> function . recfunc
    (100) recfunc -> function .
    (99) recfunc -> . function recfunc
    (100) recfunc -> . function
    (89) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (91) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (137) type -> . primitivetype
    (138) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (140) primitivetype -> . TINT
    (141) primitivetype -> . TFLOAT
    (142) primitivetype -> . TSTRING
    (143) primitivetype -> . TBOOL

    MAIN            reduce using rule 100 (recfunc -> function .)
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    function                       shift and go to state 7
    recfunc                        shift and go to state 21
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 8

    (89) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 22


state 9

    (91) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 10

    (137) type -> primitivetype .

    FUNC            reduce using rule 137 (type -> primitivetype .)
    EQUAL           reduce using rule 137 (type -> primitivetype .)
    SEMICOLON       reduce using rule 137 (type -> primitivetype .)
    COMMA           reduce using rule 137 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 137 (type -> primitivetype .)


state 11

    (138) type -> TLIST . BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 24


state 12

    (140) primitivetype -> TINT .

    FUNC            reduce using rule 140 (primitivetype -> TINT .)
    BAR             reduce using rule 140 (primitivetype -> TINT .)
    EQUAL           reduce using rule 140 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 140 (primitivetype -> TINT .)
    COMMA           reduce using rule 140 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 140 (primitivetype -> TINT .)


state 13

    (141) primitivetype -> TFLOAT .

    FUNC            reduce using rule 141 (primitivetype -> TFLOAT .)
    BAR             reduce using rule 141 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 141 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 141 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 141 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 141 (primitivetype -> TFLOAT .)


state 14

    (142) primitivetype -> TSTRING .

    FUNC            reduce using rule 142 (primitivetype -> TSTRING .)
    BAR             reduce using rule 142 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 142 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 142 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 142 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 142 (primitivetype -> TSTRING .)


state 15

    (143) primitivetype -> TBOOL .

    FUNC            reduce using rule 143 (primitivetype -> TBOOL .)
    BAR             reduce using rule 143 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 143 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 143 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 143 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 143 (primitivetype -> TBOOL .)


state 16

    (1) capi -> capi_action1 global recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 25


state 17

    (3) capi -> capi_action1 global MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 26


state 18

    (2) capi -> capi_action1 recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (4) capi -> capi_action1 MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 28


state 20

    (7) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (99) recfunc -> function recfunc .

    MAIN            reduce using rule 99 (recfunc -> function recfunc .)


state 22

    (89) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 30


state 23

    (91) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (138) type -> TLIST BAR . primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (140) primitivetype -> . TINT
    (141) primitivetype -> . TFLOAT
    (142) primitivetype -> . TSTRING
    (143) primitivetype -> . TBOOL

    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    primitivetype                  shift and go to state 32

state 25

    (1) capi -> capi_action1 global recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 33


state 26

    (3) capi -> capi_action1 global MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 34


state 27

    (2) capi -> capi_action1 recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (4) capi -> capi_action1 MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 36

state 29

    (7) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 39

    vars                           shift and go to state 38

state 30

    (89) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (93) startscope_action -> .

    LEFTPAR         reduce using rule 93 (startscope_action -> .)

    startscope_action              shift and go to state 40

state 31

    (91) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (93) startscope_action -> .

    LEFTPAR         reduce using rule 93 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (138) type -> TLIST BAR primitivetype . BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 42


state 33

    (1) capi -> capi_action1 global recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 43


state 34

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 44

state 35

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 45

state 36

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 46

state 37

    (8) start -> VOID . FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 47


state 38

    (7) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 48


state 39

    (13) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR . recids COLON type SEMICOLON vars
    (16) vars -> VAR . recids COLON type SEMICOLON
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 50

    recids                         shift and go to state 49

state 40

    (89) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 51


state 41

    (91) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 42

    (138) type -> TLIST BAR primitivetype BAR . LEFTBRACKET cte RIGHTBRACKET action_list1

    LEFTBRACKET     shift and go to state 53


state 43

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 54

state 44

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 55

state 45

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 56

state 46

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 57

state 47

    (8) start -> VOID FUNC . start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
    (9) start_action1 -> .

    START           reduce using rule 9 (start_action1 -> .)

    start_action1                  shift and go to state 59

state 48

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 60


state 49

    (13) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (15) vars -> VAR recids . COLON type SEMICOLON vars
    (16) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 61


state 50

    (17) recids -> ID .
    (18) recids -> ID . COMMA recids

    COLON           reduce using rule 17 (recids -> ID .)
    COMMA           shift and go to state 62


state 51

    (89) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (90) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (97) recparams -> . ID COLON type
    (98) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 65
    ID              shift and go to state 63

    recparams                      shift and go to state 64

state 52

    (91) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (92) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (97) recparams -> . ID COLON type
    (98) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 67
    ID              shift and go to state 63

    recparams                      shift and go to state 66

state 53

    (138) type -> TLIST BAR primitivetype BAR LEFTBRACKET . cte RIGHTBRACKET action_list1
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

    RIGHTBRACKET    reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

    cte                            shift and go to state 68
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 54

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 107

state 55

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 108

state 56

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 109

state 57

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 110


state 58

    (10) run -> VOID . FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 111


state 59

    (8) start -> VOID FUNC start_action1 . START startscope_action LEFTPAR RIGHTPAR main_cont block

    START           shift and go to state 112


state 60

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 61

    (13) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON . type SEMICOLON vars
    (16) vars -> VAR recids COLON . type SEMICOLON
    (137) type -> . primitivetype
    (138) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (140) primitivetype -> . TINT
    (141) primitivetype -> . TFLOAT
    (142) primitivetype -> . TSTRING
    (143) primitivetype -> . TBOOL

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    type                           shift and go to state 113
    primitivetype                  shift and go to state 10

state 62

    (18) recids -> ID COMMA . recids
    (17) recids -> . ID
    (18) recids -> . ID COMMA recids

    ID              shift and go to state 50

    recids                         shift and go to state 114

state 63

    (97) recparams -> ID . COLON type
    (98) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 115


state 64

    (89) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (94) function_action1 -> .

    RIGHTPAR        reduce using rule 94 (function_action1 -> .)

    function_action1               shift and go to state 116

state 65

    (90) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (96) function_action3 -> .

    COLON           reduce using rule 96 (function_action3 -> .)

    function_action3               shift and go to state 117

state 66

    (91) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (94) function_action1 -> .

    RIGHTPAR        reduce using rule 94 (function_action1 -> .)

    function_action1               shift and go to state 118

state 67

    (92) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (96) function_action3 -> .

    COLON           reduce using rule 96 (function_action3 -> .)

    function_action3               shift and go to state 119

state 68

    (138) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte . RIGHTBRACKET action_list1

    RIGHTBRACKET    shift and go to state 120


state 69

    (151) cte -> id .

    RIGHTBRACKET    reduce using rule 151 (cte -> id .)
    TERMS           reduce using rule 151 (cte -> id .)
    EX              reduce using rule 151 (cte -> id .)
    RELOP           reduce using rule 151 (cte -> id .)
    LOGIC           reduce using rule 151 (cte -> id .)
    COMMA           reduce using rule 151 (cte -> id .)
    SEMICOLON       reduce using rule 151 (cte -> id .)
    RIGHTPAR        reduce using rule 151 (cte -> id .)


state 70

    (152) cte -> int .

    RIGHTBRACKET    reduce using rule 152 (cte -> int .)
    TERMS           reduce using rule 152 (cte -> int .)
    EX              reduce using rule 152 (cte -> int .)
    RELOP           reduce using rule 152 (cte -> int .)
    LOGIC           reduce using rule 152 (cte -> int .)
    COMMA           reduce using rule 152 (cte -> int .)
    SEMICOLON       reduce using rule 152 (cte -> int .)
    RIGHTPAR        reduce using rule 152 (cte -> int .)


state 71

    (153) cte -> float .

    RIGHTBRACKET    reduce using rule 153 (cte -> float .)
    TERMS           reduce using rule 153 (cte -> float .)
    EX              reduce using rule 153 (cte -> float .)
    RELOP           reduce using rule 153 (cte -> float .)
    LOGIC           reduce using rule 153 (cte -> float .)
    COMMA           reduce using rule 153 (cte -> float .)
    SEMICOLON       reduce using rule 153 (cte -> float .)
    RIGHTPAR        reduce using rule 153 (cte -> float .)


state 72

    (154) cte -> bool .

    RIGHTBRACKET    reduce using rule 154 (cte -> bool .)
    TERMS           reduce using rule 154 (cte -> bool .)
    EX              reduce using rule 154 (cte -> bool .)
    RELOP           reduce using rule 154 (cte -> bool .)
    LOGIC           reduce using rule 154 (cte -> bool .)
    COMMA           reduce using rule 154 (cte -> bool .)
    SEMICOLON       reduce using rule 154 (cte -> bool .)
    RIGHTPAR        reduce using rule 154 (cte -> bool .)


state 73

    (155) cte -> string .

    RIGHTBRACKET    reduce using rule 155 (cte -> string .)
    TERMS           reduce using rule 155 (cte -> string .)
    EX              reduce using rule 155 (cte -> string .)
    RELOP           reduce using rule 155 (cte -> string .)
    LOGIC           reduce using rule 155 (cte -> string .)
    COMMA           reduce using rule 155 (cte -> string .)
    SEMICOLON       reduce using rule 155 (cte -> string .)
    RIGHTPAR        reduce using rule 155 (cte -> string .)


state 74

    (156) cte -> nestedvalue .

    RIGHTBRACKET    reduce using rule 156 (cte -> nestedvalue .)
    TERMS           reduce using rule 156 (cte -> nestedvalue .)
    EX              reduce using rule 156 (cte -> nestedvalue .)
    RELOP           reduce using rule 156 (cte -> nestedvalue .)
    LOGIC           reduce using rule 156 (cte -> nestedvalue .)
    COMMA           reduce using rule 156 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 156 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 156 (cte -> nestedvalue .)


state 75

    (157) cte -> functioncall .

    RIGHTBRACKET    reduce using rule 157 (cte -> functioncall .)
    TERMS           reduce using rule 157 (cte -> functioncall .)
    EX              reduce using rule 157 (cte -> functioncall .)
    RELOP           reduce using rule 157 (cte -> functioncall .)
    LOGIC           reduce using rule 157 (cte -> functioncall .)
    COMMA           reduce using rule 157 (cte -> functioncall .)
    SEMICOLON       reduce using rule 157 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 157 (cte -> functioncall .)


state 76

    (158) cte -> listaccess .

    RIGHTBRACKET    reduce using rule 158 (cte -> listaccess .)
    TERMS           reduce using rule 158 (cte -> listaccess .)
    EX              reduce using rule 158 (cte -> listaccess .)
    RELOP           reduce using rule 158 (cte -> listaccess .)
    LOGIC           reduce using rule 158 (cte -> listaccess .)
    COMMA           reduce using rule 158 (cte -> listaccess .)
    SEMICOLON       reduce using rule 158 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 158 (cte -> listaccess .)


state 77

    (159) cte -> specialfunction .

    RIGHTBRACKET    reduce using rule 159 (cte -> specialfunction .)
    TERMS           reduce using rule 159 (cte -> specialfunction .)
    EX              reduce using rule 159 (cte -> specialfunction .)
    RELOP           reduce using rule 159 (cte -> specialfunction .)
    LOGIC           reduce using rule 159 (cte -> specialfunction .)
    COMMA           reduce using rule 159 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 159 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 159 (cte -> specialfunction .)


state 78

    (160) id -> ID .
    (148) nestedvalue -> ID . DOT ID
    (109) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (57) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> ID . DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> ID . DOT LAST LEFTPAR RIGHTPAR
    (111) function_call_action1 -> .
    (146) list_action1 -> .

    RIGHTBRACKET    reduce using rule 160 (id -> ID .)
    TERMS           reduce using rule 160 (id -> ID .)
    EX              reduce using rule 160 (id -> ID .)
    RELOP           reduce using rule 160 (id -> ID .)
    LOGIC           reduce using rule 160 (id -> ID .)
    COMMA           reduce using rule 160 (id -> ID .)
    SEMICOLON       reduce using rule 160 (id -> ID .)
    RIGHTPAR        reduce using rule 160 (id -> ID .)
    DOT             shift and go to state 121
    LEFTPAR         reduce using rule 111 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 146 (list_action1 -> .)

    function_call_action1          shift and go to state 122
    list_action1                   shift and go to state 123

state 79

    (162) int -> INT .

    RIGHTBRACKET    reduce using rule 162 (int -> INT .)
    TERMS           reduce using rule 162 (int -> INT .)
    EX              reduce using rule 162 (int -> INT .)
    RELOP           reduce using rule 162 (int -> INT .)
    LOGIC           reduce using rule 162 (int -> INT .)
    COMMA           reduce using rule 162 (int -> INT .)
    SEMICOLON       reduce using rule 162 (int -> INT .)
    RIGHTPAR        reduce using rule 162 (int -> INT .)


state 80

    (163) float -> FLOAT .

    RIGHTBRACKET    reduce using rule 163 (float -> FLOAT .)
    TERMS           reduce using rule 163 (float -> FLOAT .)
    EX              reduce using rule 163 (float -> FLOAT .)
    RELOP           reduce using rule 163 (float -> FLOAT .)
    LOGIC           reduce using rule 163 (float -> FLOAT .)
    COMMA           reduce using rule 163 (float -> FLOAT .)
    SEMICOLON       reduce using rule 163 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 163 (float -> FLOAT .)


state 81

    (164) bool -> TRUE .

    RIGHTBRACKET    reduce using rule 164 (bool -> TRUE .)
    TERMS           reduce using rule 164 (bool -> TRUE .)
    EX              reduce using rule 164 (bool -> TRUE .)
    RELOP           reduce using rule 164 (bool -> TRUE .)
    LOGIC           reduce using rule 164 (bool -> TRUE .)
    COMMA           reduce using rule 164 (bool -> TRUE .)
    SEMICOLON       reduce using rule 164 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 164 (bool -> TRUE .)


state 82

    (165) bool -> FALSE .

    RIGHTBRACKET    reduce using rule 165 (bool -> FALSE .)
    TERMS           reduce using rule 165 (bool -> FALSE .)
    EX              reduce using rule 165 (bool -> FALSE .)
    RELOP           reduce using rule 165 (bool -> FALSE .)
    LOGIC           reduce using rule 165 (bool -> FALSE .)
    COMMA           reduce using rule 165 (bool -> FALSE .)
    SEMICOLON       reduce using rule 165 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 165 (bool -> FALSE .)


state 83

    (161) string -> STRING .

    RIGHTBRACKET    reduce using rule 161 (string -> STRING .)
    TERMS           reduce using rule 161 (string -> STRING .)
    EX              reduce using rule 161 (string -> STRING .)
    RELOP           reduce using rule 161 (string -> STRING .)
    LOGIC           reduce using rule 161 (string -> STRING .)
    COMMA           reduce using rule 161 (string -> STRING .)
    SEMICOLON       reduce using rule 161 (string -> STRING .)
    RIGHTPAR        reduce using rule 161 (string -> STRING .)


state 84

    (32) specialfunction -> draw .

    RIGHTBRACKET    reduce using rule 32 (specialfunction -> draw .)
    TERMS           reduce using rule 32 (specialfunction -> draw .)
    EX              reduce using rule 32 (specialfunction -> draw .)
    RELOP           reduce using rule 32 (specialfunction -> draw .)
    LOGIC           reduce using rule 32 (specialfunction -> draw .)
    COMMA           reduce using rule 32 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 32 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> draw .)


state 85

    (33) specialfunction -> init .

    RIGHTBRACKET    reduce using rule 33 (specialfunction -> init .)
    TERMS           reduce using rule 33 (specialfunction -> init .)
    EX              reduce using rule 33 (specialfunction -> init .)
    RELOP           reduce using rule 33 (specialfunction -> init .)
    LOGIC           reduce using rule 33 (specialfunction -> init .)
    COMMA           reduce using rule 33 (specialfunction -> init .)
    SEMICOLON       reduce using rule 33 (specialfunction -> init .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> init .)


state 86

    (34) specialfunction -> size .

    RIGHTBRACKET    reduce using rule 34 (specialfunction -> size .)
    TERMS           reduce using rule 34 (specialfunction -> size .)
    EX              reduce using rule 34 (specialfunction -> size .)
    RELOP           reduce using rule 34 (specialfunction -> size .)
    LOGIC           reduce using rule 34 (specialfunction -> size .)
    COMMA           reduce using rule 34 (specialfunction -> size .)
    SEMICOLON       reduce using rule 34 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> size .)


state 87

    (35) specialfunction -> head .

    RIGHTBRACKET    reduce using rule 35 (specialfunction -> head .)
    TERMS           reduce using rule 35 (specialfunction -> head .)
    EX              reduce using rule 35 (specialfunction -> head .)
    RELOP           reduce using rule 35 (specialfunction -> head .)
    LOGIC           reduce using rule 35 (specialfunction -> head .)
    COMMA           reduce using rule 35 (specialfunction -> head .)
    SEMICOLON       reduce using rule 35 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> head .)


state 88

    (36) specialfunction -> find .

    RIGHTBRACKET    reduce using rule 36 (specialfunction -> find .)
    TERMS           reduce using rule 36 (specialfunction -> find .)
    EX              reduce using rule 36 (specialfunction -> find .)
    RELOP           reduce using rule 36 (specialfunction -> find .)
    LOGIC           reduce using rule 36 (specialfunction -> find .)
    COMMA           reduce using rule 36 (specialfunction -> find .)
    SEMICOLON       reduce using rule 36 (specialfunction -> find .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> find .)


state 89

    (37) specialfunction -> last .

    RIGHTBRACKET    reduce using rule 37 (specialfunction -> last .)
    TERMS           reduce using rule 37 (specialfunction -> last .)
    EX              reduce using rule 37 (specialfunction -> last .)
    RELOP           reduce using rule 37 (specialfunction -> last .)
    LOGIC           reduce using rule 37 (specialfunction -> last .)
    COMMA           reduce using rule 37 (specialfunction -> last .)
    SEMICOLON       reduce using rule 37 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 37 (specialfunction -> last .)


state 90

    (38) specialfunction -> set_fill .

    RIGHTBRACKET    reduce using rule 38 (specialfunction -> set_fill .)
    TERMS           reduce using rule 38 (specialfunction -> set_fill .)
    EX              reduce using rule 38 (specialfunction -> set_fill .)
    RELOP           reduce using rule 38 (specialfunction -> set_fill .)
    LOGIC           reduce using rule 38 (specialfunction -> set_fill .)
    COMMA           reduce using rule 38 (specialfunction -> set_fill .)
    SEMICOLON       reduce using rule 38 (specialfunction -> set_fill .)
    RIGHTPAR        reduce using rule 38 (specialfunction -> set_fill .)


state 91

    (39) specialfunction -> set_title .

    RIGHTBRACKET    reduce using rule 39 (specialfunction -> set_title .)
    TERMS           reduce using rule 39 (specialfunction -> set_title .)
    EX              reduce using rule 39 (specialfunction -> set_title .)
    RELOP           reduce using rule 39 (specialfunction -> set_title .)
    LOGIC           reduce using rule 39 (specialfunction -> set_title .)
    COMMA           reduce using rule 39 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 39 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 39 (specialfunction -> set_title .)


state 92

    (40) specialfunction -> get_event .

    RIGHTBRACKET    reduce using rule 40 (specialfunction -> get_event .)
    TERMS           reduce using rule 40 (specialfunction -> get_event .)
    EX              reduce using rule 40 (specialfunction -> get_event .)
    RELOP           reduce using rule 40 (specialfunction -> get_event .)
    LOGIC           reduce using rule 40 (specialfunction -> get_event .)
    COMMA           reduce using rule 40 (specialfunction -> get_event .)
    SEMICOLON       reduce using rule 40 (specialfunction -> get_event .)
    RIGHTPAR        reduce using rule 40 (specialfunction -> get_event .)


state 93

    (41) specialfunction -> update .

    RIGHTBRACKET    reduce using rule 41 (specialfunction -> update .)
    TERMS           reduce using rule 41 (specialfunction -> update .)
    EX              reduce using rule 41 (specialfunction -> update .)
    RELOP           reduce using rule 41 (specialfunction -> update .)
    LOGIC           reduce using rule 41 (specialfunction -> update .)
    COMMA           reduce using rule 41 (specialfunction -> update .)
    SEMICOLON       reduce using rule 41 (specialfunction -> update .)
    RIGHTPAR        reduce using rule 41 (specialfunction -> update .)


state 94

    (42) specialfunction -> window_h .

    RIGHTBRACKET    reduce using rule 42 (specialfunction -> window_h .)
    TERMS           reduce using rule 42 (specialfunction -> window_h .)
    EX              reduce using rule 42 (specialfunction -> window_h .)
    RELOP           reduce using rule 42 (specialfunction -> window_h .)
    LOGIC           reduce using rule 42 (specialfunction -> window_h .)
    COMMA           reduce using rule 42 (specialfunction -> window_h .)
    SEMICOLON       reduce using rule 42 (specialfunction -> window_h .)
    RIGHTPAR        reduce using rule 42 (specialfunction -> window_h .)


state 95

    (43) specialfunction -> window_w .

    RIGHTBRACKET    reduce using rule 43 (specialfunction -> window_w .)
    TERMS           reduce using rule 43 (specialfunction -> window_w .)
    EX              reduce using rule 43 (specialfunction -> window_w .)
    RELOP           reduce using rule 43 (specialfunction -> window_w .)
    LOGIC           reduce using rule 43 (specialfunction -> window_w .)
    COMMA           reduce using rule 43 (specialfunction -> window_w .)
    SEMICOLON       reduce using rule 43 (specialfunction -> window_w .)
    RIGHTPAR        reduce using rule 43 (specialfunction -> window_w .)


state 96

    (44) specialfunction -> set_dimension .

    RIGHTBRACKET    reduce using rule 44 (specialfunction -> set_dimension .)
    TERMS           reduce using rule 44 (specialfunction -> set_dimension .)
    EX              reduce using rule 44 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 44 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 44 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 44 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 44 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 44 (specialfunction -> set_dimension .)


state 97

    (45) specialfunction -> create_text .

    RIGHTBRACKET    reduce using rule 45 (specialfunction -> create_text .)
    TERMS           reduce using rule 45 (specialfunction -> create_text .)
    EX              reduce using rule 45 (specialfunction -> create_text .)
    RELOP           reduce using rule 45 (specialfunction -> create_text .)
    LOGIC           reduce using rule 45 (specialfunction -> create_text .)
    COMMA           reduce using rule 45 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 45 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 45 (specialfunction -> create_text .)


state 98

    (46) specialfunction -> rand .

    RIGHTBRACKET    reduce using rule 46 (specialfunction -> rand .)
    TERMS           reduce using rule 46 (specialfunction -> rand .)
    EX              reduce using rule 46 (specialfunction -> rand .)
    RELOP           reduce using rule 46 (specialfunction -> rand .)
    LOGIC           reduce using rule 46 (specialfunction -> rand .)
    COMMA           reduce using rule 46 (specialfunction -> rand .)
    SEMICOLON       reduce using rule 46 (specialfunction -> rand .)
    RIGHTPAR        reduce using rule 46 (specialfunction -> rand .)


state 99

    (47) specialfunction -> pow .

    RIGHTBRACKET    reduce using rule 47 (specialfunction -> pow .)
    TERMS           reduce using rule 47 (specialfunction -> pow .)
    EX              reduce using rule 47 (specialfunction -> pow .)
    RELOP           reduce using rule 47 (specialfunction -> pow .)
    LOGIC           reduce using rule 47 (specialfunction -> pow .)
    COMMA           reduce using rule 47 (specialfunction -> pow .)
    SEMICOLON       reduce using rule 47 (specialfunction -> pow .)
    RIGHTPAR        reduce using rule 47 (specialfunction -> pow .)


state 100

    (48) specialfunction -> sqrt .

    RIGHTBRACKET    reduce using rule 48 (specialfunction -> sqrt .)
    TERMS           reduce using rule 48 (specialfunction -> sqrt .)
    EX              reduce using rule 48 (specialfunction -> sqrt .)
    RELOP           reduce using rule 48 (specialfunction -> sqrt .)
    LOGIC           reduce using rule 48 (specialfunction -> sqrt .)
    COMMA           reduce using rule 48 (specialfunction -> sqrt .)
    SEMICOLON       reduce using rule 48 (specialfunction -> sqrt .)
    RIGHTPAR        reduce using rule 48 (specialfunction -> sqrt .)


state 101

    (49) specialfunction -> quit .

    RIGHTBRACKET    reduce using rule 49 (specialfunction -> quit .)
    TERMS           reduce using rule 49 (specialfunction -> quit .)
    EX              reduce using rule 49 (specialfunction -> quit .)
    RELOP           reduce using rule 49 (specialfunction -> quit .)
    LOGIC           reduce using rule 49 (specialfunction -> quit .)
    COMMA           reduce using rule 49 (specialfunction -> quit .)
    SEMICOLON       reduce using rule 49 (specialfunction -> quit .)
    RIGHTPAR        reduce using rule 49 (specialfunction -> quit .)


state 102

    (55) draw -> CAPIGAME . DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> CAPIGAME . DOT INIT LEFTPAR RIGHTPAR
    (65) set_fill -> CAPIGAME . DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> CAPIGAME . DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> CAPIGAME . DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> CAPIGAME . DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> CAPIGAME . DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> CAPIGAME . DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> CAPIGAME . DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) rand -> CAPIGAME . DOT RAND LEFTPAR expression COMMA expression RIGHTPAR

    DOT             shift and go to state 124


state 103

    (69) create_text -> CREATE_TEXT . LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 125


state 104

    (51) pow -> POW . pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (52) pow_action1 -> .

    LEFTPAR         reduce using rule 52 (pow_action1 -> .)

    pow_action1                    shift and go to state 126

state 105

    (53) sqrt -> SQRT . sqrt_action1 LEFTPAR expression RIGHTPAR
    (54) sqrt_action1 -> .

    LEFTPAR         reduce using rule 54 (sqrt_action1 -> .)

    sqrt_action1                   shift and go to state 127

state 106

    (50) quit -> QUIT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 128


state 107

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 129

state 108

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 130


state 109

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 131


state 110

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 132


state 111

    (10) run -> VOID FUNC . run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
    (11) run_action1 -> .

    RUN             reduce using rule 11 (run_action1 -> .)

    run_action1                    shift and go to state 133

state 112

    (8) start -> VOID FUNC start_action1 START . startscope_action LEFTPAR RIGHTPAR main_cont block
    (93) startscope_action -> .

    LEFTPAR         reduce using rule 93 (startscope_action -> .)

    startscope_action              shift and go to state 134

state 113

    (13) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (14) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (15) vars -> VAR recids COLON type . SEMICOLON vars
    (16) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 135
    SEMICOLON       shift and go to state 136


state 114

    (18) recids -> ID COMMA recids .

    COLON           reduce using rule 18 (recids -> ID COMMA recids .)


state 115

    (97) recparams -> ID COLON . type
    (98) recparams -> ID COLON . type COMMA recparams
    (137) type -> . primitivetype
    (138) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (140) primitivetype -> . TINT
    (141) primitivetype -> . TFLOAT
    (142) primitivetype -> . TSTRING
    (143) primitivetype -> . TBOOL

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    type                           shift and go to state 137
    primitivetype                  shift and go to state 10

state 116

    (89) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 138


state 117

    (90) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 139

state 118

    (91) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 141


state 119

    (92) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 142

state 120

    (138) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET . action_list1
    (139) action_list1 -> .

    FUNC            reduce using rule 139 (action_list1 -> .)
    EQUAL           reduce using rule 139 (action_list1 -> .)
    SEMICOLON       reduce using rule 139 (action_list1 -> .)
    COMMA           reduce using rule 139 (action_list1 -> .)
    RIGHTPAR        reduce using rule 139 (action_list1 -> .)

    action_list1                   shift and go to state 143

state 121

    (148) nestedvalue -> ID DOT . ID
    (57) size -> ID DOT . SIZE LEFTPAR RIGHTPAR
    (58) head -> ID DOT . HEAD LEFTPAR RIGHTPAR
    (62) find -> ID DOT . FIND LEFTPAR expression RIGHTPAR
    (63) last -> ID DOT . LAST LEFTPAR RIGHTPAR

    ID              shift and go to state 144
    SIZE            shift and go to state 145
    HEAD            shift and go to state 146
    FIND            shift and go to state 147
    LAST            shift and go to state 148


state 122

    (109) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 RIGHTPAR

    LEFTPAR         shift and go to state 149


state 123

    (145) listaccess -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 150


state 124

    (55) draw -> CAPIGAME DOT . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> CAPIGAME DOT . INIT LEFTPAR RIGHTPAR
    (65) set_fill -> CAPIGAME DOT . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> CAPIGAME DOT . SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> CAPIGAME DOT . GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> CAPIGAME DOT . UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> CAPIGAME DOT . WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> CAPIGAME DOT . WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> CAPIGAME DOT . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (61) rand -> CAPIGAME DOT . RAND LEFTPAR expression COMMA expression RIGHTPAR

    DRAW            shift and go to state 151
    INIT            shift and go to state 152
    SET_FILL        shift and go to state 153
    SET_TITLE       shift and go to state 154
    GET_EVENT       shift and go to state 155
    UPDATE          shift and go to state 156
    WINDOW_H        shift and go to state 157
    WINDOW_W        shift and go to state 158
    SET_DIMENSION   shift and go to state 159
    RAND            shift and go to state 160


state 125

    (69) create_text -> CREATE_TEXT LEFTPAR . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 161
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 126

    (51) pow -> POW pow_action1 . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 168


state 127

    (53) sqrt -> SQRT sqrt_action1 . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 169


state 128

    (50) quit -> QUIT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 170


state 129

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 171


state 130

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 172


state 131

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 173


state 132

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 133

    (10) run -> VOID FUNC run_action1 . RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    RUN             shift and go to state 174


state 134

    (8) start -> VOID FUNC start_action1 START startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 175


state 135

    (13) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 176
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 136

    (15) vars -> VAR recids COLON type SEMICOLON . vars
    (16) vars -> VAR recids COLON type SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CAPIGAME        reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    POW             reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    SQRT            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    QUIT            reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 16 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 177

state 137

    (97) recparams -> ID COLON type .
    (98) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 97 (recparams -> ID COLON type .)
    COMMA           shift and go to state 178


state 138

    (89) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (95) function_action2 -> .

    COLON           reduce using rule 95 (function_action2 -> .)

    function_action2               shift and go to state 179

state 139

    (90) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 90 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 90 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 90 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 90 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 90 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 90 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 90 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 140

    (19) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 180


state 141

    (91) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (95) function_action2 -> .

    COLON           reduce using rule 95 (function_action2 -> .)

    function_action2               shift and go to state 181

state 142

    (92) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 92 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 92 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 92 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 92 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 92 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 92 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 92 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 143

    (138) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .

    FUNC            reduce using rule 138 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    EQUAL           reduce using rule 138 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    SEMICOLON       reduce using rule 138 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    COMMA           reduce using rule 138 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    RIGHTPAR        reduce using rule 138 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)


state 144

    (148) nestedvalue -> ID DOT ID .

    RIGHTBRACKET    reduce using rule 148 (nestedvalue -> ID DOT ID .)
    TERMS           reduce using rule 148 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 148 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 148 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 148 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 148 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 148 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 148 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 148 (nestedvalue -> ID DOT ID .)


state 145

    (57) size -> ID DOT SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 182


state 146

    (58) head -> ID DOT HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 183


state 147

    (62) find -> ID DOT FIND . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 184


state 148

    (63) last -> ID DOT LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 185


state 149

    (109) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 RIGHTPAR
    (112) function_call_action2 -> .

    RIGHTPAR        reduce using rule 112 (function_call_action2 -> .)
    EX              reduce using rule 112 (function_call_action2 -> .)
    ID              reduce using rule 112 (function_call_action2 -> .)
    INT             reduce using rule 112 (function_call_action2 -> .)
    FLOAT           reduce using rule 112 (function_call_action2 -> .)
    TRUE            reduce using rule 112 (function_call_action2 -> .)
    FALSE           reduce using rule 112 (function_call_action2 -> .)
    STRING          reduce using rule 112 (function_call_action2 -> .)
    CAPIGAME        reduce using rule 112 (function_call_action2 -> .)
    CREATE_TEXT     reduce using rule 112 (function_call_action2 -> .)
    POW             reduce using rule 112 (function_call_action2 -> .)
    SQRT            reduce using rule 112 (function_call_action2 -> .)
    QUIT            reduce using rule 112 (function_call_action2 -> .)
    COMMA           reduce using rule 112 (function_call_action2 -> .)
    RELOP           reduce using rule 112 (function_call_action2 -> .)
    LOGIC           reduce using rule 112 (function_call_action2 -> .)
    TERMS           reduce using rule 112 (function_call_action2 -> .)
    LEFTPAR         reduce using rule 112 (function_call_action2 -> .)

    function_call_action2          shift and go to state 186

state 150

    (145) listaccess -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTBRACKET    reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 187
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 151

    (55) draw -> CAPIGAME DOT DRAW . LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 188


state 152

    (56) init -> CAPIGAME DOT INIT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 189


state 153

    (65) set_fill -> CAPIGAME DOT SET_FILL . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 190


state 154

    (64) set_title -> CAPIGAME DOT SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 191


state 155

    (68) get_event -> CAPIGAME DOT GET_EVENT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 192


state 156

    (67) update -> CAPIGAME DOT UPDATE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 193


state 157

    (59) window_h -> CAPIGAME DOT WINDOW_H . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 194


state 158

    (60) window_w -> CAPIGAME DOT WINDOW_W . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 195


state 159

    (66) set_dimension -> CAPIGAME DOT SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 196


state 160

    (61) rand -> CAPIGAME DOT RAND . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 197


state 161

    (69) create_text -> CREATE_TEXT LEFTPAR expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 198


state 162

    (116) expression -> exp . RELOP relop_action1 exp relop_action2
    (117) expression -> exp . LOGIC logic_action1 exp logic_action2
    (118) expression -> exp .

    RELOP           shift and go to state 199
    LOGIC           shift and go to state 200
    COMMA           reduce using rule 118 (expression -> exp .)
    SEMICOLON       reduce using rule 118 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 118 (expression -> exp .)
    RIGHTPAR        reduce using rule 118 (expression -> exp .)


state 163

    (123) exp -> term . exp_action recexp
    (124) exp -> term . exp_action
    (125) exp_action -> .

    EX              reduce using rule 125 (exp_action -> .)
    RELOP           reduce using rule 125 (exp_action -> .)
    LOGIC           reduce using rule 125 (exp_action -> .)
    COMMA           reduce using rule 125 (exp_action -> .)
    SEMICOLON       reduce using rule 125 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 125 (exp_action -> .)
    RIGHTPAR        reduce using rule 125 (exp_action -> .)

    exp_action                     shift and go to state 201

state 164

    (127) term -> factor . term_action recterm
    (128) term -> factor . term_action
    (129) term_action -> .

    TERMS           reduce using rule 129 (term_action -> .)
    EX              reduce using rule 129 (term_action -> .)
    RELOP           reduce using rule 129 (term_action -> .)
    LOGIC           reduce using rule 129 (term_action -> .)
    COMMA           reduce using rule 129 (term_action -> .)
    SEMICOLON       reduce using rule 129 (term_action -> .)
    RIGHTBRACKET    reduce using rule 129 (term_action -> .)
    RIGHTPAR        reduce using rule 129 (term_action -> .)

    term_action                    shift and go to state 202

state 165

    (132) factor -> factor_action1 . LEFTPAR expression RIGHTPAR factor_action2

    LEFTPAR         shift and go to state 203


state 166

    (133) factor -> EX . cte
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

    TERMS           reduce using rule 150 (cte -> .)
    EX              reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    RIGHTBRACKET    reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

    cte                            shift and go to state 204
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 167

    (134) factor -> cte .

    TERMS           reduce using rule 134 (factor -> cte .)
    EX              reduce using rule 134 (factor -> cte .)
    RELOP           reduce using rule 134 (factor -> cte .)
    LOGIC           reduce using rule 134 (factor -> cte .)
    COMMA           reduce using rule 134 (factor -> cte .)
    SEMICOLON       reduce using rule 134 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 134 (factor -> cte .)
    RIGHTPAR        reduce using rule 134 (factor -> cte .)


state 168

    (51) pow -> POW pow_action1 LEFTPAR . expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 205
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 169

    (53) sqrt -> SQRT sqrt_action1 LEFTPAR . expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 206
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 170

    (50) quit -> QUIT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 50 (quit -> QUIT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 50 (quit -> QUIT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 50 (quit -> QUIT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 50 (quit -> QUIT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 50 (quit -> QUIT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 50 (quit -> QUIT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 50 (quit -> QUIT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 50 (quit -> QUIT LEFTPAR RIGHTPAR .)


state 171

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 207


state 172

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 173

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 174

    (10) run -> VOID FUNC run_action1 RUN . startscope_action LEFTPAR RIGHTPAR main_cont block
    (93) startscope_action -> .

    LEFTPAR         reduce using rule 93 (startscope_action -> .)

    startscope_action              shift and go to state 208

state 175

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 209


state 176

    (13) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (14) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 210


state 177

    (15) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CAPIGAME        reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    POW             reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    SQRT            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)
    QUIT            reduce using rule 15 (vars -> VAR recids COLON type SEMICOLON vars .)


state 178

    (98) recparams -> ID COLON type COMMA . recparams
    (97) recparams -> . ID COLON type
    (98) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 63

    recparams                      shift and go to state 211

state 179

    (89) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (96) function_action3 -> .

    COLON           reduce using rule 96 (function_action3 -> .)

    function_action3               shift and go to state 212

state 180

    (19) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (20) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (70) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (71) assign -> . assign_list EQUAL assign_action2 expression
    (74) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (75) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (79) loop -> . for
    (80) loop -> . while
    (101) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (108) return -> . RETURN expression
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (149) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (144) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (81) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (85) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (148) nestedvalue -> . ID DOT ID
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

    RIGHTKEY        shift and go to state 214
    ID              shift and go to state 225
    IF              shift and go to state 227
    VAR             shift and go to state 39
    PRINT           shift and go to state 230
    RETURN          shift and go to state 231
    FOR             shift and go to state 233
    WHILE           shift and go to state 234
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

    recstatement                   shift and go to state 213
    statement                      shift and go to state 215
    assign                         shift and go to state 216
    condition                      shift and go to state 217
    vars                           shift and go to state 218
    loop                           shift and go to state 219
    write                          shift and go to state 220
    return                         shift and go to state 221
    functioncall                   shift and go to state 222
    nestedassign                   shift and go to state 223
    specialfunction                shift and go to state 224
    assign_list                    shift and go to state 226
    for                            shift and go to state 228
    while                          shift and go to state 229
    nestedvalue                    shift and go to state 232
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 181

    (91) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (96) function_action3 -> .

    COLON           reduce using rule 96 (function_action3 -> .)

    function_action3               shift and go to state 235

state 182

    (57) size -> ID DOT SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 236


state 183

    (58) head -> ID DOT HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 237


state 184

    (62) find -> ID DOT FIND LEFTPAR . expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 238
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 185

    (63) last -> ID DOT LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 239


state 186

    (109) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . recfuncexp RIGHTPAR
    (110) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . RIGHTPAR
    (113) recfuncexp -> . expression COMMA recfuncexp
    (114) recfuncexp -> . expression recfunc_action1
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
  ! shift/reduce conflict for RIGHTPAR resolved as shift
    RIGHTPAR        shift and go to state 241
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]
  ! RIGHTPAR        [ reduce using rule 150 (cte -> .) ]

    recfuncexp                     shift and go to state 240
    expression                     shift and go to state 242
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 187

    (145) listaccess -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (147) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 147 (list_action_3 -> .)

    list_action_3                  shift and go to state 243

state 188

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR . expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 244
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 189

    (56) init -> CAPIGAME DOT INIT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 245


state 190

    (65) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 246
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 191

    (64) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR . expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 247
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 192

    (68) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 248


state 193

    (67) update -> CAPIGAME DOT UPDATE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 249


state 194

    (59) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 250


state 195

    (60) window_w -> CAPIGAME DOT WINDOW_W LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 251


state 196

    (66) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 252
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 197

    (61) rand -> CAPIGAME DOT RAND LEFTPAR . expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 253
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 198

    (69) create_text -> CREATE_TEXT LEFTPAR expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 254
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 199

    (116) expression -> exp RELOP . relop_action1 exp relop_action2
    (119) relop_action1 -> .

    EX              reduce using rule 119 (relop_action1 -> .)
    ID              reduce using rule 119 (relop_action1 -> .)
    INT             reduce using rule 119 (relop_action1 -> .)
    FLOAT           reduce using rule 119 (relop_action1 -> .)
    TRUE            reduce using rule 119 (relop_action1 -> .)
    FALSE           reduce using rule 119 (relop_action1 -> .)
    STRING          reduce using rule 119 (relop_action1 -> .)
    CAPIGAME        reduce using rule 119 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 119 (relop_action1 -> .)
    POW             reduce using rule 119 (relop_action1 -> .)
    SQRT            reduce using rule 119 (relop_action1 -> .)
    QUIT            reduce using rule 119 (relop_action1 -> .)
    TERMS           reduce using rule 119 (relop_action1 -> .)
    LEFTPAR         reduce using rule 119 (relop_action1 -> .)
    COMMA           reduce using rule 119 (relop_action1 -> .)
    SEMICOLON       reduce using rule 119 (relop_action1 -> .)
    RIGHTBRACKET    reduce using rule 119 (relop_action1 -> .)
    RIGHTPAR        reduce using rule 119 (relop_action1 -> .)

    relop_action1                  shift and go to state 255

state 200

    (117) expression -> exp LOGIC . logic_action1 exp logic_action2
    (121) logic_action1 -> .

    EX              reduce using rule 121 (logic_action1 -> .)
    ID              reduce using rule 121 (logic_action1 -> .)
    INT             reduce using rule 121 (logic_action1 -> .)
    FLOAT           reduce using rule 121 (logic_action1 -> .)
    TRUE            reduce using rule 121 (logic_action1 -> .)
    FALSE           reduce using rule 121 (logic_action1 -> .)
    STRING          reduce using rule 121 (logic_action1 -> .)
    CAPIGAME        reduce using rule 121 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 121 (logic_action1 -> .)
    POW             reduce using rule 121 (logic_action1 -> .)
    SQRT            reduce using rule 121 (logic_action1 -> .)
    QUIT            reduce using rule 121 (logic_action1 -> .)
    TERMS           reduce using rule 121 (logic_action1 -> .)
    LEFTPAR         reduce using rule 121 (logic_action1 -> .)
    COMMA           reduce using rule 121 (logic_action1 -> .)
    SEMICOLON       reduce using rule 121 (logic_action1 -> .)
    RIGHTBRACKET    reduce using rule 121 (logic_action1 -> .)
    RIGHTPAR        reduce using rule 121 (logic_action1 -> .)

    logic_action1                  shift and go to state 256

state 201

    (123) exp -> term exp_action . recexp
    (124) exp -> term exp_action .
    (126) recexp -> . EX add_operator exp

    RELOP           reduce using rule 124 (exp -> term exp_action .)
    LOGIC           reduce using rule 124 (exp -> term exp_action .)
    COMMA           reduce using rule 124 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 124 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 124 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 124 (exp -> term exp_action .)
    EX              shift and go to state 258

    recexp                         shift and go to state 257

state 202

    (127) term -> factor term_action . recterm
    (128) term -> factor term_action .
    (130) recterm -> . TERMS add_operator term

    EX              reduce using rule 128 (term -> factor term_action .)
    RELOP           reduce using rule 128 (term -> factor term_action .)
    LOGIC           reduce using rule 128 (term -> factor term_action .)
    COMMA           reduce using rule 128 (term -> factor term_action .)
    SEMICOLON       reduce using rule 128 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 128 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 128 (term -> factor term_action .)
    TERMS           shift and go to state 260

    recterm                        shift and go to state 259

state 203

    (132) factor -> factor_action1 LEFTPAR . expression RIGHTPAR factor_action2
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    factor_action1                 shift and go to state 165
    expression                     shift and go to state 261
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 204

    (133) factor -> EX cte .

    TERMS           reduce using rule 133 (factor -> EX cte .)
    EX              reduce using rule 133 (factor -> EX cte .)
    RELOP           reduce using rule 133 (factor -> EX cte .)
    LOGIC           reduce using rule 133 (factor -> EX cte .)
    COMMA           reduce using rule 133 (factor -> EX cte .)
    SEMICOLON       reduce using rule 133 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 133 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 133 (factor -> EX cte .)


state 205

    (51) pow -> POW pow_action1 LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 262


state 206

    (53) sqrt -> SQRT sqrt_action1 LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 263


state 207

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 208

    (10) run -> VOID FUNC run_action1 RUN startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 264


state 209

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 265

state 210

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (14) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CAPIGAME        reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    POW             reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SQRT            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    QUIT            reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 14 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 266

state 211

    (98) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 98 (recparams -> ID COLON type COMMA recparams .)


state 212

    (89) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 267

state 213

    (19) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 268


state 214

    (20) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 269


state 215

    (21) recstatement -> statement . recstatement
    (22) recstatement -> statement .
    (21) recstatement -> . statement recstatement
    (22) recstatement -> . statement
    (23) statement -> . assign SEMICOLON
    (24) statement -> . condition
    (25) statement -> . vars
    (26) statement -> . loop
    (27) statement -> . write SEMICOLON
    (28) statement -> . return SEMICOLON
    (29) statement -> . functioncall SEMICOLON
    (30) statement -> . nestedassign SEMICOLON
    (31) statement -> . specialfunction SEMICOLON
    (70) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (71) assign -> . assign_list EQUAL assign_action2 expression
    (74) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (75) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (14) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (15) vars -> . VAR recids COLON type SEMICOLON vars
    (16) vars -> . VAR recids COLON type SEMICOLON
    (79) loop -> . for
    (80) loop -> . while
    (101) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (108) return -> . RETURN expression
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (149) nestedassign -> . nestedvalue EQUAL expression
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (144) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (81) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (85) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (148) nestedvalue -> . ID DOT ID
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

    RIGHTKEY        reduce using rule 22 (recstatement -> statement .)
    ID              shift and go to state 225
    IF              shift and go to state 227
    VAR             shift and go to state 39
    PRINT           shift and go to state 230
    RETURN          shift and go to state 231
    FOR             shift and go to state 233
    WHILE           shift and go to state 234
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

    statement                      shift and go to state 215
    recstatement                   shift and go to state 270
    assign                         shift and go to state 216
    condition                      shift and go to state 217
    vars                           shift and go to state 218
    loop                           shift and go to state 219
    write                          shift and go to state 220
    return                         shift and go to state 221
    functioncall                   shift and go to state 222
    nestedassign                   shift and go to state 223
    specialfunction                shift and go to state 224
    assign_list                    shift and go to state 226
    for                            shift and go to state 228
    while                          shift and go to state 229
    nestedvalue                    shift and go to state 232
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 216

    (23) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 271


state 217

    (24) statement -> condition .

    ID              reduce using rule 24 (statement -> condition .)
    IF              reduce using rule 24 (statement -> condition .)
    VAR             reduce using rule 24 (statement -> condition .)
    PRINT           reduce using rule 24 (statement -> condition .)
    RETURN          reduce using rule 24 (statement -> condition .)
    FOR             reduce using rule 24 (statement -> condition .)
    WHILE           reduce using rule 24 (statement -> condition .)
    CAPIGAME        reduce using rule 24 (statement -> condition .)
    CREATE_TEXT     reduce using rule 24 (statement -> condition .)
    POW             reduce using rule 24 (statement -> condition .)
    SQRT            reduce using rule 24 (statement -> condition .)
    QUIT            reduce using rule 24 (statement -> condition .)
    RIGHTKEY        reduce using rule 24 (statement -> condition .)


state 218

    (25) statement -> vars .

    ID              reduce using rule 25 (statement -> vars .)
    IF              reduce using rule 25 (statement -> vars .)
    VAR             reduce using rule 25 (statement -> vars .)
    PRINT           reduce using rule 25 (statement -> vars .)
    RETURN          reduce using rule 25 (statement -> vars .)
    FOR             reduce using rule 25 (statement -> vars .)
    WHILE           reduce using rule 25 (statement -> vars .)
    CAPIGAME        reduce using rule 25 (statement -> vars .)
    CREATE_TEXT     reduce using rule 25 (statement -> vars .)
    POW             reduce using rule 25 (statement -> vars .)
    SQRT            reduce using rule 25 (statement -> vars .)
    QUIT            reduce using rule 25 (statement -> vars .)
    RIGHTKEY        reduce using rule 25 (statement -> vars .)


state 219

    (26) statement -> loop .

    ID              reduce using rule 26 (statement -> loop .)
    IF              reduce using rule 26 (statement -> loop .)
    VAR             reduce using rule 26 (statement -> loop .)
    PRINT           reduce using rule 26 (statement -> loop .)
    RETURN          reduce using rule 26 (statement -> loop .)
    FOR             reduce using rule 26 (statement -> loop .)
    WHILE           reduce using rule 26 (statement -> loop .)
    CAPIGAME        reduce using rule 26 (statement -> loop .)
    CREATE_TEXT     reduce using rule 26 (statement -> loop .)
    POW             reduce using rule 26 (statement -> loop .)
    SQRT            reduce using rule 26 (statement -> loop .)
    QUIT            reduce using rule 26 (statement -> loop .)
    RIGHTKEY        reduce using rule 26 (statement -> loop .)


state 220

    (27) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 272


state 221

    (28) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 273


state 222

    (29) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 274


state 223

    (30) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 275


state 224

    (31) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 276


state 225

    (70) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (109) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (144) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (148) nestedvalue -> ID . DOT ID
    (57) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> ID . DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> ID . DOT LAST LEFTPAR RIGHTPAR
    (72) assign_action1 -> .
    (111) function_call_action1 -> .
    (146) list_action1 -> .

    DOT             shift and go to state 121
    EQUAL           reduce using rule 72 (assign_action1 -> .)
    LEFTPAR         reduce using rule 111 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 146 (list_action1 -> .)

    assign_action1                 shift and go to state 277
    function_call_action1          shift and go to state 122
    list_action1                   shift and go to state 278

state 226

    (71) assign -> assign_list . EQUAL assign_action2 expression

    EQUAL           shift and go to state 279


state 227

    (74) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (75) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 280


state 228

    (79) loop -> for .

    ID              reduce using rule 79 (loop -> for .)
    IF              reduce using rule 79 (loop -> for .)
    VAR             reduce using rule 79 (loop -> for .)
    PRINT           reduce using rule 79 (loop -> for .)
    RETURN          reduce using rule 79 (loop -> for .)
    FOR             reduce using rule 79 (loop -> for .)
    WHILE           reduce using rule 79 (loop -> for .)
    CAPIGAME        reduce using rule 79 (loop -> for .)
    CREATE_TEXT     reduce using rule 79 (loop -> for .)
    POW             reduce using rule 79 (loop -> for .)
    SQRT            reduce using rule 79 (loop -> for .)
    QUIT            reduce using rule 79 (loop -> for .)
    RIGHTKEY        reduce using rule 79 (loop -> for .)


state 229

    (80) loop -> while .

    ID              reduce using rule 80 (loop -> while .)
    IF              reduce using rule 80 (loop -> while .)
    VAR             reduce using rule 80 (loop -> while .)
    PRINT           reduce using rule 80 (loop -> while .)
    RETURN          reduce using rule 80 (loop -> while .)
    FOR             reduce using rule 80 (loop -> while .)
    WHILE           reduce using rule 80 (loop -> while .)
    CAPIGAME        reduce using rule 80 (loop -> while .)
    CREATE_TEXT     reduce using rule 80 (loop -> while .)
    POW             reduce using rule 80 (loop -> while .)
    SQRT            reduce using rule 80 (loop -> while .)
    QUIT            reduce using rule 80 (loop -> while .)
    RIGHTKEY        reduce using rule 80 (loop -> while .)


state 230

    (101) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 281


state 231

    (108) return -> RETURN . expression
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 282
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 232

    (149) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 283


state 233

    (81) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (93) startscope_action -> .

    LEFTPAR         reduce using rule 93 (startscope_action -> .)

    startscope_action              shift and go to state 284

state 234

    (85) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (93) startscope_action -> .

    LEFTPAR         reduce using rule 93 (startscope_action -> .)

    startscope_action              shift and go to state 285

state 235

    (91) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 286

state 236

    (57) size -> ID DOT SIZE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 57 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 57 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 57 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 57 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 57 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 57 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 57 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 57 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)


state 237

    (58) head -> ID DOT HEAD LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 58 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 58 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 58 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 58 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 58 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 58 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 58 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 58 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)


state 238

    (62) find -> ID DOT FIND LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 287


state 239

    (63) last -> ID DOT LAST LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 63 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 63 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 63 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 63 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 63 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 63 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 63 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 63 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)


state 240

    (109) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 288


state 241

    (110) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .

    RIGHTBRACKET    reduce using rule 110 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    TERMS           reduce using rule 110 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    EX              reduce using rule 110 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RELOP           reduce using rule 110 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    LOGIC           reduce using rule 110 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    COMMA           reduce using rule 110 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    SEMICOLON       reduce using rule 110 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTPAR        reduce using rule 110 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)


state 242

    (113) recfuncexp -> expression . COMMA recfuncexp
    (114) recfuncexp -> expression . recfunc_action1
    (115) recfunc_action1 -> .

    COMMA           shift and go to state 289
    RIGHTPAR        reduce using rule 115 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 290

state 243

    (145) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 291


state 244

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression . COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 292


state 245

    (56) init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 56 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 56 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 56 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 56 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 56 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 56 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 56 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 56 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)


state 246

    (65) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 293


state 247

    (64) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 294


state 248

    (68) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 68 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 68 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 68 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 68 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 68 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 68 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 68 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 68 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)


state 249

    (67) update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 67 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 67 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 67 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 67 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 67 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 67 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 67 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 67 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)


state 250

    (59) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 59 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 59 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    EX              reduce using rule 59 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 59 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 59 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 59 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 59 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 59 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)


state 251

    (60) window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 60 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 60 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    EX              reduce using rule 60 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 60 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 60 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 60 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 60 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 60 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)


state 252

    (66) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 295


state 253

    (61) rand -> CAPIGAME DOT RAND LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 296


state 254

    (69) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 297


state 255

    (116) expression -> exp RELOP relop_action1 . exp relop_action2
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    RIGHTBRACKET    reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    exp                            shift and go to state 298
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 256

    (117) expression -> exp LOGIC logic_action1 . exp logic_action2
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    RIGHTBRACKET    reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    exp                            shift and go to state 299
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 257

    (123) exp -> term exp_action recexp .

    RELOP           reduce using rule 123 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 123 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 123 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 123 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 123 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 123 (exp -> term exp_action recexp .)


state 258

    (126) recexp -> EX . add_operator exp
    (131) add_operator -> .

    EX              reduce using rule 131 (add_operator -> .)
    ID              reduce using rule 131 (add_operator -> .)
    INT             reduce using rule 131 (add_operator -> .)
    FLOAT           reduce using rule 131 (add_operator -> .)
    TRUE            reduce using rule 131 (add_operator -> .)
    FALSE           reduce using rule 131 (add_operator -> .)
    STRING          reduce using rule 131 (add_operator -> .)
    CAPIGAME        reduce using rule 131 (add_operator -> .)
    CREATE_TEXT     reduce using rule 131 (add_operator -> .)
    POW             reduce using rule 131 (add_operator -> .)
    SQRT            reduce using rule 131 (add_operator -> .)
    QUIT            reduce using rule 131 (add_operator -> .)
    TERMS           reduce using rule 131 (add_operator -> .)
    LEFTPAR         reduce using rule 131 (add_operator -> .)
    RELOP           reduce using rule 131 (add_operator -> .)
    LOGIC           reduce using rule 131 (add_operator -> .)
    COMMA           reduce using rule 131 (add_operator -> .)
    SEMICOLON       reduce using rule 131 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 131 (add_operator -> .)
    RIGHTPAR        reduce using rule 131 (add_operator -> .)

    add_operator                   shift and go to state 300

state 259

    (127) term -> factor term_action recterm .

    EX              reduce using rule 127 (term -> factor term_action recterm .)
    RELOP           reduce using rule 127 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 127 (term -> factor term_action recterm .)
    COMMA           reduce using rule 127 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 127 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 127 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 127 (term -> factor term_action recterm .)


state 260

    (130) recterm -> TERMS . add_operator term
    (131) add_operator -> .

    EX              reduce using rule 131 (add_operator -> .)
    ID              reduce using rule 131 (add_operator -> .)
    INT             reduce using rule 131 (add_operator -> .)
    FLOAT           reduce using rule 131 (add_operator -> .)
    TRUE            reduce using rule 131 (add_operator -> .)
    FALSE           reduce using rule 131 (add_operator -> .)
    STRING          reduce using rule 131 (add_operator -> .)
    CAPIGAME        reduce using rule 131 (add_operator -> .)
    CREATE_TEXT     reduce using rule 131 (add_operator -> .)
    POW             reduce using rule 131 (add_operator -> .)
    SQRT            reduce using rule 131 (add_operator -> .)
    QUIT            reduce using rule 131 (add_operator -> .)
    TERMS           reduce using rule 131 (add_operator -> .)
    LEFTPAR         reduce using rule 131 (add_operator -> .)
    RELOP           reduce using rule 131 (add_operator -> .)
    LOGIC           reduce using rule 131 (add_operator -> .)
    COMMA           reduce using rule 131 (add_operator -> .)
    SEMICOLON       reduce using rule 131 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 131 (add_operator -> .)
    RIGHTPAR        reduce using rule 131 (add_operator -> .)

    add_operator                   shift and go to state 301

state 261

    (132) factor -> factor_action1 LEFTPAR expression . RIGHTPAR factor_action2

    RIGHTPAR        shift and go to state 302


state 262

    (51) pow -> POW pow_action1 LEFTPAR expression COMMA . expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 303
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 263

    (53) sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 53 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 53 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 53 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 53 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 53 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 53 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 53 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 53 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)


state 264

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 304


state 265

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 305

state 266

    (13) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CAPIGAME        reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    POW             reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SQRT            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    QUIT            reduce using rule 13 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 267

    (89) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 89 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 89 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 89 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 89 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 89 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 89 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 89 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 268

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 306


state 269

    (20) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    POW             reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SQRT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    QUIT            reduce using rule 20 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 270

    (21) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 21 (recstatement -> statement recstatement .)


state 271

    (23) statement -> assign SEMICOLON .

    ID              reduce using rule 23 (statement -> assign SEMICOLON .)
    IF              reduce using rule 23 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 23 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 23 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> assign SEMICOLON .)
    CAPIGAME        reduce using rule 23 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> assign SEMICOLON .)
    POW             reduce using rule 23 (statement -> assign SEMICOLON .)
    SQRT            reduce using rule 23 (statement -> assign SEMICOLON .)
    QUIT            reduce using rule 23 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> assign SEMICOLON .)


state 272

    (27) statement -> write SEMICOLON .

    ID              reduce using rule 27 (statement -> write SEMICOLON .)
    IF              reduce using rule 27 (statement -> write SEMICOLON .)
    VAR             reduce using rule 27 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> write SEMICOLON .)
    FOR             reduce using rule 27 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> write SEMICOLON .)
    CAPIGAME        reduce using rule 27 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 27 (statement -> write SEMICOLON .)
    POW             reduce using rule 27 (statement -> write SEMICOLON .)
    SQRT            reduce using rule 27 (statement -> write SEMICOLON .)
    QUIT            reduce using rule 27 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 27 (statement -> write SEMICOLON .)


state 273

    (28) statement -> return SEMICOLON .

    ID              reduce using rule 28 (statement -> return SEMICOLON .)
    IF              reduce using rule 28 (statement -> return SEMICOLON .)
    VAR             reduce using rule 28 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 28 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> return SEMICOLON .)
    FOR             reduce using rule 28 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> return SEMICOLON .)
    CAPIGAME        reduce using rule 28 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 28 (statement -> return SEMICOLON .)
    POW             reduce using rule 28 (statement -> return SEMICOLON .)
    SQRT            reduce using rule 28 (statement -> return SEMICOLON .)
    QUIT            reduce using rule 28 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 28 (statement -> return SEMICOLON .)


state 274

    (29) statement -> functioncall SEMICOLON .

    ID              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 29 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 29 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CAPIGAME        reduce using rule 29 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 29 (statement -> functioncall SEMICOLON .)
    POW             reduce using rule 29 (statement -> functioncall SEMICOLON .)
    SQRT            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    QUIT            reduce using rule 29 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 29 (statement -> functioncall SEMICOLON .)


state 275

    (30) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CAPIGAME        reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    POW             reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    SQRT            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    QUIT            reduce using rule 30 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 30 (statement -> nestedassign SEMICOLON .)


state 276

    (31) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CAPIGAME        reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    POW             reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    SQRT            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    QUIT            reduce using rule 31 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 31 (statement -> specialfunction SEMICOLON .)


state 277

    (70) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 307


state 278

    (144) assign_list -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 308


state 279

    (71) assign -> assign_list EQUAL . assign_action2 expression
    (73) assign_action2 -> .

    EX              reduce using rule 73 (assign_action2 -> .)
    ID              reduce using rule 73 (assign_action2 -> .)
    INT             reduce using rule 73 (assign_action2 -> .)
    FLOAT           reduce using rule 73 (assign_action2 -> .)
    TRUE            reduce using rule 73 (assign_action2 -> .)
    FALSE           reduce using rule 73 (assign_action2 -> .)
    STRING          reduce using rule 73 (assign_action2 -> .)
    CAPIGAME        reduce using rule 73 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 73 (assign_action2 -> .)
    POW             reduce using rule 73 (assign_action2 -> .)
    SQRT            reduce using rule 73 (assign_action2 -> .)
    QUIT            reduce using rule 73 (assign_action2 -> .)
    RELOP           reduce using rule 73 (assign_action2 -> .)
    LOGIC           reduce using rule 73 (assign_action2 -> .)
    TERMS           reduce using rule 73 (assign_action2 -> .)
    LEFTPAR         reduce using rule 73 (assign_action2 -> .)
    SEMICOLON       reduce using rule 73 (assign_action2 -> .)

    assign_action2                 shift and go to state 309

state 280

    (74) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (75) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 310
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 281

    (101) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (102) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (103) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (104) recwrite -> . expression action_recwrite_exp
    (105) recwrite -> . STRING action_recwrite_cte
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 313
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    recwrite                       shift and go to state 311
    expression                     shift and go to state 312
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 282

    (108) return -> RETURN expression .

    SEMICOLON       reduce using rule 108 (return -> RETURN expression .)


state 283

    (149) nestedassign -> nestedvalue EQUAL . expression
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    nestedvalue                    shift and go to state 74
    expression                     shift and go to state 314
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 284

    (81) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 315


state 285

    (85) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (86) while_action1 -> .

    LEFTPAR         reduce using rule 86 (while_action1 -> .)

    while_action1                  shift and go to state 316

state 286

    (91) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 91 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 91 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 91 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 91 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 91 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 91 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 91 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 287

    (62) find -> ID DOT FIND LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 62 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 62 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 62 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 62 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 62 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 62 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 62 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 62 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)


state 288

    (109) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 109 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 109 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    EX              reduce using rule 109 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 109 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 109 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 109 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 109 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 109 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)


state 289

    (113) recfuncexp -> expression COMMA . recfuncexp
    (113) recfuncexp -> . expression COMMA recfuncexp
    (114) recfuncexp -> . expression recfunc_action1
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 242
    recfuncexp                     shift and go to state 317
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 290

    (114) recfuncexp -> expression recfunc_action1 .

    RIGHTPAR        reduce using rule 114 (recfuncexp -> expression recfunc_action1 .)


state 291

    (145) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    RIGHTBRACKET    reduce using rule 145 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    TERMS           reduce using rule 145 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    EX              reduce using rule 145 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RELOP           reduce using rule 145 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    LOGIC           reduce using rule 145 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    COMMA           reduce using rule 145 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    SEMICOLON       reduce using rule 145 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RIGHTPAR        reduce using rule 145 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 292

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 318
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 293

    (65) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 319
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 294

    (64) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 64 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 64 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 64 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 64 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 64 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 64 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 64 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 64 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)


state 295

    (66) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 320
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 296

    (61) rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA . expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 321
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 297

    (69) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 322
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 298

    (116) expression -> exp RELOP relop_action1 exp . relop_action2
    (120) relop_action2 -> .

    COMMA           reduce using rule 120 (relop_action2 -> .)
    SEMICOLON       reduce using rule 120 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 120 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 120 (relop_action2 -> .)

    relop_action2                  shift and go to state 323

state 299

    (117) expression -> exp LOGIC logic_action1 exp . logic_action2
    (122) logic_action2 -> .

    COMMA           reduce using rule 122 (logic_action2 -> .)
    SEMICOLON       reduce using rule 122 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 122 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 122 (logic_action2 -> .)

    logic_action2                  shift and go to state 324

state 300

    (126) recexp -> EX add_operator . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    RIGHTBRACKET    reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    exp                            shift and go to state 325
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 301

    (130) recterm -> TERMS add_operator . term
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    RIGHTBRACKET    reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    term                           shift and go to state 326
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 302

    (132) factor -> factor_action1 LEFTPAR expression RIGHTPAR . factor_action2
    (136) factor_action2 -> .

    TERMS           reduce using rule 136 (factor_action2 -> .)
    EX              reduce using rule 136 (factor_action2 -> .)
    RELOP           reduce using rule 136 (factor_action2 -> .)
    LOGIC           reduce using rule 136 (factor_action2 -> .)
    COMMA           reduce using rule 136 (factor_action2 -> .)
    SEMICOLON       reduce using rule 136 (factor_action2 -> .)
    RIGHTBRACKET    reduce using rule 136 (factor_action2 -> .)
    RIGHTPAR        reduce using rule 136 (factor_action2 -> .)

    factor_action2                 shift and go to state 327

state 303

    (51) pow -> POW pow_action1 LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 328


state 304

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 329

state 305

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .

    VOID            reduce using rule 8 (start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 306

    (19) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    POW             reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SQRT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    QUIT            reduce using rule 19 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 307

    (70) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (73) assign_action2 -> .

    EX              reduce using rule 73 (assign_action2 -> .)
    ID              reduce using rule 73 (assign_action2 -> .)
    INT             reduce using rule 73 (assign_action2 -> .)
    FLOAT           reduce using rule 73 (assign_action2 -> .)
    TRUE            reduce using rule 73 (assign_action2 -> .)
    FALSE           reduce using rule 73 (assign_action2 -> .)
    STRING          reduce using rule 73 (assign_action2 -> .)
    CAPIGAME        reduce using rule 73 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 73 (assign_action2 -> .)
    POW             reduce using rule 73 (assign_action2 -> .)
    SQRT            reduce using rule 73 (assign_action2 -> .)
    QUIT            reduce using rule 73 (assign_action2 -> .)
    RELOP           reduce using rule 73 (assign_action2 -> .)
    LOGIC           reduce using rule 73 (assign_action2 -> .)
    TERMS           reduce using rule 73 (assign_action2 -> .)
    LEFTPAR         reduce using rule 73 (assign_action2 -> .)
    SEMICOLON       reduce using rule 73 (assign_action2 -> .)

    assign_action2                 shift and go to state 330

state 308

    (144) assign_list -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTBRACKET    reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 331
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 309

    (71) assign -> assign_list EQUAL assign_action2 . expression
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 332
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 310

    (74) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (75) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (76) condition_action1 -> .

    RIGHTPAR        reduce using rule 76 (condition_action1 -> .)

    condition_action1              shift and go to state 333

state 311

    (101) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 334


state 312

    (102) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (104) recwrite -> expression . action_recwrite_exp
    (106) action_recwrite_exp -> .

    COMMA           reduce using rule 106 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 106 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 335

state 313

    (103) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (105) recwrite -> STRING . action_recwrite_cte
    (161) string -> STRING .
    (107) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 107 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 107 (action_recwrite_cte -> .)
    TERMS           reduce using rule 161 (string -> STRING .)
    EX              reduce using rule 161 (string -> STRING .)
    RELOP           reduce using rule 161 (string -> STRING .)
    LOGIC           reduce using rule 161 (string -> STRING .)
    COMMA           reduce using rule 107 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 107 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 161 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 161 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 336

state 314

    (149) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 149 (nestedassign -> nestedvalue EQUAL expression .)


state 315

    (81) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (70) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (71) assign -> . assign_list EQUAL assign_action2 expression
    (144) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 338

    assign                         shift and go to state 337
    assign_list                    shift and go to state 226

state 316

    (85) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 339


state 317

    (113) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 113 (recfuncexp -> expression COMMA recfuncexp .)


state 318

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 340


state 319

    (65) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 341


state 320

    (66) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 342


state 321

    (61) rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 343


state 322

    (69) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 344


state 323

    (116) expression -> exp RELOP relop_action1 exp relop_action2 .

    COMMA           reduce using rule 116 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    SEMICOLON       reduce using rule 116 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 116 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 116 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 324

    (117) expression -> exp LOGIC logic_action1 exp logic_action2 .

    COMMA           reduce using rule 117 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    SEMICOLON       reduce using rule 117 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 117 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 117 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 325

    (126) recexp -> EX add_operator exp .

    RELOP           reduce using rule 126 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 126 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 126 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 126 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 126 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 126 (recexp -> EX add_operator exp .)


state 326

    (130) recterm -> TERMS add_operator term .

    EX              reduce using rule 130 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 130 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 130 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 130 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 130 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 130 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 130 (recterm -> TERMS add_operator term .)


state 327

    (132) factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .

    TERMS           reduce using rule 132 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    EX              reduce using rule 132 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RELOP           reduce using rule 132 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    LOGIC           reduce using rule 132 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    COMMA           reduce using rule 132 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    SEMICOLON       reduce using rule 132 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTBRACKET    reduce using rule 132 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTPAR        reduce using rule 132 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)


state 328

    (51) pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 51 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 51 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 51 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 51 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 51 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 51 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 51 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 51 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)


state 329

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont . block
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 345

state 330

    (70) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 346
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 331

    (144) assign_list -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (147) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 147 (list_action_3 -> .)

    list_action_3                  shift and go to state 347

state 332

    (71) assign -> assign_list EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 71 (assign -> assign_list EQUAL assign_action2 expression .)


state 333

    (74) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (75) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 348


state 334

    (101) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 101 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 335

    (102) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (104) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 349
    RIGHTPAR        reduce using rule 104 (recwrite -> expression action_recwrite_exp .)


state 336

    (103) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (105) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 350
    RIGHTPAR        reduce using rule 105 (recwrite -> STRING action_recwrite_cte .)


state 337

    (81) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 351


state 338

    (70) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (144) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (72) assign_action1 -> .
    (146) list_action1 -> .

    EQUAL           reduce using rule 72 (assign_action1 -> .)
    LEFTBRACKET     reduce using rule 146 (list_action1 -> .)

    assign_action1                 shift and go to state 277
    list_action1                   shift and go to state 278

state 339

    (85) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 352
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 340

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 353
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 341

    (65) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 354
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 342

    (66) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 66 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 66 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 66 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 66 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 66 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 66 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 66 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 66 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 343

    (61) rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 61 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 61 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 61 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 61 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 61 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 61 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 61 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 61 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)


state 344

    (69) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 355
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 345

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .

    RIGHTKEY        reduce using rule 10 (run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 346

    (70) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 70 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 347

    (144) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 356


state 348

    (74) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (75) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 357

state 349

    (102) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (102) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (103) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (104) recwrite -> . expression action_recwrite_exp
    (105) recwrite -> . STRING action_recwrite_cte
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 313
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 312
    recwrite                       shift and go to state 358
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 350

    (103) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (102) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (103) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (104) recwrite -> . expression action_recwrite_exp
    (105) recwrite -> . STRING action_recwrite_cte
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 313
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    recwrite                       shift and go to state 359
    expression                     shift and go to state 312
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 351

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (82) for_action1 -> .

    EX              reduce using rule 82 (for_action1 -> .)
    ID              reduce using rule 82 (for_action1 -> .)
    INT             reduce using rule 82 (for_action1 -> .)
    FLOAT           reduce using rule 82 (for_action1 -> .)
    TRUE            reduce using rule 82 (for_action1 -> .)
    FALSE           reduce using rule 82 (for_action1 -> .)
    STRING          reduce using rule 82 (for_action1 -> .)
    CAPIGAME        reduce using rule 82 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 82 (for_action1 -> .)
    POW             reduce using rule 82 (for_action1 -> .)
    SQRT            reduce using rule 82 (for_action1 -> .)
    QUIT            reduce using rule 82 (for_action1 -> .)
    SEMICOLON       reduce using rule 82 (for_action1 -> .)
    RELOP           reduce using rule 82 (for_action1 -> .)
    LOGIC           reduce using rule 82 (for_action1 -> .)
    TERMS           reduce using rule 82 (for_action1 -> .)
    LEFTPAR         reduce using rule 82 (for_action1 -> .)

    for_action1                    shift and go to state 360

state 352

    (85) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (87) while_action2 -> .

    RIGHTPAR        reduce using rule 87 (while_action2 -> .)

    while_action2                  shift and go to state 361

state 353

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 362


state 354

    (65) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 363


state 355

    (69) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 364


state 356

    (144) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    EQUAL           reduce using rule 144 (assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 357

    (74) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (75) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (77) condition_action2 -> .
    (78) condition_action3 -> .

    ID              reduce using rule 77 (condition_action2 -> .)
    IF              reduce using rule 77 (condition_action2 -> .)
    VAR             reduce using rule 77 (condition_action2 -> .)
    PRINT           reduce using rule 77 (condition_action2 -> .)
    RETURN          reduce using rule 77 (condition_action2 -> .)
    FOR             reduce using rule 77 (condition_action2 -> .)
    WHILE           reduce using rule 77 (condition_action2 -> .)
    CAPIGAME        reduce using rule 77 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 77 (condition_action2 -> .)
    POW             reduce using rule 77 (condition_action2 -> .)
    SQRT            reduce using rule 77 (condition_action2 -> .)
    QUIT            reduce using rule 77 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 77 (condition_action2 -> .)
    ELSE            reduce using rule 78 (condition_action3 -> .)

    condition_action2              shift and go to state 365
    condition_action3              shift and go to state 366

state 358

    (102) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 102 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 359

    (103) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 103 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 360

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    SEMICOLON       reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 367
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 361

    (85) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 368


state 362

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    COMMA           reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 369
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 363

    (65) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 65 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 65 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 65 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 65 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 65 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 65 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 65 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 65 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 364

    (69) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 69 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 69 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 69 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 69 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 69 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 69 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 69 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 69 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 365

    (74) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CAPIGAME        reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    POW             reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SQRT            reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    QUIT            reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 74 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 366

    (75) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 370


state 367

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (83) for_action2 -> .

    SEMICOLON       reduce using rule 83 (for_action2 -> .)

    for_action2                    shift and go to state 371

state 368

    (85) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 372

state 369

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 373


state 370

    (75) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 374

state 371

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 375


state 372

    (85) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (88) while_action3 -> .

    ID              reduce using rule 88 (while_action3 -> .)
    IF              reduce using rule 88 (while_action3 -> .)
    VAR             reduce using rule 88 (while_action3 -> .)
    PRINT           reduce using rule 88 (while_action3 -> .)
    RETURN          reduce using rule 88 (while_action3 -> .)
    FOR             reduce using rule 88 (while_action3 -> .)
    WHILE           reduce using rule 88 (while_action3 -> .)
    CAPIGAME        reduce using rule 88 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 88 (while_action3 -> .)
    POW             reduce using rule 88 (while_action3 -> .)
    SQRT            reduce using rule 88 (while_action3 -> .)
    QUIT            reduce using rule 88 (while_action3 -> .)
    RIGHTKEY        reduce using rule 88 (while_action3 -> .)

    while_action3                  shift and go to state 376

state 373

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (116) expression -> . exp RELOP relop_action1 exp relop_action2
    (117) expression -> . exp LOGIC logic_action1 exp logic_action2
    (118) expression -> . exp
    (123) exp -> . term exp_action recexp
    (124) exp -> . term exp_action
    (127) term -> . factor term_action recterm
    (128) term -> . factor term_action
    (132) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (133) factor -> . EX cte
    (134) factor -> . cte
    (135) factor_action1 -> .
    (150) cte -> .
    (151) cte -> . id
    (152) cte -> . int
    (153) cte -> . float
    (154) cte -> . bool
    (155) cte -> . string
    (156) cte -> . nestedvalue
    (157) cte -> . functioncall
    (158) cte -> . listaccess
    (159) cte -> . specialfunction
    (160) id -> . ID
    (162) int -> . INT
    (163) float -> . FLOAT
    (164) bool -> . TRUE
    (165) bool -> . FALSE
    (161) string -> . STRING
    (148) nestedvalue -> . ID DOT ID
    (109) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (110) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (145) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (32) specialfunction -> . draw
    (33) specialfunction -> . init
    (34) specialfunction -> . size
    (35) specialfunction -> . head
    (36) specialfunction -> . find
    (37) specialfunction -> . last
    (38) specialfunction -> . set_fill
    (39) specialfunction -> . set_title
    (40) specialfunction -> . get_event
    (41) specialfunction -> . update
    (42) specialfunction -> . window_h
    (43) specialfunction -> . window_w
    (44) specialfunction -> . set_dimension
    (45) specialfunction -> . create_text
    (46) specialfunction -> . rand
    (47) specialfunction -> . pow
    (48) specialfunction -> . sqrt
    (49) specialfunction -> . quit
    (55) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (56) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (57) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (58) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (62) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (63) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (65) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (64) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (68) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (67) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (59) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (60) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (66) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (69) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (61) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (51) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (53) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (50) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 166
    LEFTPAR         reduce using rule 135 (factor_action1 -> .)
    TERMS           reduce using rule 150 (cte -> .)
    RELOP           reduce using rule 150 (cte -> .)
    LOGIC           reduce using rule 150 (cte -> .)
    RIGHTPAR        reduce using rule 150 (cte -> .)
    ID              shift and go to state 78
    INT             shift and go to state 79
    FLOAT           shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    STRING          shift and go to state 83
    CAPIGAME        shift and go to state 102
    CREATE_TEXT     shift and go to state 103
    POW             shift and go to state 104
    SQRT            shift and go to state 105
    QUIT            shift and go to state 106

  ! EX              [ reduce using rule 150 (cte -> .) ]

    expression                     shift and go to state 377
    exp                            shift and go to state 162
    term                           shift and go to state 163
    factor                         shift and go to state 164
    factor_action1                 shift and go to state 165
    cte                            shift and go to state 167
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    nestedvalue                    shift and go to state 74
    functioncall                   shift and go to state 75
    listaccess                     shift and go to state 76
    specialfunction                shift and go to state 77
    draw                           shift and go to state 84
    init                           shift and go to state 85
    size                           shift and go to state 86
    head                           shift and go to state 87
    find                           shift and go to state 88
    last                           shift and go to state 89
    set_fill                       shift and go to state 90
    set_title                      shift and go to state 91
    get_event                      shift and go to state 92
    update                         shift and go to state 93
    window_h                       shift and go to state 94
    window_w                       shift and go to state 95
    set_dimension                  shift and go to state 96
    create_text                    shift and go to state 97
    rand                           shift and go to state 98
    pow                            shift and go to state 99
    sqrt                           shift and go to state 100
    quit                           shift and go to state 101

state 374

    (75) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (77) condition_action2 -> .

    ID              reduce using rule 77 (condition_action2 -> .)
    IF              reduce using rule 77 (condition_action2 -> .)
    VAR             reduce using rule 77 (condition_action2 -> .)
    PRINT           reduce using rule 77 (condition_action2 -> .)
    RETURN          reduce using rule 77 (condition_action2 -> .)
    FOR             reduce using rule 77 (condition_action2 -> .)
    WHILE           reduce using rule 77 (condition_action2 -> .)
    CAPIGAME        reduce using rule 77 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 77 (condition_action2 -> .)
    POW             reduce using rule 77 (condition_action2 -> .)
    SQRT            reduce using rule 77 (condition_action2 -> .)
    QUIT            reduce using rule 77 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 77 (condition_action2 -> .)

    condition_action2              shift and go to state 378

state 375

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (70) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (71) assign -> . assign_list EQUAL assign_action2 expression
    (144) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 338

    assign                         shift and go to state 379
    assign_list                    shift and go to state 226

state 376

    (85) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CAPIGAME        reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    POW             reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SQRT            reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    QUIT            reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 85 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 377

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 380


state 378

    (75) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CAPIGAME        reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    POW             reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SQRT            reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    QUIT            reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 75 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 379

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 381


state 380

    (55) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 55 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 55 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 55 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 55 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 55 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 55 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 55 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 55 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 381

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 382


state 382

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (19) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (20) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 140

    block                          shift and go to state 383

state 383

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (84) for_action3 -> .

    ID              reduce using rule 84 (for_action3 -> .)
    IF              reduce using rule 84 (for_action3 -> .)
    VAR             reduce using rule 84 (for_action3 -> .)
    PRINT           reduce using rule 84 (for_action3 -> .)
    RETURN          reduce using rule 84 (for_action3 -> .)
    FOR             reduce using rule 84 (for_action3 -> .)
    WHILE           reduce using rule 84 (for_action3 -> .)
    CAPIGAME        reduce using rule 84 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 84 (for_action3 -> .)
    POW             reduce using rule 84 (for_action3 -> .)
    SQRT            reduce using rule 84 (for_action3 -> .)
    QUIT            reduce using rule 84 (for_action3 -> .)
    RIGHTKEY        reduce using rule 84 (for_action3 -> .)

    for_action3                    shift and go to state 384

state 384

    (81) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CAPIGAME        reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    POW             reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SQRT            reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    QUIT            reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 81 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EX in state 125 resolved as shift
WARNING: shift/reduce conflict for EX in state 135 resolved as shift
WARNING: shift/reduce conflict for VAR in state 136 resolved as shift
WARNING: shift/reduce conflict for EX in state 150 resolved as shift
WARNING: shift/reduce conflict for EX in state 168 resolved as shift
WARNING: shift/reduce conflict for EX in state 169 resolved as shift
WARNING: shift/reduce conflict for EX in state 184 resolved as shift
WARNING: shift/reduce conflict for EX in state 186 resolved as shift
WARNING: shift/reduce conflict for RIGHTPAR in state 186 resolved as shift
WARNING: shift/reduce conflict for EX in state 188 resolved as shift
WARNING: shift/reduce conflict for EX in state 190 resolved as shift
WARNING: shift/reduce conflict for EX in state 191 resolved as shift
WARNING: shift/reduce conflict for EX in state 196 resolved as shift
WARNING: shift/reduce conflict for EX in state 197 resolved as shift
WARNING: shift/reduce conflict for EX in state 198 resolved as shift
WARNING: shift/reduce conflict for EX in state 203 resolved as shift
WARNING: shift/reduce conflict for VAR in state 210 resolved as shift
WARNING: shift/reduce conflict for EX in state 231 resolved as shift
WARNING: shift/reduce conflict for EX in state 255 resolved as shift
WARNING: shift/reduce conflict for EX in state 256 resolved as shift
WARNING: shift/reduce conflict for EX in state 262 resolved as shift
WARNING: shift/reduce conflict for EX in state 280 resolved as shift
WARNING: shift/reduce conflict for EX in state 281 resolved as shift
WARNING: shift/reduce conflict for EX in state 283 resolved as shift
WARNING: shift/reduce conflict for EX in state 289 resolved as shift
WARNING: shift/reduce conflict for EX in state 292 resolved as shift
WARNING: shift/reduce conflict for EX in state 293 resolved as shift
WARNING: shift/reduce conflict for EX in state 295 resolved as shift
WARNING: shift/reduce conflict for EX in state 296 resolved as shift
WARNING: shift/reduce conflict for EX in state 297 resolved as shift
WARNING: shift/reduce conflict for EX in state 300 resolved as shift
WARNING: shift/reduce conflict for EX in state 301 resolved as shift
WARNING: shift/reduce conflict for EX in state 308 resolved as shift
WARNING: shift/reduce conflict for EX in state 309 resolved as shift
WARNING: shift/reduce conflict for EX in state 330 resolved as shift
WARNING: shift/reduce conflict for EX in state 339 resolved as shift
WARNING: shift/reduce conflict for EX in state 340 resolved as shift
WARNING: shift/reduce conflict for EX in state 341 resolved as shift
WARNING: shift/reduce conflict for EX in state 344 resolved as shift
WARNING: shift/reduce conflict for EX in state 349 resolved as shift
WARNING: shift/reduce conflict for EX in state 350 resolved as shift
WARNING: shift/reduce conflict for EX in state 360 resolved as shift
WARNING: shift/reduce conflict for EX in state 362 resolved as shift
WARNING: shift/reduce conflict for EX in state 373 resolved as shift
WARNING: reduce/reduce conflict in state 313 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 313
