Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    OBJECT
    TLIST

Grammar

Rule 0     S' -> capi
Rule 1     capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 2     capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 3     capi -> global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 4     capi -> MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 5     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 6     start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR block
Rule 7     run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block
Rule 8     vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 9     vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 10    vars -> VAR recids COLON type SEMICOLON vars
Rule 11    vars -> VAR recids COLON type SEMICOLON
Rule 12    recids -> ID
Rule 13    recids -> ID COMMA recids
Rule 14    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 15    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 16    recstatement -> statement recstatement
Rule 17    recstatement -> statement
Rule 18    statement -> assign SEMICOLON
Rule 19    statement -> condition
Rule 20    statement -> vars
Rule 21    statement -> loop
Rule 22    statement -> write SEMICOLON
Rule 23    statement -> return SEMICOLON
Rule 24    statement -> functioncall SEMICOLON
Rule 25    statement -> nestedassign SEMICOLON
Rule 26    statement -> specialfunction SEMICOLON
Rule 27    specialfunction -> draw
Rule 28    specialfunction -> size
Rule 29    specialfunction -> head
Rule 30    specialfunction -> tail
Rule 31    specialfunction -> last
Rule 32    specialfunction -> set_title
Rule 33    specialfunction -> set_dimension
Rule 34    specialfunction -> set_color
Rule 35    specialfunction -> create_object
Rule 36    specialfunction -> create_text
Rule 37    draw -> DRAW LEFTPAR recfuncexp RIGHTPAR
Rule 38    size -> SIZE LEFTPAR RIGHTPAR
Rule 39    head -> HEAD LEFTPAR RIGHTPAR
Rule 40    tail -> TAIL LEFTPAR RIGHTPAR
Rule 41    last -> LAST LEFTPAR RIGHTPAR
Rule 42    set_title -> SET_TITLE LEFTPAR expression RIGHTPAR
Rule 43    set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 44    set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 45    create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
Rule 46    create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR
Rule 47    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 48    assign_action1 -> <empty>
Rule 49    assign_action2 -> <empty>
Rule 50    condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 51    condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 52    condition_action1 -> <empty>
Rule 53    condition_action2 -> <empty>
Rule 54    condition_action3 -> <empty>
Rule 55    loop -> for
Rule 56    loop -> while
Rule 57    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 58    for_action1 -> <empty>
Rule 59    for_action2 -> <empty>
Rule 60    for_action3 -> <empty>
Rule 61    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 62    while_action1 -> <empty>
Rule 63    while_action2 -> <empty>
Rule 64    while_action3 -> <empty>
Rule 65    function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
Rule 66    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block
Rule 67    function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
Rule 68    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block
Rule 69    startscope_action -> <empty>
Rule 70    recparams -> ID COLON type
Rule 71    recparams -> ID COLON type COMMA recparams
Rule 72    recfunc -> function recfunc
Rule 73    recfunc -> function
Rule 74    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 75    recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 76    recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 77    recwrite -> expression action_recwrite_exp
Rule 78    recwrite -> STRING action_recwrite_cte
Rule 79    action_recwrite_exp -> <empty>
Rule 80    action_recwrite_cte -> <empty>
Rule 81    return -> RETURN expression
Rule 82    functioncall -> ID LEFTPAR recfuncexp RIGHTPAR
Rule 83    functioncall -> ID LEFTPAR RIGHTPAR
Rule 84    recfuncexp -> expression COMMA recfuncexp
Rule 85    recfuncexp -> expression
Rule 86    expression -> exp RELOP relop_action1 exp relop_action2
Rule 87    expression -> exp LOGIC logic_action1 exp logic_action2
Rule 88    expression -> exp
Rule 89    relop_action1 -> <empty>
Rule 90    relop_action2 -> <empty>
Rule 91    logic_action1 -> <empty>
Rule 92    logic_action2 -> <empty>
Rule 93    exp -> term exp_action recexp
Rule 94    exp -> term exp_action
Rule 95    exp_action -> <empty>
Rule 96    recexp -> EX add_operator exp
Rule 97    term -> factor term_action recterm
Rule 98    term -> factor term_action
Rule 99    term_action -> <empty>
Rule 100   recterm -> TERMS add_operator term
Rule 101   add_operator -> <empty>
Rule 102   factor -> LEFTPAR expression RIGHTPAR
Rule 103   factor -> EX cte
Rule 104   factor -> cte
Rule 105   type -> primitivetype
Rule 106   type -> LIST LEFTHAT primitivetype RIGHTHAT
Rule 107   primitivetype -> TINT
Rule 108   primitivetype -> TFLOAT
Rule 109   primitivetype -> TSTRING
Rule 110   primitivetype -> TBOOL
Rule 111   primitivetype -> TOBJECT
Rule 112   listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
Rule 113   nestedvalue -> ID DOT ID
Rule 114   nestedassign -> nestedvalue EQUAL expression
Rule 115   cte -> string
Rule 116   cte -> id
Rule 117   cte -> int
Rule 118   cte -> float
Rule 119   cte -> bool
Rule 120   cte -> nestedvalue
Rule 121   cte -> functioncall
Rule 122   cte -> listaccess
Rule 123   cte -> specialfunction
Rule 124   id -> ID
Rule 125   string -> STRING
Rule 126   int -> INT
Rule 127   float -> FLOAT
Rule 128   bool -> TRUE
Rule 129   bool -> FALSE

Terminals, with rules where they appear

COLON                : 1 2 3 4 5 8 9 10 11 14 15 70 71
COMMA                : 13 43 44 44 71 75 76 84
COMMENT              : 
CREATE_OBJECT        : 45
CREATE_TEXT          : 46
DOT                  : 113
DRAW                 : 37
ELSE                 : 51
EQUAL                : 8 9 47 114
EX                   : 96 103
FALSE                : 129
FLOAT                : 127
FOR                  : 57
FUNC                 : 6 7 65 66 67 68
GLOBAL               : 5
HEAD                 : 39
ID                   : 12 13 47 65 66 67 68 70 71 82 83 112 113 113 124
IF                   : 50 51
INT                  : 126
LAST                 : 41
LEFTBRACKET          : 112
LEFTHAT              : 106
LEFTKEY              : 1 2 3 4 5 14 15
LEFTPAR              : 6 7 37 38 39 40 41 42 43 44 45 46 50 51 57 61 65 66 67 68 74 82 83 102
LIST                 : 106
LOGIC                : 87
MAIN                 : 1 2 3 4
OBJECT               : 
PRINT                : 74
RELOP                : 86
RETURN               : 81
RIGHTBRACKET         : 112
RIGHTHAT             : 106
RIGHTKEY             : 1 2 3 4 5 14 15
RIGHTPAR             : 6 7 37 38 39 40 41 42 43 44 45 46 50 51 57 61 65 66 67 68 74 82 83 102
RUN                  : 7
SEMICOLON            : 1 2 3 4 5 8 9 10 11 14 15 18 22 23 24 25 26 57 57 57 112
SET_COLOR            : 44
SET_DIMENSION        : 43
SET_TITLE            : 42
SIZE                 : 38
START                : 6
STRING               : 76 78 125
TAIL                 : 40
TBOOL                : 110
TERMS                : 100
TFLOAT               : 108
TINT                 : 107
TLIST                : 
TOBJECT              : 111
TRUE                 : 128
TSTRING              : 109
VAR                  : 8 9 10 11
VOID                 : 6 7 67 68
WHILE                : 61
error                : 

Nonterminals, with rules where they appear

action_recwrite_cte  : 76 78
action_recwrite_exp  : 75 77
add_operator         : 96 100
assign               : 18 57 57
assign_action1       : 47
assign_action2       : 47
block                : 6 7 50 51 51 57 61 65 66 67 68
bool                 : 119
capi                 : 0
condition            : 19
condition_action1    : 50 51
condition_action2    : 50 51
condition_action3    : 51
create_object        : 35
create_text          : 36
cte                  : 103 104
draw                 : 27
exp                  : 86 86 87 87 88 96
exp_action           : 93 94
expression           : 8 9 42 43 43 44 44 44 47 50 51 57 61 75 77 81 84 85 102 112 114
factor               : 97 98
float                : 118
for                  : 55
for_action1          : 57
for_action2          : 57
for_action3          : 57
function             : 72 73
functioncall         : 24 121
global               : 1 3
head                 : 29
id                   : 116
int                  : 117
last                 : 31
listaccess           : 122
logic_action1        : 87
logic_action2        : 87
loop                 : 21
nestedassign         : 25
nestedvalue          : 114 120
primitivetype        : 105 106
recexp               : 93
recfunc              : 1 2 72
recfuncexp           : 37 45 46 82 84
recids               : 8 9 10 11 13
recparams            : 65 67 71
recstatement         : 14 16
recterm              : 97
recwrite             : 74 75 76
relop_action1        : 86
relop_action2        : 86
return               : 23
run                  : 1 2 3 4
set_color            : 34
set_dimension        : 33
set_title            : 32
size                 : 28
specialfunction      : 26 123
start                : 1 2 3 4
startscope_action    : 6 7 50 51 57 61 65 66 67 68
statement            : 16 17
string               : 115
tail                 : 30
term                 : 93 94 100
term_action          : 97 98
type                 : 8 9 10 11 65 66 70 71
vars                 : 5 8 10 20
while                : 56
while_action1        : 61
while_action2        : 61
while_action3        : 61
write                : 22

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (2) capi -> . recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (3) capi -> . global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (4) capi -> . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (5) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (72) recfunc -> . function recfunc
    (73) recfunc -> . function
    (65) function -> . type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (66) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (67) function -> . VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (68) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (105) type -> . primitivetype
    (106) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (107) primitivetype -> . TINT
    (108) primitivetype -> . TFLOAT
    (109) primitivetype -> . TSTRING
    (110) primitivetype -> . TBOOL
    (111) primitivetype -> . TOBJECT

    MAIN            shift and go to state 4
    GLOBAL          shift and go to state 5
    VOID            shift and go to state 8
    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    capi                           shift and go to state 1
    global                         shift and go to state 2
    recfunc                        shift and go to state 3
    function                       shift and go to state 6
    type                           shift and go to state 7
    primitivetype                  shift and go to state 9

state 1

    (0) S' -> capi .



state 2

    (1) capi -> global . recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (3) capi -> global . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (72) recfunc -> . function recfunc
    (73) recfunc -> . function
    (65) function -> . type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (66) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (67) function -> . VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (68) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (105) type -> . primitivetype
    (106) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (107) primitivetype -> . TINT
    (108) primitivetype -> . TFLOAT
    (109) primitivetype -> . TSTRING
    (110) primitivetype -> . TBOOL
    (111) primitivetype -> . TOBJECT

    MAIN            shift and go to state 17
    VOID            shift and go to state 8
    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    recfunc                        shift and go to state 16
    function                       shift and go to state 6
    type                           shift and go to state 7
    primitivetype                  shift and go to state 9

state 3

    (2) capi -> recfunc . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 18


state 4

    (4) capi -> MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 19


state 5

    (5) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 6

    (72) recfunc -> function . recfunc
    (73) recfunc -> function .
    (72) recfunc -> . function recfunc
    (73) recfunc -> . function
    (65) function -> . type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (66) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (67) function -> . VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (68) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (105) type -> . primitivetype
    (106) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (107) primitivetype -> . TINT
    (108) primitivetype -> . TFLOAT
    (109) primitivetype -> . TSTRING
    (110) primitivetype -> . TBOOL
    (111) primitivetype -> . TOBJECT

    MAIN            reduce using rule 73 (recfunc -> function .)
    VOID            shift and go to state 8
    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    function                       shift and go to state 6
    recfunc                        shift and go to state 21
    type                           shift and go to state 7
    primitivetype                  shift and go to state 9

state 7

    (65) function -> type . FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (66) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR block

    FUNC            shift and go to state 22


state 8

    (67) function -> VOID . FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (68) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR block

    FUNC            shift and go to state 23


state 9

    (105) type -> primitivetype .

    FUNC            reduce using rule 105 (type -> primitivetype .)
    EQUAL           reduce using rule 105 (type -> primitivetype .)
    SEMICOLON       reduce using rule 105 (type -> primitivetype .)
    COMMA           reduce using rule 105 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 105 (type -> primitivetype .)


state 10

    (106) type -> LIST . LEFTHAT primitivetype RIGHTHAT

    LEFTHAT         shift and go to state 24


state 11

    (107) primitivetype -> TINT .

    FUNC            reduce using rule 107 (primitivetype -> TINT .)
    RIGHTHAT        reduce using rule 107 (primitivetype -> TINT .)
    EQUAL           reduce using rule 107 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 107 (primitivetype -> TINT .)
    COMMA           reduce using rule 107 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 107 (primitivetype -> TINT .)


state 12

    (108) primitivetype -> TFLOAT .

    FUNC            reduce using rule 108 (primitivetype -> TFLOAT .)
    RIGHTHAT        reduce using rule 108 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 108 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 108 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 108 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 108 (primitivetype -> TFLOAT .)


state 13

    (109) primitivetype -> TSTRING .

    FUNC            reduce using rule 109 (primitivetype -> TSTRING .)
    RIGHTHAT        reduce using rule 109 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 109 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 109 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 109 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 109 (primitivetype -> TSTRING .)


state 14

    (110) primitivetype -> TBOOL .

    FUNC            reduce using rule 110 (primitivetype -> TBOOL .)
    RIGHTHAT        reduce using rule 110 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 110 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 110 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 110 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 110 (primitivetype -> TBOOL .)


state 15

    (111) primitivetype -> TOBJECT .

    FUNC            reduce using rule 111 (primitivetype -> TOBJECT .)
    RIGHTHAT        reduce using rule 111 (primitivetype -> TOBJECT .)
    EQUAL           reduce using rule 111 (primitivetype -> TOBJECT .)
    SEMICOLON       reduce using rule 111 (primitivetype -> TOBJECT .)
    COMMA           reduce using rule 111 (primitivetype -> TOBJECT .)
    RIGHTPAR        reduce using rule 111 (primitivetype -> TOBJECT .)


state 16

    (1) capi -> global recfunc . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 25


state 17

    (3) capi -> global MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 26


state 18

    (2) capi -> recfunc MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (4) capi -> MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 28


state 20

    (5) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (72) recfunc -> function recfunc .

    MAIN            reduce using rule 72 (recfunc -> function recfunc .)


state 22

    (65) function -> type FUNC . ID startscope_action LEFTPAR recparams RIGHTPAR block
    (66) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR block

    ID              shift and go to state 30


state 23

    (67) function -> VOID FUNC . ID startscope_action LEFTPAR recparams RIGHTPAR block
    (68) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR block

    ID              shift and go to state 31


state 24

    (106) type -> LIST LEFTHAT . primitivetype RIGHTHAT
    (107) primitivetype -> . TINT
    (108) primitivetype -> . TFLOAT
    (109) primitivetype -> . TSTRING
    (110) primitivetype -> . TBOOL
    (111) primitivetype -> . TOBJECT

    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    primitivetype                  shift and go to state 32

state 25

    (1) capi -> global recfunc MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 33


state 26

    (3) capi -> global MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 34


state 27

    (2) capi -> recfunc MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (4) capi -> MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 37

    start                          shift and go to state 36

state 29

    (5) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 39

    vars                           shift and go to state 38

state 30

    (65) function -> type FUNC ID . startscope_action LEFTPAR recparams RIGHTPAR block
    (66) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR block
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 40

state 31

    (67) function -> VOID FUNC ID . startscope_action LEFTPAR recparams RIGHTPAR block
    (68) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR block
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (106) type -> LIST LEFTHAT primitivetype . RIGHTHAT

    RIGHTHAT        shift and go to state 42


state 33

    (1) capi -> global recfunc MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 43


state 34

    (3) capi -> global MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 37

    start                          shift and go to state 44

state 35

    (2) capi -> recfunc MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 37

    start                          shift and go to state 45

state 36

    (4) capi -> MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 47

    run                            shift and go to state 46

state 37

    (6) start -> VOID . FUNC START startscope_action LEFTPAR RIGHTPAR block

    FUNC            shift and go to state 48


state 38

    (5) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 49


state 39

    (8) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (10) vars -> VAR . recids COLON type SEMICOLON vars
    (11) vars -> VAR . recids COLON type SEMICOLON
    (12) recids -> . ID
    (13) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 50

state 40

    (65) function -> type FUNC ID startscope_action . LEFTPAR recparams RIGHTPAR block
    (66) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR block

    LEFTPAR         shift and go to state 52


state 41

    (67) function -> VOID FUNC ID startscope_action . LEFTPAR recparams RIGHTPAR block
    (68) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR block

    LEFTPAR         shift and go to state 53


state 42

    (106) type -> LIST LEFTHAT primitivetype RIGHTHAT .

    FUNC            reduce using rule 106 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    EQUAL           reduce using rule 106 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    SEMICOLON       reduce using rule 106 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    COMMA           reduce using rule 106 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    RIGHTPAR        reduce using rule 106 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)


state 43

    (1) capi -> global recfunc MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 37

    start                          shift and go to state 54

state 44

    (3) capi -> global MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 47

    run                            shift and go to state 55

state 45

    (2) capi -> recfunc MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 47

    run                            shift and go to state 56

state 46

    (4) capi -> MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 57


state 47

    (7) run -> VOID . FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    FUNC            shift and go to state 58


state 48

    (6) start -> VOID FUNC . START startscope_action LEFTPAR RIGHTPAR block

    START           shift and go to state 59


state 49

    (5) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 60


state 50

    (8) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (9) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (10) vars -> VAR recids . COLON type SEMICOLON vars
    (11) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 61


state 51

    (12) recids -> ID .
    (13) recids -> ID . COMMA recids

    COLON           reduce using rule 12 (recids -> ID .)
    COMMA           shift and go to state 62


state 52

    (65) function -> type FUNC ID startscope_action LEFTPAR . recparams RIGHTPAR block
    (66) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR block
    (70) recparams -> . ID COLON type
    (71) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 65
    ID              shift and go to state 63

    recparams                      shift and go to state 64

state 53

    (67) function -> VOID FUNC ID startscope_action LEFTPAR . recparams RIGHTPAR block
    (68) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR block
    (70) recparams -> . ID COLON type
    (71) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 67
    ID              shift and go to state 63

    recparams                      shift and go to state 66

state 54

    (1) capi -> global recfunc MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 47

    run                            shift and go to state 68

state 55

    (3) capi -> global MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 69


state 56

    (2) capi -> recfunc MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 70


state 57

    (4) capi -> MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 71


state 58

    (7) run -> VOID FUNC . RUN startscope_action LEFTPAR RIGHTPAR block

    RUN             shift and go to state 72


state 59

    (6) start -> VOID FUNC START . startscope_action LEFTPAR RIGHTPAR block
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 73

state 60

    (5) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 61

    (8) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (9) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (10) vars -> VAR recids COLON . type SEMICOLON vars
    (11) vars -> VAR recids COLON . type SEMICOLON
    (105) type -> . primitivetype
    (106) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (107) primitivetype -> . TINT
    (108) primitivetype -> . TFLOAT
    (109) primitivetype -> . TSTRING
    (110) primitivetype -> . TBOOL
    (111) primitivetype -> . TOBJECT

    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    type                           shift and go to state 74
    primitivetype                  shift and go to state 9

state 62

    (13) recids -> ID COMMA . recids
    (12) recids -> . ID
    (13) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 75

state 63

    (70) recparams -> ID . COLON type
    (71) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 76


state 64

    (65) function -> type FUNC ID startscope_action LEFTPAR recparams . RIGHTPAR block

    RIGHTPAR        shift and go to state 77


state 65

    (66) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 78

state 66

    (67) function -> VOID FUNC ID startscope_action LEFTPAR recparams . RIGHTPAR block

    RIGHTPAR        shift and go to state 80


state 67

    (68) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 81

state 68

    (1) capi -> global recfunc MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 82


state 69

    (3) capi -> global MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 83


state 70

    (2) capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 84


state 71

    (4) capi -> MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 72

    (7) run -> VOID FUNC RUN . startscope_action LEFTPAR RIGHTPAR block
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 85

state 73

    (6) start -> VOID FUNC START startscope_action . LEFTPAR RIGHTPAR block

    LEFTPAR         shift and go to state 86


state 74

    (8) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (9) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (10) vars -> VAR recids COLON type . SEMICOLON vars
    (11) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 87
    SEMICOLON       shift and go to state 88


state 75

    (13) recids -> ID COMMA recids .

    COLON           reduce using rule 13 (recids -> ID COMMA recids .)


state 76

    (70) recparams -> ID COLON . type
    (71) recparams -> ID COLON . type COMMA recparams
    (105) type -> . primitivetype
    (106) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (107) primitivetype -> . TINT
    (108) primitivetype -> . TFLOAT
    (109) primitivetype -> . TSTRING
    (110) primitivetype -> . TBOOL
    (111) primitivetype -> . TOBJECT

    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    type                           shift and go to state 89
    primitivetype                  shift and go to state 9

state 77

    (65) function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 90

state 78

    (66) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .

    VOID            reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    LIST            reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TINT            reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TFLOAT          reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TSTRING         reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TBOOL           reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TOBJECT         reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    MAIN            reduce using rule 66 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)


state 79

    (14) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 91


state 80

    (67) function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 92

state 81

    (68) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .

    VOID            reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    LIST            reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TINT            reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TFLOAT          reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TSTRING         reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TBOOL           reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TOBJECT         reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    MAIN            reduce using rule 68 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)


state 82

    (1) capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 93


state 83

    (3) capi -> global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 84

    (2) capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 85

    (7) run -> VOID FUNC RUN startscope_action . LEFTPAR RIGHTPAR block

    LEFTPAR         shift and go to state 94


state 86

    (6) start -> VOID FUNC START startscope_action LEFTPAR . RIGHTPAR block

    RIGHTPAR        shift and go to state 95


state 87

    (8) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (9) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 96
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 88

    (10) vars -> VAR recids COLON type SEMICOLON . vars
    (11) vars -> VAR recids COLON type SEMICOLON .
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    DRAW            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SIZE            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    HEAD            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    TAIL            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    LAST            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SET_TITLE       reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SET_DIMENSION   reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SET_COLOR       reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_OBJECT   reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 138

state 89

    (70) recparams -> ID COLON type .
    (71) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 70 (recparams -> ID COLON type .)
    COMMA           shift and go to state 139


state 90

    (65) function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .

    VOID            reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    LIST            reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TINT            reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TFLOAT          reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TSTRING         reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TBOOL           reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TOBJECT         reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    MAIN            reduce using rule 65 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)


state 91

    (14) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (15) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (16) recstatement -> . statement recstatement
    (17) recstatement -> . statement
    (18) statement -> . assign SEMICOLON
    (19) statement -> . condition
    (20) statement -> . vars
    (21) statement -> . loop
    (22) statement -> . write SEMICOLON
    (23) statement -> . return SEMICOLON
    (24) statement -> . functioncall SEMICOLON
    (25) statement -> . nestedassign SEMICOLON
    (26) statement -> . specialfunction SEMICOLON
    (47) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (50) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON
    (55) loop -> . for
    (56) loop -> . while
    (74) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (81) return -> . RETURN expression
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (114) nestedassign -> . nestedvalue EQUAL expression
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (57) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (61) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (113) nestedvalue -> . ID DOT ID
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        shift and go to state 141
    ID              shift and go to state 152
    IF              shift and go to state 153
    VAR             shift and go to state 39
    PRINT           shift and go to state 156
    RETURN          shift and go to state 157
    FOR             shift and go to state 159
    WHILE           shift and go to state 160
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    recstatement                   shift and go to state 140
    statement                      shift and go to state 142
    assign                         shift and go to state 143
    condition                      shift and go to state 144
    vars                           shift and go to state 145
    loop                           shift and go to state 146
    write                          shift and go to state 147
    return                         shift and go to state 148
    functioncall                   shift and go to state 149
    nestedassign                   shift and go to state 150
    specialfunction                shift and go to state 151
    for                            shift and go to state 154
    while                          shift and go to state 155
    nestedvalue                    shift and go to state 158
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 92

    (67) function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .

    VOID            reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    LIST            reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TINT            reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TFLOAT          reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TSTRING         reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TBOOL           reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TOBJECT         reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    MAIN            reduce using rule 67 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)


state 93

    (1) capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 94

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR . RIGHTPAR block

    RIGHTPAR        shift and go to state 161


state 95

    (6) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 162

state 96

    (8) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (9) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 163


state 97

    (86) expression -> exp . RELOP relop_action1 exp relop_action2
    (87) expression -> exp . LOGIC logic_action1 exp logic_action2
    (88) expression -> exp .

    RELOP           shift and go to state 164
    LOGIC           shift and go to state 165
    SEMICOLON       reduce using rule 88 (expression -> exp .)
    RIGHTPAR        reduce using rule 88 (expression -> exp .)
    COMMA           reduce using rule 88 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 88 (expression -> exp .)


state 98

    (93) exp -> term . exp_action recexp
    (94) exp -> term . exp_action
    (95) exp_action -> .

    EX              reduce using rule 95 (exp_action -> .)
    RELOP           reduce using rule 95 (exp_action -> .)
    LOGIC           reduce using rule 95 (exp_action -> .)
    SEMICOLON       reduce using rule 95 (exp_action -> .)
    RIGHTPAR        reduce using rule 95 (exp_action -> .)
    COMMA           reduce using rule 95 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 95 (exp_action -> .)

    exp_action                     shift and go to state 166

state 99

    (97) term -> factor . term_action recterm
    (98) term -> factor . term_action
    (99) term_action -> .

    TERMS           reduce using rule 99 (term_action -> .)
    EX              reduce using rule 99 (term_action -> .)
    RELOP           reduce using rule 99 (term_action -> .)
    LOGIC           reduce using rule 99 (term_action -> .)
    SEMICOLON       reduce using rule 99 (term_action -> .)
    RIGHTPAR        reduce using rule 99 (term_action -> .)
    COMMA           reduce using rule 99 (term_action -> .)
    RIGHTBRACKET    reduce using rule 99 (term_action -> .)

    term_action                    shift and go to state 167

state 100

    (102) factor -> LEFTPAR . expression RIGHTPAR
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 168
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 101

    (103) factor -> EX . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    cte                            shift and go to state 169
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 102

    (104) factor -> cte .

    TERMS           reduce using rule 104 (factor -> cte .)
    EX              reduce using rule 104 (factor -> cte .)
    RELOP           reduce using rule 104 (factor -> cte .)
    LOGIC           reduce using rule 104 (factor -> cte .)
    SEMICOLON       reduce using rule 104 (factor -> cte .)
    RIGHTPAR        reduce using rule 104 (factor -> cte .)
    COMMA           reduce using rule 104 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 104 (factor -> cte .)


state 103

    (115) cte -> string .

    TERMS           reduce using rule 115 (cte -> string .)
    EX              reduce using rule 115 (cte -> string .)
    RELOP           reduce using rule 115 (cte -> string .)
    LOGIC           reduce using rule 115 (cte -> string .)
    SEMICOLON       reduce using rule 115 (cte -> string .)
    RIGHTPAR        reduce using rule 115 (cte -> string .)
    COMMA           reduce using rule 115 (cte -> string .)
    RIGHTBRACKET    reduce using rule 115 (cte -> string .)


state 104

    (116) cte -> id .

    TERMS           reduce using rule 116 (cte -> id .)
    EX              reduce using rule 116 (cte -> id .)
    RELOP           reduce using rule 116 (cte -> id .)
    LOGIC           reduce using rule 116 (cte -> id .)
    SEMICOLON       reduce using rule 116 (cte -> id .)
    RIGHTPAR        reduce using rule 116 (cte -> id .)
    COMMA           reduce using rule 116 (cte -> id .)
    RIGHTBRACKET    reduce using rule 116 (cte -> id .)


state 105

    (117) cte -> int .

    TERMS           reduce using rule 117 (cte -> int .)
    EX              reduce using rule 117 (cte -> int .)
    RELOP           reduce using rule 117 (cte -> int .)
    LOGIC           reduce using rule 117 (cte -> int .)
    SEMICOLON       reduce using rule 117 (cte -> int .)
    RIGHTPAR        reduce using rule 117 (cte -> int .)
    COMMA           reduce using rule 117 (cte -> int .)
    RIGHTBRACKET    reduce using rule 117 (cte -> int .)


state 106

    (118) cte -> float .

    TERMS           reduce using rule 118 (cte -> float .)
    EX              reduce using rule 118 (cte -> float .)
    RELOP           reduce using rule 118 (cte -> float .)
    LOGIC           reduce using rule 118 (cte -> float .)
    SEMICOLON       reduce using rule 118 (cte -> float .)
    RIGHTPAR        reduce using rule 118 (cte -> float .)
    COMMA           reduce using rule 118 (cte -> float .)
    RIGHTBRACKET    reduce using rule 118 (cte -> float .)


state 107

    (119) cte -> bool .

    TERMS           reduce using rule 119 (cte -> bool .)
    EX              reduce using rule 119 (cte -> bool .)
    RELOP           reduce using rule 119 (cte -> bool .)
    LOGIC           reduce using rule 119 (cte -> bool .)
    SEMICOLON       reduce using rule 119 (cte -> bool .)
    RIGHTPAR        reduce using rule 119 (cte -> bool .)
    COMMA           reduce using rule 119 (cte -> bool .)
    RIGHTBRACKET    reduce using rule 119 (cte -> bool .)


state 108

    (120) cte -> nestedvalue .

    TERMS           reduce using rule 120 (cte -> nestedvalue .)
    EX              reduce using rule 120 (cte -> nestedvalue .)
    RELOP           reduce using rule 120 (cte -> nestedvalue .)
    LOGIC           reduce using rule 120 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 120 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 120 (cte -> nestedvalue .)
    COMMA           reduce using rule 120 (cte -> nestedvalue .)
    RIGHTBRACKET    reduce using rule 120 (cte -> nestedvalue .)


state 109

    (121) cte -> functioncall .

    TERMS           reduce using rule 121 (cte -> functioncall .)
    EX              reduce using rule 121 (cte -> functioncall .)
    RELOP           reduce using rule 121 (cte -> functioncall .)
    LOGIC           reduce using rule 121 (cte -> functioncall .)
    SEMICOLON       reduce using rule 121 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 121 (cte -> functioncall .)
    COMMA           reduce using rule 121 (cte -> functioncall .)
    RIGHTBRACKET    reduce using rule 121 (cte -> functioncall .)


state 110

    (122) cte -> listaccess .

    TERMS           reduce using rule 122 (cte -> listaccess .)
    EX              reduce using rule 122 (cte -> listaccess .)
    RELOP           reduce using rule 122 (cte -> listaccess .)
    LOGIC           reduce using rule 122 (cte -> listaccess .)
    SEMICOLON       reduce using rule 122 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 122 (cte -> listaccess .)
    COMMA           reduce using rule 122 (cte -> listaccess .)
    RIGHTBRACKET    reduce using rule 122 (cte -> listaccess .)


state 111

    (123) cte -> specialfunction .

    TERMS           reduce using rule 123 (cte -> specialfunction .)
    EX              reduce using rule 123 (cte -> specialfunction .)
    RELOP           reduce using rule 123 (cte -> specialfunction .)
    LOGIC           reduce using rule 123 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 123 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 123 (cte -> specialfunction .)
    COMMA           reduce using rule 123 (cte -> specialfunction .)
    RIGHTBRACKET    reduce using rule 123 (cte -> specialfunction .)


state 112

    (125) string -> STRING .

    TERMS           reduce using rule 125 (string -> STRING .)
    EX              reduce using rule 125 (string -> STRING .)
    RELOP           reduce using rule 125 (string -> STRING .)
    LOGIC           reduce using rule 125 (string -> STRING .)
    SEMICOLON       reduce using rule 125 (string -> STRING .)
    RIGHTPAR        reduce using rule 125 (string -> STRING .)
    COMMA           reduce using rule 125 (string -> STRING .)
    RIGHTBRACKET    reduce using rule 125 (string -> STRING .)


state 113

    (124) id -> ID .
    (113) nestedvalue -> ID . DOT ID
    (82) functioncall -> ID . LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> ID . LEFTPAR RIGHTPAR
    (112) listaccess -> ID . LEFTBRACKET expression RIGHTBRACKET SEMICOLON

    TERMS           reduce using rule 124 (id -> ID .)
    EX              reduce using rule 124 (id -> ID .)
    RELOP           reduce using rule 124 (id -> ID .)
    LOGIC           reduce using rule 124 (id -> ID .)
    SEMICOLON       reduce using rule 124 (id -> ID .)
    RIGHTPAR        reduce using rule 124 (id -> ID .)
    COMMA           reduce using rule 124 (id -> ID .)
    RIGHTBRACKET    reduce using rule 124 (id -> ID .)
    DOT             shift and go to state 170
    LEFTPAR         shift and go to state 171
    LEFTBRACKET     shift and go to state 172


state 114

    (126) int -> INT .

    TERMS           reduce using rule 126 (int -> INT .)
    EX              reduce using rule 126 (int -> INT .)
    RELOP           reduce using rule 126 (int -> INT .)
    LOGIC           reduce using rule 126 (int -> INT .)
    SEMICOLON       reduce using rule 126 (int -> INT .)
    RIGHTPAR        reduce using rule 126 (int -> INT .)
    COMMA           reduce using rule 126 (int -> INT .)
    RIGHTBRACKET    reduce using rule 126 (int -> INT .)


state 115

    (127) float -> FLOAT .

    TERMS           reduce using rule 127 (float -> FLOAT .)
    EX              reduce using rule 127 (float -> FLOAT .)
    RELOP           reduce using rule 127 (float -> FLOAT .)
    LOGIC           reduce using rule 127 (float -> FLOAT .)
    SEMICOLON       reduce using rule 127 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 127 (float -> FLOAT .)
    COMMA           reduce using rule 127 (float -> FLOAT .)
    RIGHTBRACKET    reduce using rule 127 (float -> FLOAT .)


state 116

    (128) bool -> TRUE .

    TERMS           reduce using rule 128 (bool -> TRUE .)
    EX              reduce using rule 128 (bool -> TRUE .)
    RELOP           reduce using rule 128 (bool -> TRUE .)
    LOGIC           reduce using rule 128 (bool -> TRUE .)
    SEMICOLON       reduce using rule 128 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 128 (bool -> TRUE .)
    COMMA           reduce using rule 128 (bool -> TRUE .)
    RIGHTBRACKET    reduce using rule 128 (bool -> TRUE .)


state 117

    (129) bool -> FALSE .

    TERMS           reduce using rule 129 (bool -> FALSE .)
    EX              reduce using rule 129 (bool -> FALSE .)
    RELOP           reduce using rule 129 (bool -> FALSE .)
    LOGIC           reduce using rule 129 (bool -> FALSE .)
    SEMICOLON       reduce using rule 129 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 129 (bool -> FALSE .)
    COMMA           reduce using rule 129 (bool -> FALSE .)
    RIGHTBRACKET    reduce using rule 129 (bool -> FALSE .)


state 118

    (27) specialfunction -> draw .

    TERMS           reduce using rule 27 (specialfunction -> draw .)
    EX              reduce using rule 27 (specialfunction -> draw .)
    RELOP           reduce using rule 27 (specialfunction -> draw .)
    LOGIC           reduce using rule 27 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 27 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 27 (specialfunction -> draw .)
    COMMA           reduce using rule 27 (specialfunction -> draw .)
    RIGHTBRACKET    reduce using rule 27 (specialfunction -> draw .)


state 119

    (28) specialfunction -> size .

    TERMS           reduce using rule 28 (specialfunction -> size .)
    EX              reduce using rule 28 (specialfunction -> size .)
    RELOP           reduce using rule 28 (specialfunction -> size .)
    LOGIC           reduce using rule 28 (specialfunction -> size .)
    SEMICOLON       reduce using rule 28 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 28 (specialfunction -> size .)
    COMMA           reduce using rule 28 (specialfunction -> size .)
    RIGHTBRACKET    reduce using rule 28 (specialfunction -> size .)


state 120

    (29) specialfunction -> head .

    TERMS           reduce using rule 29 (specialfunction -> head .)
    EX              reduce using rule 29 (specialfunction -> head .)
    RELOP           reduce using rule 29 (specialfunction -> head .)
    LOGIC           reduce using rule 29 (specialfunction -> head .)
    SEMICOLON       reduce using rule 29 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 29 (specialfunction -> head .)
    COMMA           reduce using rule 29 (specialfunction -> head .)
    RIGHTBRACKET    reduce using rule 29 (specialfunction -> head .)


state 121

    (30) specialfunction -> tail .

    TERMS           reduce using rule 30 (specialfunction -> tail .)
    EX              reduce using rule 30 (specialfunction -> tail .)
    RELOP           reduce using rule 30 (specialfunction -> tail .)
    LOGIC           reduce using rule 30 (specialfunction -> tail .)
    SEMICOLON       reduce using rule 30 (specialfunction -> tail .)
    RIGHTPAR        reduce using rule 30 (specialfunction -> tail .)
    COMMA           reduce using rule 30 (specialfunction -> tail .)
    RIGHTBRACKET    reduce using rule 30 (specialfunction -> tail .)


state 122

    (31) specialfunction -> last .

    TERMS           reduce using rule 31 (specialfunction -> last .)
    EX              reduce using rule 31 (specialfunction -> last .)
    RELOP           reduce using rule 31 (specialfunction -> last .)
    LOGIC           reduce using rule 31 (specialfunction -> last .)
    SEMICOLON       reduce using rule 31 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 31 (specialfunction -> last .)
    COMMA           reduce using rule 31 (specialfunction -> last .)
    RIGHTBRACKET    reduce using rule 31 (specialfunction -> last .)


state 123

    (32) specialfunction -> set_title .

    TERMS           reduce using rule 32 (specialfunction -> set_title .)
    EX              reduce using rule 32 (specialfunction -> set_title .)
    RELOP           reduce using rule 32 (specialfunction -> set_title .)
    LOGIC           reduce using rule 32 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 32 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> set_title .)
    COMMA           reduce using rule 32 (specialfunction -> set_title .)
    RIGHTBRACKET    reduce using rule 32 (specialfunction -> set_title .)


state 124

    (33) specialfunction -> set_dimension .

    TERMS           reduce using rule 33 (specialfunction -> set_dimension .)
    EX              reduce using rule 33 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 33 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 33 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 33 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 33 (specialfunction -> set_dimension .)
    RIGHTBRACKET    reduce using rule 33 (specialfunction -> set_dimension .)


state 125

    (34) specialfunction -> set_color .

    TERMS           reduce using rule 34 (specialfunction -> set_color .)
    EX              reduce using rule 34 (specialfunction -> set_color .)
    RELOP           reduce using rule 34 (specialfunction -> set_color .)
    LOGIC           reduce using rule 34 (specialfunction -> set_color .)
    SEMICOLON       reduce using rule 34 (specialfunction -> set_color .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> set_color .)
    COMMA           reduce using rule 34 (specialfunction -> set_color .)
    RIGHTBRACKET    reduce using rule 34 (specialfunction -> set_color .)


state 126

    (35) specialfunction -> create_object .

    TERMS           reduce using rule 35 (specialfunction -> create_object .)
    EX              reduce using rule 35 (specialfunction -> create_object .)
    RELOP           reduce using rule 35 (specialfunction -> create_object .)
    LOGIC           reduce using rule 35 (specialfunction -> create_object .)
    SEMICOLON       reduce using rule 35 (specialfunction -> create_object .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> create_object .)
    COMMA           reduce using rule 35 (specialfunction -> create_object .)
    RIGHTBRACKET    reduce using rule 35 (specialfunction -> create_object .)


state 127

    (36) specialfunction -> create_text .

    TERMS           reduce using rule 36 (specialfunction -> create_text .)
    EX              reduce using rule 36 (specialfunction -> create_text .)
    RELOP           reduce using rule 36 (specialfunction -> create_text .)
    LOGIC           reduce using rule 36 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 36 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> create_text .)
    COMMA           reduce using rule 36 (specialfunction -> create_text .)
    RIGHTBRACKET    reduce using rule 36 (specialfunction -> create_text .)


state 128

    (37) draw -> DRAW . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 173


state 129

    (38) size -> SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 174


state 130

    (39) head -> HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 175


state 131

    (40) tail -> TAIL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 176


state 132

    (41) last -> LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 177


state 133

    (42) set_title -> SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 178


state 134

    (43) set_dimension -> SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 179


state 135

    (44) set_color -> SET_COLOR . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 180


state 136

    (45) create_object -> CREATE_OBJECT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 181


state 137

    (46) create_text -> CREATE_TEXT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 182


state 138

    (10) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    DRAW            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SIZE            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    HEAD            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    TAIL            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    LAST            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_TITLE       reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_COLOR       reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)


state 139

    (71) recparams -> ID COLON type COMMA . recparams
    (70) recparams -> . ID COLON type
    (71) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 63

    recparams                      shift and go to state 183

state 140

    (14) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 184


state 141

    (15) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 185


state 142

    (16) recstatement -> statement . recstatement
    (17) recstatement -> statement .
    (16) recstatement -> . statement recstatement
    (17) recstatement -> . statement
    (18) statement -> . assign SEMICOLON
    (19) statement -> . condition
    (20) statement -> . vars
    (21) statement -> . loop
    (22) statement -> . write SEMICOLON
    (23) statement -> . return SEMICOLON
    (24) statement -> . functioncall SEMICOLON
    (25) statement -> . nestedassign SEMICOLON
    (26) statement -> . specialfunction SEMICOLON
    (47) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (50) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> . IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON
    (55) loop -> . for
    (56) loop -> . while
    (74) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (81) return -> . RETURN expression
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (114) nestedassign -> . nestedvalue EQUAL expression
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (57) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (61) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (113) nestedvalue -> . ID DOT ID
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        reduce using rule 17 (recstatement -> statement .)
    ID              shift and go to state 152
    IF              shift and go to state 153
    VAR             shift and go to state 39
    PRINT           shift and go to state 156
    RETURN          shift and go to state 157
    FOR             shift and go to state 159
    WHILE           shift and go to state 160
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    statement                      shift and go to state 142
    recstatement                   shift and go to state 186
    assign                         shift and go to state 143
    condition                      shift and go to state 144
    vars                           shift and go to state 145
    loop                           shift and go to state 146
    write                          shift and go to state 147
    return                         shift and go to state 148
    functioncall                   shift and go to state 149
    nestedassign                   shift and go to state 150
    specialfunction                shift and go to state 151
    for                            shift and go to state 154
    while                          shift and go to state 155
    nestedvalue                    shift and go to state 158
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 143

    (18) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 187


state 144

    (19) statement -> condition .

    ID              reduce using rule 19 (statement -> condition .)
    IF              reduce using rule 19 (statement -> condition .)
    VAR             reduce using rule 19 (statement -> condition .)
    PRINT           reduce using rule 19 (statement -> condition .)
    RETURN          reduce using rule 19 (statement -> condition .)
    FOR             reduce using rule 19 (statement -> condition .)
    WHILE           reduce using rule 19 (statement -> condition .)
    DRAW            reduce using rule 19 (statement -> condition .)
    SIZE            reduce using rule 19 (statement -> condition .)
    HEAD            reduce using rule 19 (statement -> condition .)
    TAIL            reduce using rule 19 (statement -> condition .)
    LAST            reduce using rule 19 (statement -> condition .)
    SET_TITLE       reduce using rule 19 (statement -> condition .)
    SET_DIMENSION   reduce using rule 19 (statement -> condition .)
    SET_COLOR       reduce using rule 19 (statement -> condition .)
    CREATE_OBJECT   reduce using rule 19 (statement -> condition .)
    CREATE_TEXT     reduce using rule 19 (statement -> condition .)
    RIGHTKEY        reduce using rule 19 (statement -> condition .)


state 145

    (20) statement -> vars .

    ID              reduce using rule 20 (statement -> vars .)
    IF              reduce using rule 20 (statement -> vars .)
    VAR             reduce using rule 20 (statement -> vars .)
    PRINT           reduce using rule 20 (statement -> vars .)
    RETURN          reduce using rule 20 (statement -> vars .)
    FOR             reduce using rule 20 (statement -> vars .)
    WHILE           reduce using rule 20 (statement -> vars .)
    DRAW            reduce using rule 20 (statement -> vars .)
    SIZE            reduce using rule 20 (statement -> vars .)
    HEAD            reduce using rule 20 (statement -> vars .)
    TAIL            reduce using rule 20 (statement -> vars .)
    LAST            reduce using rule 20 (statement -> vars .)
    SET_TITLE       reduce using rule 20 (statement -> vars .)
    SET_DIMENSION   reduce using rule 20 (statement -> vars .)
    SET_COLOR       reduce using rule 20 (statement -> vars .)
    CREATE_OBJECT   reduce using rule 20 (statement -> vars .)
    CREATE_TEXT     reduce using rule 20 (statement -> vars .)
    RIGHTKEY        reduce using rule 20 (statement -> vars .)


state 146

    (21) statement -> loop .

    ID              reduce using rule 21 (statement -> loop .)
    IF              reduce using rule 21 (statement -> loop .)
    VAR             reduce using rule 21 (statement -> loop .)
    PRINT           reduce using rule 21 (statement -> loop .)
    RETURN          reduce using rule 21 (statement -> loop .)
    FOR             reduce using rule 21 (statement -> loop .)
    WHILE           reduce using rule 21 (statement -> loop .)
    DRAW            reduce using rule 21 (statement -> loop .)
    SIZE            reduce using rule 21 (statement -> loop .)
    HEAD            reduce using rule 21 (statement -> loop .)
    TAIL            reduce using rule 21 (statement -> loop .)
    LAST            reduce using rule 21 (statement -> loop .)
    SET_TITLE       reduce using rule 21 (statement -> loop .)
    SET_DIMENSION   reduce using rule 21 (statement -> loop .)
    SET_COLOR       reduce using rule 21 (statement -> loop .)
    CREATE_OBJECT   reduce using rule 21 (statement -> loop .)
    CREATE_TEXT     reduce using rule 21 (statement -> loop .)
    RIGHTKEY        reduce using rule 21 (statement -> loop .)


state 147

    (22) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 188


state 148

    (23) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 189


state 149

    (24) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 190


state 150

    (25) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 191


state 151

    (26) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 192


state 152

    (47) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (82) functioncall -> ID . LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> ID . LEFTPAR RIGHTPAR
    (113) nestedvalue -> ID . DOT ID
    (48) assign_action1 -> .

    LEFTPAR         shift and go to state 171
    DOT             shift and go to state 170
    EQUAL           reduce using rule 48 (assign_action1 -> .)

    assign_action1                 shift and go to state 193

state 153

    (50) condition -> IF . startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> IF . startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 194

state 154

    (55) loop -> for .

    ID              reduce using rule 55 (loop -> for .)
    IF              reduce using rule 55 (loop -> for .)
    VAR             reduce using rule 55 (loop -> for .)
    PRINT           reduce using rule 55 (loop -> for .)
    RETURN          reduce using rule 55 (loop -> for .)
    FOR             reduce using rule 55 (loop -> for .)
    WHILE           reduce using rule 55 (loop -> for .)
    DRAW            reduce using rule 55 (loop -> for .)
    SIZE            reduce using rule 55 (loop -> for .)
    HEAD            reduce using rule 55 (loop -> for .)
    TAIL            reduce using rule 55 (loop -> for .)
    LAST            reduce using rule 55 (loop -> for .)
    SET_TITLE       reduce using rule 55 (loop -> for .)
    SET_DIMENSION   reduce using rule 55 (loop -> for .)
    SET_COLOR       reduce using rule 55 (loop -> for .)
    CREATE_OBJECT   reduce using rule 55 (loop -> for .)
    CREATE_TEXT     reduce using rule 55 (loop -> for .)
    RIGHTKEY        reduce using rule 55 (loop -> for .)


state 155

    (56) loop -> while .

    ID              reduce using rule 56 (loop -> while .)
    IF              reduce using rule 56 (loop -> while .)
    VAR             reduce using rule 56 (loop -> while .)
    PRINT           reduce using rule 56 (loop -> while .)
    RETURN          reduce using rule 56 (loop -> while .)
    FOR             reduce using rule 56 (loop -> while .)
    WHILE           reduce using rule 56 (loop -> while .)
    DRAW            reduce using rule 56 (loop -> while .)
    SIZE            reduce using rule 56 (loop -> while .)
    HEAD            reduce using rule 56 (loop -> while .)
    TAIL            reduce using rule 56 (loop -> while .)
    LAST            reduce using rule 56 (loop -> while .)
    SET_TITLE       reduce using rule 56 (loop -> while .)
    SET_DIMENSION   reduce using rule 56 (loop -> while .)
    SET_COLOR       reduce using rule 56 (loop -> while .)
    CREATE_OBJECT   reduce using rule 56 (loop -> while .)
    CREATE_TEXT     reduce using rule 56 (loop -> while .)
    RIGHTKEY        reduce using rule 56 (loop -> while .)


state 156

    (74) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 195


state 157

    (81) return -> RETURN . expression
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 196
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 158

    (114) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 197


state 159

    (57) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 198

state 160

    (61) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (69) startscope_action -> .

    LEFTPAR         reduce using rule 69 (startscope_action -> .)

    startscope_action              shift and go to state 199

state 161

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 200

state 162

    (6) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR block .

    VOID            reduce using rule 6 (start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR block .)


state 163

    (8) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (9) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    DRAW            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SIZE            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    HEAD            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    TAIL            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    LAST            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_TITLE       reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_DIMENSION   reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_COLOR       reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_OBJECT   reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 201

state 164

    (86) expression -> exp RELOP . relop_action1 exp relop_action2
    (89) relop_action1 -> .

    LEFTPAR         reduce using rule 89 (relop_action1 -> .)
    EX              reduce using rule 89 (relop_action1 -> .)
    STRING          reduce using rule 89 (relop_action1 -> .)
    ID              reduce using rule 89 (relop_action1 -> .)
    INT             reduce using rule 89 (relop_action1 -> .)
    FLOAT           reduce using rule 89 (relop_action1 -> .)
    TRUE            reduce using rule 89 (relop_action1 -> .)
    FALSE           reduce using rule 89 (relop_action1 -> .)
    DRAW            reduce using rule 89 (relop_action1 -> .)
    SIZE            reduce using rule 89 (relop_action1 -> .)
    HEAD            reduce using rule 89 (relop_action1 -> .)
    TAIL            reduce using rule 89 (relop_action1 -> .)
    LAST            reduce using rule 89 (relop_action1 -> .)
    SET_TITLE       reduce using rule 89 (relop_action1 -> .)
    SET_DIMENSION   reduce using rule 89 (relop_action1 -> .)
    SET_COLOR       reduce using rule 89 (relop_action1 -> .)
    CREATE_OBJECT   reduce using rule 89 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 89 (relop_action1 -> .)

    relop_action1                  shift and go to state 202

state 165

    (87) expression -> exp LOGIC . logic_action1 exp logic_action2
    (91) logic_action1 -> .

    LEFTPAR         reduce using rule 91 (logic_action1 -> .)
    EX              reduce using rule 91 (logic_action1 -> .)
    STRING          reduce using rule 91 (logic_action1 -> .)
    ID              reduce using rule 91 (logic_action1 -> .)
    INT             reduce using rule 91 (logic_action1 -> .)
    FLOAT           reduce using rule 91 (logic_action1 -> .)
    TRUE            reduce using rule 91 (logic_action1 -> .)
    FALSE           reduce using rule 91 (logic_action1 -> .)
    DRAW            reduce using rule 91 (logic_action1 -> .)
    SIZE            reduce using rule 91 (logic_action1 -> .)
    HEAD            reduce using rule 91 (logic_action1 -> .)
    TAIL            reduce using rule 91 (logic_action1 -> .)
    LAST            reduce using rule 91 (logic_action1 -> .)
    SET_TITLE       reduce using rule 91 (logic_action1 -> .)
    SET_DIMENSION   reduce using rule 91 (logic_action1 -> .)
    SET_COLOR       reduce using rule 91 (logic_action1 -> .)
    CREATE_OBJECT   reduce using rule 91 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 91 (logic_action1 -> .)

    logic_action1                  shift and go to state 203

state 166

    (93) exp -> term exp_action . recexp
    (94) exp -> term exp_action .
    (96) recexp -> . EX add_operator exp

    RELOP           reduce using rule 94 (exp -> term exp_action .)
    LOGIC           reduce using rule 94 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 94 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 94 (exp -> term exp_action .)
    COMMA           reduce using rule 94 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 94 (exp -> term exp_action .)
    EX              shift and go to state 205

    recexp                         shift and go to state 204

state 167

    (97) term -> factor term_action . recterm
    (98) term -> factor term_action .
    (100) recterm -> . TERMS add_operator term

    EX              reduce using rule 98 (term -> factor term_action .)
    RELOP           reduce using rule 98 (term -> factor term_action .)
    LOGIC           reduce using rule 98 (term -> factor term_action .)
    SEMICOLON       reduce using rule 98 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 98 (term -> factor term_action .)
    COMMA           reduce using rule 98 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 98 (term -> factor term_action .)
    TERMS           shift and go to state 207

    recterm                        shift and go to state 206

state 168

    (102) factor -> LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 208


state 169

    (103) factor -> EX cte .

    TERMS           reduce using rule 103 (factor -> EX cte .)
    EX              reduce using rule 103 (factor -> EX cte .)
    RELOP           reduce using rule 103 (factor -> EX cte .)
    LOGIC           reduce using rule 103 (factor -> EX cte .)
    SEMICOLON       reduce using rule 103 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 103 (factor -> EX cte .)
    COMMA           reduce using rule 103 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 103 (factor -> EX cte .)


state 170

    (113) nestedvalue -> ID DOT . ID

    ID              shift and go to state 209


state 171

    (82) functioncall -> ID LEFTPAR . recfuncexp RIGHTPAR
    (83) functioncall -> ID LEFTPAR . RIGHTPAR
    (84) recfuncexp -> . expression COMMA recfuncexp
    (85) recfuncexp -> . expression
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTPAR        shift and go to state 211
    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    recfuncexp                     shift and go to state 210
    expression                     shift and go to state 212
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 172

    (112) listaccess -> ID LEFTBRACKET . expression RIGHTBRACKET SEMICOLON
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 213
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 173

    (37) draw -> DRAW LEFTPAR . recfuncexp RIGHTPAR
    (84) recfuncexp -> . expression COMMA recfuncexp
    (85) recfuncexp -> . expression
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    recfuncexp                     shift and go to state 214
    expression                     shift and go to state 212
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 174

    (38) size -> SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 215


state 175

    (39) head -> HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 216


state 176

    (40) tail -> TAIL LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 217


state 177

    (41) last -> LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 218


state 178

    (42) set_title -> SET_TITLE LEFTPAR . expression RIGHTPAR
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 219
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 179

    (43) set_dimension -> SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 220
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 180

    (44) set_color -> SET_COLOR LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 221
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 181

    (45) create_object -> CREATE_OBJECT LEFTPAR . recfuncexp RIGHTPAR
    (84) recfuncexp -> . expression COMMA recfuncexp
    (85) recfuncexp -> . expression
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    recfuncexp                     shift and go to state 222
    expression                     shift and go to state 212
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 182

    (46) create_text -> CREATE_TEXT LEFTPAR . recfuncexp RIGHTPAR
    (84) recfuncexp -> . expression COMMA recfuncexp
    (85) recfuncexp -> . expression
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    recfuncexp                     shift and go to state 223
    expression                     shift and go to state 212
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 183

    (71) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 71 (recparams -> ID COLON type COMMA recparams .)


state 184

    (14) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 224


state 185

    (15) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 186

    (16) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 16 (recstatement -> statement recstatement .)


state 187

    (18) statement -> assign SEMICOLON .

    ID              reduce using rule 18 (statement -> assign SEMICOLON .)
    IF              reduce using rule 18 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 18 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 18 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 18 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 18 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 18 (statement -> assign SEMICOLON .)
    DRAW            reduce using rule 18 (statement -> assign SEMICOLON .)
    SIZE            reduce using rule 18 (statement -> assign SEMICOLON .)
    HEAD            reduce using rule 18 (statement -> assign SEMICOLON .)
    TAIL            reduce using rule 18 (statement -> assign SEMICOLON .)
    LAST            reduce using rule 18 (statement -> assign SEMICOLON .)
    SET_TITLE       reduce using rule 18 (statement -> assign SEMICOLON .)
    SET_DIMENSION   reduce using rule 18 (statement -> assign SEMICOLON .)
    SET_COLOR       reduce using rule 18 (statement -> assign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 18 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 18 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 18 (statement -> assign SEMICOLON .)


state 188

    (22) statement -> write SEMICOLON .

    ID              reduce using rule 22 (statement -> write SEMICOLON .)
    IF              reduce using rule 22 (statement -> write SEMICOLON .)
    VAR             reduce using rule 22 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 22 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 22 (statement -> write SEMICOLON .)
    FOR             reduce using rule 22 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> write SEMICOLON .)
    DRAW            reduce using rule 22 (statement -> write SEMICOLON .)
    SIZE            reduce using rule 22 (statement -> write SEMICOLON .)
    HEAD            reduce using rule 22 (statement -> write SEMICOLON .)
    TAIL            reduce using rule 22 (statement -> write SEMICOLON .)
    LAST            reduce using rule 22 (statement -> write SEMICOLON .)
    SET_TITLE       reduce using rule 22 (statement -> write SEMICOLON .)
    SET_DIMENSION   reduce using rule 22 (statement -> write SEMICOLON .)
    SET_COLOR       reduce using rule 22 (statement -> write SEMICOLON .)
    CREATE_OBJECT   reduce using rule 22 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 22 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 22 (statement -> write SEMICOLON .)


state 189

    (23) statement -> return SEMICOLON .

    ID              reduce using rule 23 (statement -> return SEMICOLON .)
    IF              reduce using rule 23 (statement -> return SEMICOLON .)
    VAR             reduce using rule 23 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> return SEMICOLON .)
    FOR             reduce using rule 23 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> return SEMICOLON .)
    DRAW            reduce using rule 23 (statement -> return SEMICOLON .)
    SIZE            reduce using rule 23 (statement -> return SEMICOLON .)
    HEAD            reduce using rule 23 (statement -> return SEMICOLON .)
    TAIL            reduce using rule 23 (statement -> return SEMICOLON .)
    LAST            reduce using rule 23 (statement -> return SEMICOLON .)
    SET_TITLE       reduce using rule 23 (statement -> return SEMICOLON .)
    SET_DIMENSION   reduce using rule 23 (statement -> return SEMICOLON .)
    SET_COLOR       reduce using rule 23 (statement -> return SEMICOLON .)
    CREATE_OBJECT   reduce using rule 23 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> return SEMICOLON .)


state 190

    (24) statement -> functioncall SEMICOLON .

    ID              reduce using rule 24 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 24 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 24 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 24 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 24 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 24 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 24 (statement -> functioncall SEMICOLON .)
    DRAW            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SIZE            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    HEAD            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    TAIL            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    LAST            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SET_TITLE       reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SET_DIMENSION   reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SET_COLOR       reduce using rule 24 (statement -> functioncall SEMICOLON .)
    CREATE_OBJECT   reduce using rule 24 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 24 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 24 (statement -> functioncall SEMICOLON .)


state 191

    (25) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    DRAW            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SIZE            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    HEAD            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    TAIL            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    LAST            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SET_TITLE       reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SET_DIMENSION   reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SET_COLOR       reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 25 (statement -> nestedassign SEMICOLON .)


state 192

    (26) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    DRAW            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SIZE            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    HEAD            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    TAIL            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    LAST            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SET_TITLE       reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SET_DIMENSION   reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SET_COLOR       reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    CREATE_OBJECT   reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 26 (statement -> specialfunction SEMICOLON .)


state 193

    (47) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 225


state 194

    (50) condition -> IF startscope_action . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> IF startscope_action . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 226


state 195

    (74) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (75) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (76) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (77) recwrite -> . expression action_recwrite_exp
    (78) recwrite -> . STRING action_recwrite_cte
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 229
    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    recwrite                       shift and go to state 227
    expression                     shift and go to state 228
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 196

    (81) return -> RETURN expression .

    SEMICOLON       reduce using rule 81 (return -> RETURN expression .)


state 197

    (114) nestedassign -> nestedvalue EQUAL . expression
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    nestedvalue                    shift and go to state 108
    expression                     shift and go to state 230
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 198

    (57) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 231


state 199

    (61) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (62) while_action1 -> .

    LEFTPAR         reduce using rule 62 (while_action1 -> .)

    while_action1                  shift and go to state 232

state 200

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block .

    RIGHTKEY        reduce using rule 7 (run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block .)


state 201

    (8) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    DRAW            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SIZE            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    HEAD            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    TAIL            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    LAST            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_TITLE       reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_COLOR       reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 202

    (86) expression -> exp RELOP relop_action1 . exp relop_action2
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    exp                            shift and go to state 233
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 203

    (87) expression -> exp LOGIC logic_action1 . exp logic_action2
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    exp                            shift and go to state 234
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 204

    (93) exp -> term exp_action recexp .

    RELOP           reduce using rule 93 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 93 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 93 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 93 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 93 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 93 (exp -> term exp_action recexp .)


state 205

    (96) recexp -> EX . add_operator exp
    (101) add_operator -> .

    LEFTPAR         reduce using rule 101 (add_operator -> .)
    EX              reduce using rule 101 (add_operator -> .)
    STRING          reduce using rule 101 (add_operator -> .)
    ID              reduce using rule 101 (add_operator -> .)
    INT             reduce using rule 101 (add_operator -> .)
    FLOAT           reduce using rule 101 (add_operator -> .)
    TRUE            reduce using rule 101 (add_operator -> .)
    FALSE           reduce using rule 101 (add_operator -> .)
    DRAW            reduce using rule 101 (add_operator -> .)
    SIZE            reduce using rule 101 (add_operator -> .)
    HEAD            reduce using rule 101 (add_operator -> .)
    TAIL            reduce using rule 101 (add_operator -> .)
    LAST            reduce using rule 101 (add_operator -> .)
    SET_TITLE       reduce using rule 101 (add_operator -> .)
    SET_DIMENSION   reduce using rule 101 (add_operator -> .)
    SET_COLOR       reduce using rule 101 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 101 (add_operator -> .)
    CREATE_TEXT     reduce using rule 101 (add_operator -> .)

    add_operator                   shift and go to state 235

state 206

    (97) term -> factor term_action recterm .

    EX              reduce using rule 97 (term -> factor term_action recterm .)
    RELOP           reduce using rule 97 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 97 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 97 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 97 (term -> factor term_action recterm .)
    COMMA           reduce using rule 97 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 97 (term -> factor term_action recterm .)


state 207

    (100) recterm -> TERMS . add_operator term
    (101) add_operator -> .

    LEFTPAR         reduce using rule 101 (add_operator -> .)
    EX              reduce using rule 101 (add_operator -> .)
    STRING          reduce using rule 101 (add_operator -> .)
    ID              reduce using rule 101 (add_operator -> .)
    INT             reduce using rule 101 (add_operator -> .)
    FLOAT           reduce using rule 101 (add_operator -> .)
    TRUE            reduce using rule 101 (add_operator -> .)
    FALSE           reduce using rule 101 (add_operator -> .)
    DRAW            reduce using rule 101 (add_operator -> .)
    SIZE            reduce using rule 101 (add_operator -> .)
    HEAD            reduce using rule 101 (add_operator -> .)
    TAIL            reduce using rule 101 (add_operator -> .)
    LAST            reduce using rule 101 (add_operator -> .)
    SET_TITLE       reduce using rule 101 (add_operator -> .)
    SET_DIMENSION   reduce using rule 101 (add_operator -> .)
    SET_COLOR       reduce using rule 101 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 101 (add_operator -> .)
    CREATE_TEXT     reduce using rule 101 (add_operator -> .)

    add_operator                   shift and go to state 236

state 208

    (102) factor -> LEFTPAR expression RIGHTPAR .

    TERMS           reduce using rule 102 (factor -> LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 102 (factor -> LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 102 (factor -> LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 102 (factor -> LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 102 (factor -> LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 102 (factor -> LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 102 (factor -> LEFTPAR expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 102 (factor -> LEFTPAR expression RIGHTPAR .)


state 209

    (113) nestedvalue -> ID DOT ID .

    TERMS           reduce using rule 113 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 113 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 113 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 113 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 113 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 113 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 113 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 113 (nestedvalue -> ID DOT ID .)
    RIGHTBRACKET    reduce using rule 113 (nestedvalue -> ID DOT ID .)


state 210

    (82) functioncall -> ID LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 237


state 211

    (83) functioncall -> ID LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 83 (functioncall -> ID LEFTPAR RIGHTPAR .)
    EX              reduce using rule 83 (functioncall -> ID LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 83 (functioncall -> ID LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 83 (functioncall -> ID LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 83 (functioncall -> ID LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 83 (functioncall -> ID LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 83 (functioncall -> ID LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 83 (functioncall -> ID LEFTPAR RIGHTPAR .)


state 212

    (84) recfuncexp -> expression . COMMA recfuncexp
    (85) recfuncexp -> expression .

    COMMA           shift and go to state 238
    RIGHTPAR        reduce using rule 85 (recfuncexp -> expression .)


state 213

    (112) listaccess -> ID LEFTBRACKET expression . RIGHTBRACKET SEMICOLON

    RIGHTBRACKET    shift and go to state 239


state 214

    (37) draw -> DRAW LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 240


state 215

    (38) size -> SIZE LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)


state 216

    (39) head -> HEAD LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)


state 217

    (40) tail -> TAIL LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    EX              reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)


state 218

    (41) last -> LAST LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)


state 219

    (42) set_title -> SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 241


state 220

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 242


state 221

    (44) set_color -> SET_COLOR LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 243


state 222

    (45) create_object -> CREATE_OBJECT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 244


state 223

    (46) create_text -> CREATE_TEXT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 245


state 224

    (14) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 225

    (47) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (49) assign_action2 -> .

    LEFTPAR         reduce using rule 49 (assign_action2 -> .)
    EX              reduce using rule 49 (assign_action2 -> .)
    STRING          reduce using rule 49 (assign_action2 -> .)
    ID              reduce using rule 49 (assign_action2 -> .)
    INT             reduce using rule 49 (assign_action2 -> .)
    FLOAT           reduce using rule 49 (assign_action2 -> .)
    TRUE            reduce using rule 49 (assign_action2 -> .)
    FALSE           reduce using rule 49 (assign_action2 -> .)
    DRAW            reduce using rule 49 (assign_action2 -> .)
    SIZE            reduce using rule 49 (assign_action2 -> .)
    HEAD            reduce using rule 49 (assign_action2 -> .)
    TAIL            reduce using rule 49 (assign_action2 -> .)
    LAST            reduce using rule 49 (assign_action2 -> .)
    SET_TITLE       reduce using rule 49 (assign_action2 -> .)
    SET_DIMENSION   reduce using rule 49 (assign_action2 -> .)
    SET_COLOR       reduce using rule 49 (assign_action2 -> .)
    CREATE_OBJECT   reduce using rule 49 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 49 (assign_action2 -> .)

    assign_action2                 shift and go to state 246

state 226

    (50) condition -> IF startscope_action LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (51) condition -> IF startscope_action LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 247
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 227

    (74) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 248


state 228

    (75) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (77) recwrite -> expression . action_recwrite_exp
    (79) action_recwrite_exp -> .

    COMMA           reduce using rule 79 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 79 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 249

state 229

    (76) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (78) recwrite -> STRING . action_recwrite_cte
    (125) string -> STRING .
    (80) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 80 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 80 (action_recwrite_cte -> .)
    TERMS           reduce using rule 125 (string -> STRING .)
    EX              reduce using rule 125 (string -> STRING .)
    RELOP           reduce using rule 125 (string -> STRING .)
    LOGIC           reduce using rule 125 (string -> STRING .)
    COMMA           reduce using rule 80 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 80 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 125 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 125 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 250

state 230

    (114) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 114 (nestedassign -> nestedvalue EQUAL expression .)


state 231

    (57) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (47) assign -> . ID assign_action1 EQUAL assign_action2 expression

    ID              shift and go to state 252

    assign                         shift and go to state 251

state 232

    (61) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 253


state 233

    (86) expression -> exp RELOP relop_action1 exp . relop_action2
    (90) relop_action2 -> .

    SEMICOLON       reduce using rule 90 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 90 (relop_action2 -> .)
    COMMA           reduce using rule 90 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 90 (relop_action2 -> .)

    relop_action2                  shift and go to state 254

state 234

    (87) expression -> exp LOGIC logic_action1 exp . logic_action2
    (92) logic_action2 -> .

    SEMICOLON       reduce using rule 92 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 92 (logic_action2 -> .)
    COMMA           reduce using rule 92 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 92 (logic_action2 -> .)

    logic_action2                  shift and go to state 255

state 235

    (96) recexp -> EX add_operator . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    exp                            shift and go to state 256
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 236

    (100) recterm -> TERMS add_operator . term
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    term                           shift and go to state 257
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 237

    (82) functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 82 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 82 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 82 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 82 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 82 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 82 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 82 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 82 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)


state 238

    (84) recfuncexp -> expression COMMA . recfuncexp
    (84) recfuncexp -> . expression COMMA recfuncexp
    (85) recfuncexp -> . expression
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 212
    recfuncexp                     shift and go to state 258
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 239

    (112) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 259


state 240

    (37) draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)


state 241

    (42) set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .

    TERMS           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)


state 242

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 260
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 243

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 261
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 244

    (45) create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)


state 245

    (46) create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)


state 246

    (47) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 262
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 247

    (50) condition -> IF startscope_action LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (51) condition -> IF startscope_action LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (52) condition_action1 -> .

    RIGHTPAR        reduce using rule 52 (condition_action1 -> .)

    condition_action1              shift and go to state 263

state 248

    (74) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 74 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 249

    (75) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (77) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 264
    RIGHTPAR        reduce using rule 77 (recwrite -> expression action_recwrite_exp .)


state 250

    (76) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (78) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 265
    RIGHTPAR        reduce using rule 78 (recwrite -> STRING action_recwrite_cte .)


state 251

    (57) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 266


state 252

    (47) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (48) assign_action1 -> .

    EQUAL           reduce using rule 48 (assign_action1 -> .)

    assign_action1                 shift and go to state 193

state 253

    (61) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 267
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 254

    (86) expression -> exp RELOP relop_action1 exp relop_action2 .

    SEMICOLON       reduce using rule 86 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 86 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    COMMA           reduce using rule 86 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 86 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 255

    (87) expression -> exp LOGIC logic_action1 exp logic_action2 .

    SEMICOLON       reduce using rule 87 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 87 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    COMMA           reduce using rule 87 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 87 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 256

    (96) recexp -> EX add_operator exp .

    RELOP           reduce using rule 96 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 96 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 96 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 96 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 96 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 96 (recexp -> EX add_operator exp .)


state 257

    (100) recterm -> TERMS add_operator term .

    EX              reduce using rule 100 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 100 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 100 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 100 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 100 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 100 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 100 (recterm -> TERMS add_operator term .)


state 258

    (84) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 84 (recfuncexp -> expression COMMA recfuncexp .)


state 259

    (112) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .

    TERMS           reduce using rule 112 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    EX              reduce using rule 112 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RELOP           reduce using rule 112 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    LOGIC           reduce using rule 112 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 112 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTPAR        reduce using rule 112 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    COMMA           reduce using rule 112 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTBRACKET    reduce using rule 112 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)


state 260

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 268


state 261

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 269


state 262

    (47) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 47 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 263

    (50) condition -> IF startscope_action LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 270


state 264

    (75) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (75) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (76) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (77) recwrite -> . expression action_recwrite_exp
    (78) recwrite -> . STRING action_recwrite_cte
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 229
    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 228
    recwrite                       shift and go to state 271
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 265

    (76) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (75) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (76) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (77) recwrite -> . expression action_recwrite_exp
    (78) recwrite -> . STRING action_recwrite_cte
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 229
    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    recwrite                       shift and go to state 272
    expression                     shift and go to state 228
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 266

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (58) for_action1 -> .

    LEFTPAR         reduce using rule 58 (for_action1 -> .)
    EX              reduce using rule 58 (for_action1 -> .)
    STRING          reduce using rule 58 (for_action1 -> .)
    ID              reduce using rule 58 (for_action1 -> .)
    INT             reduce using rule 58 (for_action1 -> .)
    FLOAT           reduce using rule 58 (for_action1 -> .)
    TRUE            reduce using rule 58 (for_action1 -> .)
    FALSE           reduce using rule 58 (for_action1 -> .)
    DRAW            reduce using rule 58 (for_action1 -> .)
    SIZE            reduce using rule 58 (for_action1 -> .)
    HEAD            reduce using rule 58 (for_action1 -> .)
    TAIL            reduce using rule 58 (for_action1 -> .)
    LAST            reduce using rule 58 (for_action1 -> .)
    SET_TITLE       reduce using rule 58 (for_action1 -> .)
    SET_DIMENSION   reduce using rule 58 (for_action1 -> .)
    SET_COLOR       reduce using rule 58 (for_action1 -> .)
    CREATE_OBJECT   reduce using rule 58 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 58 (for_action1 -> .)

    for_action1                    shift and go to state 273

state 267

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (63) while_action2 -> .

    RIGHTPAR        reduce using rule 63 (while_action2 -> .)

    while_action2                  shift and go to state 274

state 268

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 269

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 275
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 270

    (50) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 276

state 271

    (75) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 75 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 272

    (76) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 76 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 273

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (86) expression -> . exp RELOP relop_action1 exp relop_action2
    (87) expression -> . exp LOGIC logic_action1 exp logic_action2
    (88) expression -> . exp
    (93) exp -> . term exp_action recexp
    (94) exp -> . term exp_action
    (97) term -> . factor term_action recterm
    (98) term -> . factor term_action
    (102) factor -> . LEFTPAR expression RIGHTPAR
    (103) factor -> . EX cte
    (104) factor -> . cte
    (115) cte -> . string
    (116) cte -> . id
    (117) cte -> . int
    (118) cte -> . float
    (119) cte -> . bool
    (120) cte -> . nestedvalue
    (121) cte -> . functioncall
    (122) cte -> . listaccess
    (123) cte -> . specialfunction
    (125) string -> . STRING
    (124) id -> . ID
    (126) int -> . INT
    (127) float -> . FLOAT
    (128) bool -> . TRUE
    (129) bool -> . FALSE
    (113) nestedvalue -> . ID DOT ID
    (82) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (83) functioncall -> . ID LEFTPAR RIGHTPAR
    (112) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 114
    FLOAT           shift and go to state 115
    TRUE            shift and go to state 116
    FALSE           shift and go to state 117
    DRAW            shift and go to state 128
    SIZE            shift and go to state 129
    HEAD            shift and go to state 130
    TAIL            shift and go to state 131
    LAST            shift and go to state 132
    SET_TITLE       shift and go to state 133
    SET_DIMENSION   shift and go to state 134
    SET_COLOR       shift and go to state 135
    CREATE_OBJECT   shift and go to state 136
    CREATE_TEXT     shift and go to state 137

    expression                     shift and go to state 277
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    string                         shift and go to state 103
    id                             shift and go to state 104
    int                            shift and go to state 105
    float                          shift and go to state 106
    bool                           shift and go to state 107
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 118
    size                           shift and go to state 119
    head                           shift and go to state 120
    tail                           shift and go to state 121
    last                           shift and go to state 122
    set_title                      shift and go to state 123
    set_dimension                  shift and go to state 124
    set_color                      shift and go to state 125
    create_object                  shift and go to state 126
    create_text                    shift and go to state 127

state 274

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 278


state 275

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 279


state 276

    (50) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (53) condition_action2 -> .
    (54) condition_action3 -> .

    ID              reduce using rule 53 (condition_action2 -> .)
    IF              reduce using rule 53 (condition_action2 -> .)
    VAR             reduce using rule 53 (condition_action2 -> .)
    PRINT           reduce using rule 53 (condition_action2 -> .)
    RETURN          reduce using rule 53 (condition_action2 -> .)
    FOR             reduce using rule 53 (condition_action2 -> .)
    WHILE           reduce using rule 53 (condition_action2 -> .)
    DRAW            reduce using rule 53 (condition_action2 -> .)
    SIZE            reduce using rule 53 (condition_action2 -> .)
    HEAD            reduce using rule 53 (condition_action2 -> .)
    TAIL            reduce using rule 53 (condition_action2 -> .)
    LAST            reduce using rule 53 (condition_action2 -> .)
    SET_TITLE       reduce using rule 53 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 53 (condition_action2 -> .)
    SET_COLOR       reduce using rule 53 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 53 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 53 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 53 (condition_action2 -> .)
    ELSE            reduce using rule 54 (condition_action3 -> .)

    condition_action2              shift and go to state 280
    condition_action3              shift and go to state 281

state 277

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (59) for_action2 -> .

    SEMICOLON       reduce using rule 59 (for_action2 -> .)

    for_action2                    shift and go to state 282

state 278

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 283

state 279

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 280

    (50) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    DRAW            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SIZE            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    HEAD            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    TAIL            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    LAST            reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_TITLE       reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_DIMENSION   reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SET_COLOR       reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_OBJECT   reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 50 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 281

    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 284


state 282

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 285


state 283

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (64) while_action3 -> .

    ID              reduce using rule 64 (while_action3 -> .)
    IF              reduce using rule 64 (while_action3 -> .)
    VAR             reduce using rule 64 (while_action3 -> .)
    PRINT           reduce using rule 64 (while_action3 -> .)
    RETURN          reduce using rule 64 (while_action3 -> .)
    FOR             reduce using rule 64 (while_action3 -> .)
    WHILE           reduce using rule 64 (while_action3 -> .)
    DRAW            reduce using rule 64 (while_action3 -> .)
    SIZE            reduce using rule 64 (while_action3 -> .)
    HEAD            reduce using rule 64 (while_action3 -> .)
    TAIL            reduce using rule 64 (while_action3 -> .)
    LAST            reduce using rule 64 (while_action3 -> .)
    SET_TITLE       reduce using rule 64 (while_action3 -> .)
    SET_DIMENSION   reduce using rule 64 (while_action3 -> .)
    SET_COLOR       reduce using rule 64 (while_action3 -> .)
    CREATE_OBJECT   reduce using rule 64 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 64 (while_action3 -> .)
    RIGHTKEY        reduce using rule 64 (while_action3 -> .)

    while_action3                  shift and go to state 286

state 284

    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 287

state 285

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (47) assign -> . ID assign_action1 EQUAL assign_action2 expression

    ID              shift and go to state 252

    assign                         shift and go to state 288

state 286

    (61) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    DRAW            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SIZE            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    HEAD            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    TAIL            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    LAST            reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_TITLE       reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_DIMENSION   reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SET_COLOR       reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_OBJECT   reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 61 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 287

    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (53) condition_action2 -> .

    ID              reduce using rule 53 (condition_action2 -> .)
    IF              reduce using rule 53 (condition_action2 -> .)
    VAR             reduce using rule 53 (condition_action2 -> .)
    PRINT           reduce using rule 53 (condition_action2 -> .)
    RETURN          reduce using rule 53 (condition_action2 -> .)
    FOR             reduce using rule 53 (condition_action2 -> .)
    WHILE           reduce using rule 53 (condition_action2 -> .)
    DRAW            reduce using rule 53 (condition_action2 -> .)
    SIZE            reduce using rule 53 (condition_action2 -> .)
    HEAD            reduce using rule 53 (condition_action2 -> .)
    TAIL            reduce using rule 53 (condition_action2 -> .)
    LAST            reduce using rule 53 (condition_action2 -> .)
    SET_TITLE       reduce using rule 53 (condition_action2 -> .)
    SET_DIMENSION   reduce using rule 53 (condition_action2 -> .)
    SET_COLOR       reduce using rule 53 (condition_action2 -> .)
    CREATE_OBJECT   reduce using rule 53 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 53 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 53 (condition_action2 -> .)

    condition_action2              shift and go to state 289

state 288

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 290


state 289

    (51) condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    DRAW            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SIZE            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    HEAD            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    TAIL            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    LAST            reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_TITLE       reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_DIMENSION   reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SET_COLOR       reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_OBJECT   reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 51 (condition -> IF startscope_action LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 290

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 291


state 291

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 292

state 292

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (60) for_action3 -> .

    ID              reduce using rule 60 (for_action3 -> .)
    IF              reduce using rule 60 (for_action3 -> .)
    VAR             reduce using rule 60 (for_action3 -> .)
    PRINT           reduce using rule 60 (for_action3 -> .)
    RETURN          reduce using rule 60 (for_action3 -> .)
    FOR             reduce using rule 60 (for_action3 -> .)
    WHILE           reduce using rule 60 (for_action3 -> .)
    DRAW            reduce using rule 60 (for_action3 -> .)
    SIZE            reduce using rule 60 (for_action3 -> .)
    HEAD            reduce using rule 60 (for_action3 -> .)
    TAIL            reduce using rule 60 (for_action3 -> .)
    LAST            reduce using rule 60 (for_action3 -> .)
    SET_TITLE       reduce using rule 60 (for_action3 -> .)
    SET_DIMENSION   reduce using rule 60 (for_action3 -> .)
    SET_COLOR       reduce using rule 60 (for_action3 -> .)
    CREATE_OBJECT   reduce using rule 60 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 60 (for_action3 -> .)
    RIGHTKEY        reduce using rule 60 (for_action3 -> .)

    for_action3                    shift and go to state 293

state 293

    (57) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    DRAW            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SIZE            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    HEAD            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    TAIL            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    LAST            reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_TITLE       reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_DIMENSION   reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SET_COLOR       reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_OBJECT   reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 57 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 88 resolved as shift
WARNING: shift/reduce conflict for VAR in state 163 resolved as shift
WARNING: reduce/reduce conflict in state 229 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 229
