
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BAR CAPIGAME COLON COMMA COMMENT CREATE_TEXT DOT DRAW ELSE EQUAL EX FALSE FIND FLOAT FOR FUNC GET_EVENT GLOBAL HEAD ID IF INIT INT LAST LEFTBRACKET LEFTKEY LEFTPAR LIST LOGIC MAIN OBJECT POW PRINT RAND RELOP RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR RUN SEMICOLON SET_DIMENSION SET_FILL SET_TITLE SIZE SQRT START STRING TBOOL TERMS TFLOAT TINT TLIST TOBJECT TRUE TSTRING UPDATE VAR VOID WHILE WINDOW_H WINDOW_W \n    capi : capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n    \n    capi_action1 :\n    \n    capi_action2 :\n    \n    global : GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON\n    \n    start : VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    start_action1 :\n    \n    run : VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    run_action1 :\n    \n    main_cont :\n     \n    vars :    VAR recids COLON type EQUAL expression SEMICOLON vars \n            | VAR recids COLON type EQUAL expression SEMICOLON\n            | VAR recids COLON type SEMICOLON vars\n            | VAR recids COLON type SEMICOLON\n     \n    recids : ID \n           | ID COMMA recids \n    \n    block : COLON LEFTKEY recstatement RIGHTKEY SEMICOLON\n          | COLON LEFTKEY RIGHTKEY SEMICOLON\n     \n    recstatement : statement recstatement  \n                 | statement  \n    \n    statement : assign SEMICOLON\n              | condition\n              | vars\n              | loop\n              | write SEMICOLON\n              | return SEMICOLON\n              | functioncall SEMICOLON\n              | nestedassign SEMICOLON\n              | specialfunction SEMICOLON\n    \n    specialfunction : draw\n                    | init\n                    | size\n                    | head\n                    | find\n                    | last\n                    | set_fill\n                    | set_title\n                    | get_event\n                    | update\n                    | window_h\n                    | window_w\n                    | set_dimension\n                    | create_text\n                    | rand\n                    | pow\n                    | sqrt\n    \n    pow : POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR\n    \n    pow_action1 :\n    \n    sqrt : SQRT sqrt_action1 LEFTPAR expression RIGHTPAR\n    \n    sqrt_action1 :\n    \n    draw : CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    init : CAPIGAME DOT INIT LEFTPAR RIGHTPAR\n    \n    size : ID DOT SIZE LEFTPAR RIGHTPAR\n    \n    head : ID DOT HEAD LEFTPAR RIGHTPAR\n    \n    window_h : CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR\n    \n    window_w : CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR\n    \n    rand : CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR\n    \n    find : ID DOT FIND LEFTPAR expression RIGHTPAR\n    \n    last : ID DOT LAST LEFTPAR RIGHTPAR\n    \n    set_title : CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR\n    \n    set_fill : CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    set_dimension : CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR\n    \n    update : CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR\n    \n    get_event : CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR\n    \n    create_text : CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    assign : ID assign_action1 EQUAL assign_action2 expression \n           | assign_list EQUAL assign_action2 expression\n    \n    assign_action1 : \n    \n    assign_action2 : \n     condition : IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action2\n                  | IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action3 ELSE  block condition_action2\n     \n    condition_action1 :\n    \n    condition_action2 :\n    \n    condition_action3 :\n    \n    loop : for\n        | while\n    \n    for : FOR startscope_action LEFTPAR  assign  SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3\n    \n    for_action1 : \n    \n    for_action2 : \n    \n    for_action3 : \n    \n    while : WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3\n    \n    while_action1 :\n    \n    while_action2 :\n    \n    while_action3 :\n    \n    function : type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n    \n    startscope_action : \n    \n    function_action1 :\n    \n    function_action2 :\n    \n    function_action3 :\n    \n    recparams : ID COLON type\n              | ID COLON type COMMA recparams\n    \n    recfunc : function recfunc\n            | function\n     \n    write : PRINT LEFTPAR recwrite RIGHTPAR \n     \n    recwrite : expression action_recwrite_exp COMMA recwrite \n               | STRING action_recwrite_cte COMMA  recwrite \n               | expression action_recwrite_exp \n               | STRING action_recwrite_cte\n    \n    action_recwrite_exp :\n    \n    action_recwrite_cte : \n    \n     return : RETURN expression\n    \n    functioncall : ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR \n                 | ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR \n    \n    function_call_action1 : \n    \n    function_call_action2 : \n    \n    recfuncexp : expression COMMA recfuncexp\n               | expression recfunc_action1\n    \n    recfunc_action1 :\n    \n    expression : exp RELOP relop_action1 exp relop_action2\n               | exp LOGIC logic_action1 exp logic_action2\n               | exp\n    \n    relop_action1 : \n    \n    relop_action2 : \n    \n    logic_action1 : \n    \n    logic_action2 : \n     \n    exp : term exp_action recexp\n        | term exp_action \n        \n    exp_action :\n     \n    recexp : EX add_operator exp \n     \n    term : factor term_action recterm \n         | factor term_action \n    \n    term_action :\n     \n    recterm : TERMS add_operator term\n    \n    add_operator :\n     factor : factor_action1 LEFTPAR expression RIGHTPAR factor_action2 \n               | EX cte \n               | cte \n    \n    factor_action1 :\n    \n    factor_action2 :\n    \n    type : primitivetype\n        | TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1\n    \n    action_list1 :\n    \n    primitivetype : TINT\n                  | TFLOAT\n                  | TSTRING\n                  | TBOOL\n    \n    assign_list : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    listaccess : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    list_action1 :\n    \n    list_action_3 :\n    \n    nestedvalue : ID DOT ID\n    \n    nestedassign : nestedvalue EQUAL expression\n    \n    cte :    \n        | id\n        | int\n        | float\n        | bool\n        | string\n        | nestedvalue\n        | functioncall\n        | listaccess\n        | specialfunction\n    \n    id : ID\n    \n    string : STRING\n    \n    int : INT\n    \n    float : FLOAT\n    \n    bool : TRUE \n         | FALSE\n    '
    
_lr_action_items = {'MAIN':([0,2,3,4,7,16,21,60,136,139,263,265,282,302,],[-5,5,17,18,-98,25,-97,-7,-88,-90,-87,-20,-89,-19,]),'GLOBAL':([0,2,],[-5,6,]),'VOID':([0,2,3,7,28,34,35,36,43,44,45,46,54,55,56,60,105,136,139,263,265,282,301,302,],[-5,9,9,9,37,37,37,-6,37,-6,-6,58,-6,58,58,-7,58,-88,-90,-87,-20,-89,-8,-19,]),'TLIST':([0,2,3,7,60,61,113,136,139,263,265,282,302,],[-5,11,11,11,-7,11,11,-88,-90,-87,-20,-89,-19,]),'TINT':([0,2,3,7,24,60,61,113,136,139,263,265,282,302,],[-5,12,12,12,12,-7,12,12,-88,-90,-87,-20,-89,-19,]),'TFLOAT':([0,2,3,7,24,60,61,113,136,139,263,265,282,302,],[-5,13,13,13,13,-7,13,13,-88,-90,-87,-20,-89,-19,]),'TSTRING':([0,2,3,7,24,60,61,113,136,139,263,265,282,302,],[-5,14,14,14,14,-7,14,14,-88,-90,-87,-20,-89,-19,]),'TBOOL':([0,2,3,7,24,60,61,113,136,139,263,265,282,302,],[-5,15,15,15,15,-7,15,15,-88,-90,-87,-20,-89,-19,]),'$end':([1,129,168,169,203,],[0,-4,-3,-2,-1,]),'COLON':([5,6,17,18,25,49,50,63,65,67,112,115,117,135,138,175,177,205,208,231,261,300,325,344,364,366,378,],[19,20,26,27,33,61,-17,113,-94,-94,-18,137,137,-93,-93,-94,-94,-12,137,137,137,-12,137,137,137,137,137,]),'FUNC':([8,9,10,12,13,14,15,37,58,118,140,],[22,23,-135,-138,-139,-140,-141,47,109,-137,-136,]),'EQUAL':([10,12,13,14,15,111,118,140,141,221,222,228,273,334,352,],[-135,-138,-139,-140,-141,132,-137,-136,-146,-70,275,279,303,-70,-142,]),'SEMICOLON':([10,12,13,14,15,48,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,108,111,118,127,128,132,140,141,159,160,161,163,164,167,172,195,196,197,198,200,210,212,216,217,218,219,220,227,232,233,235,237,241,244,245,246,247,251,252,253,254,255,256,259,264,275,278,279,283,284,287,290,294,295,296,297,298,303,305,310,319,320,321,322,323,324,326,328,330,333,338,339,342,347,356,359,360,363,367,375,376,],[-135,-138,-139,-140,-141,60,-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,-160,-161,-162,-163,-159,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,129,133,-137,168,169,-148,-136,-146,-116,-123,-127,-148,-132,203,206,-117,-119,-122,-126,-131,265,267,268,269,270,271,272,-148,-55,-56,-61,-108,-54,-66,-65,-57,-58,-148,-148,-121,-129,-125,-129,-51,302,-71,-106,-148,-60,-107,-143,-62,-118,-120,-148,-148,-134,-71,-148,-147,-114,-115,-124,-128,-130,-49,-148,-69,-99,347,-64,-59,-68,-80,-148,-63,-67,-81,371,377,-53,]),'COMMA':([10,12,13,14,15,50,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,118,123,134,140,141,146,158,159,160,161,163,164,165,182,184,186,192,193,194,195,196,197,198,200,201,232,233,235,237,238,240,241,242,244,245,246,247,248,249,250,251,252,253,254,255,256,259,277,283,284,285,287,288,289,290,293,294,295,296,297,298,308,309,314,315,318,319,320,321,322,323,324,331,332,336,338,339,345,346,349,358,359,360,365,376,],[-135,-138,-139,-140,-141,62,-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,-160,-161,-162,-163,-159,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-137,-148,174,-136,-146,-110,194,-116,-123,-127,-148,-132,-148,-148,-148,-148,-148,-148,-148,-117,-119,-122,-126,-131,258,-55,-56,-61,-108,285,288,-54,289,-66,-65,-57,-58,291,292,293,-148,-148,-121,-129,-125,-129,-51,-148,-60,-107,-148,-143,-148,-148,-62,-148,-118,-120,-148,-148,-134,-104,-105,336,337,340,-114,-115,-124,-128,-130,-49,345,346,-148,-64,-59,-148,-148,358,-148,-63,-67,369,-53,]),'RIGHTPAR':([10,12,13,14,15,51,52,64,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,114,116,118,134,140,141,146,159,160,161,163,164,166,171,178,179,180,181,182,185,187,188,189,190,191,195,196,197,198,199,200,202,207,232,233,234,235,236,237,238,241,243,244,245,246,247,251,252,253,254,255,256,257,258,259,260,276,277,283,284,285,286,287,290,291,292,294,295,296,297,298,299,306,307,308,309,313,316,317,319,320,321,322,323,324,329,331,332,335,337,338,339,340,345,346,348,350,351,354,355,357,359,360,369,373,376,377,],[-135,-138,-139,-140,-141,65,67,-92,-92,-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,-160,-161,-162,-163,-159,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,135,138,-137,-95,-136,-146,-110,-116,-123,-127,-148,-132,-148,205,232,233,-148,235,237,241,-148,244,245,246,247,-117,-119,-122,-126,-148,-131,259,-96,-55,-56,283,-61,284,-108,-113,-54,290,-66,-65,-57,-58,-148,-148,-121,-129,-125,-129,298,-148,-51,300,-148,-148,-60,-107,-148,-112,-143,-62,-148,-148,-118,-120,-148,-148,-134,324,-74,330,-104,-105,-111,338,339,-114,-115,-124,-128,-130,-49,344,-102,-103,-148,-148,-64,-59,-148,-148,-148,-85,359,360,-100,-101,364,-63,-67,-148,376,-53,378,]),'BAR':([11,12,13,14,15,32,],[24,-138,-139,-140,-141,42,]),'LEFTKEY':([19,20,26,27,33,137,],[28,29,34,35,43,176,]),'ID':([22,23,39,51,52,53,62,119,123,132,133,146,147,163,165,166,173,174,176,180,182,184,186,187,192,193,194,195,196,199,206,211,213,214,215,224,225,227,251,252,254,256,258,262,265,267,268,269,270,271,272,275,276,277,279,285,288,289,291,292,293,296,297,302,303,304,305,311,326,335,336,337,340,345,346,347,353,356,358,361,368,369,370,371,372,374,379,380,],[30,31,50,63,63,78,50,141,78,78,-16,-110,78,78,78,78,-15,63,221,78,78,78,78,78,78,78,78,-117,-119,78,-14,221,-24,-25,-26,-77,-78,78,78,78,-129,-129,78,-13,-20,-23,-27,-28,-29,-30,-31,-71,78,78,78,78,78,78,78,78,78,78,78,-19,-71,78,78,334,78,78,78,78,78,78,78,-80,-75,78,78,-72,-86,78,-75,334,-83,-73,-82,-79,]),'VAR':([29,133,173,176,206,211,213,214,215,224,225,262,265,267,268,269,270,271,272,302,353,361,368,370,372,374,379,380,],[39,39,-15,39,39,39,-24,-25,-26,-77,-78,-13,-20,-23,-27,-28,-29,-30,-31,-19,-75,-72,-86,-75,-83,-73,-82,-79,]),'LEFTPAR':([30,31,40,41,78,102,103,104,110,120,123,124,125,131,132,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,162,165,166,170,180,182,184,186,187,192,193,194,195,196,199,204,221,223,226,227,229,230,251,252,254,256,258,275,276,277,279,280,281,285,288,289,291,292,293,296,297,303,304,305,312,326,335,336,337,340,345,346,347,356,358,369,],[-91,-91,51,52,-109,123,-50,-52,-91,146,-133,165,166,171,-133,178,179,180,181,-110,-133,184,185,186,187,188,189,190,191,192,193,199,-133,-133,-91,-133,-133,-133,-133,-133,-133,-133,-133,-117,-119,-133,260,-109,276,277,-133,-91,-91,-133,-133,-129,-129,-133,-71,-133,-133,-133,311,-84,-133,-133,-133,-133,-133,-133,-133,-133,-71,-133,-133,335,-133,-133,-133,-133,-133,-133,-133,-80,-133,-133,-133,]),'RIGHTKEY':([38,57,106,107,126,133,173,176,206,209,211,213,214,215,224,225,262,265,266,267,268,269,270,271,272,302,341,353,361,368,370,372,374,379,380,],[48,108,127,128,167,-16,-15,210,-14,264,-22,-24,-25,-26,-77,-78,-13,-20,-21,-23,-27,-28,-29,-30,-31,-19,-10,-75,-72,-86,-75,-83,-73,-82,-79,]),'LEFTBRACKET':([42,78,121,221,274,334,],[53,-144,147,-144,304,-144,]),'START':([47,59,],[-9,110,]),'RIGHTBRACKET':([53,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,141,147,159,160,161,163,164,183,195,196,197,198,200,232,233,235,237,239,241,244,245,246,247,251,252,253,254,255,256,259,283,284,287,290,294,295,296,297,298,304,319,320,321,322,323,324,327,338,339,343,359,360,376,],[-148,118,-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,-160,-161,-162,-163,-159,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-146,-148,-116,-123,-127,-148,-132,-145,-117,-119,-122,-126,-131,-55,-56,-61,-108,287,-54,-66,-65,-57,-58,-148,-148,-121,-129,-125,-129,-51,-60,-107,-143,-62,-118,-120,-148,-148,-134,-148,-114,-115,-124,-128,-130,-49,-145,-64,-59,352,-63,-67,-53,]),'INT':([53,123,132,146,147,163,165,166,180,182,184,186,187,192,193,194,195,196,199,227,251,252,254,256,258,275,276,277,279,285,288,289,291,292,293,296,297,303,304,305,326,335,336,337,340,345,346,347,356,358,369,],[79,79,79,-110,79,79,79,79,79,79,79,79,79,79,79,79,-117,-119,79,79,79,79,-129,-129,79,-71,79,79,79,79,79,79,79,79,79,79,79,-71,79,79,79,79,79,79,79,79,79,-80,79,79,79,]),'FLOAT':([53,123,132,146,147,163,165,166,180,182,184,186,187,192,193,194,195,196,199,227,251,252,254,256,258,275,276,277,279,285,288,289,291,292,293,296,297,303,304,305,326,335,336,337,340,345,346,347,356,358,369,],[80,80,80,-110,80,80,80,80,80,80,80,80,80,80,80,80,-117,-119,80,80,80,80,-129,-129,80,-71,80,80,80,80,80,80,80,80,80,80,80,-71,80,80,80,80,80,80,80,80,80,-80,80,80,80,]),'TRUE':([53,123,132,146,147,163,165,166,180,182,184,186,187,192,193,194,195,196,199,227,251,252,254,256,258,275,276,277,279,285,288,289,291,292,293,296,297,303,304,305,326,335,336,337,340,345,346,347,356,358,369,],[81,81,81,-110,81,81,81,81,81,81,81,81,81,81,81,81,-117,-119,81,81,81,81,-129,-129,81,-71,81,81,81,81,81,81,81,81,81,81,81,-71,81,81,81,81,81,81,81,81,81,-80,81,81,81,]),'FALSE':([53,123,132,146,147,163,165,166,180,182,184,186,187,192,193,194,195,196,199,227,251,252,254,256,258,275,276,277,279,285,288,289,291,292,293,296,297,303,304,305,326,335,336,337,340,345,346,347,356,358,369,],[82,82,82,-110,82,82,82,82,82,82,82,82,82,82,82,82,-117,-119,82,82,82,82,-129,-129,82,-71,82,82,82,82,82,82,82,82,82,82,82,-71,82,82,82,82,82,82,82,82,82,-80,82,82,82,]),'STRING':([53,123,132,146,147,163,165,166,180,182,184,186,187,192,193,194,195,196,199,227,251,252,254,256,258,275,276,277,279,285,288,289,291,292,293,296,297,303,304,305,326,335,336,337,340,345,346,347,356,358,369,],[83,83,83,-110,83,83,83,83,83,83,83,83,83,83,83,83,-117,-119,83,83,83,83,-129,-129,83,-71,83,309,83,83,83,83,83,83,83,83,83,-71,83,83,83,83,83,83,83,309,309,-80,83,83,83,]),'CAPIGAME':([53,123,132,133,146,147,163,165,166,173,176,180,182,184,186,187,192,193,194,195,196,199,206,211,213,214,215,224,225,227,251,252,254,256,258,262,265,267,268,269,270,271,272,275,276,277,279,285,288,289,291,292,293,296,297,302,303,304,305,326,335,336,337,340,345,346,347,353,356,358,361,368,369,370,372,374,379,380,],[101,101,101,-16,-110,101,101,101,101,-15,101,101,101,101,101,101,101,101,101,-117,-119,101,-14,101,-24,-25,-26,-77,-78,101,101,101,-129,-129,101,-13,-20,-23,-27,-28,-29,-30,-31,-71,101,101,101,101,101,101,101,101,101,101,101,-19,-71,101,101,101,101,101,101,101,101,101,-80,-75,101,101,-72,-86,101,-75,-83,-73,-82,-79,]),'CREATE_TEXT':([53,123,132,133,146,147,163,165,166,173,176,180,182,184,186,187,192,193,194,195,196,199,206,211,213,214,215,224,225,227,251,252,254,256,258,262,265,267,268,269,270,271,272,275,276,277,279,285,288,289,291,292,293,296,297,302,303,304,305,326,335,336,337,340,345,346,347,353,356,358,361,368,369,370,372,374,379,380,],[102,102,102,-16,-110,102,102,102,102,-15,102,102,102,102,102,102,102,102,102,-117,-119,102,-14,102,-24,-25,-26,-77,-78,102,102,102,-129,-129,102,-13,-20,-23,-27,-28,-29,-30,-31,-71,102,102,102,102,102,102,102,102,102,102,102,-19,-71,102,102,102,102,102,102,102,102,102,-80,-75,102,102,-72,-86,102,-75,-83,-73,-82,-79,]),'POW':([53,123,132,133,146,147,163,165,166,173,176,180,182,184,186,187,192,193,194,195,196,199,206,211,213,214,215,224,225,227,251,252,254,256,258,262,265,267,268,269,270,271,272,275,276,277,279,285,288,289,291,292,293,296,297,302,303,304,305,326,335,336,337,340,345,346,347,353,356,358,361,368,369,370,372,374,379,380,],[103,103,103,-16,-110,103,103,103,103,-15,103,103,103,103,103,103,103,103,103,-117,-119,103,-14,103,-24,-25,-26,-77,-78,103,103,103,-129,-129,103,-13,-20,-23,-27,-28,-29,-30,-31,-71,103,103,103,103,103,103,103,103,103,103,103,-19,-71,103,103,103,103,103,103,103,103,103,-80,-75,103,103,-72,-86,103,-75,-83,-73,-82,-79,]),'SQRT':([53,123,132,133,146,147,163,165,166,173,176,180,182,184,186,187,192,193,194,195,196,199,206,211,213,214,215,224,225,227,251,252,254,256,258,262,265,267,268,269,270,271,272,275,276,277,279,285,288,289,291,292,293,296,297,302,303,304,305,326,335,336,337,340,345,346,347,353,356,358,361,368,369,370,372,374,379,380,],[104,104,104,-16,-110,104,104,104,104,-15,104,104,104,104,104,104,104,104,104,-117,-119,104,-14,104,-24,-25,-26,-77,-78,104,104,104,-129,-129,104,-13,-20,-23,-27,-28,-29,-30,-31,-71,104,104,104,104,104,104,104,104,104,104,104,-19,-71,104,104,104,104,104,104,104,104,104,-80,-75,104,104,-72,-86,104,-75,-83,-73,-82,-79,]),'TERMS':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,123,132,141,146,147,161,163,164,165,166,180,182,184,186,187,192,193,194,195,196,198,199,200,227,232,233,235,237,241,244,245,246,247,251,252,254,256,258,259,275,276,277,279,283,284,285,287,288,289,290,291,292,293,296,297,298,303,304,305,309,323,324,326,335,336,337,338,339,340,345,346,347,356,358,359,360,369,376,],[-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,-160,-161,-162,-163,-159,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-148,-148,-146,-110,-148,-127,-148,-132,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-117,-119,256,-148,-131,-148,-55,-56,-61,-108,-54,-66,-65,-57,-58,-148,-148,-129,-129,-148,-51,-71,-148,-148,-148,-60,-107,-148,-143,-148,-148,-62,-148,-148,-148,-148,-148,-134,-71,-148,-148,-159,-130,-49,-148,-148,-148,-148,-64,-59,-148,-148,-148,-80,-148,-148,-63,-67,-148,-53,]),'EX':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,123,132,141,146,147,160,161,163,164,165,166,180,182,184,186,187,192,193,194,195,196,197,198,199,200,227,232,233,235,237,241,244,245,246,247,251,252,254,255,256,258,259,275,276,277,279,283,284,285,287,288,289,290,291,292,293,296,297,298,303,304,305,309,322,323,324,326,335,336,337,338,339,340,345,346,347,356,358,359,360,369,376,],[-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,-160,-161,-162,-163,-159,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,163,163,-146,-110,163,-123,-127,-148,-132,163,163,163,163,163,163,163,163,163,163,-117,-119,254,-126,163,-131,163,-55,-56,-61,-108,-54,-66,-65,-57,-58,163,163,-129,-125,-129,163,-51,-71,163,163,163,-60,-107,163,-143,163,163,-62,163,163,163,163,163,-134,-71,163,163,-159,-128,-130,-49,163,163,163,163,-64,-59,163,163,163,-80,163,163,-63,-67,163,-53,]),'RELOP':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,123,132,141,146,147,159,160,161,163,164,165,166,180,182,184,186,187,192,193,194,197,198,199,200,227,232,233,235,237,241,244,245,246,247,253,254,255,256,258,259,275,276,277,279,283,284,285,287,288,289,290,291,292,293,296,297,298,303,304,305,309,321,322,323,324,326,335,336,337,338,339,340,345,346,347,356,358,359,360,369,376,],[-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,-160,-161,-162,-163,-159,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-148,-148,-146,-110,-148,195,-123,-127,-148,-132,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-122,-126,-148,-131,-148,-55,-56,-61,-108,-54,-66,-65,-57,-58,-121,-129,-125,-129,-148,-51,-71,-148,-148,-148,-60,-107,-148,-143,-148,-148,-62,-148,-148,-148,-148,-148,-134,-71,-148,-148,-159,-124,-128,-130,-49,-148,-148,-148,-148,-64,-59,-148,-148,-148,-80,-148,-148,-63,-67,-148,-53,]),'LOGIC':([69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,123,132,141,146,147,159,160,161,163,164,165,166,180,182,184,186,187,192,193,194,197,198,199,200,227,232,233,235,237,241,244,245,246,247,253,254,255,256,258,259,275,276,277,279,283,284,285,287,288,289,290,291,292,293,296,297,298,303,304,305,309,321,322,323,324,326,335,336,337,338,339,340,345,346,347,356,358,359,360,369,376,],[-149,-150,-151,-152,-153,-154,-155,-156,-157,-158,-160,-161,-162,-163,-159,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-148,-148,-146,-110,-148,196,-123,-127,-148,-132,-148,-148,-148,-148,-148,-148,-148,-148,-148,-148,-122,-126,-148,-131,-148,-55,-56,-61,-108,-54,-66,-65,-57,-58,-121,-129,-125,-129,-148,-51,-71,-148,-148,-148,-60,-107,-148,-143,-148,-148,-62,-148,-148,-148,-148,-148,-134,-71,-148,-148,-159,-124,-128,-130,-49,-148,-148,-148,-148,-64,-59,-148,-148,-148,-80,-148,-148,-63,-67,-148,-53,]),'DOT':([78,101,221,],[119,122,119,]),'RUN':([109,130,],[-11,170,]),'SIZE':([119,],[142,]),'HEAD':([119,],[143,]),'FIND':([119,],[144,]),'LAST':([119,],[145,]),'DRAW':([122,],[148,]),'INIT':([122,],[149,]),'SET_FILL':([122,],[150,]),'SET_TITLE':([122,],[151,]),'GET_EVENT':([122,],[152,]),'UPDATE':([122,],[153,]),'WINDOW_H':([122,],[154,]),'WINDOW_W':([122,],[155,]),'SET_DIMENSION':([122,],[156,]),'RAND':([122,],[157,]),'IF':([133,173,176,206,211,213,214,215,224,225,262,265,267,268,269,270,271,272,302,353,361,368,370,372,374,379,380,],[-16,-15,223,-14,223,-24,-25,-26,-77,-78,-13,-20,-23,-27,-28,-29,-30,-31,-19,-75,-72,-86,-75,-83,-73,-82,-79,]),'PRINT':([133,173,176,206,211,213,214,215,224,225,262,265,267,268,269,270,271,272,302,353,361,368,370,372,374,379,380,],[-16,-15,226,-14,226,-24,-25,-26,-77,-78,-13,-20,-23,-27,-28,-29,-30,-31,-19,-75,-72,-86,-75,-83,-73,-82,-79,]),'RETURN':([133,173,176,206,211,213,214,215,224,225,262,265,267,268,269,270,271,272,302,353,361,368,370,372,374,379,380,],[-16,-15,227,-14,227,-24,-25,-26,-77,-78,-13,-20,-23,-27,-28,-29,-30,-31,-19,-75,-72,-86,-75,-83,-73,-82,-79,]),'FOR':([133,173,176,206,211,213,214,215,224,225,262,265,267,268,269,270,271,272,302,353,361,368,370,372,374,379,380,],[-16,-15,229,-14,229,-24,-25,-26,-77,-78,-13,-20,-23,-27,-28,-29,-30,-31,-19,-75,-72,-86,-75,-83,-73,-82,-79,]),'WHILE':([133,173,176,206,211,213,214,215,224,225,262,265,267,268,269,270,271,272,302,353,361,368,370,372,374,379,380,],[-16,-15,230,-14,230,-24,-25,-26,-77,-78,-13,-20,-23,-27,-28,-29,-30,-31,-19,-75,-72,-86,-75,-83,-73,-82,-79,]),'ELSE':([265,302,353,362,],[-20,-19,-76,366,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'capi':([0,],[1,]),'capi_action1':([0,],[2,]),'global':([2,],[3,]),'recfunc':([2,3,7,],[4,16,21,]),'function':([2,3,7,],[7,7,7,]),'type':([2,3,7,61,113,],[8,8,8,111,134,]),'primitivetype':([2,3,7,24,61,113,],[10,10,10,32,10,10,]),'start':([28,34,35,43,],[36,44,45,54,]),'vars':([29,133,176,206,211,],[38,173,214,262,214,]),'startscope_action':([30,31,110,170,229,230,],[40,41,131,204,280,281,]),'capi_action2':([36,44,45,54,],[46,55,56,105,]),'recids':([39,62,],[49,112,]),'run':([46,55,56,105,],[57,106,107,126,]),'start_action1':([47,],[59,]),'recparams':([51,52,174,],[64,66,207,]),'cte':([53,123,132,147,163,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[68,164,164,164,200,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'id':([53,123,132,147,163,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'int':([53,123,132,147,163,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'float':([53,123,132,147,163,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'bool':([53,123,132,147,163,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'string':([53,123,132,147,163,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'nestedvalue':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[74,74,74,74,74,74,74,228,74,74,74,74,74,74,74,74,74,228,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'functioncall':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[75,75,75,75,75,75,75,218,75,75,75,75,75,75,75,75,75,218,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'listaccess':([53,123,132,147,163,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'specialfunction':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[77,77,77,77,77,77,77,220,77,77,77,77,77,77,77,77,77,220,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'draw':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'init':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'size':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'head':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'find':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'last':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'set_fill':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'set_title':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'get_event':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'update':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'window_h':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'window_w':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'set_dimension':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'create_text':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'rand':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'pow':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'sqrt':([53,123,132,147,163,165,166,176,180,182,184,186,187,192,193,194,199,211,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'function_action1':([64,66,],[114,116,]),'function_action3':([65,67,175,177,],[115,117,208,231,]),'function_call_action1':([78,221,],[120,120,]),'list_action1':([78,221,334,],[121,274,274,]),'pow_action1':([103,],[124,]),'sqrt_action1':([104,],[125,]),'run_action1':([109,],[130,]),'block':([115,117,208,231,261,325,344,364,366,378,],[136,139,263,282,301,341,353,368,370,379,]),'action_list1':([118,],[140,]),'expression':([123,132,147,165,166,180,182,184,186,187,192,193,194,199,227,258,276,277,279,285,288,289,291,292,293,304,305,326,335,336,337,340,345,346,356,358,369,],[158,172,183,201,202,234,238,240,242,243,248,249,250,257,278,299,306,308,310,238,314,315,316,317,318,327,328,342,348,349,350,351,308,308,363,365,373,]),'exp':([123,132,147,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,304,305,326,335,336,337,340,345,346,356,358,369,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,294,295,159,159,159,159,159,159,159,159,159,159,321,159,159,159,159,159,159,159,159,159,159,159,159,]),'term':([123,132,147,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,322,160,160,160,160,160,160,160,160,160,160,160,160,]),'factor':([123,132,147,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'factor_action1':([123,132,147,165,166,180,182,184,186,187,192,193,194,199,227,251,252,258,276,277,279,285,288,289,291,292,293,296,297,304,305,326,335,336,337,340,345,346,356,358,369,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'function_action2':([135,138,],[175,177,]),'function_call_action2':([146,],[182,]),'exp_action':([160,],[197,]),'term_action':([161,],[198,]),'recstatement':([176,211,],[209,266,]),'statement':([176,211,],[211,211,]),'assign':([176,211,311,371,],[212,212,333,375,]),'condition':([176,211,],[213,213,]),'loop':([176,211,],[215,215,]),'write':([176,211,],[216,216,]),'return':([176,211,],[217,217,]),'nestedassign':([176,211,],[219,219,]),'assign_list':([176,211,311,371,],[222,222,222,222,]),'for':([176,211,],[224,224,]),'while':([176,211,],[225,225,]),'recfuncexp':([182,285,],[236,313,]),'list_action_3':([183,327,],[239,343,]),'relop_action1':([195,],[251,]),'logic_action1':([196,],[252,]),'recexp':([197,],[253,]),'recterm':([198,],[255,]),'main_cont':([205,300,],[261,325,]),'assign_action1':([221,334,],[273,273,]),'recfunc_action1':([238,],[286,]),'add_operator':([254,256,],[296,297,]),'assign_action2':([275,303,],[305,326,]),'recwrite':([277,345,346,],[307,354,355,]),'while_action1':([281,],[312,]),'relop_action2':([294,],[319,]),'logic_action2':([295,],[320,]),'factor_action2':([298,],[323,]),'condition_action1':([306,],[329,]),'action_recwrite_exp':([308,],[331,]),'action_recwrite_cte':([309,],[332,]),'for_action1':([347,],[356,]),'while_action2':([348,],[357,]),'condition_action2':([353,370,],[361,374,]),'condition_action3':([353,],[362,]),'for_action2':([363,],[367,]),'while_action3':([368,],[372,]),'for_action3':([379,],[380,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> capi","S'",1,None,None,None),
  ('capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',11,'p_capi','capi.py',256),
  ('capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',257),
  ('capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',258),
  ('capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',9,'p_capi','capi.py',259),
  ('capi_action1 -> <empty>','capi_action1',0,'p_capi_action1','capi.py',264),
  ('capi_action2 -> <empty>','capi_action2',0,'p_capi_action2','capi.py',272),
  ('global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON','global',6,'p_global','capi.py',278),
  ('start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block','start',9,'p_start','capi.py',287),
  ('start_action1 -> <empty>','start_action1',0,'p_start_action1','capi.py',304),
  ('run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block','run',9,'p_run','capi.py',311),
  ('run_action1 -> <empty>','run_action1',0,'p_run_action1','capi.py',327),
  ('main_cont -> <empty>','main_cont',0,'p_main_cont','capi.py',335),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON vars','vars',8,'p_vars','capi.py',341),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON','vars',7,'p_vars','capi.py',342),
  ('vars -> VAR recids COLON type SEMICOLON vars','vars',6,'p_vars','capi.py',343),
  ('vars -> VAR recids COLON type SEMICOLON','vars',5,'p_vars','capi.py',344),
  ('recids -> ID','recids',1,'p_recids','capi.py',378),
  ('recids -> ID COMMA recids','recids',3,'p_recids','capi.py',379),
  ('block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON','block',5,'p_block','capi.py',389),
  ('block -> COLON LEFTKEY RIGHTKEY SEMICOLON','block',4,'p_block','capi.py',390),
  ('recstatement -> statement recstatement','recstatement',2,'p_recstatement','capi.py',395),
  ('recstatement -> statement','recstatement',1,'p_recstatement','capi.py',396),
  ('statement -> assign SEMICOLON','statement',2,'p_statement','capi.py',402),
  ('statement -> condition','statement',1,'p_statement','capi.py',403),
  ('statement -> vars','statement',1,'p_statement','capi.py',404),
  ('statement -> loop','statement',1,'p_statement','capi.py',405),
  ('statement -> write SEMICOLON','statement',2,'p_statement','capi.py',406),
  ('statement -> return SEMICOLON','statement',2,'p_statement','capi.py',407),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement','capi.py',408),
  ('statement -> nestedassign SEMICOLON','statement',2,'p_statement','capi.py',409),
  ('statement -> specialfunction SEMICOLON','statement',2,'p_statement','capi.py',410),
  ('specialfunction -> draw','specialfunction',1,'p_specialfunction','capi.py',417),
  ('specialfunction -> init','specialfunction',1,'p_specialfunction','capi.py',418),
  ('specialfunction -> size','specialfunction',1,'p_specialfunction','capi.py',419),
  ('specialfunction -> head','specialfunction',1,'p_specialfunction','capi.py',420),
  ('specialfunction -> find','specialfunction',1,'p_specialfunction','capi.py',421),
  ('specialfunction -> last','specialfunction',1,'p_specialfunction','capi.py',422),
  ('specialfunction -> set_fill','specialfunction',1,'p_specialfunction','capi.py',423),
  ('specialfunction -> set_title','specialfunction',1,'p_specialfunction','capi.py',424),
  ('specialfunction -> get_event','specialfunction',1,'p_specialfunction','capi.py',425),
  ('specialfunction -> update','specialfunction',1,'p_specialfunction','capi.py',426),
  ('specialfunction -> window_h','specialfunction',1,'p_specialfunction','capi.py',427),
  ('specialfunction -> window_w','specialfunction',1,'p_specialfunction','capi.py',428),
  ('specialfunction -> set_dimension','specialfunction',1,'p_specialfunction','capi.py',429),
  ('specialfunction -> create_text','specialfunction',1,'p_specialfunction','capi.py',430),
  ('specialfunction -> rand','specialfunction',1,'p_specialfunction','capi.py',431),
  ('specialfunction -> pow','specialfunction',1,'p_specialfunction','capi.py',432),
  ('specialfunction -> sqrt','specialfunction',1,'p_specialfunction','capi.py',433),
  ('pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR','pow',7,'p_pow','capi.py',439),
  ('pow_action1 -> <empty>','pow_action1',0,'p_pow_action1','capi.py',452),
  ('sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR','sqrt',5,'p_sqrt','capi.py',458),
  ('sqrt_action1 -> <empty>','sqrt_action1',0,'p_sqrt_action1','capi.py',469),
  ('draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR','draw',14,'p_draw','capi.py',477),
  ('init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR','init',5,'p_init','capi.py',494),
  ('size -> ID DOT SIZE LEFTPAR RIGHTPAR','size',5,'p_size','capi.py',500),
  ('head -> ID DOT HEAD LEFTPAR RIGHTPAR','head',5,'p_head','capi.py',528),
  ('window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR','window_h',5,'p_window_h','capi.py',558),
  ('window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR','window_w',5,'p_window_w','capi.py',567),
  ('rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR','rand',8,'p_rand','capi.py',575),
  ('find -> ID DOT FIND LEFTPAR expression RIGHTPAR','find',6,'p_find','capi.py',587),
  ('last -> ID DOT LAST LEFTPAR RIGHTPAR','last',5,'p_last','capi.py',620),
  ('set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR','set_title',6,'p_set_title','capi.py',652),
  ('set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_fill',10,'p_set_fill','capi.py',665),
  ('set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR','set_dimension',8,'p_set_dimension','capi.py',676),
  ('update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR','update',5,'p_update','capi.py',687),
  ('get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR','get_event',5,'p_get_event','capi.py',693),
  ('create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR','create_text',10,'p_create_text','capi.py',702),
  ('assign -> ID assign_action1 EQUAL assign_action2 expression','assign',5,'p_assign','capi.py',719),
  ('assign -> assign_list EQUAL assign_action2 expression','assign',4,'p_assign','capi.py',720),
  ('assign_action1 -> <empty>','assign_action1',0,'p_assign_action1','capi.py',781),
  ('assign_action2 -> <empty>','assign_action2',0,'p_assign_action2','capi.py',790),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2','condition',7,'p_condition','capi.py',796),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2','condition',10,'p_condition','capi.py',797),
  ('condition_action1 -> <empty>','condition_action1',0,'p_condition_action1','capi.py',802),
  ('condition_action2 -> <empty>','condition_action2',0,'p_condition_action2','capi.py',815),
  ('condition_action3 -> <empty>','condition_action3',0,'p_condition_action3','capi.py',822),
  ('loop -> for','loop',1,'p_loop','capi.py',832),
  ('loop -> while','loop',1,'p_loop','capi.py',833),
  ('for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3','for',14,'p_for','capi.py',838),
  ('for_action1 -> <empty>','for_action1',0,'p_for_action1','capi.py',846),
  ('for_action2 -> <empty>','for_action2',0,'p_for_action2','capi.py',854),
  ('for_action3 -> <empty>','for_action3',0,'p_for_action3','capi.py',868),
  ('while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3','while',9,'p_while','capi.py',882),
  ('while_action1 -> <empty>','while_action1',0,'p_while_action1','capi.py',891),
  ('while_action2 -> <empty>','while_action2',0,'p_while_action2','capi.py',897),
  ('while_action3 -> <empty>','while_action3',0,'p_while_action3','capi.py',911),
  ('function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',921),
  ('function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',922),
  ('function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',923),
  ('function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',924),
  ('startscope_action -> <empty>','startscope_action',0,'p_startscope_action','capi.py',950),
  ('function_action1 -> <empty>','function_action1',0,'p_function_action1','capi.py',969),
  ('function_action2 -> <empty>','function_action2',0,'p_function_action2','capi.py',975),
  ('function_action3 -> <empty>','function_action3',0,'p_function_action3','capi.py',986),
  ('recparams -> ID COLON type','recparams',3,'p_recparams','capi.py',995),
  ('recparams -> ID COLON type COMMA recparams','recparams',5,'p_recparams','capi.py',996),
  ('recfunc -> function recfunc','recfunc',2,'p_recfunc','capi.py',1009),
  ('recfunc -> function','recfunc',1,'p_recfunc','capi.py',1010),
  ('write -> PRINT LEFTPAR recwrite RIGHTPAR','write',4,'p_write','capi.py',1015),
  ('recwrite -> expression action_recwrite_exp COMMA recwrite','recwrite',4,'p_recwrite','capi.py',1020),
  ('recwrite -> STRING action_recwrite_cte COMMA recwrite','recwrite',4,'p_recwrite','capi.py',1021),
  ('recwrite -> expression action_recwrite_exp','recwrite',2,'p_recwrite','capi.py',1022),
  ('recwrite -> STRING action_recwrite_cte','recwrite',2,'p_recwrite','capi.py',1023),
  ('action_recwrite_exp -> <empty>','action_recwrite_exp',0,'p_action_recwrite_exp','capi.py',1027),
  ('action_recwrite_cte -> <empty>','action_recwrite_cte',0,'p_action_recwrite_cte','capi.py',1036),
  ('return -> RETURN expression','return',2,'p_return','capi.py',1043),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR','functioncall',6,'p_functioncall','capi.py',1071),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR','functioncall',5,'p_functioncall','capi.py',1072),
  ('function_call_action1 -> <empty>','function_call_action1',0,'p_function_call_action1','capi.py',1105),
  ('function_call_action2 -> <empty>','function_call_action2',0,'p_function_call_action2','capi.py',1116),
  ('recfuncexp -> expression COMMA recfuncexp','recfuncexp',3,'p_recfuncexp','capi.py',1125),
  ('recfuncexp -> expression recfunc_action1','recfuncexp',2,'p_recfuncexp','capi.py',1126),
  ('recfunc_action1 -> <empty>','recfunc_action1',0,'p_recfunc_action1','capi.py',1137),
  ('expression -> exp RELOP relop_action1 exp relop_action2','expression',5,'p_expression','capi.py',1179),
  ('expression -> exp LOGIC logic_action1 exp logic_action2','expression',5,'p_expression','capi.py',1180),
  ('expression -> exp','expression',1,'p_expression','capi.py',1181),
  ('relop_action1 -> <empty>','relop_action1',0,'p_relop_action1','capi.py',1186),
  ('relop_action2 -> <empty>','relop_action2',0,'p_relop_action2','capi.py',1192),
  ('logic_action1 -> <empty>','logic_action1',0,'p_logic_action1','capi.py',1215),
  ('logic_action2 -> <empty>','logic_action2',0,'p_logic_action2','capi.py',1221),
  ('exp -> term exp_action recexp','exp',3,'p_exp','capi.py',1244),
  ('exp -> term exp_action','exp',2,'p_exp','capi.py',1245),
  ('exp_action -> <empty>','exp_action',0,'p_exp_action','capi.py',1250),
  ('recexp -> EX add_operator exp','recexp',3,'p_recexp','capi.py',1274),
  ('term -> factor term_action recterm','term',3,'p_term','capi.py',1279),
  ('term -> factor term_action','term',2,'p_term','capi.py',1280),
  ('term_action -> <empty>','term_action',0,'p_term_action','capi.py',1285),
  ('recterm -> TERMS add_operator term','recterm',3,'p_recterm','capi.py',1308),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','capi.py',1313),
  ('factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2','factor',5,'p_factor','capi.py',1319),
  ('factor -> EX cte','factor',2,'p_factor','capi.py',1320),
  ('factor -> cte','factor',1,'p_factor','capi.py',1321),
  ('factor_action1 -> <empty>','factor_action1',0,'p_factor_action1','capi.py',1335),
  ('factor_action2 -> <empty>','factor_action2',0,'p_factor_action2','capi.py',1341),
  ('type -> primitivetype','type',1,'p_type','capi.py',1347),
  ('type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1','type',8,'p_type','capi.py',1348),
  ('action_list1 -> <empty>','action_list1',0,'p_action_list1','capi.py',1357),
  ('primitivetype -> TINT','primitivetype',1,'p_primitivetype','capi.py',1366),
  ('primitivetype -> TFLOAT','primitivetype',1,'p_primitivetype','capi.py',1367),
  ('primitivetype -> TSTRING','primitivetype',1,'p_primitivetype','capi.py',1368),
  ('primitivetype -> TBOOL','primitivetype',1,'p_primitivetype','capi.py',1369),
  ('assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','assign_list',6,'p_assign_list','capi.py',1376),
  ('listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','listaccess',6,'p_listaccess','capi.py',1388),
  ('list_action1 -> <empty>','list_action1',0,'p_list_action1','capi.py',1401),
  ('list_action_3 -> <empty>','list_action_3',0,'p_list_action_3','capi.py',1410),
  ('nestedvalue -> ID DOT ID','nestedvalue',3,'p_nestedvalue','capi.py',1432),
  ('nestedassign -> nestedvalue EQUAL expression','nestedassign',3,'p_nestedassign','capi.py',1437),
  ('cte -> <empty>','cte',0,'p_cte','capi.py',1442),
  ('cte -> id','cte',1,'p_cte','capi.py',1443),
  ('cte -> int','cte',1,'p_cte','capi.py',1444),
  ('cte -> float','cte',1,'p_cte','capi.py',1445),
  ('cte -> bool','cte',1,'p_cte','capi.py',1446),
  ('cte -> string','cte',1,'p_cte','capi.py',1447),
  ('cte -> nestedvalue','cte',1,'p_cte','capi.py',1448),
  ('cte -> functioncall','cte',1,'p_cte','capi.py',1449),
  ('cte -> listaccess','cte',1,'p_cte','capi.py',1450),
  ('cte -> specialfunction','cte',1,'p_cte','capi.py',1451),
  ('id -> ID','id',1,'p_id','capi.py',1457),
  ('string -> STRING','string',1,'p_string','capi.py',1477),
  ('int -> INT','int',1,'p_int','capi.py',1484),
  ('float -> FLOAT','float',1,'p_float','capi.py',1491),
  ('bool -> TRUE','bool',1,'p_bool','capi.py',1498),
  ('bool -> FALSE','bool',1,'p_bool','capi.py',1499),
]
