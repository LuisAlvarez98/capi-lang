Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    LIST
    OBJECT
    TOBJECT

Grammar

Rule 0     S' -> capi
Rule 1     capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 2     capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 3     capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 4     capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
Rule 5     capi_action1 -> <empty>
Rule 6     capi_action2 -> <empty>
Rule 7     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 8     start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 9     start_action1 -> <empty>
Rule 10    run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
Rule 11    run_action1 -> <empty>
Rule 12    main_cont -> <empty>
Rule 13    vars -> VAR recids COLON type SEMICOLON vars
Rule 14    vars -> VAR recids COLON type SEMICOLON
Rule 15    recids -> ID
Rule 16    recids -> ID COMMA recids
Rule 17    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 18    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 19    recstatement -> statement recstatement
Rule 20    recstatement -> statement
Rule 21    statement -> assign SEMICOLON
Rule 22    statement -> condition
Rule 23    statement -> vars
Rule 24    statement -> loop
Rule 25    statement -> write SEMICOLON
Rule 26    statement -> return SEMICOLON
Rule 27    statement -> functioncall SEMICOLON
Rule 28    statement -> specialfunction SEMICOLON
Rule 29    specialfunction -> draw
Rule 30    specialfunction -> init
Rule 31    specialfunction -> size
Rule 32    specialfunction -> head
Rule 33    specialfunction -> find
Rule 34    specialfunction -> last
Rule 35    specialfunction -> set_fill
Rule 36    specialfunction -> set_title
Rule 37    specialfunction -> get_event
Rule 38    specialfunction -> update
Rule 39    specialfunction -> window_h
Rule 40    specialfunction -> window_w
Rule 41    specialfunction -> set_dimension
Rule 42    specialfunction -> create_text
Rule 43    specialfunction -> rand
Rule 44    specialfunction -> pow
Rule 45    specialfunction -> sqrt
Rule 46    specialfunction -> quit
Rule 47    quit -> QUIT LEFTPAR RIGHTPAR
Rule 48    pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
Rule 49    pow_action1 -> <empty>
Rule 50    sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
Rule 51    sqrt_action1 -> <empty>
Rule 52    draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 53    init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR
Rule 54    size -> ID DOT SIZE LEFTPAR RIGHTPAR
Rule 55    head -> ID DOT HEAD LEFTPAR RIGHTPAR
Rule 56    window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
Rule 57    window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
Rule 58    rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
Rule 59    find -> ID DOT FIND LEFTPAR expression RIGHTPAR
Rule 60    last -> ID DOT LAST LEFTPAR RIGHTPAR
Rule 61    set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
Rule 62    set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 63    set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 64    update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
Rule 65    get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
Rule 66    create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
Rule 67    assign -> ID assign_action1 EQUAL assign_action2 expression
Rule 68    assign -> assign_list EQUAL assign_action2 expression
Rule 69    assign_action1 -> <empty>
Rule 70    assign_action2 -> <empty>
Rule 71    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
Rule 72    condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
Rule 73    condition_action1 -> <empty>
Rule 74    condition_action2 -> <empty>
Rule 75    condition_action3 -> <empty>
Rule 76    loop -> for
Rule 77    loop -> while
Rule 78    for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
Rule 79    for_action1 -> <empty>
Rule 80    for_action2 -> <empty>
Rule 81    for_action3 -> <empty>
Rule 82    while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
Rule 83    while_action1 -> <empty>
Rule 84    while_action2 -> <empty>
Rule 85    while_action3 -> <empty>
Rule 86    function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 87    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 88    function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
Rule 89    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
Rule 90    startscope_action -> <empty>
Rule 91    function_action1 -> <empty>
Rule 92    function_action2 -> <empty>
Rule 93    function_action3 -> <empty>
Rule 94    recparams -> ID COLON type
Rule 95    recparams -> ID COLON type COMMA recparams
Rule 96    recfunc -> function recfunc
Rule 97    recfunc -> function
Rule 98    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 99    recwrite -> expression action_recwrite_exp COMMA recwrite
Rule 100   recwrite -> STRING action_recwrite_cte COMMA recwrite
Rule 101   recwrite -> expression action_recwrite_exp
Rule 102   recwrite -> STRING action_recwrite_cte
Rule 103   action_recwrite_exp -> <empty>
Rule 104   action_recwrite_cte -> <empty>
Rule 105   return -> RETURN expression
Rule 106   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
Rule 107   functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
Rule 108   function_call_action1 -> <empty>
Rule 109   function_call_action2 -> <empty>
Rule 110   recfuncexp -> expression exp_action1 COMMA recfuncexp
Rule 111   recfuncexp -> expression exp_action1 recfunc_action1
Rule 112   exp_action1 -> <empty>
Rule 113   recfunc_action1 -> <empty>
Rule 114   expression -> exp RELOP relop_action1 exp relop_action2
Rule 115   expression -> exp LOGIC logic_action1 exp logic_action2
Rule 116   expression -> exp
Rule 117   relop_action1 -> <empty>
Rule 118   relop_action2 -> <empty>
Rule 119   logic_action1 -> <empty>
Rule 120   logic_action2 -> <empty>
Rule 121   exp -> term exp_action recexp
Rule 122   exp -> term exp_action
Rule 123   exp_action -> <empty>
Rule 124   recexp -> EX add_operator exp
Rule 125   term -> factor term_action recterm
Rule 126   term -> factor term_action
Rule 127   term_action -> <empty>
Rule 128   recterm -> TERMS add_operator term
Rule 129   add_operator -> <empty>
Rule 130   factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2
Rule 131   factor -> EX cte
Rule 132   factor -> cte
Rule 133   factor_action1 -> <empty>
Rule 134   factor_action2 -> <empty>
Rule 135   type -> primitivetype
Rule 136   type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
Rule 137   action_list1 -> <empty>
Rule 138   primitivetype -> TINT
Rule 139   primitivetype -> TFLOAT
Rule 140   primitivetype -> TSTRING
Rule 141   primitivetype -> TBOOL
Rule 142   assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 143   listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
Rule 144   list_action1 -> <empty>
Rule 145   list_action_3 -> <empty>
Rule 146   cte -> <empty>
Rule 147   cte -> id
Rule 148   cte -> int
Rule 149   cte -> float
Rule 150   cte -> bool
Rule 151   cte -> string
Rule 152   cte -> functioncall
Rule 153   cte -> listaccess
Rule 154   cte -> specialfunction
Rule 155   id -> ID
Rule 156   string -> STRING
Rule 157   int -> INT
Rule 158   float -> FLOAT
Rule 159   bool -> TRUE
Rule 160   bool -> FALSE

Terminals, with rules where they appear

BAR                  : 136 136
CAPIGAME             : 52 53 56 57 58 61 62 63 64 65
COLON                : 1 2 3 4 7 13 14 17 18 94 95
COMMA                : 16 48 52 52 52 52 58 62 62 63 66 66 66 95 99 100 110
COMMENT              : 
CREATE_TEXT          : 66
DOT                  : 52 53 54 55 56 57 58 59 60 61 62 63 64 65
DRAW                 : 52
ELSE                 : 72
EQUAL                : 67 68
EX                   : 124 131
FALSE                : 160
FIND                 : 59
FLOAT                : 158
FOR                  : 78
FUNC                 : 8 10 86 87 88 89
GET_EVENT            : 65
GLOBAL               : 7
HEAD                 : 55
ID                   : 15 16 54 55 59 60 67 86 87 88 89 94 95 106 107 142 143 155
IF                   : 71 72
INIT                 : 53
INT                  : 157
LAST                 : 60
LEFTBRACKET          : 136 142 143
LEFTKEY              : 1 2 3 4 7 17 18
LEFTPAR              : 8 10 47 48 50 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 71 72 78 82 86 87 88 89 98 106 107 130
LIST                 : 
LOGIC                : 115
MAIN                 : 1 2 3 4
OBJECT               : 
POW                  : 48
PRINT                : 98
QUIT                 : 47
RAND                 : 58
RELOP                : 114
RETURN               : 105
RIGHTBRACKET         : 136 142 143
RIGHTKEY             : 1 2 3 4 7 17 18
RIGHTPAR             : 8 10 47 48 50 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 71 72 78 82 86 87 88 89 98 106 107 130
RUN                  : 10
SEMICOLON            : 1 2 3 4 7 13 14 17 18 21 25 26 27 28 78 78 78
SET_DIMENSION        : 63
SET_FILL             : 62
SET_TITLE            : 61
SIZE                 : 54
SQRT                 : 50
START                : 8
STRING               : 100 102 156
TBOOL                : 141
TERMS                : 128
TFLOAT               : 139
TINT                 : 138
TLIST                : 136
TOBJECT              : 
TRUE                 : 159
TSTRING              : 140
UPDATE               : 64
VAR                  : 13 14
VOID                 : 8 10 88 89
WHILE                : 82
WINDOW_H             : 56
WINDOW_W             : 57
error                : 

Nonterminals, with rules where they appear

action_list1         : 136
action_recwrite_cte  : 100 102
action_recwrite_exp  : 99 101
add_operator         : 124 128
assign               : 21 78 78
assign_action1       : 67
assign_action2       : 67 68
assign_list          : 68
block                : 8 10 71 72 72 78 82 86 87 88 89
bool                 : 150
capi                 : 0
capi_action1         : 1 2 3 4
capi_action2         : 1 2 3 4
condition            : 22
condition_action1    : 71 72
condition_action2    : 71 72
condition_action3    : 72
create_text          : 42
cte                  : 131 132 136
draw                 : 29
exp                  : 114 114 115 115 116 124
exp_action           : 121 122
exp_action1          : 110 111
expression           : 48 48 50 52 52 52 52 52 58 58 59 61 62 62 62 63 63 66 66 66 66 67 68 71 72 78 82 99 101 105 110 111 130 142 143
factor               : 125 126
factor_action1       : 130
factor_action2       : 130
find                 : 33
float                : 149
for                  : 76
for_action1          : 78
for_action2          : 78
for_action3          : 78
function             : 96 97
function_action1     : 86 88
function_action2     : 86 88
function_action3     : 86 87 88 89
function_call_action1 : 106 107
function_call_action2 : 106 107
functioncall         : 27 152
get_event            : 37
global               : 1 3
head                 : 32
id                   : 147
init                 : 30
int                  : 148
last                 : 34
list_action1         : 142 143
list_action_3        : 142 143
listaccess           : 153
logic_action1        : 115
logic_action2        : 115
loop                 : 24
main_cont            : 8 10
pow                  : 44
pow_action1          : 48
primitivetype        : 135 136
quit                 : 46
rand                 : 43
recexp               : 121
recfunc              : 1 2 96
recfunc_action1      : 111
recfuncexp           : 106 110
recids               : 13 14 16
recparams            : 86 88 95
recstatement         : 17 19
recterm              : 125
recwrite             : 98 99 100
relop_action1        : 114
relop_action2        : 114
return               : 26
run                  : 1 2 3 4
run_action1          : 10
set_dimension        : 41
set_fill             : 35
set_title            : 36
size                 : 31
specialfunction      : 28 154
sqrt                 : 45
sqrt_action1         : 50
start                : 1 2 3 4
start_action1        : 8
startscope_action    : 8 10 78 82 86 87 88 89
statement            : 19 20
string               : 151
term                 : 121 122 128
term_action          : 125 126
type                 : 13 14 86 87 94 95
update               : 38
vars                 : 7 13 23
while                : 77
while_action1        : 82
while_action2        : 82
while_action3        : 82
window_h             : 39
window_w             : 40
write                : 25

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> . capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> . capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> . capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (5) capi_action1 -> .

    MAIN            reduce using rule 5 (capi_action1 -> .)
    GLOBAL          reduce using rule 5 (capi_action1 -> .)
    VOID            reduce using rule 5 (capi_action1 -> .)
    TLIST           reduce using rule 5 (capi_action1 -> .)
    TINT            reduce using rule 5 (capi_action1 -> .)
    TFLOAT          reduce using rule 5 (capi_action1 -> .)
    TSTRING         reduce using rule 5 (capi_action1 -> .)
    TBOOL           reduce using rule 5 (capi_action1 -> .)

    capi                           shift and go to state 1
    capi_action1                   shift and go to state 2

state 1

    (0) S' -> capi .



state 2

    (1) capi -> capi_action1 . global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (2) capi -> capi_action1 . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 . global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (4) capi -> capi_action1 . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (7) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (96) recfunc -> . function recfunc
    (97) recfunc -> . function
    (86) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (88) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    MAIN            shift and go to state 5
    GLOBAL          shift and go to state 6
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    global                         shift and go to state 3
    recfunc                        shift and go to state 4
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 3

    (1) capi -> capi_action1 global . recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (3) capi -> capi_action1 global . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON
    (96) recfunc -> . function recfunc
    (97) recfunc -> . function
    (86) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (88) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    MAIN            shift and go to state 17
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    recfunc                        shift and go to state 16
    function                       shift and go to state 7
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 4

    (2) capi -> capi_action1 recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 18


state 5

    (4) capi -> capi_action1 MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 19


state 6

    (7) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 7

    (96) recfunc -> function . recfunc
    (97) recfunc -> function .
    (96) recfunc -> . function recfunc
    (97) recfunc -> . function
    (86) function -> . type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (88) function -> . VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    MAIN            reduce using rule 97 (recfunc -> function .)
    VOID            shift and go to state 9
    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    function                       shift and go to state 7
    recfunc                        shift and go to state 21
    type                           shift and go to state 8
    primitivetype                  shift and go to state 10

state 8

    (86) function -> type . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 22


state 9

    (88) function -> VOID . FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    FUNC            shift and go to state 23


state 10

    (135) type -> primitivetype .

    FUNC            reduce using rule 135 (type -> primitivetype .)
    SEMICOLON       reduce using rule 135 (type -> primitivetype .)
    COMMA           reduce using rule 135 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 135 (type -> primitivetype .)


state 11

    (136) type -> TLIST . BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 24


state 12

    (138) primitivetype -> TINT .

    FUNC            reduce using rule 138 (primitivetype -> TINT .)
    BAR             reduce using rule 138 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 138 (primitivetype -> TINT .)
    COMMA           reduce using rule 138 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 138 (primitivetype -> TINT .)


state 13

    (139) primitivetype -> TFLOAT .

    FUNC            reduce using rule 139 (primitivetype -> TFLOAT .)
    BAR             reduce using rule 139 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 139 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 139 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 139 (primitivetype -> TFLOAT .)


state 14

    (140) primitivetype -> TSTRING .

    FUNC            reduce using rule 140 (primitivetype -> TSTRING .)
    BAR             reduce using rule 140 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 140 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 140 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 140 (primitivetype -> TSTRING .)


state 15

    (141) primitivetype -> TBOOL .

    FUNC            reduce using rule 141 (primitivetype -> TBOOL .)
    BAR             reduce using rule 141 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 141 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 141 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 141 (primitivetype -> TBOOL .)


state 16

    (1) capi -> capi_action1 global recfunc . MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 25


state 17

    (3) capi -> capi_action1 global MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 26


state 18

    (2) capi -> capi_action1 recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (4) capi -> capi_action1 MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 28


state 20

    (7) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (96) recfunc -> function recfunc .

    MAIN            reduce using rule 96 (recfunc -> function recfunc .)


state 22

    (86) function -> type FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 30


state 23

    (88) function -> VOID FUNC . ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR function_action3 block

    ID              shift and go to state 31


state 24

    (136) type -> TLIST BAR . primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    primitivetype                  shift and go to state 32

state 25

    (1) capi -> capi_action1 global recfunc MAIN . COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    COLON           shift and go to state 33


state 26

    (3) capi -> capi_action1 global MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 34


state 27

    (2) capi -> capi_action1 recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (4) capi -> capi_action1 MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 36

state 29

    (7) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (13) vars -> . VAR recids COLON type SEMICOLON vars
    (14) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 39

    vars                           shift and go to state 38

state 30

    (86) function -> type FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (90) startscope_action -> .

    LEFTPAR         reduce using rule 90 (startscope_action -> .)

    startscope_action              shift and go to state 40

state 31

    (88) function -> VOID FUNC ID . startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR function_action3 block
    (90) startscope_action -> .

    LEFTPAR         reduce using rule 90 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (136) type -> TLIST BAR primitivetype . BAR LEFTBRACKET cte RIGHTBRACKET action_list1

    BAR             shift and go to state 42


state 33

    (1) capi -> capi_action1 global recfunc MAIN COLON . LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 43


state 34

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 44

state 35

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 45

state 36

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 46

state 37

    (8) start -> VOID . FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 47


state 38

    (7) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 48


state 39

    (13) vars -> VAR . recids COLON type SEMICOLON vars
    (14) vars -> VAR . recids COLON type SEMICOLON
    (15) recids -> . ID
    (16) recids -> . ID COMMA recids

    ID              shift and go to state 50

    recids                         shift and go to state 49

state 40

    (86) function -> type FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 51


state 41

    (88) function -> VOID FUNC ID startscope_action . LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR function_action3 block

    LEFTPAR         shift and go to state 52


state 42

    (136) type -> TLIST BAR primitivetype BAR . LEFTBRACKET cte RIGHTBRACKET action_list1

    LEFTBRACKET     shift and go to state 53


state 43

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY . start capi_action2 run RIGHTKEY SEMICOLON
    (8) start -> . VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 37

    start                          shift and go to state 54

state 44

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 55

state 45

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 56

state 46

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 57

state 47

    (8) start -> VOID FUNC . start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block
    (9) start_action1 -> .

    START           reduce using rule 9 (start_action1 -> .)

    start_action1                  shift and go to state 59

state 48

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 60


state 49

    (13) vars -> VAR recids . COLON type SEMICOLON vars
    (14) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 61


state 50

    (15) recids -> ID .
    (16) recids -> ID . COMMA recids

    COLON           reduce using rule 15 (recids -> ID .)
    COMMA           shift and go to state 62


state 51

    (86) function -> type FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (87) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (94) recparams -> . ID COLON type
    (95) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 65
    ID              shift and go to state 63

    recparams                      shift and go to state 64

state 52

    (88) function -> VOID FUNC ID startscope_action LEFTPAR . recparams function_action1 RIGHTPAR function_action2 function_action3 block
    (89) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR function_action3 block
    (94) recparams -> . ID COLON type
    (95) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 67
    ID              shift and go to state 63

    recparams                      shift and go to state 66

state 53

    (136) type -> TLIST BAR primitivetype BAR LEFTBRACKET . cte RIGHTBRACKET action_list1
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

    cte                            shift and go to state 68
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 54

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start . capi_action2 run RIGHTKEY SEMICOLON
    (6) capi_action2 -> .

    VOID            reduce using rule 6 (capi_action2 -> .)

    capi_action2                   shift and go to state 106

state 55

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 107

state 56

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 108

state 57

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 109


state 58

    (10) run -> VOID . FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    FUNC            shift and go to state 110


state 59

    (8) start -> VOID FUNC start_action1 . START startscope_action LEFTPAR RIGHTPAR main_cont block

    START           shift and go to state 111


state 60

    (7) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 7 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 61

    (13) vars -> VAR recids COLON . type SEMICOLON vars
    (14) vars -> VAR recids COLON . type SEMICOLON
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    type                           shift and go to state 112
    primitivetype                  shift and go to state 10

state 62

    (16) recids -> ID COMMA . recids
    (15) recids -> . ID
    (16) recids -> . ID COMMA recids

    ID              shift and go to state 50

    recids                         shift and go to state 113

state 63

    (94) recparams -> ID . COLON type
    (95) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 114


state 64

    (86) function -> type FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (91) function_action1 -> .

    RIGHTPAR        reduce using rule 91 (function_action1 -> .)

    function_action1               shift and go to state 115

state 65

    (87) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (93) function_action3 -> .

    COLON           reduce using rule 93 (function_action3 -> .)

    function_action3               shift and go to state 116

state 66

    (88) function -> VOID FUNC ID startscope_action LEFTPAR recparams . function_action1 RIGHTPAR function_action2 function_action3 block
    (91) function_action1 -> .

    RIGHTPAR        reduce using rule 91 (function_action1 -> .)

    function_action1               shift and go to state 117

state 67

    (89) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . function_action3 block
    (93) function_action3 -> .

    COLON           reduce using rule 93 (function_action3 -> .)

    function_action3               shift and go to state 118

state 68

    (136) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte . RIGHTBRACKET action_list1

    RIGHTBRACKET    shift and go to state 119


state 69

    (147) cte -> id .

    RIGHTBRACKET    reduce using rule 147 (cte -> id .)
    TERMS           reduce using rule 147 (cte -> id .)
    EX              reduce using rule 147 (cte -> id .)
    RELOP           reduce using rule 147 (cte -> id .)
    LOGIC           reduce using rule 147 (cte -> id .)
    COMMA           reduce using rule 147 (cte -> id .)
    RIGHTPAR        reduce using rule 147 (cte -> id .)
    SEMICOLON       reduce using rule 147 (cte -> id .)


state 70

    (148) cte -> int .

    RIGHTBRACKET    reduce using rule 148 (cte -> int .)
    TERMS           reduce using rule 148 (cte -> int .)
    EX              reduce using rule 148 (cte -> int .)
    RELOP           reduce using rule 148 (cte -> int .)
    LOGIC           reduce using rule 148 (cte -> int .)
    COMMA           reduce using rule 148 (cte -> int .)
    RIGHTPAR        reduce using rule 148 (cte -> int .)
    SEMICOLON       reduce using rule 148 (cte -> int .)


state 71

    (149) cte -> float .

    RIGHTBRACKET    reduce using rule 149 (cte -> float .)
    TERMS           reduce using rule 149 (cte -> float .)
    EX              reduce using rule 149 (cte -> float .)
    RELOP           reduce using rule 149 (cte -> float .)
    LOGIC           reduce using rule 149 (cte -> float .)
    COMMA           reduce using rule 149 (cte -> float .)
    RIGHTPAR        reduce using rule 149 (cte -> float .)
    SEMICOLON       reduce using rule 149 (cte -> float .)


state 72

    (150) cte -> bool .

    RIGHTBRACKET    reduce using rule 150 (cte -> bool .)
    TERMS           reduce using rule 150 (cte -> bool .)
    EX              reduce using rule 150 (cte -> bool .)
    RELOP           reduce using rule 150 (cte -> bool .)
    LOGIC           reduce using rule 150 (cte -> bool .)
    COMMA           reduce using rule 150 (cte -> bool .)
    RIGHTPAR        reduce using rule 150 (cte -> bool .)
    SEMICOLON       reduce using rule 150 (cte -> bool .)


state 73

    (151) cte -> string .

    RIGHTBRACKET    reduce using rule 151 (cte -> string .)
    TERMS           reduce using rule 151 (cte -> string .)
    EX              reduce using rule 151 (cte -> string .)
    RELOP           reduce using rule 151 (cte -> string .)
    LOGIC           reduce using rule 151 (cte -> string .)
    COMMA           reduce using rule 151 (cte -> string .)
    RIGHTPAR        reduce using rule 151 (cte -> string .)
    SEMICOLON       reduce using rule 151 (cte -> string .)


state 74

    (152) cte -> functioncall .

    RIGHTBRACKET    reduce using rule 152 (cte -> functioncall .)
    TERMS           reduce using rule 152 (cte -> functioncall .)
    EX              reduce using rule 152 (cte -> functioncall .)
    RELOP           reduce using rule 152 (cte -> functioncall .)
    LOGIC           reduce using rule 152 (cte -> functioncall .)
    COMMA           reduce using rule 152 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 152 (cte -> functioncall .)
    SEMICOLON       reduce using rule 152 (cte -> functioncall .)


state 75

    (153) cte -> listaccess .

    RIGHTBRACKET    reduce using rule 153 (cte -> listaccess .)
    TERMS           reduce using rule 153 (cte -> listaccess .)
    EX              reduce using rule 153 (cte -> listaccess .)
    RELOP           reduce using rule 153 (cte -> listaccess .)
    LOGIC           reduce using rule 153 (cte -> listaccess .)
    COMMA           reduce using rule 153 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 153 (cte -> listaccess .)
    SEMICOLON       reduce using rule 153 (cte -> listaccess .)


state 76

    (154) cte -> specialfunction .

    RIGHTBRACKET    reduce using rule 154 (cte -> specialfunction .)
    TERMS           reduce using rule 154 (cte -> specialfunction .)
    EX              reduce using rule 154 (cte -> specialfunction .)
    RELOP           reduce using rule 154 (cte -> specialfunction .)
    LOGIC           reduce using rule 154 (cte -> specialfunction .)
    COMMA           reduce using rule 154 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 154 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 154 (cte -> specialfunction .)


state 77

    (155) id -> ID .
    (106) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (54) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> ID . DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> ID . DOT LAST LEFTPAR RIGHTPAR
    (108) function_call_action1 -> .
    (144) list_action1 -> .

    RIGHTBRACKET    reduce using rule 155 (id -> ID .)
    TERMS           reduce using rule 155 (id -> ID .)
    EX              reduce using rule 155 (id -> ID .)
    RELOP           reduce using rule 155 (id -> ID .)
    LOGIC           reduce using rule 155 (id -> ID .)
    COMMA           reduce using rule 155 (id -> ID .)
    RIGHTPAR        reduce using rule 155 (id -> ID .)
    SEMICOLON       reduce using rule 155 (id -> ID .)
    DOT             shift and go to state 122
    LEFTPAR         reduce using rule 108 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 144 (list_action1 -> .)

    function_call_action1          shift and go to state 120
    list_action1                   shift and go to state 121

state 78

    (157) int -> INT .

    RIGHTBRACKET    reduce using rule 157 (int -> INT .)
    TERMS           reduce using rule 157 (int -> INT .)
    EX              reduce using rule 157 (int -> INT .)
    RELOP           reduce using rule 157 (int -> INT .)
    LOGIC           reduce using rule 157 (int -> INT .)
    COMMA           reduce using rule 157 (int -> INT .)
    RIGHTPAR        reduce using rule 157 (int -> INT .)
    SEMICOLON       reduce using rule 157 (int -> INT .)


state 79

    (158) float -> FLOAT .

    RIGHTBRACKET    reduce using rule 158 (float -> FLOAT .)
    TERMS           reduce using rule 158 (float -> FLOAT .)
    EX              reduce using rule 158 (float -> FLOAT .)
    RELOP           reduce using rule 158 (float -> FLOAT .)
    LOGIC           reduce using rule 158 (float -> FLOAT .)
    COMMA           reduce using rule 158 (float -> FLOAT .)
    RIGHTPAR        reduce using rule 158 (float -> FLOAT .)
    SEMICOLON       reduce using rule 158 (float -> FLOAT .)


state 80

    (159) bool -> TRUE .

    RIGHTBRACKET    reduce using rule 159 (bool -> TRUE .)
    TERMS           reduce using rule 159 (bool -> TRUE .)
    EX              reduce using rule 159 (bool -> TRUE .)
    RELOP           reduce using rule 159 (bool -> TRUE .)
    LOGIC           reduce using rule 159 (bool -> TRUE .)
    COMMA           reduce using rule 159 (bool -> TRUE .)
    RIGHTPAR        reduce using rule 159 (bool -> TRUE .)
    SEMICOLON       reduce using rule 159 (bool -> TRUE .)


state 81

    (160) bool -> FALSE .

    RIGHTBRACKET    reduce using rule 160 (bool -> FALSE .)
    TERMS           reduce using rule 160 (bool -> FALSE .)
    EX              reduce using rule 160 (bool -> FALSE .)
    RELOP           reduce using rule 160 (bool -> FALSE .)
    LOGIC           reduce using rule 160 (bool -> FALSE .)
    COMMA           reduce using rule 160 (bool -> FALSE .)
    RIGHTPAR        reduce using rule 160 (bool -> FALSE .)
    SEMICOLON       reduce using rule 160 (bool -> FALSE .)


state 82

    (156) string -> STRING .

    RIGHTBRACKET    reduce using rule 156 (string -> STRING .)
    TERMS           reduce using rule 156 (string -> STRING .)
    EX              reduce using rule 156 (string -> STRING .)
    RELOP           reduce using rule 156 (string -> STRING .)
    LOGIC           reduce using rule 156 (string -> STRING .)
    COMMA           reduce using rule 156 (string -> STRING .)
    RIGHTPAR        reduce using rule 156 (string -> STRING .)
    SEMICOLON       reduce using rule 156 (string -> STRING .)


state 83

    (29) specialfunction -> draw .

    RIGHTBRACKET    reduce using rule 29 (specialfunction -> draw .)
    TERMS           reduce using rule 29 (specialfunction -> draw .)
    EX              reduce using rule 29 (specialfunction -> draw .)
    RELOP           reduce using rule 29 (specialfunction -> draw .)
    LOGIC           reduce using rule 29 (specialfunction -> draw .)
    COMMA           reduce using rule 29 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 29 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 29 (specialfunction -> draw .)


state 84

    (30) specialfunction -> init .

    RIGHTBRACKET    reduce using rule 30 (specialfunction -> init .)
    TERMS           reduce using rule 30 (specialfunction -> init .)
    EX              reduce using rule 30 (specialfunction -> init .)
    RELOP           reduce using rule 30 (specialfunction -> init .)
    LOGIC           reduce using rule 30 (specialfunction -> init .)
    COMMA           reduce using rule 30 (specialfunction -> init .)
    RIGHTPAR        reduce using rule 30 (specialfunction -> init .)
    SEMICOLON       reduce using rule 30 (specialfunction -> init .)


state 85

    (31) specialfunction -> size .

    RIGHTBRACKET    reduce using rule 31 (specialfunction -> size .)
    TERMS           reduce using rule 31 (specialfunction -> size .)
    EX              reduce using rule 31 (specialfunction -> size .)
    RELOP           reduce using rule 31 (specialfunction -> size .)
    LOGIC           reduce using rule 31 (specialfunction -> size .)
    COMMA           reduce using rule 31 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 31 (specialfunction -> size .)
    SEMICOLON       reduce using rule 31 (specialfunction -> size .)


state 86

    (32) specialfunction -> head .

    RIGHTBRACKET    reduce using rule 32 (specialfunction -> head .)
    TERMS           reduce using rule 32 (specialfunction -> head .)
    EX              reduce using rule 32 (specialfunction -> head .)
    RELOP           reduce using rule 32 (specialfunction -> head .)
    LOGIC           reduce using rule 32 (specialfunction -> head .)
    COMMA           reduce using rule 32 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> head .)
    SEMICOLON       reduce using rule 32 (specialfunction -> head .)


state 87

    (33) specialfunction -> find .

    RIGHTBRACKET    reduce using rule 33 (specialfunction -> find .)
    TERMS           reduce using rule 33 (specialfunction -> find .)
    EX              reduce using rule 33 (specialfunction -> find .)
    RELOP           reduce using rule 33 (specialfunction -> find .)
    LOGIC           reduce using rule 33 (specialfunction -> find .)
    COMMA           reduce using rule 33 (specialfunction -> find .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> find .)
    SEMICOLON       reduce using rule 33 (specialfunction -> find .)


state 88

    (34) specialfunction -> last .

    RIGHTBRACKET    reduce using rule 34 (specialfunction -> last .)
    TERMS           reduce using rule 34 (specialfunction -> last .)
    EX              reduce using rule 34 (specialfunction -> last .)
    RELOP           reduce using rule 34 (specialfunction -> last .)
    LOGIC           reduce using rule 34 (specialfunction -> last .)
    COMMA           reduce using rule 34 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> last .)
    SEMICOLON       reduce using rule 34 (specialfunction -> last .)


state 89

    (35) specialfunction -> set_fill .

    RIGHTBRACKET    reduce using rule 35 (specialfunction -> set_fill .)
    TERMS           reduce using rule 35 (specialfunction -> set_fill .)
    EX              reduce using rule 35 (specialfunction -> set_fill .)
    RELOP           reduce using rule 35 (specialfunction -> set_fill .)
    LOGIC           reduce using rule 35 (specialfunction -> set_fill .)
    COMMA           reduce using rule 35 (specialfunction -> set_fill .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> set_fill .)
    SEMICOLON       reduce using rule 35 (specialfunction -> set_fill .)


state 90

    (36) specialfunction -> set_title .

    RIGHTBRACKET    reduce using rule 36 (specialfunction -> set_title .)
    TERMS           reduce using rule 36 (specialfunction -> set_title .)
    EX              reduce using rule 36 (specialfunction -> set_title .)
    RELOP           reduce using rule 36 (specialfunction -> set_title .)
    LOGIC           reduce using rule 36 (specialfunction -> set_title .)
    COMMA           reduce using rule 36 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 36 (specialfunction -> set_title .)


state 91

    (37) specialfunction -> get_event .

    RIGHTBRACKET    reduce using rule 37 (specialfunction -> get_event .)
    TERMS           reduce using rule 37 (specialfunction -> get_event .)
    EX              reduce using rule 37 (specialfunction -> get_event .)
    RELOP           reduce using rule 37 (specialfunction -> get_event .)
    LOGIC           reduce using rule 37 (specialfunction -> get_event .)
    COMMA           reduce using rule 37 (specialfunction -> get_event .)
    RIGHTPAR        reduce using rule 37 (specialfunction -> get_event .)
    SEMICOLON       reduce using rule 37 (specialfunction -> get_event .)


state 92

    (38) specialfunction -> update .

    RIGHTBRACKET    reduce using rule 38 (specialfunction -> update .)
    TERMS           reduce using rule 38 (specialfunction -> update .)
    EX              reduce using rule 38 (specialfunction -> update .)
    RELOP           reduce using rule 38 (specialfunction -> update .)
    LOGIC           reduce using rule 38 (specialfunction -> update .)
    COMMA           reduce using rule 38 (specialfunction -> update .)
    RIGHTPAR        reduce using rule 38 (specialfunction -> update .)
    SEMICOLON       reduce using rule 38 (specialfunction -> update .)


state 93

    (39) specialfunction -> window_h .

    RIGHTBRACKET    reduce using rule 39 (specialfunction -> window_h .)
    TERMS           reduce using rule 39 (specialfunction -> window_h .)
    EX              reduce using rule 39 (specialfunction -> window_h .)
    RELOP           reduce using rule 39 (specialfunction -> window_h .)
    LOGIC           reduce using rule 39 (specialfunction -> window_h .)
    COMMA           reduce using rule 39 (specialfunction -> window_h .)
    RIGHTPAR        reduce using rule 39 (specialfunction -> window_h .)
    SEMICOLON       reduce using rule 39 (specialfunction -> window_h .)


state 94

    (40) specialfunction -> window_w .

    RIGHTBRACKET    reduce using rule 40 (specialfunction -> window_w .)
    TERMS           reduce using rule 40 (specialfunction -> window_w .)
    EX              reduce using rule 40 (specialfunction -> window_w .)
    RELOP           reduce using rule 40 (specialfunction -> window_w .)
    LOGIC           reduce using rule 40 (specialfunction -> window_w .)
    COMMA           reduce using rule 40 (specialfunction -> window_w .)
    RIGHTPAR        reduce using rule 40 (specialfunction -> window_w .)
    SEMICOLON       reduce using rule 40 (specialfunction -> window_w .)


state 95

    (41) specialfunction -> set_dimension .

    RIGHTBRACKET    reduce using rule 41 (specialfunction -> set_dimension .)
    TERMS           reduce using rule 41 (specialfunction -> set_dimension .)
    EX              reduce using rule 41 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 41 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 41 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 41 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 41 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 41 (specialfunction -> set_dimension .)


state 96

    (42) specialfunction -> create_text .

    RIGHTBRACKET    reduce using rule 42 (specialfunction -> create_text .)
    TERMS           reduce using rule 42 (specialfunction -> create_text .)
    EX              reduce using rule 42 (specialfunction -> create_text .)
    RELOP           reduce using rule 42 (specialfunction -> create_text .)
    LOGIC           reduce using rule 42 (specialfunction -> create_text .)
    COMMA           reduce using rule 42 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 42 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 42 (specialfunction -> create_text .)


state 97

    (43) specialfunction -> rand .

    RIGHTBRACKET    reduce using rule 43 (specialfunction -> rand .)
    TERMS           reduce using rule 43 (specialfunction -> rand .)
    EX              reduce using rule 43 (specialfunction -> rand .)
    RELOP           reduce using rule 43 (specialfunction -> rand .)
    LOGIC           reduce using rule 43 (specialfunction -> rand .)
    COMMA           reduce using rule 43 (specialfunction -> rand .)
    RIGHTPAR        reduce using rule 43 (specialfunction -> rand .)
    SEMICOLON       reduce using rule 43 (specialfunction -> rand .)


state 98

    (44) specialfunction -> pow .

    RIGHTBRACKET    reduce using rule 44 (specialfunction -> pow .)
    TERMS           reduce using rule 44 (specialfunction -> pow .)
    EX              reduce using rule 44 (specialfunction -> pow .)
    RELOP           reduce using rule 44 (specialfunction -> pow .)
    LOGIC           reduce using rule 44 (specialfunction -> pow .)
    COMMA           reduce using rule 44 (specialfunction -> pow .)
    RIGHTPAR        reduce using rule 44 (specialfunction -> pow .)
    SEMICOLON       reduce using rule 44 (specialfunction -> pow .)


state 99

    (45) specialfunction -> sqrt .

    RIGHTBRACKET    reduce using rule 45 (specialfunction -> sqrt .)
    TERMS           reduce using rule 45 (specialfunction -> sqrt .)
    EX              reduce using rule 45 (specialfunction -> sqrt .)
    RELOP           reduce using rule 45 (specialfunction -> sqrt .)
    LOGIC           reduce using rule 45 (specialfunction -> sqrt .)
    COMMA           reduce using rule 45 (specialfunction -> sqrt .)
    RIGHTPAR        reduce using rule 45 (specialfunction -> sqrt .)
    SEMICOLON       reduce using rule 45 (specialfunction -> sqrt .)


state 100

    (46) specialfunction -> quit .

    RIGHTBRACKET    reduce using rule 46 (specialfunction -> quit .)
    TERMS           reduce using rule 46 (specialfunction -> quit .)
    EX              reduce using rule 46 (specialfunction -> quit .)
    RELOP           reduce using rule 46 (specialfunction -> quit .)
    LOGIC           reduce using rule 46 (specialfunction -> quit .)
    COMMA           reduce using rule 46 (specialfunction -> quit .)
    RIGHTPAR        reduce using rule 46 (specialfunction -> quit .)
    SEMICOLON       reduce using rule 46 (specialfunction -> quit .)


state 101

    (52) draw -> CAPIGAME . DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> CAPIGAME . DOT INIT LEFTPAR RIGHTPAR
    (62) set_fill -> CAPIGAME . DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> CAPIGAME . DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> CAPIGAME . DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> CAPIGAME . DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> CAPIGAME . DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> CAPIGAME . DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> CAPIGAME . DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (58) rand -> CAPIGAME . DOT RAND LEFTPAR expression COMMA expression RIGHTPAR

    DOT             shift and go to state 123


state 102

    (66) create_text -> CREATE_TEXT . LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 124


state 103

    (48) pow -> POW . pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (49) pow_action1 -> .

    LEFTPAR         reduce using rule 49 (pow_action1 -> .)

    pow_action1                    shift and go to state 125

state 104

    (50) sqrt -> SQRT . sqrt_action1 LEFTPAR expression RIGHTPAR
    (51) sqrt_action1 -> .

    LEFTPAR         reduce using rule 51 (sqrt_action1 -> .)

    sqrt_action1                   shift and go to state 126

state 105

    (47) quit -> QUIT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 127


state 106

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 . run RIGHTKEY SEMICOLON
    (10) run -> . VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    VOID            shift and go to state 58

    run                            shift and go to state 128

state 107

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 129


state 108

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 130


state 109

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 131


state 110

    (10) run -> VOID FUNC . run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block
    (11) run_action1 -> .

    RUN             reduce using rule 11 (run_action1 -> .)

    run_action1                    shift and go to state 132

state 111

    (8) start -> VOID FUNC start_action1 START . startscope_action LEFTPAR RIGHTPAR main_cont block
    (90) startscope_action -> .

    LEFTPAR         reduce using rule 90 (startscope_action -> .)

    startscope_action              shift and go to state 133

state 112

    (13) vars -> VAR recids COLON type . SEMICOLON vars
    (14) vars -> VAR recids COLON type . SEMICOLON

    SEMICOLON       shift and go to state 134


state 113

    (16) recids -> ID COMMA recids .

    COLON           reduce using rule 16 (recids -> ID COMMA recids .)


state 114

    (94) recparams -> ID COLON . type
    (95) recparams -> ID COLON . type COMMA recparams
    (135) type -> . primitivetype
    (136) type -> . TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1
    (138) primitivetype -> . TINT
    (139) primitivetype -> . TFLOAT
    (140) primitivetype -> . TSTRING
    (141) primitivetype -> . TBOOL

    TLIST           shift and go to state 11
    TINT            shift and go to state 12
    TFLOAT          shift and go to state 13
    TSTRING         shift and go to state 14
    TBOOL           shift and go to state 15

    type                           shift and go to state 135
    primitivetype                  shift and go to state 10

state 115

    (86) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 136


state 116

    (87) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 137

state 117

    (88) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 . RIGHTPAR function_action2 function_action3 block

    RIGHTPAR        shift and go to state 139


state 118

    (89) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 . block
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 140

state 119

    (136) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET . action_list1
    (137) action_list1 -> .

    FUNC            reduce using rule 137 (action_list1 -> .)
    SEMICOLON       reduce using rule 137 (action_list1 -> .)
    COMMA           reduce using rule 137 (action_list1 -> .)
    RIGHTPAR        reduce using rule 137 (action_list1 -> .)

    action_list1                   shift and go to state 141

state 120

    (106) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> ID function_call_action1 . LEFTPAR function_call_action2 RIGHTPAR

    LEFTPAR         shift and go to state 142


state 121

    (143) listaccess -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 143


state 122

    (54) size -> ID DOT . SIZE LEFTPAR RIGHTPAR
    (55) head -> ID DOT . HEAD LEFTPAR RIGHTPAR
    (59) find -> ID DOT . FIND LEFTPAR expression RIGHTPAR
    (60) last -> ID DOT . LAST LEFTPAR RIGHTPAR

    SIZE            shift and go to state 144
    HEAD            shift and go to state 145
    FIND            shift and go to state 146
    LAST            shift and go to state 147


state 123

    (52) draw -> CAPIGAME DOT . DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> CAPIGAME DOT . INIT LEFTPAR RIGHTPAR
    (62) set_fill -> CAPIGAME DOT . SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> CAPIGAME DOT . SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> CAPIGAME DOT . GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> CAPIGAME DOT . UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> CAPIGAME DOT . WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> CAPIGAME DOT . WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> CAPIGAME DOT . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (58) rand -> CAPIGAME DOT . RAND LEFTPAR expression COMMA expression RIGHTPAR

    DRAW            shift and go to state 148
    INIT            shift and go to state 149
    SET_FILL        shift and go to state 150
    SET_TITLE       shift and go to state 151
    GET_EVENT       shift and go to state 152
    UPDATE          shift and go to state 153
    WINDOW_H        shift and go to state 154
    WINDOW_W        shift and go to state 155
    SET_DIMENSION   shift and go to state 156
    RAND            shift and go to state 157


state 124

    (66) create_text -> CREATE_TEXT LEFTPAR . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 158
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 125

    (48) pow -> POW pow_action1 . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 165


state 126

    (50) sqrt -> SQRT sqrt_action1 . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 166


state 127

    (47) quit -> QUIT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 167


state 128

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 168


state 129

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 169


state 130

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 170


state 131

    (4) capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 132

    (10) run -> VOID FUNC run_action1 . RUN startscope_action LEFTPAR RIGHTPAR main_cont block

    RUN             shift and go to state 171


state 133

    (8) start -> VOID FUNC start_action1 START startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 172


state 134

    (13) vars -> VAR recids COLON type SEMICOLON . vars
    (14) vars -> VAR recids COLON type SEMICOLON .
    (13) vars -> . VAR recids COLON type SEMICOLON vars
    (14) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    CAPIGAME        reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    POW             reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    SQRT            reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    QUIT            reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 14 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 173

state 135

    (94) recparams -> ID COLON type .
    (95) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 94 (recparams -> ID COLON type .)
    COMMA           shift and go to state 174


state 136

    (86) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (92) function_action2 -> .

    COLON           reduce using rule 92 (function_action2 -> .)

    function_action2               shift and go to state 175

state 137

    (87) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 87 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 138

    (17) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 176


state 139

    (88) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR . function_action2 function_action3 block
    (92) function_action2 -> .

    COLON           reduce using rule 92 (function_action2 -> .)

    function_action2               shift and go to state 177

state 140

    (89) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .

    VOID            reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TLIST           reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TINT            reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TFLOAT          reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TSTRING         reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    TBOOL           reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)
    MAIN            reduce using rule 89 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block .)


state 141

    (136) type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .

    FUNC            reduce using rule 136 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    SEMICOLON       reduce using rule 136 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    COMMA           reduce using rule 136 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)
    RIGHTPAR        reduce using rule 136 (type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1 .)


state 142

    (106) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> ID function_call_action1 LEFTPAR . function_call_action2 RIGHTPAR
    (109) function_call_action2 -> .

    RIGHTPAR        reduce using rule 109 (function_call_action2 -> .)
    EX              reduce using rule 109 (function_call_action2 -> .)
    ID              reduce using rule 109 (function_call_action2 -> .)
    INT             reduce using rule 109 (function_call_action2 -> .)
    FLOAT           reduce using rule 109 (function_call_action2 -> .)
    TRUE            reduce using rule 109 (function_call_action2 -> .)
    FALSE           reduce using rule 109 (function_call_action2 -> .)
    STRING          reduce using rule 109 (function_call_action2 -> .)
    CAPIGAME        reduce using rule 109 (function_call_action2 -> .)
    CREATE_TEXT     reduce using rule 109 (function_call_action2 -> .)
    POW             reduce using rule 109 (function_call_action2 -> .)
    SQRT            reduce using rule 109 (function_call_action2 -> .)
    QUIT            reduce using rule 109 (function_call_action2 -> .)
    COMMA           reduce using rule 109 (function_call_action2 -> .)
    RELOP           reduce using rule 109 (function_call_action2 -> .)
    LOGIC           reduce using rule 109 (function_call_action2 -> .)
    TERMS           reduce using rule 109 (function_call_action2 -> .)
    LEFTPAR         reduce using rule 109 (function_call_action2 -> .)

    function_call_action2          shift and go to state 178

state 143

    (143) listaccess -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 179
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 144

    (54) size -> ID DOT SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 180


state 145

    (55) head -> ID DOT HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 181


state 146

    (59) find -> ID DOT FIND . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 182


state 147

    (60) last -> ID DOT LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 183


state 148

    (52) draw -> CAPIGAME DOT DRAW . LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 184


state 149

    (53) init -> CAPIGAME DOT INIT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 185


state 150

    (62) set_fill -> CAPIGAME DOT SET_FILL . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 186


state 151

    (61) set_title -> CAPIGAME DOT SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 187


state 152

    (65) get_event -> CAPIGAME DOT GET_EVENT . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 188


state 153

    (64) update -> CAPIGAME DOT UPDATE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 189


state 154

    (56) window_h -> CAPIGAME DOT WINDOW_H . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 190


state 155

    (57) window_w -> CAPIGAME DOT WINDOW_W . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 191


state 156

    (63) set_dimension -> CAPIGAME DOT SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 192


state 157

    (58) rand -> CAPIGAME DOT RAND . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 193


state 158

    (66) create_text -> CREATE_TEXT LEFTPAR expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 194


state 159

    (114) expression -> exp . RELOP relop_action1 exp relop_action2
    (115) expression -> exp . LOGIC logic_action1 exp logic_action2
    (116) expression -> exp .

    RELOP           shift and go to state 195
    LOGIC           shift and go to state 196
    COMMA           reduce using rule 116 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 116 (expression -> exp .)
    RIGHTPAR        reduce using rule 116 (expression -> exp .)
    SEMICOLON       reduce using rule 116 (expression -> exp .)


state 160

    (121) exp -> term . exp_action recexp
    (122) exp -> term . exp_action
    (123) exp_action -> .

    EX              reduce using rule 123 (exp_action -> .)
    RELOP           reduce using rule 123 (exp_action -> .)
    LOGIC           reduce using rule 123 (exp_action -> .)
    COMMA           reduce using rule 123 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 123 (exp_action -> .)
    RIGHTPAR        reduce using rule 123 (exp_action -> .)
    SEMICOLON       reduce using rule 123 (exp_action -> .)

    exp_action                     shift and go to state 197

state 161

    (125) term -> factor . term_action recterm
    (126) term -> factor . term_action
    (127) term_action -> .

    TERMS           reduce using rule 127 (term_action -> .)
    EX              reduce using rule 127 (term_action -> .)
    RELOP           reduce using rule 127 (term_action -> .)
    LOGIC           reduce using rule 127 (term_action -> .)
    COMMA           reduce using rule 127 (term_action -> .)
    RIGHTBRACKET    reduce using rule 127 (term_action -> .)
    RIGHTPAR        reduce using rule 127 (term_action -> .)
    SEMICOLON       reduce using rule 127 (term_action -> .)

    term_action                    shift and go to state 198

state 162

    (130) factor -> factor_action1 . LEFTPAR expression RIGHTPAR factor_action2

    LEFTPAR         shift and go to state 199


state 163

    (131) factor -> EX . cte
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

    TERMS           reduce using rule 146 (cte -> .)
    EX              reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

    cte                            shift and go to state 200
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 164

    (132) factor -> cte .

    TERMS           reduce using rule 132 (factor -> cte .)
    EX              reduce using rule 132 (factor -> cte .)
    RELOP           reduce using rule 132 (factor -> cte .)
    LOGIC           reduce using rule 132 (factor -> cte .)
    COMMA           reduce using rule 132 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 132 (factor -> cte .)
    RIGHTPAR        reduce using rule 132 (factor -> cte .)
    SEMICOLON       reduce using rule 132 (factor -> cte .)


state 165

    (48) pow -> POW pow_action1 LEFTPAR . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 201
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 166

    (50) sqrt -> SQRT sqrt_action1 LEFTPAR . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 202
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 167

    (47) quit -> QUIT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 47 (quit -> QUIT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 47 (quit -> QUIT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 47 (quit -> QUIT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 47 (quit -> QUIT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 47 (quit -> QUIT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 47 (quit -> QUIT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 47 (quit -> QUIT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 47 (quit -> QUIT LEFTPAR RIGHTPAR .)


state 168

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 203


state 169

    (3) capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 170

    (2) capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 171

    (10) run -> VOID FUNC run_action1 RUN . startscope_action LEFTPAR RIGHTPAR main_cont block
    (90) startscope_action -> .

    LEFTPAR         reduce using rule 90 (startscope_action -> .)

    startscope_action              shift and go to state 204

state 172

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 205


state 173

    (13) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    CAPIGAME        reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    POW             reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    SQRT            reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)
    QUIT            reduce using rule 13 (vars -> VAR recids COLON type SEMICOLON vars .)


state 174

    (95) recparams -> ID COLON type COMMA . recparams
    (94) recparams -> . ID COLON type
    (95) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 63

    recparams                      shift and go to state 206

state 175

    (86) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (93) function_action3 -> .

    COLON           reduce using rule 93 (function_action3 -> .)

    function_action3               shift and go to state 207

state 176

    (17) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (18) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (19) recstatement -> . statement recstatement
    (20) recstatement -> . statement
    (21) statement -> . assign SEMICOLON
    (22) statement -> . condition
    (23) statement -> . vars
    (24) statement -> . loop
    (25) statement -> . write SEMICOLON
    (26) statement -> . return SEMICOLON
    (27) statement -> . functioncall SEMICOLON
    (28) statement -> . specialfunction SEMICOLON
    (67) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (68) assign -> . assign_list EQUAL assign_action2 expression
    (71) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (72) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type SEMICOLON vars
    (14) vars -> . VAR recids COLON type SEMICOLON
    (76) loop -> . for
    (77) loop -> . while
    (98) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (105) return -> . RETURN expression
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (142) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (78) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (82) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

    RIGHTKEY        shift and go to state 209
    ID              shift and go to state 219
    IF              shift and go to state 221
    VAR             shift and go to state 39
    PRINT           shift and go to state 224
    RETURN          shift and go to state 225
    FOR             shift and go to state 226
    WHILE           shift and go to state 227
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

    recstatement                   shift and go to state 208
    statement                      shift and go to state 210
    assign                         shift and go to state 211
    condition                      shift and go to state 212
    vars                           shift and go to state 213
    loop                           shift and go to state 214
    write                          shift and go to state 215
    return                         shift and go to state 216
    functioncall                   shift and go to state 217
    specialfunction                shift and go to state 218
    assign_list                    shift and go to state 220
    for                            shift and go to state 222
    while                          shift and go to state 223
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 177

    (88) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 . function_action3 block
    (93) function_action3 -> .

    COLON           reduce using rule 93 (function_action3 -> .)

    function_action3               shift and go to state 228

state 178

    (106) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . recfuncexp RIGHTPAR
    (107) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 . RIGHTPAR
    (110) recfuncexp -> . expression exp_action1 COMMA recfuncexp
    (111) recfuncexp -> . expression exp_action1 recfunc_action1
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
  ! shift/reduce conflict for RIGHTPAR resolved as shift
    RIGHTPAR        shift and go to state 230
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]
  ! RIGHTPAR        [ reduce using rule 146 (cte -> .) ]

    recfuncexp                     shift and go to state 229
    expression                     shift and go to state 231
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 179

    (143) listaccess -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (145) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 145 (list_action_3 -> .)

    list_action_3                  shift and go to state 232

state 180

    (54) size -> ID DOT SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 233


state 181

    (55) head -> ID DOT HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 234


state 182

    (59) find -> ID DOT FIND LEFTPAR . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 235
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 183

    (60) last -> ID DOT LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 236


state 184

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR . expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 237
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 185

    (53) init -> CAPIGAME DOT INIT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 238


state 186

    (62) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 239
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 187

    (61) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 240
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 188

    (65) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 241


state 189

    (64) update -> CAPIGAME DOT UPDATE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 242


state 190

    (56) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 243


state 191

    (57) window_w -> CAPIGAME DOT WINDOW_W LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 244


state 192

    (63) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 245
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 193

    (58) rand -> CAPIGAME DOT RAND LEFTPAR . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 246
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 194

    (66) create_text -> CREATE_TEXT LEFTPAR expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 247
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 195

    (114) expression -> exp RELOP . relop_action1 exp relop_action2
    (117) relop_action1 -> .

    EX              reduce using rule 117 (relop_action1 -> .)
    ID              reduce using rule 117 (relop_action1 -> .)
    INT             reduce using rule 117 (relop_action1 -> .)
    FLOAT           reduce using rule 117 (relop_action1 -> .)
    TRUE            reduce using rule 117 (relop_action1 -> .)
    FALSE           reduce using rule 117 (relop_action1 -> .)
    STRING          reduce using rule 117 (relop_action1 -> .)
    CAPIGAME        reduce using rule 117 (relop_action1 -> .)
    CREATE_TEXT     reduce using rule 117 (relop_action1 -> .)
    POW             reduce using rule 117 (relop_action1 -> .)
    SQRT            reduce using rule 117 (relop_action1 -> .)
    QUIT            reduce using rule 117 (relop_action1 -> .)
    TERMS           reduce using rule 117 (relop_action1 -> .)
    LEFTPAR         reduce using rule 117 (relop_action1 -> .)
    COMMA           reduce using rule 117 (relop_action1 -> .)
    RIGHTBRACKET    reduce using rule 117 (relop_action1 -> .)
    RIGHTPAR        reduce using rule 117 (relop_action1 -> .)
    SEMICOLON       reduce using rule 117 (relop_action1 -> .)

    relop_action1                  shift and go to state 248

state 196

    (115) expression -> exp LOGIC . logic_action1 exp logic_action2
    (119) logic_action1 -> .

    EX              reduce using rule 119 (logic_action1 -> .)
    ID              reduce using rule 119 (logic_action1 -> .)
    INT             reduce using rule 119 (logic_action1 -> .)
    FLOAT           reduce using rule 119 (logic_action1 -> .)
    TRUE            reduce using rule 119 (logic_action1 -> .)
    FALSE           reduce using rule 119 (logic_action1 -> .)
    STRING          reduce using rule 119 (logic_action1 -> .)
    CAPIGAME        reduce using rule 119 (logic_action1 -> .)
    CREATE_TEXT     reduce using rule 119 (logic_action1 -> .)
    POW             reduce using rule 119 (logic_action1 -> .)
    SQRT            reduce using rule 119 (logic_action1 -> .)
    QUIT            reduce using rule 119 (logic_action1 -> .)
    TERMS           reduce using rule 119 (logic_action1 -> .)
    LEFTPAR         reduce using rule 119 (logic_action1 -> .)
    COMMA           reduce using rule 119 (logic_action1 -> .)
    RIGHTBRACKET    reduce using rule 119 (logic_action1 -> .)
    RIGHTPAR        reduce using rule 119 (logic_action1 -> .)
    SEMICOLON       reduce using rule 119 (logic_action1 -> .)

    logic_action1                  shift and go to state 249

state 197

    (121) exp -> term exp_action . recexp
    (122) exp -> term exp_action .
    (124) recexp -> . EX add_operator exp

    RELOP           reduce using rule 122 (exp -> term exp_action .)
    LOGIC           reduce using rule 122 (exp -> term exp_action .)
    COMMA           reduce using rule 122 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 122 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 122 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 122 (exp -> term exp_action .)
    EX              shift and go to state 251

    recexp                         shift and go to state 250

state 198

    (125) term -> factor term_action . recterm
    (126) term -> factor term_action .
    (128) recterm -> . TERMS add_operator term

    EX              reduce using rule 126 (term -> factor term_action .)
    RELOP           reduce using rule 126 (term -> factor term_action .)
    LOGIC           reduce using rule 126 (term -> factor term_action .)
    COMMA           reduce using rule 126 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 126 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 126 (term -> factor term_action .)
    SEMICOLON       reduce using rule 126 (term -> factor term_action .)
    TERMS           shift and go to state 253

    recterm                        shift and go to state 252

state 199

    (130) factor -> factor_action1 LEFTPAR . expression RIGHTPAR factor_action2
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    factor_action1                 shift and go to state 162
    expression                     shift and go to state 254
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 200

    (131) factor -> EX cte .

    TERMS           reduce using rule 131 (factor -> EX cte .)
    EX              reduce using rule 131 (factor -> EX cte .)
    RELOP           reduce using rule 131 (factor -> EX cte .)
    LOGIC           reduce using rule 131 (factor -> EX cte .)
    COMMA           reduce using rule 131 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 131 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 131 (factor -> EX cte .)
    SEMICOLON       reduce using rule 131 (factor -> EX cte .)


state 201

    (48) pow -> POW pow_action1 LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 255


state 202

    (50) sqrt -> SQRT sqrt_action1 LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 256


state 203

    (1) capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON .)


state 204

    (10) run -> VOID FUNC run_action1 RUN startscope_action . LEFTPAR RIGHTPAR main_cont block

    LEFTPAR         shift and go to state 257


state 205

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 258

state 206

    (95) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 95 (recparams -> ID COLON type COMMA recparams .)


state 207

    (86) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 259

state 208

    (17) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 260


state 209

    (18) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 261


state 210

    (19) recstatement -> statement . recstatement
    (20) recstatement -> statement .
    (19) recstatement -> . statement recstatement
    (20) recstatement -> . statement
    (21) statement -> . assign SEMICOLON
    (22) statement -> . condition
    (23) statement -> . vars
    (24) statement -> . loop
    (25) statement -> . write SEMICOLON
    (26) statement -> . return SEMICOLON
    (27) statement -> . functioncall SEMICOLON
    (28) statement -> . specialfunction SEMICOLON
    (67) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (68) assign -> . assign_list EQUAL assign_action2 expression
    (71) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (72) condition -> . IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (13) vars -> . VAR recids COLON type SEMICOLON vars
    (14) vars -> . VAR recids COLON type SEMICOLON
    (76) loop -> . for
    (77) loop -> . while
    (98) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (105) return -> . RETURN expression
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (142) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (78) for -> . FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (82) while -> . WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

    RIGHTKEY        reduce using rule 20 (recstatement -> statement .)
    ID              shift and go to state 219
    IF              shift and go to state 221
    VAR             shift and go to state 39
    PRINT           shift and go to state 224
    RETURN          shift and go to state 225
    FOR             shift and go to state 226
    WHILE           shift and go to state 227
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

    statement                      shift and go to state 210
    recstatement                   shift and go to state 262
    assign                         shift and go to state 211
    condition                      shift and go to state 212
    vars                           shift and go to state 213
    loop                           shift and go to state 214
    write                          shift and go to state 215
    return                         shift and go to state 216
    functioncall                   shift and go to state 217
    specialfunction                shift and go to state 218
    assign_list                    shift and go to state 220
    for                            shift and go to state 222
    while                          shift and go to state 223
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 211

    (21) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 263


state 212

    (22) statement -> condition .

    ID              reduce using rule 22 (statement -> condition .)
    IF              reduce using rule 22 (statement -> condition .)
    VAR             reduce using rule 22 (statement -> condition .)
    PRINT           reduce using rule 22 (statement -> condition .)
    RETURN          reduce using rule 22 (statement -> condition .)
    FOR             reduce using rule 22 (statement -> condition .)
    WHILE           reduce using rule 22 (statement -> condition .)
    CAPIGAME        reduce using rule 22 (statement -> condition .)
    CREATE_TEXT     reduce using rule 22 (statement -> condition .)
    POW             reduce using rule 22 (statement -> condition .)
    SQRT            reduce using rule 22 (statement -> condition .)
    QUIT            reduce using rule 22 (statement -> condition .)
    RIGHTKEY        reduce using rule 22 (statement -> condition .)


state 213

    (23) statement -> vars .

    ID              reduce using rule 23 (statement -> vars .)
    IF              reduce using rule 23 (statement -> vars .)
    VAR             reduce using rule 23 (statement -> vars .)
    PRINT           reduce using rule 23 (statement -> vars .)
    RETURN          reduce using rule 23 (statement -> vars .)
    FOR             reduce using rule 23 (statement -> vars .)
    WHILE           reduce using rule 23 (statement -> vars .)
    CAPIGAME        reduce using rule 23 (statement -> vars .)
    CREATE_TEXT     reduce using rule 23 (statement -> vars .)
    POW             reduce using rule 23 (statement -> vars .)
    SQRT            reduce using rule 23 (statement -> vars .)
    QUIT            reduce using rule 23 (statement -> vars .)
    RIGHTKEY        reduce using rule 23 (statement -> vars .)


state 214

    (24) statement -> loop .

    ID              reduce using rule 24 (statement -> loop .)
    IF              reduce using rule 24 (statement -> loop .)
    VAR             reduce using rule 24 (statement -> loop .)
    PRINT           reduce using rule 24 (statement -> loop .)
    RETURN          reduce using rule 24 (statement -> loop .)
    FOR             reduce using rule 24 (statement -> loop .)
    WHILE           reduce using rule 24 (statement -> loop .)
    CAPIGAME        reduce using rule 24 (statement -> loop .)
    CREATE_TEXT     reduce using rule 24 (statement -> loop .)
    POW             reduce using rule 24 (statement -> loop .)
    SQRT            reduce using rule 24 (statement -> loop .)
    QUIT            reduce using rule 24 (statement -> loop .)
    RIGHTKEY        reduce using rule 24 (statement -> loop .)


state 215

    (25) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 264


state 216

    (26) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 265


state 217

    (27) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 266


state 218

    (28) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 267


state 219

    (67) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (106) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> ID . function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (142) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (54) size -> ID . DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> ID . DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> ID . DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> ID . DOT LAST LEFTPAR RIGHTPAR
    (69) assign_action1 -> .
    (108) function_call_action1 -> .
    (144) list_action1 -> .

    DOT             shift and go to state 122
    EQUAL           reduce using rule 69 (assign_action1 -> .)
    LEFTPAR         reduce using rule 108 (function_call_action1 -> .)
    LEFTBRACKET     reduce using rule 144 (list_action1 -> .)

    assign_action1                 shift and go to state 268
    function_call_action1          shift and go to state 120
    list_action1                   shift and go to state 269

state 220

    (68) assign -> assign_list . EQUAL assign_action2 expression

    EQUAL           shift and go to state 270


state 221

    (71) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action2
    (72) condition -> IF . LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2

    LEFTPAR         shift and go to state 271


state 222

    (76) loop -> for .

    ID              reduce using rule 76 (loop -> for .)
    IF              reduce using rule 76 (loop -> for .)
    VAR             reduce using rule 76 (loop -> for .)
    PRINT           reduce using rule 76 (loop -> for .)
    RETURN          reduce using rule 76 (loop -> for .)
    FOR             reduce using rule 76 (loop -> for .)
    WHILE           reduce using rule 76 (loop -> for .)
    CAPIGAME        reduce using rule 76 (loop -> for .)
    CREATE_TEXT     reduce using rule 76 (loop -> for .)
    POW             reduce using rule 76 (loop -> for .)
    SQRT            reduce using rule 76 (loop -> for .)
    QUIT            reduce using rule 76 (loop -> for .)
    RIGHTKEY        reduce using rule 76 (loop -> for .)


state 223

    (77) loop -> while .

    ID              reduce using rule 77 (loop -> while .)
    IF              reduce using rule 77 (loop -> while .)
    VAR             reduce using rule 77 (loop -> while .)
    PRINT           reduce using rule 77 (loop -> while .)
    RETURN          reduce using rule 77 (loop -> while .)
    FOR             reduce using rule 77 (loop -> while .)
    WHILE           reduce using rule 77 (loop -> while .)
    CAPIGAME        reduce using rule 77 (loop -> while .)
    CREATE_TEXT     reduce using rule 77 (loop -> while .)
    POW             reduce using rule 77 (loop -> while .)
    SQRT            reduce using rule 77 (loop -> while .)
    QUIT            reduce using rule 77 (loop -> while .)
    RIGHTKEY        reduce using rule 77 (loop -> while .)


state 224

    (98) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 272


state 225

    (105) return -> RETURN . expression
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 273
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 226

    (78) for -> FOR . startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (90) startscope_action -> .

    LEFTPAR         reduce using rule 90 (startscope_action -> .)

    startscope_action              shift and go to state 274

state 227

    (82) while -> WHILE . startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (90) startscope_action -> .

    LEFTPAR         reduce using rule 90 (startscope_action -> .)

    startscope_action              shift and go to state 275

state 228

    (88) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 . block
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 276

state 229

    (106) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 277


state 230

    (107) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .

    RIGHTBRACKET    reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    TERMS           reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    EX              reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RELOP           reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    LOGIC           reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    COMMA           reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    RIGHTPAR        reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)
    SEMICOLON       reduce using rule 107 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR .)


state 231

    (110) recfuncexp -> expression . exp_action1 COMMA recfuncexp
    (111) recfuncexp -> expression . exp_action1 recfunc_action1
    (112) exp_action1 -> .

    COMMA           reduce using rule 112 (exp_action1 -> .)
    RIGHTPAR        reduce using rule 112 (exp_action1 -> .)

    exp_action1                    shift and go to state 278

state 232

    (143) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 279


state 233

    (54) size -> ID DOT SIZE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 54 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 54 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 54 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 54 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 54 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 54 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 54 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 54 (size -> ID DOT SIZE LEFTPAR RIGHTPAR .)


state 234

    (55) head -> ID DOT HEAD LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 55 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 55 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 55 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 55 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 55 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 55 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 55 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 55 (head -> ID DOT HEAD LEFTPAR RIGHTPAR .)


state 235

    (59) find -> ID DOT FIND LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 280


state 236

    (60) last -> ID DOT LAST LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 60 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 60 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 60 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 60 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 60 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 60 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 60 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 60 (last -> ID DOT LAST LEFTPAR RIGHTPAR .)


state 237

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression . COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 281


state 238

    (53) init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 53 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 53 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 53 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 53 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 53 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 53 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 53 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 53 (init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR .)


state 239

    (62) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 282


state 240

    (61) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 283


state 241

    (65) get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 65 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 65 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    EX              reduce using rule 65 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 65 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 65 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 65 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 65 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 65 (get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR .)


state 242

    (64) update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 64 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 64 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 64 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 64 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 64 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 64 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 64 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 64 (update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR .)


state 243

    (56) window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 56 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 56 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    EX              reduce using rule 56 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 56 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 56 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 56 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 56 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 56 (window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR .)


state 244

    (57) window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .

    RIGHTBRACKET    reduce using rule 57 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    TERMS           reduce using rule 57 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    EX              reduce using rule 57 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 57 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 57 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 57 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 57 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 57 (window_w -> CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR .)


state 245

    (63) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 284


state 246

    (58) rand -> CAPIGAME DOT RAND LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 285


state 247

    (66) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 286


state 248

    (114) expression -> exp RELOP relop_action1 . exp relop_action2
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    exp                            shift and go to state 287
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 249

    (115) expression -> exp LOGIC logic_action1 . exp logic_action2
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    exp                            shift and go to state 288
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 250

    (121) exp -> term exp_action recexp .

    RELOP           reduce using rule 121 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 121 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 121 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 121 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 121 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 121 (exp -> term exp_action recexp .)


state 251

    (124) recexp -> EX . add_operator exp
    (129) add_operator -> .

    EX              reduce using rule 129 (add_operator -> .)
    ID              reduce using rule 129 (add_operator -> .)
    INT             reduce using rule 129 (add_operator -> .)
    FLOAT           reduce using rule 129 (add_operator -> .)
    TRUE            reduce using rule 129 (add_operator -> .)
    FALSE           reduce using rule 129 (add_operator -> .)
    STRING          reduce using rule 129 (add_operator -> .)
    CAPIGAME        reduce using rule 129 (add_operator -> .)
    CREATE_TEXT     reduce using rule 129 (add_operator -> .)
    POW             reduce using rule 129 (add_operator -> .)
    SQRT            reduce using rule 129 (add_operator -> .)
    QUIT            reduce using rule 129 (add_operator -> .)
    TERMS           reduce using rule 129 (add_operator -> .)
    LEFTPAR         reduce using rule 129 (add_operator -> .)
    RELOP           reduce using rule 129 (add_operator -> .)
    LOGIC           reduce using rule 129 (add_operator -> .)
    COMMA           reduce using rule 129 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 129 (add_operator -> .)
    RIGHTPAR        reduce using rule 129 (add_operator -> .)
    SEMICOLON       reduce using rule 129 (add_operator -> .)

    add_operator                   shift and go to state 289

state 252

    (125) term -> factor term_action recterm .

    EX              reduce using rule 125 (term -> factor term_action recterm .)
    RELOP           reduce using rule 125 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 125 (term -> factor term_action recterm .)
    COMMA           reduce using rule 125 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 125 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 125 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 125 (term -> factor term_action recterm .)


state 253

    (128) recterm -> TERMS . add_operator term
    (129) add_operator -> .

    EX              reduce using rule 129 (add_operator -> .)
    ID              reduce using rule 129 (add_operator -> .)
    INT             reduce using rule 129 (add_operator -> .)
    FLOAT           reduce using rule 129 (add_operator -> .)
    TRUE            reduce using rule 129 (add_operator -> .)
    FALSE           reduce using rule 129 (add_operator -> .)
    STRING          reduce using rule 129 (add_operator -> .)
    CAPIGAME        reduce using rule 129 (add_operator -> .)
    CREATE_TEXT     reduce using rule 129 (add_operator -> .)
    POW             reduce using rule 129 (add_operator -> .)
    SQRT            reduce using rule 129 (add_operator -> .)
    QUIT            reduce using rule 129 (add_operator -> .)
    TERMS           reduce using rule 129 (add_operator -> .)
    LEFTPAR         reduce using rule 129 (add_operator -> .)
    RELOP           reduce using rule 129 (add_operator -> .)
    LOGIC           reduce using rule 129 (add_operator -> .)
    COMMA           reduce using rule 129 (add_operator -> .)
    RIGHTBRACKET    reduce using rule 129 (add_operator -> .)
    RIGHTPAR        reduce using rule 129 (add_operator -> .)
    SEMICOLON       reduce using rule 129 (add_operator -> .)

    add_operator                   shift and go to state 290

state 254

    (130) factor -> factor_action1 LEFTPAR expression . RIGHTPAR factor_action2

    RIGHTPAR        shift and go to state 291


state 255

    (48) pow -> POW pow_action1 LEFTPAR expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 292
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 256

    (50) sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 50 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 50 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 50 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 50 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 50 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 50 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 50 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 50 (sqrt -> SQRT sqrt_action1 LEFTPAR expression RIGHTPAR .)


state 257

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR . RIGHTPAR main_cont block

    RIGHTPAR        shift and go to state 293


state 258

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont . block
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 294

state 259

    (86) function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 86 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 86 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 86 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 86 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 86 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 86 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 86 (function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 260

    (17) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 295


state 261

    (18) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    POW             reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SQRT            reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    QUIT            reduce using rule 18 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 262

    (19) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 19 (recstatement -> statement recstatement .)


state 263

    (21) statement -> assign SEMICOLON .

    ID              reduce using rule 21 (statement -> assign SEMICOLON .)
    IF              reduce using rule 21 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 21 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 21 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 21 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 21 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 21 (statement -> assign SEMICOLON .)
    CAPIGAME        reduce using rule 21 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 21 (statement -> assign SEMICOLON .)
    POW             reduce using rule 21 (statement -> assign SEMICOLON .)
    SQRT            reduce using rule 21 (statement -> assign SEMICOLON .)
    QUIT            reduce using rule 21 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 21 (statement -> assign SEMICOLON .)


state 264

    (25) statement -> write SEMICOLON .

    ID              reduce using rule 25 (statement -> write SEMICOLON .)
    IF              reduce using rule 25 (statement -> write SEMICOLON .)
    VAR             reduce using rule 25 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 25 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 25 (statement -> write SEMICOLON .)
    FOR             reduce using rule 25 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> write SEMICOLON .)
    CAPIGAME        reduce using rule 25 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 25 (statement -> write SEMICOLON .)
    POW             reduce using rule 25 (statement -> write SEMICOLON .)
    SQRT            reduce using rule 25 (statement -> write SEMICOLON .)
    QUIT            reduce using rule 25 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 25 (statement -> write SEMICOLON .)


state 265

    (26) statement -> return SEMICOLON .

    ID              reduce using rule 26 (statement -> return SEMICOLON .)
    IF              reduce using rule 26 (statement -> return SEMICOLON .)
    VAR             reduce using rule 26 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 26 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 26 (statement -> return SEMICOLON .)
    FOR             reduce using rule 26 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> return SEMICOLON .)
    CAPIGAME        reduce using rule 26 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 26 (statement -> return SEMICOLON .)
    POW             reduce using rule 26 (statement -> return SEMICOLON .)
    SQRT            reduce using rule 26 (statement -> return SEMICOLON .)
    QUIT            reduce using rule 26 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 26 (statement -> return SEMICOLON .)


state 266

    (27) statement -> functioncall SEMICOLON .

    ID              reduce using rule 27 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 27 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 27 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 27 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 27 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 27 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 27 (statement -> functioncall SEMICOLON .)
    CAPIGAME        reduce using rule 27 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 27 (statement -> functioncall SEMICOLON .)
    POW             reduce using rule 27 (statement -> functioncall SEMICOLON .)
    SQRT            reduce using rule 27 (statement -> functioncall SEMICOLON .)
    QUIT            reduce using rule 27 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 27 (statement -> functioncall SEMICOLON .)


state 267

    (28) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    CAPIGAME        reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    POW             reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    SQRT            reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    QUIT            reduce using rule 28 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 28 (statement -> specialfunction SEMICOLON .)


state 268

    (67) assign -> ID assign_action1 . EQUAL assign_action2 expression

    EQUAL           shift and go to state 296


state 269

    (142) assign_list -> ID list_action1 . LEFTBRACKET expression list_action_3 RIGHTBRACKET

    LEFTBRACKET     shift and go to state 297


state 270

    (68) assign -> assign_list EQUAL . assign_action2 expression
    (70) assign_action2 -> .

    EX              reduce using rule 70 (assign_action2 -> .)
    ID              reduce using rule 70 (assign_action2 -> .)
    INT             reduce using rule 70 (assign_action2 -> .)
    FLOAT           reduce using rule 70 (assign_action2 -> .)
    TRUE            reduce using rule 70 (assign_action2 -> .)
    FALSE           reduce using rule 70 (assign_action2 -> .)
    STRING          reduce using rule 70 (assign_action2 -> .)
    CAPIGAME        reduce using rule 70 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 70 (assign_action2 -> .)
    POW             reduce using rule 70 (assign_action2 -> .)
    SQRT            reduce using rule 70 (assign_action2 -> .)
    QUIT            reduce using rule 70 (assign_action2 -> .)
    RELOP           reduce using rule 70 (assign_action2 -> .)
    LOGIC           reduce using rule 70 (assign_action2 -> .)
    TERMS           reduce using rule 70 (assign_action2 -> .)
    LEFTPAR         reduce using rule 70 (assign_action2 -> .)
    SEMICOLON       reduce using rule 70 (assign_action2 -> .)

    assign_action2                 shift and go to state 298

state 271

    (71) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action2
    (72) condition -> IF LEFTPAR . expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 299
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 272

    (98) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (99) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (100) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (101) recwrite -> . expression action_recwrite_exp
    (102) recwrite -> . STRING action_recwrite_cte
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 302
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    recwrite                       shift and go to state 300
    expression                     shift and go to state 301
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 273

    (105) return -> RETURN expression .

    SEMICOLON       reduce using rule 105 (return -> RETURN expression .)


state 274

    (78) for -> FOR startscope_action . LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    LEFTPAR         shift and go to state 303


state 275

    (82) while -> WHILE startscope_action . while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3
    (83) while_action1 -> .

    LEFTPAR         reduce using rule 83 (while_action1 -> .)

    while_action1                  shift and go to state 304

state 276

    (88) function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .

    VOID            reduce using rule 88 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TLIST           reduce using rule 88 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TINT            reduce using rule 88 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TFLOAT          reduce using rule 88 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TSTRING         reduce using rule 88 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    TBOOL           reduce using rule 88 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)
    MAIN            reduce using rule 88 (function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block .)


state 277

    (106) functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .

    RIGHTBRACKET    reduce using rule 106 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    TERMS           reduce using rule 106 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    EX              reduce using rule 106 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 106 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 106 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 106 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 106 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 106 (functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR .)


state 278

    (110) recfuncexp -> expression exp_action1 . COMMA recfuncexp
    (111) recfuncexp -> expression exp_action1 . recfunc_action1
    (113) recfunc_action1 -> .

    COMMA           shift and go to state 305
    RIGHTPAR        reduce using rule 113 (recfunc_action1 -> .)

    recfunc_action1                shift and go to state 306

state 279

    (143) listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    RIGHTBRACKET    reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    TERMS           reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    EX              reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RELOP           reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    LOGIC           reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    COMMA           reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    RIGHTPAR        reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)
    SEMICOLON       reduce using rule 143 (listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 280

    (59) find -> ID DOT FIND LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 59 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 59 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 59 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 59 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 59 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 59 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 59 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 59 (find -> ID DOT FIND LEFTPAR expression RIGHTPAR .)


state 281

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA . expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 307
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 282

    (62) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 308
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 283

    (61) set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 61 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    TERMS           reduce using rule 61 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 61 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 61 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 61 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 61 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 61 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 61 (set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR .)


state 284

    (63) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 309
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 285

    (58) rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 310
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 286

    (66) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 311
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 287

    (114) expression -> exp RELOP relop_action1 exp . relop_action2
    (118) relop_action2 -> .

    COMMA           reduce using rule 118 (relop_action2 -> .)
    RIGHTBRACKET    reduce using rule 118 (relop_action2 -> .)
    RIGHTPAR        reduce using rule 118 (relop_action2 -> .)
    SEMICOLON       reduce using rule 118 (relop_action2 -> .)

    relop_action2                  shift and go to state 312

state 288

    (115) expression -> exp LOGIC logic_action1 exp . logic_action2
    (120) logic_action2 -> .

    COMMA           reduce using rule 120 (logic_action2 -> .)
    RIGHTBRACKET    reduce using rule 120 (logic_action2 -> .)
    RIGHTPAR        reduce using rule 120 (logic_action2 -> .)
    SEMICOLON       reduce using rule 120 (logic_action2 -> .)

    logic_action2                  shift and go to state 313

state 289

    (124) recexp -> EX add_operator . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    exp                            shift and go to state 314
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 290

    (128) recterm -> TERMS add_operator . term
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    term                           shift and go to state 315
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 291

    (130) factor -> factor_action1 LEFTPAR expression RIGHTPAR . factor_action2
    (134) factor_action2 -> .

    TERMS           reduce using rule 134 (factor_action2 -> .)
    EX              reduce using rule 134 (factor_action2 -> .)
    RELOP           reduce using rule 134 (factor_action2 -> .)
    LOGIC           reduce using rule 134 (factor_action2 -> .)
    COMMA           reduce using rule 134 (factor_action2 -> .)
    RIGHTBRACKET    reduce using rule 134 (factor_action2 -> .)
    RIGHTPAR        reduce using rule 134 (factor_action2 -> .)
    SEMICOLON       reduce using rule 134 (factor_action2 -> .)

    factor_action2                 shift and go to state 316

state 292

    (48) pow -> POW pow_action1 LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 317


state 293

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR . main_cont block
    (12) main_cont -> .

    COLON           reduce using rule 12 (main_cont -> .)

    main_cont                      shift and go to state 318

state 294

    (8) start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .

    VOID            reduce using rule 8 (start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 295

    (17) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TLIST           reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CAPIGAME        reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    POW             reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SQRT            reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    QUIT            reduce using rule 17 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 296

    (67) assign -> ID assign_action1 EQUAL . assign_action2 expression
    (70) assign_action2 -> .

    EX              reduce using rule 70 (assign_action2 -> .)
    ID              reduce using rule 70 (assign_action2 -> .)
    INT             reduce using rule 70 (assign_action2 -> .)
    FLOAT           reduce using rule 70 (assign_action2 -> .)
    TRUE            reduce using rule 70 (assign_action2 -> .)
    FALSE           reduce using rule 70 (assign_action2 -> .)
    STRING          reduce using rule 70 (assign_action2 -> .)
    CAPIGAME        reduce using rule 70 (assign_action2 -> .)
    CREATE_TEXT     reduce using rule 70 (assign_action2 -> .)
    POW             reduce using rule 70 (assign_action2 -> .)
    SQRT            reduce using rule 70 (assign_action2 -> .)
    QUIT            reduce using rule 70 (assign_action2 -> .)
    RELOP           reduce using rule 70 (assign_action2 -> .)
    LOGIC           reduce using rule 70 (assign_action2 -> .)
    TERMS           reduce using rule 70 (assign_action2 -> .)
    LEFTPAR         reduce using rule 70 (assign_action2 -> .)
    SEMICOLON       reduce using rule 70 (assign_action2 -> .)

    assign_action2                 shift and go to state 319

state 297

    (142) assign_list -> ID list_action1 LEFTBRACKET . expression list_action_3 RIGHTBRACKET
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTBRACKET    reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 320
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 298

    (68) assign -> assign_list EQUAL assign_action2 . expression
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 321
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 299

    (71) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action2
    (72) condition -> IF LEFTPAR expression . condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2
    (73) condition_action1 -> .

    RIGHTPAR        reduce using rule 73 (condition_action1 -> .)

    condition_action1              shift and go to state 322

state 300

    (98) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 323


state 301

    (99) recwrite -> expression . action_recwrite_exp COMMA recwrite
    (101) recwrite -> expression . action_recwrite_exp
    (103) action_recwrite_exp -> .

    COMMA           reduce using rule 103 (action_recwrite_exp -> .)
    RIGHTPAR        reduce using rule 103 (action_recwrite_exp -> .)

    action_recwrite_exp            shift and go to state 324

state 302

    (100) recwrite -> STRING . action_recwrite_cte COMMA recwrite
    (102) recwrite -> STRING . action_recwrite_cte
    (156) string -> STRING .
    (104) action_recwrite_cte -> .

  ! reduce/reduce conflict for COMMA resolved using rule 104 (action_recwrite_cte -> .)
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 104 (action_recwrite_cte -> .)
    TERMS           reduce using rule 156 (string -> STRING .)
    EX              reduce using rule 156 (string -> STRING .)
    RELOP           reduce using rule 156 (string -> STRING .)
    LOGIC           reduce using rule 156 (string -> STRING .)
    COMMA           reduce using rule 104 (action_recwrite_cte -> .)
    RIGHTPAR        reduce using rule 104 (action_recwrite_cte -> .)

  ! COMMA           [ reduce using rule 156 (string -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 156 (string -> STRING .) ]

    action_recwrite_cte            shift and go to state 325

state 303

    (78) for -> FOR startscope_action LEFTPAR . assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (67) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (68) assign -> . assign_list EQUAL assign_action2 expression
    (142) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 327

    assign                         shift and go to state 326
    assign_list                    shift and go to state 220

state 304

    (82) while -> WHILE startscope_action while_action1 . LEFTPAR expression while_action2 RIGHTPAR block while_action3

    LEFTPAR         shift and go to state 328


state 305

    (110) recfuncexp -> expression exp_action1 COMMA . recfuncexp
    (110) recfuncexp -> . expression exp_action1 COMMA recfuncexp
    (111) recfuncexp -> . expression exp_action1 recfunc_action1
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 231
    recfuncexp                     shift and go to state 329
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 306

    (111) recfuncexp -> expression exp_action1 recfunc_action1 .

    RIGHTPAR        reduce using rule 111 (recfuncexp -> expression exp_action1 recfunc_action1 .)


state 307

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression . COMMA expression COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 330


state 308

    (62) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 331


state 309

    (63) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 332


state 310

    (58) rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 333


state 311

    (66) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 334


state 312

    (114) expression -> exp RELOP relop_action1 exp relop_action2 .

    COMMA           reduce using rule 114 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTBRACKET    reduce using rule 114 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    RIGHTPAR        reduce using rule 114 (expression -> exp RELOP relop_action1 exp relop_action2 .)
    SEMICOLON       reduce using rule 114 (expression -> exp RELOP relop_action1 exp relop_action2 .)


state 313

    (115) expression -> exp LOGIC logic_action1 exp logic_action2 .

    COMMA           reduce using rule 115 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTBRACKET    reduce using rule 115 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    RIGHTPAR        reduce using rule 115 (expression -> exp LOGIC logic_action1 exp logic_action2 .)
    SEMICOLON       reduce using rule 115 (expression -> exp LOGIC logic_action1 exp logic_action2 .)


state 314

    (124) recexp -> EX add_operator exp .

    RELOP           reduce using rule 124 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 124 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 124 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 124 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 124 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 124 (recexp -> EX add_operator exp .)


state 315

    (128) recterm -> TERMS add_operator term .

    EX              reduce using rule 128 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 128 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 128 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 128 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 128 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 128 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 128 (recterm -> TERMS add_operator term .)


state 316

    (130) factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .

    TERMS           reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    EX              reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RELOP           reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    LOGIC           reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    COMMA           reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTBRACKET    reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    RIGHTPAR        reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)
    SEMICOLON       reduce using rule 130 (factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2 .)


state 317

    (48) pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 48 (pow -> POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR .)


state 318

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont . block
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 335

state 319

    (67) assign -> ID assign_action1 EQUAL assign_action2 . expression
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 336
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 320

    (142) assign_list -> ID list_action1 LEFTBRACKET expression . list_action_3 RIGHTBRACKET
    (145) list_action_3 -> .

    RIGHTBRACKET    reduce using rule 145 (list_action_3 -> .)

    list_action_3                  shift and go to state 337

state 321

    (68) assign -> assign_list EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 68 (assign -> assign_list EQUAL assign_action2 expression .)


state 322

    (71) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action2
    (72) condition -> IF LEFTPAR expression condition_action1 . RIGHTPAR block condition_action3 ELSE block condition_action2

    RIGHTPAR        shift and go to state 338


state 323

    (98) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 98 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 324

    (99) recwrite -> expression action_recwrite_exp . COMMA recwrite
    (101) recwrite -> expression action_recwrite_exp .

    COMMA           shift and go to state 339
    RIGHTPAR        reduce using rule 101 (recwrite -> expression action_recwrite_exp .)


state 325

    (100) recwrite -> STRING action_recwrite_cte . COMMA recwrite
    (102) recwrite -> STRING action_recwrite_cte .

    COMMA           shift and go to state 340
    RIGHTPAR        reduce using rule 102 (recwrite -> STRING action_recwrite_cte .)


state 326

    (78) for -> FOR startscope_action LEFTPAR assign . SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 341


state 327

    (67) assign -> ID . assign_action1 EQUAL assign_action2 expression
    (142) assign_list -> ID . list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (69) assign_action1 -> .
    (144) list_action1 -> .

    EQUAL           reduce using rule 69 (assign_action1 -> .)
    LEFTBRACKET     reduce using rule 144 (list_action1 -> .)

    assign_action1                 shift and go to state 268
    list_action1                   shift and go to state 269

state 328

    (82) while -> WHILE startscope_action while_action1 LEFTPAR . expression while_action2 RIGHTPAR block while_action3
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 342
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 329

    (110) recfuncexp -> expression exp_action1 COMMA recfuncexp .

    RIGHTPAR        reduce using rule 110 (recfuncexp -> expression exp_action1 COMMA recfuncexp .)


state 330

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA . expression COMMA expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 343
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 331

    (62) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 344
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 332

    (63) set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 63 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 63 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 63 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 63 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 63 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 63 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 63 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 63 (set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 333

    (58) rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 58 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 58 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 58 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 58 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 58 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 58 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 58 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 58 (rand -> CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR .)


state 334

    (66) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 345
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 335

    (10) run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .

    RIGHTKEY        reduce using rule 10 (run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block .)


state 336

    (67) assign -> ID assign_action1 EQUAL assign_action2 expression .

    SEMICOLON       reduce using rule 67 (assign -> ID assign_action1 EQUAL assign_action2 expression .)


state 337

    (142) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 346


state 338

    (71) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action2
    (72) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR . block condition_action3 ELSE block condition_action2
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 347

state 339

    (99) recwrite -> expression action_recwrite_exp COMMA . recwrite
    (99) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (100) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (101) recwrite -> . expression action_recwrite_exp
    (102) recwrite -> . STRING action_recwrite_cte
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 302
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 301
    recwrite                       shift and go to state 348
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 340

    (100) recwrite -> STRING action_recwrite_cte COMMA . recwrite
    (99) recwrite -> . expression action_recwrite_exp COMMA recwrite
    (100) recwrite -> . STRING action_recwrite_cte COMMA recwrite
    (101) recwrite -> . expression action_recwrite_exp
    (102) recwrite -> . STRING action_recwrite_cte
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    STRING          shift and go to state 302
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    recwrite                       shift and go to state 349
    expression                     shift and go to state 301
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 341

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON . for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (79) for_action1 -> .

    EX              reduce using rule 79 (for_action1 -> .)
    ID              reduce using rule 79 (for_action1 -> .)
    INT             reduce using rule 79 (for_action1 -> .)
    FLOAT           reduce using rule 79 (for_action1 -> .)
    TRUE            reduce using rule 79 (for_action1 -> .)
    FALSE           reduce using rule 79 (for_action1 -> .)
    STRING          reduce using rule 79 (for_action1 -> .)
    CAPIGAME        reduce using rule 79 (for_action1 -> .)
    CREATE_TEXT     reduce using rule 79 (for_action1 -> .)
    POW             reduce using rule 79 (for_action1 -> .)
    SQRT            reduce using rule 79 (for_action1 -> .)
    QUIT            reduce using rule 79 (for_action1 -> .)
    SEMICOLON       reduce using rule 79 (for_action1 -> .)
    RELOP           reduce using rule 79 (for_action1 -> .)
    LOGIC           reduce using rule 79 (for_action1 -> .)
    TERMS           reduce using rule 79 (for_action1 -> .)
    LEFTPAR         reduce using rule 79 (for_action1 -> .)

    for_action1                    shift and go to state 350

state 342

    (82) while -> WHILE startscope_action while_action1 LEFTPAR expression . while_action2 RIGHTPAR block while_action3
    (84) while_action2 -> .

    RIGHTPAR        reduce using rule 84 (while_action2 -> .)

    while_action2                  shift and go to state 351

state 343

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 352


state 344

    (62) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 353


state 345

    (66) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 354


state 346

    (142) assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .

    EQUAL           reduce using rule 142 (assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET .)


state 347

    (71) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action2
    (72) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block . condition_action3 ELSE block condition_action2
    (74) condition_action2 -> .
    (75) condition_action3 -> .

    ID              reduce using rule 74 (condition_action2 -> .)
    IF              reduce using rule 74 (condition_action2 -> .)
    VAR             reduce using rule 74 (condition_action2 -> .)
    PRINT           reduce using rule 74 (condition_action2 -> .)
    RETURN          reduce using rule 74 (condition_action2 -> .)
    FOR             reduce using rule 74 (condition_action2 -> .)
    WHILE           reduce using rule 74 (condition_action2 -> .)
    CAPIGAME        reduce using rule 74 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 74 (condition_action2 -> .)
    POW             reduce using rule 74 (condition_action2 -> .)
    SQRT            reduce using rule 74 (condition_action2 -> .)
    QUIT            reduce using rule 74 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 74 (condition_action2 -> .)
    ELSE            reduce using rule 75 (condition_action3 -> .)

    condition_action2              shift and go to state 355
    condition_action3              shift and go to state 356

state 348

    (99) recwrite -> expression action_recwrite_exp COMMA recwrite .

    RIGHTPAR        reduce using rule 99 (recwrite -> expression action_recwrite_exp COMMA recwrite .)


state 349

    (100) recwrite -> STRING action_recwrite_cte COMMA recwrite .

    RIGHTPAR        reduce using rule 100 (recwrite -> STRING action_recwrite_cte COMMA recwrite .)


state 350

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 . expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    SEMICOLON       reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 357
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 351

    (82) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 . RIGHTPAR block while_action3

    RIGHTPAR        shift and go to state 358


state 352

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA . expression COMMA expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    COMMA           reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 359
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 353

    (62) set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 62 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 62 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 62 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 62 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 62 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 62 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 62 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 62 (set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 354

    (66) create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 66 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 66 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 66 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 66 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 66 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 66 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 66 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 66 (create_text -> CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 355

    (71) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .

    ID              reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    IF              reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    VAR             reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    PRINT           reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RETURN          reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    FOR             reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    WHILE           reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CAPIGAME        reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    CREATE_TEXT     reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    POW             reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    SQRT            reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    QUIT            reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)
    RIGHTKEY        reduce using rule 71 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2 .)


state 356

    (72) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 . ELSE block condition_action2

    ELSE            shift and go to state 360


state 357

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression . for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3
    (80) for_action2 -> .

    SEMICOLON       reduce using rule 80 (for_action2 -> .)

    for_action2                    shift and go to state 361

state 358

    (82) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR . block while_action3
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 362

state 359

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 363


state 360

    (72) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE . block condition_action2
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 364

state 361

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 . SEMICOLON assign SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 365


state 362

    (82) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block . while_action3
    (85) while_action3 -> .

    ID              reduce using rule 85 (while_action3 -> .)
    IF              reduce using rule 85 (while_action3 -> .)
    VAR             reduce using rule 85 (while_action3 -> .)
    PRINT           reduce using rule 85 (while_action3 -> .)
    RETURN          reduce using rule 85 (while_action3 -> .)
    FOR             reduce using rule 85 (while_action3 -> .)
    WHILE           reduce using rule 85 (while_action3 -> .)
    CAPIGAME        reduce using rule 85 (while_action3 -> .)
    CREATE_TEXT     reduce using rule 85 (while_action3 -> .)
    POW             reduce using rule 85 (while_action3 -> .)
    SQRT            reduce using rule 85 (while_action3 -> .)
    QUIT            reduce using rule 85 (while_action3 -> .)
    RIGHTKEY        reduce using rule 85 (while_action3 -> .)

    while_action3                  shift and go to state 366

state 363

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA . expression RIGHTPAR
    (114) expression -> . exp RELOP relop_action1 exp relop_action2
    (115) expression -> . exp LOGIC logic_action1 exp logic_action2
    (116) expression -> . exp
    (121) exp -> . term exp_action recexp
    (122) exp -> . term exp_action
    (125) term -> . factor term_action recterm
    (126) term -> . factor term_action
    (130) factor -> . factor_action1 LEFTPAR expression RIGHTPAR factor_action2
    (131) factor -> . EX cte
    (132) factor -> . cte
    (133) factor_action1 -> .
    (146) cte -> .
    (147) cte -> . id
    (148) cte -> . int
    (149) cte -> . float
    (150) cte -> . bool
    (151) cte -> . string
    (152) cte -> . functioncall
    (153) cte -> . listaccess
    (154) cte -> . specialfunction
    (155) id -> . ID
    (157) int -> . INT
    (158) float -> . FLOAT
    (159) bool -> . TRUE
    (160) bool -> . FALSE
    (156) string -> . STRING
    (106) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR
    (107) functioncall -> . ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR
    (143) listaccess -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET
    (29) specialfunction -> . draw
    (30) specialfunction -> . init
    (31) specialfunction -> . size
    (32) specialfunction -> . head
    (33) specialfunction -> . find
    (34) specialfunction -> . last
    (35) specialfunction -> . set_fill
    (36) specialfunction -> . set_title
    (37) specialfunction -> . get_event
    (38) specialfunction -> . update
    (39) specialfunction -> . window_h
    (40) specialfunction -> . window_w
    (41) specialfunction -> . set_dimension
    (42) specialfunction -> . create_text
    (43) specialfunction -> . rand
    (44) specialfunction -> . pow
    (45) specialfunction -> . sqrt
    (46) specialfunction -> . quit
    (52) draw -> . CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (53) init -> . CAPIGAME DOT INIT LEFTPAR RIGHTPAR
    (54) size -> . ID DOT SIZE LEFTPAR RIGHTPAR
    (55) head -> . ID DOT HEAD LEFTPAR RIGHTPAR
    (59) find -> . ID DOT FIND LEFTPAR expression RIGHTPAR
    (60) last -> . ID DOT LAST LEFTPAR RIGHTPAR
    (62) set_fill -> . CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (61) set_title -> . CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR
    (65) get_event -> . CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR
    (64) update -> . CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR
    (56) window_h -> . CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR
    (57) window_w -> . CAPIGAME DOT WINDOW_W LEFTPAR RIGHTPAR
    (63) set_dimension -> . CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (66) create_text -> . CREATE_TEXT LEFTPAR expression COMMA expression COMMA expression COMMA expression RIGHTPAR
    (58) rand -> . CAPIGAME DOT RAND LEFTPAR expression COMMA expression RIGHTPAR
    (48) pow -> . POW pow_action1 LEFTPAR expression COMMA expression RIGHTPAR
    (50) sqrt -> . SQRT sqrt_action1 LEFTPAR expression RIGHTPAR
    (47) quit -> . QUIT LEFTPAR RIGHTPAR

  ! shift/reduce conflict for EX resolved as shift
    EX              shift and go to state 163
    LEFTPAR         reduce using rule 133 (factor_action1 -> .)
    TERMS           reduce using rule 146 (cte -> .)
    RELOP           reduce using rule 146 (cte -> .)
    LOGIC           reduce using rule 146 (cte -> .)
    RIGHTPAR        reduce using rule 146 (cte -> .)
    ID              shift and go to state 77
    INT             shift and go to state 78
    FLOAT           shift and go to state 79
    TRUE            shift and go to state 80
    FALSE           shift and go to state 81
    STRING          shift and go to state 82
    CAPIGAME        shift and go to state 101
    CREATE_TEXT     shift and go to state 102
    POW             shift and go to state 103
    SQRT            shift and go to state 104
    QUIT            shift and go to state 105

  ! EX              [ reduce using rule 146 (cte -> .) ]

    expression                     shift and go to state 367
    exp                            shift and go to state 159
    term                           shift and go to state 160
    factor                         shift and go to state 161
    factor_action1                 shift and go to state 162
    cte                            shift and go to state 164
    id                             shift and go to state 69
    int                            shift and go to state 70
    float                          shift and go to state 71
    bool                           shift and go to state 72
    string                         shift and go to state 73
    functioncall                   shift and go to state 74
    listaccess                     shift and go to state 75
    specialfunction                shift and go to state 76
    draw                           shift and go to state 83
    init                           shift and go to state 84
    size                           shift and go to state 85
    head                           shift and go to state 86
    find                           shift and go to state 87
    last                           shift and go to state 88
    set_fill                       shift and go to state 89
    set_title                      shift and go to state 90
    get_event                      shift and go to state 91
    update                         shift and go to state 92
    window_h                       shift and go to state 93
    window_w                       shift and go to state 94
    set_dimension                  shift and go to state 95
    create_text                    shift and go to state 96
    rand                           shift and go to state 97
    pow                            shift and go to state 98
    sqrt                           shift and go to state 99
    quit                           shift and go to state 100

state 364

    (72) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block . condition_action2
    (74) condition_action2 -> .

    ID              reduce using rule 74 (condition_action2 -> .)
    IF              reduce using rule 74 (condition_action2 -> .)
    VAR             reduce using rule 74 (condition_action2 -> .)
    PRINT           reduce using rule 74 (condition_action2 -> .)
    RETURN          reduce using rule 74 (condition_action2 -> .)
    FOR             reduce using rule 74 (condition_action2 -> .)
    WHILE           reduce using rule 74 (condition_action2 -> .)
    CAPIGAME        reduce using rule 74 (condition_action2 -> .)
    CREATE_TEXT     reduce using rule 74 (condition_action2 -> .)
    POW             reduce using rule 74 (condition_action2 -> .)
    SQRT            reduce using rule 74 (condition_action2 -> .)
    QUIT            reduce using rule 74 (condition_action2 -> .)
    RIGHTKEY        reduce using rule 74 (condition_action2 -> .)

    condition_action2              shift and go to state 368

state 365

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON . assign SEMICOLON RIGHTPAR block for_action3
    (67) assign -> . ID assign_action1 EQUAL assign_action2 expression
    (68) assign -> . assign_list EQUAL assign_action2 expression
    (142) assign_list -> . ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET

    ID              shift and go to state 327

    assign                         shift and go to state 369
    assign_list                    shift and go to state 220

state 366

    (82) while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .

    ID              reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    IF              reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    VAR             reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    PRINT           reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RETURN          reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    FOR             reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    WHILE           reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CAPIGAME        reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    CREATE_TEXT     reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    POW             reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    SQRT            reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    QUIT            reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)
    RIGHTKEY        reduce using rule 82 (while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3 .)


state 367

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 370


state 368

    (72) condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .

    ID              reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    IF              reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    VAR             reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    PRINT           reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RETURN          reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    FOR             reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    WHILE           reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CAPIGAME        reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    CREATE_TEXT     reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    POW             reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    SQRT            reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    QUIT            reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)
    RIGHTKEY        reduce using rule 72 (condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2 .)


state 369

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign . SEMICOLON RIGHTPAR block for_action3

    SEMICOLON       shift and go to state 371


state 370

    (52) draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .

    RIGHTBRACKET    reduce using rule 52 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    TERMS           reduce using rule 52 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 52 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 52 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 52 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 52 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 52 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 52 (draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR .)


state 371

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON . RIGHTPAR block for_action3

    RIGHTPAR        shift and go to state 372


state 372

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR . block for_action3
    (17) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (18) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 138

    block                          shift and go to state 373

state 373

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block . for_action3
    (81) for_action3 -> .

    ID              reduce using rule 81 (for_action3 -> .)
    IF              reduce using rule 81 (for_action3 -> .)
    VAR             reduce using rule 81 (for_action3 -> .)
    PRINT           reduce using rule 81 (for_action3 -> .)
    RETURN          reduce using rule 81 (for_action3 -> .)
    FOR             reduce using rule 81 (for_action3 -> .)
    WHILE           reduce using rule 81 (for_action3 -> .)
    CAPIGAME        reduce using rule 81 (for_action3 -> .)
    CREATE_TEXT     reduce using rule 81 (for_action3 -> .)
    POW             reduce using rule 81 (for_action3 -> .)
    SQRT            reduce using rule 81 (for_action3 -> .)
    QUIT            reduce using rule 81 (for_action3 -> .)
    RIGHTKEY        reduce using rule 81 (for_action3 -> .)

    for_action3                    shift and go to state 374

state 374

    (78) for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .

    ID              reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    IF              reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    VAR             reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    PRINT           reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RETURN          reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    FOR             reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    WHILE           reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CAPIGAME        reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    CREATE_TEXT     reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    POW             reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    SQRT            reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    QUIT            reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)
    RIGHTKEY        reduce using rule 78 (for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EX in state 124 resolved as shift
WARNING: shift/reduce conflict for VAR in state 134 resolved as shift
WARNING: shift/reduce conflict for EX in state 143 resolved as shift
WARNING: shift/reduce conflict for EX in state 165 resolved as shift
WARNING: shift/reduce conflict for EX in state 166 resolved as shift
WARNING: shift/reduce conflict for EX in state 178 resolved as shift
WARNING: shift/reduce conflict for RIGHTPAR in state 178 resolved as shift
WARNING: shift/reduce conflict for EX in state 182 resolved as shift
WARNING: shift/reduce conflict for EX in state 184 resolved as shift
WARNING: shift/reduce conflict for EX in state 186 resolved as shift
WARNING: shift/reduce conflict for EX in state 187 resolved as shift
WARNING: shift/reduce conflict for EX in state 192 resolved as shift
WARNING: shift/reduce conflict for EX in state 193 resolved as shift
WARNING: shift/reduce conflict for EX in state 194 resolved as shift
WARNING: shift/reduce conflict for EX in state 199 resolved as shift
WARNING: shift/reduce conflict for EX in state 225 resolved as shift
WARNING: shift/reduce conflict for EX in state 248 resolved as shift
WARNING: shift/reduce conflict for EX in state 249 resolved as shift
WARNING: shift/reduce conflict for EX in state 255 resolved as shift
WARNING: shift/reduce conflict for EX in state 271 resolved as shift
WARNING: shift/reduce conflict for EX in state 272 resolved as shift
WARNING: shift/reduce conflict for EX in state 281 resolved as shift
WARNING: shift/reduce conflict for EX in state 282 resolved as shift
WARNING: shift/reduce conflict for EX in state 284 resolved as shift
WARNING: shift/reduce conflict for EX in state 285 resolved as shift
WARNING: shift/reduce conflict for EX in state 286 resolved as shift
WARNING: shift/reduce conflict for EX in state 289 resolved as shift
WARNING: shift/reduce conflict for EX in state 290 resolved as shift
WARNING: shift/reduce conflict for EX in state 297 resolved as shift
WARNING: shift/reduce conflict for EX in state 298 resolved as shift
WARNING: shift/reduce conflict for EX in state 305 resolved as shift
WARNING: shift/reduce conflict for EX in state 319 resolved as shift
WARNING: shift/reduce conflict for EX in state 328 resolved as shift
WARNING: shift/reduce conflict for EX in state 330 resolved as shift
WARNING: shift/reduce conflict for EX in state 331 resolved as shift
WARNING: shift/reduce conflict for EX in state 334 resolved as shift
WARNING: shift/reduce conflict for EX in state 339 resolved as shift
WARNING: shift/reduce conflict for EX in state 340 resolved as shift
WARNING: shift/reduce conflict for EX in state 350 resolved as shift
WARNING: shift/reduce conflict for EX in state 352 resolved as shift
WARNING: shift/reduce conflict for EX in state 363 resolved as shift
WARNING: reduce/reduce conflict in state 302 resolved using rule (action_recwrite_cte -> <empty>)
WARNING: rejected rule (string -> STRING) in state 302
