
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BAR CAPIGAME COLON COMMA COMMENT CREATE_OBJECT CREATE_TEXT DOT DRAW ELSE EQUAL EX FALSE FLOAT FOR FUNC GET_EVENT GLOBAL HEAD ID IF INIT INT LAST LEFTBRACKET LEFTKEY LEFTPAR LIST LOGIC MAIN OBJECT PRINT RELOP RETURN RIGHTBRACKET RIGHTKEY RIGHTPAR RUN SEMICOLON SET_COLOR SET_DIMENSION SET_FILL SET_TITLE SIZE START STRING TAIL TBOOL TERMS TFLOAT TINT TLIST TOBJECT TRUE TSTRING UPDATE VAR VOID WHILE WINDOW_H WINDOW_W \n    capi : capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n         | capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON\n    \n    capi_action1 :\n    \n    capi_action2 :\n    \n    global : GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON\n    \n    start : VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    start_action1 :\n    \n    run : VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block \n    \n    run_action1 :\n    \n    main_cont :\n     \n    vars :    VAR recids COLON type EQUAL expression SEMICOLON vars \n            | VAR recids COLON type EQUAL expression SEMICOLON\n            | VAR recids COLON type SEMICOLON vars\n            | VAR recids COLON type SEMICOLON\n     \n    recids : ID \n           | ID COMMA recids \n    \n    block : COLON LEFTKEY recstatement RIGHTKEY SEMICOLON\n          | COLON LEFTKEY RIGHTKEY SEMICOLON\n     \n    recstatement : statement recstatement  \n                 | statement  \n    \n    statement : assign SEMICOLON\n              | condition\n              | vars\n              | loop\n              | write SEMICOLON\n              | return SEMICOLON\n              | functioncall SEMICOLON\n              | nestedassign SEMICOLON\n              | specialfunction SEMICOLON\n    \n    specialfunction : draw\n                    | init\n                    | size\n                    | head\n                    | tail\n                    | last\n                    | set_fill\n                    | set_title\n                    | get_event\n                    | update\n                    | window_h\n                    | window_w\n                    | set_dimension\n                    | set_color\n                    | create_object\n                    | create_text\n    \n    draw : CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR\n    \n    init : CAPIGAME DOT INIT LEFTPAR RIGHTPAR\n    \n    size : ID DOT SIZE LEFTPAR RIGHTPAR\n    \n    head : ID DOT HEAD LEFTPAR RIGHTPAR\n    \n    window_h : CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR\n    \n    window_w : CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR\n    \n    tail : TAIL LEFTPAR RIGHTPAR\n    \n    last : LAST LEFTPAR RIGHTPAR\n    \n    set_title : CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR\n    \n    set_fill : CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    set_dimension : CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR\n    \n    update : CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR\n    \n    get_event : CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR\n    \n    set_color : SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR\n    \n    create_object : CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR\n    \n    create_text : CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR\n    \n    assign : ID assign_action1 EQUAL assign_action2 expression \n           | assign_list EQUAL assign_action2 expression\n    \n    assign_action1 : \n    \n    assign_action2 : \n     condition : IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action2\n                  | IF LEFTPAR expression condition_action1 RIGHTPAR  block condition_action3 ELSE  block condition_action2\n     \n    condition_action1 :\n    \n    condition_action2 :\n    \n    condition_action3 :\n    \n    loop : for\n        | while\n    \n    for : FOR startscope_action LEFTPAR  assign  SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3\n    \n    for_action1 : \n    \n    for_action2 : \n    \n    for_action3 : \n    \n    while : WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3\n    \n    while_action1 :\n    \n    while_action2 :\n    \n    while_action3 :\n    \n    function : type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block\n             | VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block\n    \n    startscope_action : \n    \n    function_action1 :\n    \n    function_action2 :\n    \n    function_action3 :\n    \n    recparams : ID COLON type\n              | ID COLON type COMMA recparams\n    \n    recfunc : function recfunc\n            | function\n     \n    write : PRINT LEFTPAR recwrite RIGHTPAR \n     \n    recwrite : expression action_recwrite_exp COMMA recwrite \n               | STRING action_recwrite_cte COMMA  recwrite \n               | expression action_recwrite_exp \n               | STRING action_recwrite_cte\n    \n    action_recwrite_exp :\n    \n    action_recwrite_cte : \n    \n     return : RETURN expression\n    \n    functioncall : ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR \n                 | ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR \n    \n    function_call_action1 : \n    \n    function_call_action2 : \n    \n    recfuncexp : expression COMMA recfuncexp\n               | expression recfunc_action1\n    \n    recfunc_action1 :\n    \n    expression : exp RELOP relop_action1 exp relop_action2\n               | exp LOGIC logic_action1 exp logic_action2\n               | exp\n    \n    relop_action1 : \n    \n    relop_action2 : \n    \n    logic_action1 : \n    \n    logic_action2 : \n     \n    exp : term exp_action recexp\n        | term exp_action \n        \n    exp_action :\n     \n    recexp : EX add_operator exp \n     \n    term : factor term_action recterm \n         | factor term_action \n    \n    term_action :\n     \n    recterm : TERMS add_operator term\n    \n    add_operator :\n     factor : factor_action1 LEFTPAR expression RIGHTPAR factor_action2 \n               | EX cte \n               | cte \n    \n    factor_action1 :\n    \n    factor_action2 :\n    \n    type : primitivetype\n        | TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1\n    \n    action_list1 :\n    \n    primitivetype : TINT\n                  | TFLOAT\n                  | TSTRING\n                  | TBOOL\n                  | TOBJECT\n    \n    assign_list : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    listaccess : ID list_action1 LEFTBRACKET expression  list_action_3 RIGHTBRACKET \n    \n    list_action1 :\n    \n    list_action_3 :\n    \n    nestedvalue : ID DOT ID\n    \n    nestedassign : nestedvalue EQUAL expression\n    \n    cte :    \n        | id\n        | int\n        | float\n        | bool\n        | string\n        | nestedvalue\n        | functioncall\n        | listaccess\n        | specialfunction\n    \n    id : ID\n    \n    string : STRING\n    \n    int : INT\n    \n    float : FLOAT\n    \n    bool : TRUE \n         | FALSE\n    '
    
_lr_action_items = {'MAIN':([0,2,3,4,7,17,22,61,140,143,258,260,277,292,],[-5,5,18,19,-94,26,-93,-7,-84,-86,-83,-20,-85,-19,]),'GLOBAL':([0,2,],[-5,6,]),'VOID':([0,2,3,7,29,35,36,37,44,45,46,47,55,56,57,61,107,140,143,258,260,277,291,292,],[-5,9,9,9,38,38,38,-6,38,-6,-6,59,-6,59,59,-7,59,-84,-86,-83,-20,-85,-8,-19,]),'TLIST':([0,2,3,7,61,62,115,140,143,258,260,277,292,],[-5,11,11,11,-7,11,11,-84,-86,-83,-20,-85,-19,]),'TINT':([0,2,3,7,25,61,62,115,140,143,258,260,277,292,],[-5,12,12,12,12,-7,12,12,-84,-86,-83,-20,-85,-19,]),'TFLOAT':([0,2,3,7,25,61,62,115,140,143,258,260,277,292,],[-5,13,13,13,13,-7,13,13,-84,-86,-83,-20,-85,-19,]),'TSTRING':([0,2,3,7,25,61,62,115,140,143,258,260,277,292,],[-5,14,14,14,14,-7,14,14,-84,-86,-83,-20,-85,-19,]),'TBOOL':([0,2,3,7,25,61,62,115,140,143,258,260,277,292,],[-5,15,15,15,15,-7,15,15,-84,-86,-83,-20,-85,-19,]),'TOBJECT':([0,2,3,7,25,61,62,115,140,143,258,260,277,292,],[-5,16,16,16,16,-7,16,16,-84,-86,-83,-20,-85,-19,]),'$end':([1,133,171,172,204,],[0,-4,-3,-2,-1,]),'COLON':([5,6,18,19,26,50,51,64,66,68,114,117,119,139,142,178,180,206,209,232,256,290,312,330,348,350,362,],[20,21,27,28,34,62,-17,115,-90,-90,-18,141,141,-89,-89,-90,-90,-12,141,141,141,-12,141,141,141,141,141,]),'FUNC':([8,9,10,12,13,14,15,16,38,59,120,144,],[23,24,-131,-134,-135,-136,-137,-138,48,111,-133,-132,]),'EQUAL':([10,12,13,14,15,16,113,120,144,145,222,223,229,268,321,337,],[-131,-134,-135,-136,-137,-138,136,-133,-132,-143,-66,270,274,293,-66,-139,]),'SEMICOLON':([10,12,13,14,15,16,49,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,110,113,120,131,132,136,144,145,158,159,161,162,163,165,166,170,175,194,195,196,197,199,200,203,211,213,217,218,219,220,221,228,233,234,236,239,242,243,244,247,248,249,250,251,252,259,270,273,274,278,279,282,285,286,287,288,289,293,295,300,307,308,309,310,311,313,315,317,320,325,326,328,333,341,344,347,351,359,360,],[-131,-134,-135,-136,-137,-138,61,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,133,137,-133,171,172,-145,-132,-143,-54,-55,-112,-119,-123,-145,-128,204,207,-113,-115,-118,-122,-127,-62,-63,260,262,263,264,265,266,267,-145,-50,-51,-104,-49,-60,-59,-52,-145,-145,-117,-125,-121,-125,292,-67,-102,-145,-103,-140,-56,-114,-116,-145,-145,-130,-67,-145,-144,-110,-111,-120,-124,-126,-145,-65,-95,333,-58,-61,-64,-76,-145,-57,-77,355,361,-48,]),'COMMA':([10,12,13,14,15,16,51,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,120,127,128,129,138,144,145,148,158,159,160,161,162,163,165,166,168,183,185,187,192,193,194,195,196,197,199,200,201,203,233,234,236,238,239,240,242,243,244,245,246,247,248,249,250,251,252,272,278,279,280,281,282,285,286,287,288,289,298,299,303,304,307,308,309,310,311,318,319,323,325,326,331,332,335,343,344,349,360,],[-131,-134,-135,-136,-137,-138,63,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-133,-145,-145,-145,177,-132,-143,-106,-54,-55,193,-112,-119,-123,-145,-128,201,-145,-145,-145,-145,-145,-113,-115,-118,-122,-127,-62,-145,-63,-50,-51,-104,280,-49,281,-60,-59,-52,283,284,-145,-145,-117,-125,-121,-125,-145,-103,-140,-145,-145,-56,-114,-116,-145,-145,-130,-100,-101,323,324,-110,-111,-120,-124,-126,331,332,-145,-58,-61,-145,-145,343,-145,-57,353,-48,]),'RIGHTPAR':([10,12,13,14,15,16,52,53,65,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,116,118,120,125,126,128,129,138,144,145,148,158,159,161,162,163,165,166,167,168,169,174,181,182,183,186,188,189,190,191,194,195,196,197,198,199,200,201,202,203,208,233,234,235,236,239,241,242,243,244,247,248,249,250,251,252,253,254,255,271,272,278,279,282,283,284,285,286,287,288,289,296,297,298,299,305,306,307,308,309,310,311,316,318,319,322,324,325,326,331,332,334,336,339,340,342,344,353,357,360,361,],[-131,-134,-135,-136,-137,-138,66,68,-88,-88,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,139,142,-133,158,159,-145,-145,-91,-132,-143,-106,-54,-55,-112,-119,-123,-145,-128,200,-109,203,206,233,234,236,239,-145,242,243,244,-113,-115,-118,-122,-145,-127,-62,-145,-108,-63,-92,-50,-51,278,-104,-49,282,-60,-59,-52,-145,-145,-117,-125,-121,-125,289,-107,290,-145,-145,-103,-140,-56,-145,-145,-114,-116,-145,-145,-130,-70,317,-100,-101,325,326,-110,-111,-120,-124,-126,330,-98,-99,-145,-145,-58,-61,-145,-145,-81,344,-96,-97,348,-57,-145,360,-48,362,]),'BAR':([11,12,13,14,15,16,33,],[25,-134,-135,-136,-137,-138,43,]),'LEFTKEY':([20,21,27,28,34,141,],[29,30,35,36,44,179,]),'ID':([23,24,40,52,53,54,63,121,127,128,129,136,137,148,149,165,176,177,179,183,185,187,188,192,193,194,195,198,201,207,212,214,215,216,225,226,228,247,248,250,252,257,260,262,263,264,265,266,267,270,271,272,274,280,281,283,284,287,288,292,293,294,295,301,313,322,323,324,331,332,333,338,341,343,345,352,353,354,355,356,358,363,364,],[31,32,51,64,64,79,51,145,79,79,79,79,-16,-106,79,79,-15,64,222,79,79,79,79,79,79,-113,-115,79,79,-14,222,-24,-25,-26,-73,-74,79,79,79,-125,-125,-13,-20,-23,-27,-28,-29,-30,-31,-67,79,79,79,79,79,79,79,79,79,-19,-67,79,79,321,79,79,79,79,79,79,-76,-71,79,79,-68,-82,79,-71,321,-79,-69,-78,-75,]),'VAR':([30,137,176,179,207,212,214,215,216,225,226,257,260,262,263,264,265,266,267,292,338,345,352,354,356,358,363,364,],[40,40,-15,40,40,40,-24,-25,-26,-73,-74,-13,-20,-23,-27,-28,-29,-30,-31,-19,-71,-68,-82,-71,-79,-69,-78,-75,]),'LEFTPAR':([31,32,41,42,79,102,103,104,105,106,112,122,127,128,129,135,136,146,147,148,149,150,151,152,153,154,155,156,157,164,173,183,185,187,188,192,193,194,195,198,201,205,222,224,227,228,230,231,247,248,250,252,270,271,272,274,275,276,280,281,283,284,287,288,293,294,295,302,313,322,323,324,331,332,333,341,343,353,],[-87,-87,52,53,-105,125,126,127,128,129,-87,148,-129,-129,-129,174,-129,181,182,-106,-129,185,186,187,188,189,190,191,192,198,-87,-129,-129,-129,-129,-129,-129,-113,-115,-129,-129,255,-105,271,272,-129,-87,-87,-129,-129,-125,-125,-67,-129,-129,-129,301,-80,-129,-129,-129,-129,-129,-129,-67,-129,-129,322,-129,-129,-129,-129,-129,-129,-76,-129,-129,-129,]),'RIGHTKEY':([39,58,108,109,130,137,176,179,207,210,212,214,215,216,225,226,257,260,261,262,263,264,265,266,267,292,327,338,345,352,354,356,358,363,364,],[49,110,131,132,170,-16,-15,211,-14,259,-22,-24,-25,-26,-73,-74,-13,-20,-21,-23,-27,-28,-29,-30,-31,-19,-10,-71,-68,-82,-71,-79,-69,-78,-75,]),'LEFTBRACKET':([43,79,123,222,269,321,],[54,-141,149,-141,294,-141,]),'START':([48,60,],[-9,112,]),'RIGHTBRACKET':([54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,145,149,158,159,161,162,163,165,166,184,194,195,196,197,199,200,203,233,234,236,237,239,242,243,244,247,248,249,250,251,252,278,279,282,285,286,287,288,289,294,307,308,309,310,311,314,325,326,329,344,360,],[-145,120,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-143,-145,-54,-55,-112,-119,-123,-145,-128,-142,-113,-115,-118,-122,-127,-62,-63,-50,-51,-104,279,-49,-60,-59,-52,-145,-145,-117,-125,-121,-125,-103,-140,-56,-114,-116,-145,-145,-130,-145,-110,-111,-120,-124,-126,-142,-58,-61,337,-57,-48,]),'INT':([54,127,128,129,136,148,149,165,183,185,187,188,192,193,194,195,198,201,228,247,248,250,252,270,271,272,274,280,281,283,284,287,288,293,294,295,313,322,323,324,331,332,333,341,343,353,],[80,80,80,80,80,-106,80,80,80,80,80,80,80,80,-113,-115,80,80,80,80,80,-125,-125,-67,80,80,80,80,80,80,80,80,80,-67,80,80,80,80,80,80,80,80,-76,80,80,80,]),'FLOAT':([54,127,128,129,136,148,149,165,183,185,187,188,192,193,194,195,198,201,228,247,248,250,252,270,271,272,274,280,281,283,284,287,288,293,294,295,313,322,323,324,331,332,333,341,343,353,],[81,81,81,81,81,-106,81,81,81,81,81,81,81,81,-113,-115,81,81,81,81,81,-125,-125,-67,81,81,81,81,81,81,81,81,81,-67,81,81,81,81,81,81,81,81,-76,81,81,81,]),'TRUE':([54,127,128,129,136,148,149,165,183,185,187,188,192,193,194,195,198,201,228,247,248,250,252,270,271,272,274,280,281,283,284,287,288,293,294,295,313,322,323,324,331,332,333,341,343,353,],[82,82,82,82,82,-106,82,82,82,82,82,82,82,82,-113,-115,82,82,82,82,82,-125,-125,-67,82,82,82,82,82,82,82,82,82,-67,82,82,82,82,82,82,82,82,-76,82,82,82,]),'FALSE':([54,127,128,129,136,148,149,165,183,185,187,188,192,193,194,195,198,201,228,247,248,250,252,270,271,272,274,280,281,283,284,287,288,293,294,295,313,322,323,324,331,332,333,341,343,353,],[83,83,83,83,83,-106,83,83,83,83,83,83,83,83,-113,-115,83,83,83,83,83,-125,-125,-67,83,83,83,83,83,83,83,83,83,-67,83,83,83,83,83,83,83,83,-76,83,83,83,]),'STRING':([54,127,128,129,136,148,149,165,183,185,187,188,192,193,194,195,198,201,228,247,248,250,252,270,271,272,274,280,281,283,284,287,288,293,294,295,313,322,323,324,331,332,333,341,343,353,],[84,84,84,84,84,-106,84,84,84,84,84,84,84,84,-113,-115,84,84,84,84,84,-125,-125,-67,84,299,84,84,84,84,84,84,84,-67,84,84,84,84,84,84,299,299,-76,84,84,84,]),'CAPIGAME':([54,127,128,129,136,137,148,149,165,176,179,183,185,187,188,192,193,194,195,198,201,207,212,214,215,216,225,226,228,247,248,250,252,257,260,262,263,264,265,266,267,270,271,272,274,280,281,283,284,287,288,292,293,294,295,313,322,323,324,331,332,333,338,341,343,345,352,353,354,356,358,363,364,],[101,101,101,101,101,-16,-106,101,101,-15,101,101,101,101,101,101,101,-113,-115,101,101,-14,101,-24,-25,-26,-73,-74,101,101,101,-125,-125,-13,-20,-23,-27,-28,-29,-30,-31,-67,101,101,101,101,101,101,101,101,101,-19,-67,101,101,101,101,101,101,101,101,-76,-71,101,101,-68,-82,101,-71,-79,-69,-78,-75,]),'TAIL':([54,127,128,129,136,137,148,149,165,176,179,183,185,187,188,192,193,194,195,198,201,207,212,214,215,216,225,226,228,247,248,250,252,257,260,262,263,264,265,266,267,270,271,272,274,280,281,283,284,287,288,292,293,294,295,313,322,323,324,331,332,333,338,341,343,345,352,353,354,356,358,363,364,],[102,102,102,102,102,-16,-106,102,102,-15,102,102,102,102,102,102,102,-113,-115,102,102,-14,102,-24,-25,-26,-73,-74,102,102,102,-125,-125,-13,-20,-23,-27,-28,-29,-30,-31,-67,102,102,102,102,102,102,102,102,102,-19,-67,102,102,102,102,102,102,102,102,-76,-71,102,102,-68,-82,102,-71,-79,-69,-78,-75,]),'LAST':([54,127,128,129,136,137,148,149,165,176,179,183,185,187,188,192,193,194,195,198,201,207,212,214,215,216,225,226,228,247,248,250,252,257,260,262,263,264,265,266,267,270,271,272,274,280,281,283,284,287,288,292,293,294,295,313,322,323,324,331,332,333,338,341,343,345,352,353,354,356,358,363,364,],[103,103,103,103,103,-16,-106,103,103,-15,103,103,103,103,103,103,103,-113,-115,103,103,-14,103,-24,-25,-26,-73,-74,103,103,103,-125,-125,-13,-20,-23,-27,-28,-29,-30,-31,-67,103,103,103,103,103,103,103,103,103,-19,-67,103,103,103,103,103,103,103,103,-76,-71,103,103,-68,-82,103,-71,-79,-69,-78,-75,]),'SET_COLOR':([54,127,128,129,136,137,148,149,165,176,179,183,185,187,188,192,193,194,195,198,201,207,212,214,215,216,225,226,228,247,248,250,252,257,260,262,263,264,265,266,267,270,271,272,274,280,281,283,284,287,288,292,293,294,295,313,322,323,324,331,332,333,338,341,343,345,352,353,354,356,358,363,364,],[104,104,104,104,104,-16,-106,104,104,-15,104,104,104,104,104,104,104,-113,-115,104,104,-14,104,-24,-25,-26,-73,-74,104,104,104,-125,-125,-13,-20,-23,-27,-28,-29,-30,-31,-67,104,104,104,104,104,104,104,104,104,-19,-67,104,104,104,104,104,104,104,104,-76,-71,104,104,-68,-82,104,-71,-79,-69,-78,-75,]),'CREATE_OBJECT':([54,127,128,129,136,137,148,149,165,176,179,183,185,187,188,192,193,194,195,198,201,207,212,214,215,216,225,226,228,247,248,250,252,257,260,262,263,264,265,266,267,270,271,272,274,280,281,283,284,287,288,292,293,294,295,313,322,323,324,331,332,333,338,341,343,345,352,353,354,356,358,363,364,],[105,105,105,105,105,-16,-106,105,105,-15,105,105,105,105,105,105,105,-113,-115,105,105,-14,105,-24,-25,-26,-73,-74,105,105,105,-125,-125,-13,-20,-23,-27,-28,-29,-30,-31,-67,105,105,105,105,105,105,105,105,105,-19,-67,105,105,105,105,105,105,105,105,-76,-71,105,105,-68,-82,105,-71,-79,-69,-78,-75,]),'CREATE_TEXT':([54,127,128,129,136,137,148,149,165,176,179,183,185,187,188,192,193,194,195,198,201,207,212,214,215,216,225,226,228,247,248,250,252,257,260,262,263,264,265,266,267,270,271,272,274,280,281,283,284,287,288,292,293,294,295,313,322,323,324,331,332,333,338,341,343,345,352,353,354,356,358,363,364,],[106,106,106,106,106,-16,-106,106,106,-15,106,106,106,106,106,106,106,-113,-115,106,106,-14,106,-24,-25,-26,-73,-74,106,106,106,-125,-125,-13,-20,-23,-27,-28,-29,-30,-31,-67,106,106,106,106,106,106,106,106,106,-19,-67,106,106,106,106,106,106,106,106,-76,-71,106,106,-68,-82,106,-71,-79,-69,-78,-75,]),'TERMS':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,127,128,129,136,145,148,149,158,159,163,165,166,183,185,187,188,192,193,194,195,197,198,199,200,201,203,228,233,234,236,239,242,243,244,247,248,250,252,270,271,272,274,278,279,280,281,282,283,284,287,288,289,293,294,295,299,311,313,322,323,324,325,326,331,332,333,341,343,344,353,360,],[-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-145,-145,-145,-145,-143,-106,-145,-54,-55,-123,-145,-128,-145,-145,-145,-145,-145,-145,-113,-115,252,-145,-127,-62,-145,-63,-145,-50,-51,-104,-49,-60,-59,-52,-145,-145,-125,-125,-67,-145,-145,-145,-103,-140,-145,-145,-56,-145,-145,-145,-145,-130,-67,-145,-145,-156,-126,-145,-145,-145,-145,-58,-61,-145,-145,-76,-145,-145,-57,-145,-48,]),'EX':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,127,128,129,136,145,148,149,158,159,162,163,165,166,183,185,187,188,192,193,194,195,196,197,198,199,200,201,203,228,233,234,236,239,242,243,244,247,248,250,251,252,270,271,272,274,278,279,280,281,282,283,284,287,288,289,293,294,295,299,310,311,313,322,323,324,325,326,331,332,333,341,343,344,353,360,],[-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,165,165,165,165,-143,-106,165,-54,-55,-119,-123,-145,-128,165,165,165,165,165,165,-113,-115,250,-122,165,-127,-62,165,-63,165,-50,-51,-104,-49,-60,-59,-52,165,165,-125,-121,-125,-67,165,165,165,-103,-140,165,165,-56,165,165,165,165,-130,-67,165,165,-156,-124,-126,165,165,165,165,-58,-61,165,165,-76,165,165,-57,165,-48,]),'RELOP':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,127,128,129,136,145,148,149,158,159,161,162,163,165,166,183,185,187,188,192,193,196,197,198,199,200,201,203,228,233,234,236,239,242,243,244,249,250,251,252,270,271,272,274,278,279,280,281,282,283,284,287,288,289,293,294,295,299,309,310,311,313,322,323,324,325,326,331,332,333,341,343,344,353,360,],[-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-145,-145,-145,-145,-143,-106,-145,-54,-55,194,-119,-123,-145,-128,-145,-145,-145,-145,-145,-145,-118,-122,-145,-127,-62,-145,-63,-145,-50,-51,-104,-49,-60,-59,-52,-117,-125,-121,-125,-67,-145,-145,-145,-103,-140,-145,-145,-56,-145,-145,-145,-145,-130,-67,-145,-145,-156,-120,-124,-126,-145,-145,-145,-145,-58,-61,-145,-145,-76,-145,-145,-57,-145,-48,]),'LOGIC':([70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,127,128,129,136,145,148,149,158,159,161,162,163,165,166,183,185,187,188,192,193,196,197,198,199,200,201,203,228,233,234,236,239,242,243,244,249,250,251,252,270,271,272,274,278,279,280,281,282,283,284,287,288,289,293,294,295,299,309,310,311,313,322,323,324,325,326,331,332,333,341,343,344,353,360,],[-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-157,-158,-159,-160,-156,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-145,-145,-145,-145,-143,-106,-145,-54,-55,195,-119,-123,-145,-128,-145,-145,-145,-145,-145,-145,-118,-122,-145,-127,-62,-145,-63,-145,-50,-51,-104,-49,-60,-59,-52,-117,-125,-121,-125,-67,-145,-145,-145,-103,-140,-145,-145,-56,-145,-145,-145,-145,-130,-67,-145,-145,-156,-120,-124,-126,-145,-145,-145,-145,-58,-61,-145,-145,-76,-145,-145,-57,-145,-48,]),'DOT':([79,101,222,],[121,124,121,]),'RUN':([111,134,],[-11,173,]),'SIZE':([121,],[146,]),'HEAD':([121,],[147,]),'DRAW':([124,],[150,]),'INIT':([124,],[151,]),'SET_FILL':([124,],[152,]),'SET_TITLE':([124,],[153,]),'GET_EVENT':([124,],[154,]),'UPDATE':([124,],[155,]),'WINDOW_H':([124,],[156,]),'SET_DIMENSION':([124,],[157,]),'IF':([137,176,179,207,212,214,215,216,225,226,257,260,262,263,264,265,266,267,292,338,345,352,354,356,358,363,364,],[-16,-15,224,-14,224,-24,-25,-26,-73,-74,-13,-20,-23,-27,-28,-29,-30,-31,-19,-71,-68,-82,-71,-79,-69,-78,-75,]),'PRINT':([137,176,179,207,212,214,215,216,225,226,257,260,262,263,264,265,266,267,292,338,345,352,354,356,358,363,364,],[-16,-15,227,-14,227,-24,-25,-26,-73,-74,-13,-20,-23,-27,-28,-29,-30,-31,-19,-71,-68,-82,-71,-79,-69,-78,-75,]),'RETURN':([137,176,179,207,212,214,215,216,225,226,257,260,262,263,264,265,266,267,292,338,345,352,354,356,358,363,364,],[-16,-15,228,-14,228,-24,-25,-26,-73,-74,-13,-20,-23,-27,-28,-29,-30,-31,-19,-71,-68,-82,-71,-79,-69,-78,-75,]),'FOR':([137,176,179,207,212,214,215,216,225,226,257,260,262,263,264,265,266,267,292,338,345,352,354,356,358,363,364,],[-16,-15,230,-14,230,-24,-25,-26,-73,-74,-13,-20,-23,-27,-28,-29,-30,-31,-19,-71,-68,-82,-71,-79,-69,-78,-75,]),'WHILE':([137,176,179,207,212,214,215,216,225,226,257,260,262,263,264,265,266,267,292,338,345,352,354,356,358,363,364,],[-16,-15,231,-14,231,-24,-25,-26,-73,-74,-13,-20,-23,-27,-28,-29,-30,-31,-19,-71,-68,-82,-71,-79,-69,-78,-75,]),'ELSE':([260,292,338,346,],[-20,-19,-72,350,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'capi':([0,],[1,]),'capi_action1':([0,],[2,]),'global':([2,],[3,]),'recfunc':([2,3,7,],[4,17,22,]),'function':([2,3,7,],[7,7,7,]),'type':([2,3,7,62,115,],[8,8,8,113,138,]),'primitivetype':([2,3,7,25,62,115,],[10,10,10,33,10,10,]),'start':([29,35,36,44,],[37,45,46,55,]),'vars':([30,137,179,207,212,],[39,176,215,257,215,]),'startscope_action':([31,32,112,173,230,231,],[41,42,135,205,275,276,]),'capi_action2':([37,45,46,55,],[47,56,57,107,]),'recids':([40,63,],[50,114,]),'run':([47,56,57,107,],[58,108,109,130,]),'start_action1':([48,],[60,]),'recparams':([52,53,177,],[65,67,208,]),'cte':([54,127,128,129,136,149,165,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[69,166,166,166,166,166,199,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'id':([54,127,128,129,136,149,165,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'int':([54,127,128,129,136,149,165,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'float':([54,127,128,129,136,149,165,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'bool':([54,127,128,129,136,149,165,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'string':([54,127,128,129,136,149,165,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'nestedvalue':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[75,75,75,75,75,75,75,229,75,75,75,75,75,75,75,75,229,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'functioncall':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[76,76,76,76,76,76,76,219,76,76,76,76,76,76,76,76,219,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'listaccess':([54,127,128,129,136,149,165,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'specialfunction':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[78,78,78,78,78,78,78,221,78,78,78,78,78,78,78,78,221,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'draw':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'init':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'size':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'head':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'tail':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'last':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'set_fill':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'set_title':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'get_event':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'update':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'window_h':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'window_w':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'set_dimension':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'set_color':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'create_object':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'create_text':([54,127,128,129,136,149,165,179,183,185,187,188,192,193,198,201,212,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'function_action1':([65,67,],[116,118,]),'function_action3':([66,68,178,180,],[117,119,209,232,]),'function_call_action1':([79,222,],[122,122,]),'list_action1':([79,222,321,],[123,269,269,]),'run_action1':([111,],[134,]),'block':([117,119,209,232,256,312,330,348,350,362,],[140,143,258,277,291,327,338,352,354,363,]),'action_list1':([120,],[144,]),'expression':([127,128,129,136,149,183,185,187,188,192,193,198,201,228,271,272,274,280,281,283,284,294,295,313,322,323,324,331,332,341,343,353,],[160,168,168,175,184,168,238,240,241,245,246,253,168,273,296,298,300,303,304,305,306,314,315,328,334,335,336,298,298,347,349,357,]),'exp':([127,128,129,136,149,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,294,295,313,322,323,324,331,332,341,343,353,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,285,286,161,161,161,161,161,161,161,309,161,161,161,161,161,161,161,161,161,161,161,]),'term':([127,128,129,136,149,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,310,162,162,162,162,162,162,162,162,162,162,162,]),'factor':([127,128,129,136,149,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'factor_action1':([127,128,129,136,149,183,185,187,188,192,193,198,201,228,247,248,271,272,274,280,281,283,284,287,288,294,295,313,322,323,324,331,332,341,343,353,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'recfuncexp':([128,129,183,201,],[167,169,235,254,]),'function_action2':([139,142,],[178,180,]),'function_call_action2':([148,],[183,]),'exp_action':([162,],[196,]),'term_action':([163,],[197,]),'recfunc_action1':([168,],[202,]),'recstatement':([179,212,],[210,261,]),'statement':([179,212,],[212,212,]),'assign':([179,212,301,355,],[213,213,320,359,]),'condition':([179,212,],[214,214,]),'loop':([179,212,],[216,216,]),'write':([179,212,],[217,217,]),'return':([179,212,],[218,218,]),'nestedassign':([179,212,],[220,220,]),'assign_list':([179,212,301,355,],[223,223,223,223,]),'for':([179,212,],[225,225,]),'while':([179,212,],[226,226,]),'list_action_3':([184,314,],[237,329,]),'relop_action1':([194,],[247,]),'logic_action1':([195,],[248,]),'recexp':([196,],[249,]),'recterm':([197,],[251,]),'main_cont':([206,290,],[256,312,]),'assign_action1':([222,321,],[268,268,]),'add_operator':([250,252,],[287,288,]),'assign_action2':([270,293,],[295,313,]),'recwrite':([272,331,332,],[297,339,340,]),'while_action1':([276,],[302,]),'relop_action2':([285,],[307,]),'logic_action2':([286,],[308,]),'factor_action2':([289,],[311,]),'condition_action1':([296,],[316,]),'action_recwrite_exp':([298,],[318,]),'action_recwrite_cte':([299,],[319,]),'for_action1':([333,],[341,]),'while_action2':([334,],[342,]),'condition_action2':([338,354,],[345,358,]),'condition_action3':([338,],[346,]),'for_action2':([347,],[351,]),'while_action3':([352,],[356,]),'for_action3':([363,],[364,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> capi","S'",1,None,None,None),
  ('capi -> capi_action1 global recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',11,'p_capi','capi.py',255),
  ('capi -> capi_action1 recfunc MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',256),
  ('capi -> capi_action1 global MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',10,'p_capi','capi.py',257),
  ('capi -> capi_action1 MAIN COLON LEFTKEY start capi_action2 run RIGHTKEY SEMICOLON','capi',9,'p_capi','capi.py',258),
  ('capi_action1 -> <empty>','capi_action1',0,'p_capi_action1','capi.py',263),
  ('capi_action2 -> <empty>','capi_action2',0,'p_capi_action2','capi.py',271),
  ('global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON','global',6,'p_global','capi.py',277),
  ('start -> VOID FUNC start_action1 START startscope_action LEFTPAR RIGHTPAR main_cont block','start',9,'p_start','capi.py',286),
  ('start_action1 -> <empty>','start_action1',0,'p_start_action1','capi.py',303),
  ('run -> VOID FUNC run_action1 RUN startscope_action LEFTPAR RIGHTPAR main_cont block','run',9,'p_run','capi.py',310),
  ('run_action1 -> <empty>','run_action1',0,'p_run_action1','capi.py',326),
  ('main_cont -> <empty>','main_cont',0,'p_main_cont','capi.py',334),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON vars','vars',8,'p_vars','capi.py',340),
  ('vars -> VAR recids COLON type EQUAL expression SEMICOLON','vars',7,'p_vars','capi.py',341),
  ('vars -> VAR recids COLON type SEMICOLON vars','vars',6,'p_vars','capi.py',342),
  ('vars -> VAR recids COLON type SEMICOLON','vars',5,'p_vars','capi.py',343),
  ('recids -> ID','recids',1,'p_recids','capi.py',377),
  ('recids -> ID COMMA recids','recids',3,'p_recids','capi.py',378),
  ('block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON','block',5,'p_block','capi.py',388),
  ('block -> COLON LEFTKEY RIGHTKEY SEMICOLON','block',4,'p_block','capi.py',389),
  ('recstatement -> statement recstatement','recstatement',2,'p_recstatement','capi.py',394),
  ('recstatement -> statement','recstatement',1,'p_recstatement','capi.py',395),
  ('statement -> assign SEMICOLON','statement',2,'p_statement','capi.py',401),
  ('statement -> condition','statement',1,'p_statement','capi.py',402),
  ('statement -> vars','statement',1,'p_statement','capi.py',403),
  ('statement -> loop','statement',1,'p_statement','capi.py',404),
  ('statement -> write SEMICOLON','statement',2,'p_statement','capi.py',405),
  ('statement -> return SEMICOLON','statement',2,'p_statement','capi.py',406),
  ('statement -> functioncall SEMICOLON','statement',2,'p_statement','capi.py',407),
  ('statement -> nestedassign SEMICOLON','statement',2,'p_statement','capi.py',408),
  ('statement -> specialfunction SEMICOLON','statement',2,'p_statement','capi.py',409),
  ('specialfunction -> draw','specialfunction',1,'p_specialfunction','capi.py',416),
  ('specialfunction -> init','specialfunction',1,'p_specialfunction','capi.py',417),
  ('specialfunction -> size','specialfunction',1,'p_specialfunction','capi.py',418),
  ('specialfunction -> head','specialfunction',1,'p_specialfunction','capi.py',419),
  ('specialfunction -> tail','specialfunction',1,'p_specialfunction','capi.py',420),
  ('specialfunction -> last','specialfunction',1,'p_specialfunction','capi.py',421),
  ('specialfunction -> set_fill','specialfunction',1,'p_specialfunction','capi.py',422),
  ('specialfunction -> set_title','specialfunction',1,'p_specialfunction','capi.py',423),
  ('specialfunction -> get_event','specialfunction',1,'p_specialfunction','capi.py',424),
  ('specialfunction -> update','specialfunction',1,'p_specialfunction','capi.py',425),
  ('specialfunction -> window_h','specialfunction',1,'p_specialfunction','capi.py',426),
  ('specialfunction -> window_w','specialfunction',1,'p_specialfunction','capi.py',427),
  ('specialfunction -> set_dimension','specialfunction',1,'p_specialfunction','capi.py',428),
  ('specialfunction -> set_color','specialfunction',1,'p_specialfunction','capi.py',429),
  ('specialfunction -> create_object','specialfunction',1,'p_specialfunction','capi.py',430),
  ('specialfunction -> create_text','specialfunction',1,'p_specialfunction','capi.py',431),
  ('draw -> CAPIGAME DOT DRAW LEFTPAR expression COMMA expression COMMA expression COMMA expression COMMA expression RIGHTPAR','draw',14,'p_draw','capi.py',437),
  ('init -> CAPIGAME DOT INIT LEFTPAR RIGHTPAR','init',5,'p_init','capi.py',454),
  ('size -> ID DOT SIZE LEFTPAR RIGHTPAR','size',5,'p_size','capi.py',460),
  ('head -> ID DOT HEAD LEFTPAR RIGHTPAR','head',5,'p_head','capi.py',488),
  ('window_h -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR','window_h',5,'p_window_h','capi.py',518),
  ('window_w -> CAPIGAME DOT WINDOW_H LEFTPAR RIGHTPAR','window_w',5,'p_window_w','capi.py',527),
  ('tail -> TAIL LEFTPAR RIGHTPAR','tail',3,'p_tail','capi.py',535),
  ('last -> LAST LEFTPAR RIGHTPAR','last',3,'p_last','capi.py',540),
  ('set_title -> CAPIGAME DOT SET_TITLE LEFTPAR expression RIGHTPAR','set_title',6,'p_set_title','capi.py',545),
  ('set_fill -> CAPIGAME DOT SET_FILL LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_fill',10,'p_set_fill','capi.py',558),
  ('set_dimension -> CAPIGAME DOT SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR','set_dimension',8,'p_set_dimension','capi.py',569),
  ('update -> CAPIGAME DOT UPDATE LEFTPAR RIGHTPAR','update',5,'p_update','capi.py',580),
  ('get_event -> CAPIGAME DOT GET_EVENT LEFTPAR RIGHTPAR','get_event',5,'p_get_event','capi.py',586),
  ('set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR','set_color',8,'p_set_color','capi.py',594),
  ('create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR','create_object',4,'p_create_object','capi.py',599),
  ('create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR','create_text',4,'p_create_text','capi.py',604),
  ('assign -> ID assign_action1 EQUAL assign_action2 expression','assign',5,'p_assign','capi.py',609),
  ('assign -> assign_list EQUAL assign_action2 expression','assign',4,'p_assign','capi.py',610),
  ('assign_action1 -> <empty>','assign_action1',0,'p_assign_action1','capi.py',671),
  ('assign_action2 -> <empty>','assign_action2',0,'p_assign_action2','capi.py',680),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action2','condition',7,'p_condition','capi.py',686),
  ('condition -> IF LEFTPAR expression condition_action1 RIGHTPAR block condition_action3 ELSE block condition_action2','condition',10,'p_condition','capi.py',687),
  ('condition_action1 -> <empty>','condition_action1',0,'p_condition_action1','capi.py',692),
  ('condition_action2 -> <empty>','condition_action2',0,'p_condition_action2','capi.py',705),
  ('condition_action3 -> <empty>','condition_action3',0,'p_condition_action3','capi.py',712),
  ('loop -> for','loop',1,'p_loop','capi.py',722),
  ('loop -> while','loop',1,'p_loop','capi.py',723),
  ('for -> FOR startscope_action LEFTPAR assign SEMICOLON for_action1 expression for_action2 SEMICOLON assign SEMICOLON RIGHTPAR block for_action3','for',14,'p_for','capi.py',728),
  ('for_action1 -> <empty>','for_action1',0,'p_for_action1','capi.py',736),
  ('for_action2 -> <empty>','for_action2',0,'p_for_action2','capi.py',744),
  ('for_action3 -> <empty>','for_action3',0,'p_for_action3','capi.py',758),
  ('while -> WHILE startscope_action while_action1 LEFTPAR expression while_action2 RIGHTPAR block while_action3','while',9,'p_while','capi.py',772),
  ('while_action1 -> <empty>','while_action1',0,'p_while_action1','capi.py',781),
  ('while_action2 -> <empty>','while_action2',0,'p_while_action2','capi.py',787),
  ('while_action3 -> <empty>','while_action3',0,'p_while_action3','capi.py',801),
  ('function -> type FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',811),
  ('function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',812),
  ('function -> VOID FUNC ID startscope_action LEFTPAR recparams function_action1 RIGHTPAR function_action2 function_action3 block','function',11,'p_function','capi.py',813),
  ('function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR function_action3 block','function',8,'p_function','capi.py',814),
  ('startscope_action -> <empty>','startscope_action',0,'p_startscope_action','capi.py',840),
  ('function_action1 -> <empty>','function_action1',0,'p_function_action1','capi.py',859),
  ('function_action2 -> <empty>','function_action2',0,'p_function_action2','capi.py',865),
  ('function_action3 -> <empty>','function_action3',0,'p_function_action3','capi.py',876),
  ('recparams -> ID COLON type','recparams',3,'p_recparams','capi.py',885),
  ('recparams -> ID COLON type COMMA recparams','recparams',5,'p_recparams','capi.py',886),
  ('recfunc -> function recfunc','recfunc',2,'p_recfunc','capi.py',899),
  ('recfunc -> function','recfunc',1,'p_recfunc','capi.py',900),
  ('write -> PRINT LEFTPAR recwrite RIGHTPAR','write',4,'p_write','capi.py',905),
  ('recwrite -> expression action_recwrite_exp COMMA recwrite','recwrite',4,'p_recwrite','capi.py',910),
  ('recwrite -> STRING action_recwrite_cte COMMA recwrite','recwrite',4,'p_recwrite','capi.py',911),
  ('recwrite -> expression action_recwrite_exp','recwrite',2,'p_recwrite','capi.py',912),
  ('recwrite -> STRING action_recwrite_cte','recwrite',2,'p_recwrite','capi.py',913),
  ('action_recwrite_exp -> <empty>','action_recwrite_exp',0,'p_action_recwrite_exp','capi.py',917),
  ('action_recwrite_cte -> <empty>','action_recwrite_cte',0,'p_action_recwrite_cte','capi.py',926),
  ('return -> RETURN expression','return',2,'p_return','capi.py',933),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 recfuncexp RIGHTPAR','functioncall',6,'p_functioncall','capi.py',961),
  ('functioncall -> ID function_call_action1 LEFTPAR function_call_action2 RIGHTPAR','functioncall',5,'p_functioncall','capi.py',962),
  ('function_call_action1 -> <empty>','function_call_action1',0,'p_function_call_action1','capi.py',995),
  ('function_call_action2 -> <empty>','function_call_action2',0,'p_function_call_action2','capi.py',1006),
  ('recfuncexp -> expression COMMA recfuncexp','recfuncexp',3,'p_recfuncexp','capi.py',1015),
  ('recfuncexp -> expression recfunc_action1','recfuncexp',2,'p_recfuncexp','capi.py',1016),
  ('recfunc_action1 -> <empty>','recfunc_action1',0,'p_recfunc_action1','capi.py',1027),
  ('expression -> exp RELOP relop_action1 exp relop_action2','expression',5,'p_expression','capi.py',1068),
  ('expression -> exp LOGIC logic_action1 exp logic_action2','expression',5,'p_expression','capi.py',1069),
  ('expression -> exp','expression',1,'p_expression','capi.py',1070),
  ('relop_action1 -> <empty>','relop_action1',0,'p_relop_action1','capi.py',1075),
  ('relop_action2 -> <empty>','relop_action2',0,'p_relop_action2','capi.py',1081),
  ('logic_action1 -> <empty>','logic_action1',0,'p_logic_action1','capi.py',1104),
  ('logic_action2 -> <empty>','logic_action2',0,'p_logic_action2','capi.py',1110),
  ('exp -> term exp_action recexp','exp',3,'p_exp','capi.py',1133),
  ('exp -> term exp_action','exp',2,'p_exp','capi.py',1134),
  ('exp_action -> <empty>','exp_action',0,'p_exp_action','capi.py',1139),
  ('recexp -> EX add_operator exp','recexp',3,'p_recexp','capi.py',1163),
  ('term -> factor term_action recterm','term',3,'p_term','capi.py',1168),
  ('term -> factor term_action','term',2,'p_term','capi.py',1169),
  ('term_action -> <empty>','term_action',0,'p_term_action','capi.py',1174),
  ('recterm -> TERMS add_operator term','recterm',3,'p_recterm','capi.py',1197),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','capi.py',1202),
  ('factor -> factor_action1 LEFTPAR expression RIGHTPAR factor_action2','factor',5,'p_factor','capi.py',1208),
  ('factor -> EX cte','factor',2,'p_factor','capi.py',1209),
  ('factor -> cte','factor',1,'p_factor','capi.py',1210),
  ('factor_action1 -> <empty>','factor_action1',0,'p_factor_action1','capi.py',1224),
  ('factor_action2 -> <empty>','factor_action2',0,'p_factor_action2','capi.py',1230),
  ('type -> primitivetype','type',1,'p_type','capi.py',1236),
  ('type -> TLIST BAR primitivetype BAR LEFTBRACKET cte RIGHTBRACKET action_list1','type',8,'p_type','capi.py',1237),
  ('action_list1 -> <empty>','action_list1',0,'p_action_list1','capi.py',1246),
  ('primitivetype -> TINT','primitivetype',1,'p_primitivetype','capi.py',1255),
  ('primitivetype -> TFLOAT','primitivetype',1,'p_primitivetype','capi.py',1256),
  ('primitivetype -> TSTRING','primitivetype',1,'p_primitivetype','capi.py',1257),
  ('primitivetype -> TBOOL','primitivetype',1,'p_primitivetype','capi.py',1258),
  ('primitivetype -> TOBJECT','primitivetype',1,'p_primitivetype','capi.py',1259),
  ('assign_list -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','assign_list',6,'p_assign_list','capi.py',1266),
  ('listaccess -> ID list_action1 LEFTBRACKET expression list_action_3 RIGHTBRACKET','listaccess',6,'p_listaccess','capi.py',1278),
  ('list_action1 -> <empty>','list_action1',0,'p_list_action1','capi.py',1291),
  ('list_action_3 -> <empty>','list_action_3',0,'p_list_action_3','capi.py',1300),
  ('nestedvalue -> ID DOT ID','nestedvalue',3,'p_nestedvalue','capi.py',1322),
  ('nestedassign -> nestedvalue EQUAL expression','nestedassign',3,'p_nestedassign','capi.py',1327),
  ('cte -> <empty>','cte',0,'p_cte','capi.py',1332),
  ('cte -> id','cte',1,'p_cte','capi.py',1333),
  ('cte -> int','cte',1,'p_cte','capi.py',1334),
  ('cte -> float','cte',1,'p_cte','capi.py',1335),
  ('cte -> bool','cte',1,'p_cte','capi.py',1336),
  ('cte -> string','cte',1,'p_cte','capi.py',1337),
  ('cte -> nestedvalue','cte',1,'p_cte','capi.py',1338),
  ('cte -> functioncall','cte',1,'p_cte','capi.py',1339),
  ('cte -> listaccess','cte',1,'p_cte','capi.py',1340),
  ('cte -> specialfunction','cte',1,'p_cte','capi.py',1341),
  ('id -> ID','id',1,'p_id','capi.py',1347),
  ('string -> STRING','string',1,'p_string','capi.py',1367),
  ('int -> INT','int',1,'p_int','capi.py',1374),
  ('float -> FLOAT','float',1,'p_float','capi.py',1381),
  ('bool -> TRUE','bool',1,'p_bool','capi.py',1388),
  ('bool -> FALSE','bool',1,'p_bool','capi.py',1389),
]
