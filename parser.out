Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    FALSE
    OBJECT
    TLIST
    TRUE

Grammar

Rule 0     S' -> capi
Rule 1     capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 2     capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 3     capi -> global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 4     capi -> MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
Rule 5     global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
Rule 6     start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR block
Rule 7     run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block
Rule 8     vars -> VAR recids COLON type EQUAL expression SEMICOLON vars
Rule 9     vars -> VAR recids COLON type EQUAL expression SEMICOLON
Rule 10    vars -> VAR recids COLON type SEMICOLON vars
Rule 11    vars -> VAR recids COLON type SEMICOLON
Rule 12    recids -> ID
Rule 13    recids -> ID COMMA recids
Rule 14    block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
Rule 15    block -> COLON LEFTKEY RIGHTKEY SEMICOLON
Rule 16    recstatement -> statement recstatement
Rule 17    recstatement -> statement
Rule 18    statement -> assign SEMICOLON
Rule 19    statement -> condition
Rule 20    statement -> vars
Rule 21    statement -> loop
Rule 22    statement -> write SEMICOLON
Rule 23    statement -> return SEMICOLON
Rule 24    statement -> functioncall SEMICOLON
Rule 25    statement -> nestedassign SEMICOLON
Rule 26    statement -> specialfunction SEMICOLON
Rule 27    specialfunction -> draw
Rule 28    specialfunction -> size
Rule 29    specialfunction -> head
Rule 30    specialfunction -> tail
Rule 31    specialfunction -> last
Rule 32    specialfunction -> set_title
Rule 33    specialfunction -> set_dimension
Rule 34    specialfunction -> set_color
Rule 35    specialfunction -> create_object
Rule 36    specialfunction -> create_text
Rule 37    draw -> DRAW LEFTPAR recfuncexp RIGHTPAR
Rule 38    size -> SIZE LEFTPAR RIGHTPAR
Rule 39    head -> HEAD LEFTPAR RIGHTPAR
Rule 40    tail -> TAIL LEFTPAR RIGHTPAR
Rule 41    last -> LAST LEFTPAR RIGHTPAR
Rule 42    set_title -> SET_TITLE LEFTPAR expression RIGHTPAR
Rule 43    set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
Rule 44    set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
Rule 45    create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
Rule 46    create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR
Rule 47    assign -> ID EQUAL expression
Rule 48    condition -> IF startscope_action LEFTPAR expression RIGHTPAR block
Rule 49    condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block
Rule 50    loop -> for
Rule 51    loop -> while
Rule 52    for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block
Rule 53    while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block
Rule 54    function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
Rule 55    function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block
Rule 56    function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
Rule 57    function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block
Rule 58    startscope_action -> <empty>
Rule 59    recparams -> ID COLON type
Rule 60    recparams -> ID COLON type COMMA recparams
Rule 61    recfunc -> function recfunc
Rule 62    recfunc -> function
Rule 63    write -> PRINT LEFTPAR recwrite RIGHTPAR
Rule 64    recwrite -> expression COMMA recwrite
Rule 65    recwrite -> STRING COMMA recwrite
Rule 66    recwrite -> expression
Rule 67    recwrite -> STRING
Rule 68    return -> RETURN expression
Rule 69    functioncall -> ID LEFTPAR recfuncexp RIGHTPAR
Rule 70    functioncall -> ID LEFTPAR RIGHTPAR
Rule 71    recfuncexp -> expression COMMA recfuncexp
Rule 72    recfuncexp -> expression
Rule 73    expression -> exp RELOP exp
Rule 74    expression -> exp LOGIC exp
Rule 75    expression -> exp
Rule 76    exp -> term exp_action recexp
Rule 77    exp -> term exp_action
Rule 78    exp_action -> <empty>
Rule 79    recexp -> EX add_operator exp
Rule 80    term -> factor term_action recterm
Rule 81    term -> factor term_action
Rule 82    term_action -> <empty>
Rule 83    recterm -> TERMS add_operator term
Rule 84    add_operator -> <empty>
Rule 85    factor -> LEFTPAR expression RIGHTPAR
Rule 86    factor -> EX cte
Rule 87    factor -> cte
Rule 88    type -> primitivetype
Rule 89    type -> LIST LEFTHAT primitivetype RIGHTHAT
Rule 90    primitivetype -> TINT
Rule 91    primitivetype -> TFLOAT
Rule 92    primitivetype -> TSTRING
Rule 93    primitivetype -> TBOOL
Rule 94    primitivetype -> TOBJECT
Rule 95    listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
Rule 96    nestedvalue -> ID DOT ID
Rule 97    nestedassign -> nestedvalue EQUAL expression
Rule 98    cte -> STRING
Rule 99    cte -> ID
Rule 100   cte -> INT
Rule 101   cte -> FLOAT
Rule 102   cte -> BOOL
Rule 103   cte -> nestedvalue
Rule 104   cte -> functioncall
Rule 105   cte -> listaccess
Rule 106   cte -> specialfunction

Terminals, with rules where they appear

BOOL                 : 102
COLON                : 1 2 3 4 5 8 9 10 11 14 15 59 60
COMMA                : 13 43 44 44 60 64 65 71
COMMENT              : 
CREATE_OBJECT        : 45
CREATE_TEXT          : 46
DOT                  : 96
DRAW                 : 37
ELSE                 : 49
EQUAL                : 8 9 47 97
EX                   : 79 86
FALSE                : 
FLOAT                : 101
FOR                  : 52
FUNC                 : 6 7 54 55 56 57
GLOBAL               : 5
HEAD                 : 39
ID                   : 12 13 47 54 55 56 57 59 60 69 70 95 96 96 99
IF                   : 48 49
INT                  : 100
LAST                 : 41
LEFTBRACKET          : 95
LEFTHAT              : 89
LEFTKEY              : 1 2 3 4 5 14 15
LEFTPAR              : 6 7 37 38 39 40 41 42 43 44 45 46 48 49 52 53 54 55 56 57 63 69 70 85
LIST                 : 89
LOGIC                : 74
MAIN                 : 1 2 3 4
OBJECT               : 
PRINT                : 63
RELOP                : 73
RETURN               : 68
RIGHTBRACKET         : 95
RIGHTHAT             : 89
RIGHTKEY             : 1 2 3 4 5 14 15
RIGHTPAR             : 6 7 37 38 39 40 41 42 43 44 45 46 48 49 52 53 54 55 56 57 63 69 70 85
RUN                  : 7
SEMICOLON            : 1 2 3 4 5 8 9 10 11 14 15 18 22 23 24 25 26 52 52 52 95
SET_COLOR            : 44
SET_DIMENSION        : 43
SET_TITLE            : 42
SIZE                 : 38
START                : 6
STRING               : 65 67 98
TAIL                 : 40
TBOOL                : 93
TERMS                : 83
TFLOAT               : 91
TINT                 : 90
TLIST                : 
TOBJECT              : 94
TRUE                 : 
TSTRING              : 92
VAR                  : 8 9 10 11
VOID                 : 6 7 56 57
WHILE                : 53
error                : 

Nonterminals, with rules where they appear

add_operator         : 79 83
assign               : 18 52 52
block                : 6 7 48 49 49 52 53 54 55 56 57
capi                 : 0
condition            : 19
create_object        : 35
create_text          : 36
cte                  : 86 87
draw                 : 27
exp                  : 73 73 74 74 75 79
exp_action           : 76 77
expression           : 8 9 42 43 43 44 44 44 47 48 49 52 53 64 66 68 71 72 85 95 97
factor               : 80 81
for                  : 50
function             : 61 62
functioncall         : 24 104
global               : 1 3
head                 : 29
last                 : 31
listaccess           : 105
loop                 : 21
nestedassign         : 25
nestedvalue          : 97 103
primitivetype        : 88 89
recexp               : 76
recfunc              : 1 2 61
recfuncexp           : 37 45 46 69 71
recids               : 8 9 10 11 13
recparams            : 54 56 60
recstatement         : 14 16
recterm              : 80
recwrite             : 63 64 65
return               : 23
run                  : 1 2 3 4
set_color            : 34
set_dimension        : 33
set_title            : 32
size                 : 28
specialfunction      : 26 106
start                : 1 2 3 4
startscope_action    : 6 7 48 49 52 53 54 55 56 57
statement            : 16 17
tail                 : 30
term                 : 76 77 83
term_action          : 80 81
type                 : 8 9 10 11 54 55 59 60
vars                 : 5 8 10 20
while                : 51
write                : 22

Parsing method: LALR

state 0

    (0) S' -> . capi
    (1) capi -> . global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (2) capi -> . recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (3) capi -> . global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (4) capi -> . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (5) global -> . GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON
    (61) recfunc -> . function recfunc
    (62) recfunc -> . function
    (54) function -> . type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (55) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (56) function -> . VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (57) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (88) type -> . primitivetype
    (89) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (90) primitivetype -> . TINT
    (91) primitivetype -> . TFLOAT
    (92) primitivetype -> . TSTRING
    (93) primitivetype -> . TBOOL
    (94) primitivetype -> . TOBJECT

    MAIN            shift and go to state 4
    GLOBAL          shift and go to state 5
    VOID            shift and go to state 8
    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    capi                           shift and go to state 1
    global                         shift and go to state 2
    recfunc                        shift and go to state 3
    function                       shift and go to state 6
    type                           shift and go to state 7
    primitivetype                  shift and go to state 9

state 1

    (0) S' -> capi .



state 2

    (1) capi -> global . recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (3) capi -> global . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON
    (61) recfunc -> . function recfunc
    (62) recfunc -> . function
    (54) function -> . type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (55) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (56) function -> . VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (57) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (88) type -> . primitivetype
    (89) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (90) primitivetype -> . TINT
    (91) primitivetype -> . TFLOAT
    (92) primitivetype -> . TSTRING
    (93) primitivetype -> . TBOOL
    (94) primitivetype -> . TOBJECT

    MAIN            shift and go to state 17
    VOID            shift and go to state 8
    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    recfunc                        shift and go to state 16
    function                       shift and go to state 6
    type                           shift and go to state 7
    primitivetype                  shift and go to state 9

state 3

    (2) capi -> recfunc . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 18


state 4

    (4) capi -> MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 19


state 5

    (5) global -> GLOBAL . COLON LEFTKEY vars RIGHTKEY SEMICOLON

    COLON           shift and go to state 20


state 6

    (61) recfunc -> function . recfunc
    (62) recfunc -> function .
    (61) recfunc -> . function recfunc
    (62) recfunc -> . function
    (54) function -> . type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (55) function -> . type FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (56) function -> . VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (57) function -> . VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block
    (88) type -> . primitivetype
    (89) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (90) primitivetype -> . TINT
    (91) primitivetype -> . TFLOAT
    (92) primitivetype -> . TSTRING
    (93) primitivetype -> . TBOOL
    (94) primitivetype -> . TOBJECT

    MAIN            reduce using rule 62 (recfunc -> function .)
    VOID            shift and go to state 8
    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    function                       shift and go to state 6
    recfunc                        shift and go to state 21
    type                           shift and go to state 7
    primitivetype                  shift and go to state 9

state 7

    (54) function -> type . FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (55) function -> type . FUNC ID startscope_action LEFTPAR RIGHTPAR block

    FUNC            shift and go to state 22


state 8

    (56) function -> VOID . FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block
    (57) function -> VOID . FUNC ID startscope_action LEFTPAR RIGHTPAR block

    FUNC            shift and go to state 23


state 9

    (88) type -> primitivetype .

    FUNC            reduce using rule 88 (type -> primitivetype .)
    EQUAL           reduce using rule 88 (type -> primitivetype .)
    SEMICOLON       reduce using rule 88 (type -> primitivetype .)
    COMMA           reduce using rule 88 (type -> primitivetype .)
    RIGHTPAR        reduce using rule 88 (type -> primitivetype .)


state 10

    (89) type -> LIST . LEFTHAT primitivetype RIGHTHAT

    LEFTHAT         shift and go to state 24


state 11

    (90) primitivetype -> TINT .

    FUNC            reduce using rule 90 (primitivetype -> TINT .)
    RIGHTHAT        reduce using rule 90 (primitivetype -> TINT .)
    EQUAL           reduce using rule 90 (primitivetype -> TINT .)
    SEMICOLON       reduce using rule 90 (primitivetype -> TINT .)
    COMMA           reduce using rule 90 (primitivetype -> TINT .)
    RIGHTPAR        reduce using rule 90 (primitivetype -> TINT .)


state 12

    (91) primitivetype -> TFLOAT .

    FUNC            reduce using rule 91 (primitivetype -> TFLOAT .)
    RIGHTHAT        reduce using rule 91 (primitivetype -> TFLOAT .)
    EQUAL           reduce using rule 91 (primitivetype -> TFLOAT .)
    SEMICOLON       reduce using rule 91 (primitivetype -> TFLOAT .)
    COMMA           reduce using rule 91 (primitivetype -> TFLOAT .)
    RIGHTPAR        reduce using rule 91 (primitivetype -> TFLOAT .)


state 13

    (92) primitivetype -> TSTRING .

    FUNC            reduce using rule 92 (primitivetype -> TSTRING .)
    RIGHTHAT        reduce using rule 92 (primitivetype -> TSTRING .)
    EQUAL           reduce using rule 92 (primitivetype -> TSTRING .)
    SEMICOLON       reduce using rule 92 (primitivetype -> TSTRING .)
    COMMA           reduce using rule 92 (primitivetype -> TSTRING .)
    RIGHTPAR        reduce using rule 92 (primitivetype -> TSTRING .)


state 14

    (93) primitivetype -> TBOOL .

    FUNC            reduce using rule 93 (primitivetype -> TBOOL .)
    RIGHTHAT        reduce using rule 93 (primitivetype -> TBOOL .)
    EQUAL           reduce using rule 93 (primitivetype -> TBOOL .)
    SEMICOLON       reduce using rule 93 (primitivetype -> TBOOL .)
    COMMA           reduce using rule 93 (primitivetype -> TBOOL .)
    RIGHTPAR        reduce using rule 93 (primitivetype -> TBOOL .)


state 15

    (94) primitivetype -> TOBJECT .

    FUNC            reduce using rule 94 (primitivetype -> TOBJECT .)
    RIGHTHAT        reduce using rule 94 (primitivetype -> TOBJECT .)
    EQUAL           reduce using rule 94 (primitivetype -> TOBJECT .)
    SEMICOLON       reduce using rule 94 (primitivetype -> TOBJECT .)
    COMMA           reduce using rule 94 (primitivetype -> TOBJECT .)
    RIGHTPAR        reduce using rule 94 (primitivetype -> TOBJECT .)


state 16

    (1) capi -> global recfunc . MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON

    MAIN            shift and go to state 25


state 17

    (3) capi -> global MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 26


state 18

    (2) capi -> recfunc MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 27


state 19

    (4) capi -> MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 28


state 20

    (5) global -> GLOBAL COLON . LEFTKEY vars RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 29


state 21

    (61) recfunc -> function recfunc .

    MAIN            reduce using rule 61 (recfunc -> function recfunc .)


state 22

    (54) function -> type FUNC . ID startscope_action LEFTPAR recparams RIGHTPAR block
    (55) function -> type FUNC . ID startscope_action LEFTPAR RIGHTPAR block

    ID              shift and go to state 30


state 23

    (56) function -> VOID FUNC . ID startscope_action LEFTPAR recparams RIGHTPAR block
    (57) function -> VOID FUNC . ID startscope_action LEFTPAR RIGHTPAR block

    ID              shift and go to state 31


state 24

    (89) type -> LIST LEFTHAT . primitivetype RIGHTHAT
    (90) primitivetype -> . TINT
    (91) primitivetype -> . TFLOAT
    (92) primitivetype -> . TSTRING
    (93) primitivetype -> . TBOOL
    (94) primitivetype -> . TOBJECT

    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    primitivetype                  shift and go to state 32

state 25

    (1) capi -> global recfunc MAIN . COLON LEFTKEY start run RIGHTKEY SEMICOLON

    COLON           shift and go to state 33


state 26

    (3) capi -> global MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 34


state 27

    (2) capi -> recfunc MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 35


state 28

    (4) capi -> MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 37

    start                          shift and go to state 36

state 29

    (5) global -> GLOBAL COLON LEFTKEY . vars RIGHTKEY SEMICOLON
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON

    VAR             shift and go to state 39

    vars                           shift and go to state 38

state 30

    (54) function -> type FUNC ID . startscope_action LEFTPAR recparams RIGHTPAR block
    (55) function -> type FUNC ID . startscope_action LEFTPAR RIGHTPAR block
    (58) startscope_action -> .

    LEFTPAR         reduce using rule 58 (startscope_action -> .)

    startscope_action              shift and go to state 40

state 31

    (56) function -> VOID FUNC ID . startscope_action LEFTPAR recparams RIGHTPAR block
    (57) function -> VOID FUNC ID . startscope_action LEFTPAR RIGHTPAR block
    (58) startscope_action -> .

    LEFTPAR         reduce using rule 58 (startscope_action -> .)

    startscope_action              shift and go to state 41

state 32

    (89) type -> LIST LEFTHAT primitivetype . RIGHTHAT

    RIGHTHAT        shift and go to state 42


state 33

    (1) capi -> global recfunc MAIN COLON . LEFTKEY start run RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 43


state 34

    (3) capi -> global MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 37

    start                          shift and go to state 44

state 35

    (2) capi -> recfunc MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 37

    start                          shift and go to state 45

state 36

    (4) capi -> MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 47

    run                            shift and go to state 46

state 37

    (6) start -> VOID . FUNC START startscope_action LEFTPAR RIGHTPAR block

    FUNC            shift and go to state 48


state 38

    (5) global -> GLOBAL COLON LEFTKEY vars . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 49


state 39

    (8) vars -> VAR . recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> VAR . recids COLON type EQUAL expression SEMICOLON
    (10) vars -> VAR . recids COLON type SEMICOLON vars
    (11) vars -> VAR . recids COLON type SEMICOLON
    (12) recids -> . ID
    (13) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 50

state 40

    (54) function -> type FUNC ID startscope_action . LEFTPAR recparams RIGHTPAR block
    (55) function -> type FUNC ID startscope_action . LEFTPAR RIGHTPAR block

    LEFTPAR         shift and go to state 52


state 41

    (56) function -> VOID FUNC ID startscope_action . LEFTPAR recparams RIGHTPAR block
    (57) function -> VOID FUNC ID startscope_action . LEFTPAR RIGHTPAR block

    LEFTPAR         shift and go to state 53


state 42

    (89) type -> LIST LEFTHAT primitivetype RIGHTHAT .

    FUNC            reduce using rule 89 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    EQUAL           reduce using rule 89 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    SEMICOLON       reduce using rule 89 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    COMMA           reduce using rule 89 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)
    RIGHTPAR        reduce using rule 89 (type -> LIST LEFTHAT primitivetype RIGHTHAT .)


state 43

    (1) capi -> global recfunc MAIN COLON LEFTKEY . start run RIGHTKEY SEMICOLON
    (6) start -> . VOID FUNC START startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 37

    start                          shift and go to state 54

state 44

    (3) capi -> global MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 47

    run                            shift and go to state 55

state 45

    (2) capi -> recfunc MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 47

    run                            shift and go to state 56

state 46

    (4) capi -> MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 57


state 47

    (7) run -> VOID . FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    FUNC            shift and go to state 58


state 48

    (6) start -> VOID FUNC . START startscope_action LEFTPAR RIGHTPAR block

    START           shift and go to state 59


state 49

    (5) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 60


state 50

    (8) vars -> VAR recids . COLON type EQUAL expression SEMICOLON vars
    (9) vars -> VAR recids . COLON type EQUAL expression SEMICOLON
    (10) vars -> VAR recids . COLON type SEMICOLON vars
    (11) vars -> VAR recids . COLON type SEMICOLON

    COLON           shift and go to state 61


state 51

    (12) recids -> ID .
    (13) recids -> ID . COMMA recids

    COLON           reduce using rule 12 (recids -> ID .)
    COMMA           shift and go to state 62


state 52

    (54) function -> type FUNC ID startscope_action LEFTPAR . recparams RIGHTPAR block
    (55) function -> type FUNC ID startscope_action LEFTPAR . RIGHTPAR block
    (59) recparams -> . ID COLON type
    (60) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 65
    ID              shift and go to state 63

    recparams                      shift and go to state 64

state 53

    (56) function -> VOID FUNC ID startscope_action LEFTPAR . recparams RIGHTPAR block
    (57) function -> VOID FUNC ID startscope_action LEFTPAR . RIGHTPAR block
    (59) recparams -> . ID COLON type
    (60) recparams -> . ID COLON type COMMA recparams

    RIGHTPAR        shift and go to state 67
    ID              shift and go to state 63

    recparams                      shift and go to state 66

state 54

    (1) capi -> global recfunc MAIN COLON LEFTKEY start . run RIGHTKEY SEMICOLON
    (7) run -> . VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block

    VOID            shift and go to state 47

    run                            shift and go to state 68

state 55

    (3) capi -> global MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 69


state 56

    (2) capi -> recfunc MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 70


state 57

    (4) capi -> MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 71


state 58

    (7) run -> VOID FUNC . RUN startscope_action LEFTPAR RIGHTPAR block

    RUN             shift and go to state 72


state 59

    (6) start -> VOID FUNC START . startscope_action LEFTPAR RIGHTPAR block
    (58) startscope_action -> .

    LEFTPAR         reduce using rule 58 (startscope_action -> .)

    startscope_action              shift and go to state 73

state 60

    (5) global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .

    MAIN            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    VOID            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 5 (global -> GLOBAL COLON LEFTKEY vars RIGHTKEY SEMICOLON .)


state 61

    (8) vars -> VAR recids COLON . type EQUAL expression SEMICOLON vars
    (9) vars -> VAR recids COLON . type EQUAL expression SEMICOLON
    (10) vars -> VAR recids COLON . type SEMICOLON vars
    (11) vars -> VAR recids COLON . type SEMICOLON
    (88) type -> . primitivetype
    (89) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (90) primitivetype -> . TINT
    (91) primitivetype -> . TFLOAT
    (92) primitivetype -> . TSTRING
    (93) primitivetype -> . TBOOL
    (94) primitivetype -> . TOBJECT

    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    type                           shift and go to state 74
    primitivetype                  shift and go to state 9

state 62

    (13) recids -> ID COMMA . recids
    (12) recids -> . ID
    (13) recids -> . ID COMMA recids

    ID              shift and go to state 51

    recids                         shift and go to state 75

state 63

    (59) recparams -> ID . COLON type
    (60) recparams -> ID . COLON type COMMA recparams

    COLON           shift and go to state 76


state 64

    (54) function -> type FUNC ID startscope_action LEFTPAR recparams . RIGHTPAR block

    RIGHTPAR        shift and go to state 77


state 65

    (55) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 78

state 66

    (56) function -> VOID FUNC ID startscope_action LEFTPAR recparams . RIGHTPAR block

    RIGHTPAR        shift and go to state 80


state 67

    (57) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 81

state 68

    (1) capi -> global recfunc MAIN COLON LEFTKEY start run . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 82


state 69

    (3) capi -> global MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 83


state 70

    (2) capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 84


state 71

    (4) capi -> MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 4 (capi -> MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 72

    (7) run -> VOID FUNC RUN . startscope_action LEFTPAR RIGHTPAR block
    (58) startscope_action -> .

    LEFTPAR         reduce using rule 58 (startscope_action -> .)

    startscope_action              shift and go to state 85

state 73

    (6) start -> VOID FUNC START startscope_action . LEFTPAR RIGHTPAR block

    LEFTPAR         shift and go to state 86


state 74

    (8) vars -> VAR recids COLON type . EQUAL expression SEMICOLON vars
    (9) vars -> VAR recids COLON type . EQUAL expression SEMICOLON
    (10) vars -> VAR recids COLON type . SEMICOLON vars
    (11) vars -> VAR recids COLON type . SEMICOLON

    EQUAL           shift and go to state 87
    SEMICOLON       shift and go to state 88


state 75

    (13) recids -> ID COMMA recids .

    COLON           reduce using rule 13 (recids -> ID COMMA recids .)


state 76

    (59) recparams -> ID COLON . type
    (60) recparams -> ID COLON . type COMMA recparams
    (88) type -> . primitivetype
    (89) type -> . LIST LEFTHAT primitivetype RIGHTHAT
    (90) primitivetype -> . TINT
    (91) primitivetype -> . TFLOAT
    (92) primitivetype -> . TSTRING
    (93) primitivetype -> . TBOOL
    (94) primitivetype -> . TOBJECT

    LIST            shift and go to state 10
    TINT            shift and go to state 11
    TFLOAT          shift and go to state 12
    TSTRING         shift and go to state 13
    TBOOL           shift and go to state 14
    TOBJECT         shift and go to state 15

    type                           shift and go to state 89
    primitivetype                  shift and go to state 9

state 77

    (54) function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 90

state 78

    (55) function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .

    VOID            reduce using rule 55 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    LIST            reduce using rule 55 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TINT            reduce using rule 55 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TFLOAT          reduce using rule 55 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TSTRING         reduce using rule 55 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TBOOL           reduce using rule 55 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TOBJECT         reduce using rule 55 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    MAIN            reduce using rule 55 (function -> type FUNC ID startscope_action LEFTPAR RIGHTPAR block .)


state 79

    (14) block -> COLON . LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> COLON . LEFTKEY RIGHTKEY SEMICOLON

    LEFTKEY         shift and go to state 91


state 80

    (56) function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 92

state 81

    (57) function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .

    VOID            reduce using rule 57 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    LIST            reduce using rule 57 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TINT            reduce using rule 57 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TFLOAT          reduce using rule 57 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TSTRING         reduce using rule 57 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TBOOL           reduce using rule 57 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    TOBJECT         reduce using rule 57 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)
    MAIN            reduce using rule 57 (function -> VOID FUNC ID startscope_action LEFTPAR RIGHTPAR block .)


state 82

    (1) capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 93


state 83

    (3) capi -> global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 3 (capi -> global MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 84

    (2) capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 2 (capi -> recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 85

    (7) run -> VOID FUNC RUN startscope_action . LEFTPAR RIGHTPAR block

    LEFTPAR         shift and go to state 94


state 86

    (6) start -> VOID FUNC START startscope_action LEFTPAR . RIGHTPAR block

    RIGHTPAR        shift and go to state 95


state 87

    (8) vars -> VAR recids COLON type EQUAL . expression SEMICOLON vars
    (9) vars -> VAR recids COLON type EQUAL . expression SEMICOLON
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 96
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 88

    (10) vars -> VAR recids COLON type SEMICOLON . vars
    (11) vars -> VAR recids COLON type SEMICOLON .
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    ID              reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    IF              reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    PRINT           reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    RETURN          reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    FOR             reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    WHILE           reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    DRAW            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SIZE            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    HEAD            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    TAIL            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    LAST            reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SET_TITLE       reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SET_DIMENSION   reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    SET_COLOR       reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_OBJECT   reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    CREATE_TEXT     reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 11 (vars -> VAR recids COLON type SEMICOLON .) ]

    vars                           shift and go to state 132

state 89

    (59) recparams -> ID COLON type .
    (60) recparams -> ID COLON type . COMMA recparams

    RIGHTPAR        reduce using rule 59 (recparams -> ID COLON type .)
    COMMA           shift and go to state 133


state 90

    (54) function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .

    VOID            reduce using rule 54 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    LIST            reduce using rule 54 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TINT            reduce using rule 54 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TFLOAT          reduce using rule 54 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TSTRING         reduce using rule 54 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TBOOL           reduce using rule 54 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TOBJECT         reduce using rule 54 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    MAIN            reduce using rule 54 (function -> type FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)


state 91

    (14) block -> COLON LEFTKEY . recstatement RIGHTKEY SEMICOLON
    (15) block -> COLON LEFTKEY . RIGHTKEY SEMICOLON
    (16) recstatement -> . statement recstatement
    (17) recstatement -> . statement
    (18) statement -> . assign SEMICOLON
    (19) statement -> . condition
    (20) statement -> . vars
    (21) statement -> . loop
    (22) statement -> . write SEMICOLON
    (23) statement -> . return SEMICOLON
    (24) statement -> . functioncall SEMICOLON
    (25) statement -> . nestedassign SEMICOLON
    (26) statement -> . specialfunction SEMICOLON
    (47) assign -> . ID EQUAL expression
    (48) condition -> . IF startscope_action LEFTPAR expression RIGHTPAR block
    (49) condition -> . IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON
    (50) loop -> . for
    (51) loop -> . while
    (63) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (68) return -> . RETURN expression
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (97) nestedassign -> . nestedvalue EQUAL expression
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (52) for -> . FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block
    (53) while -> . WHILE startscope_action LEFTPAR expression RIGHTPAR block
    (96) nestedvalue -> . ID DOT ID
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        shift and go to state 135
    ID              shift and go to state 146
    IF              shift and go to state 147
    VAR             shift and go to state 39
    PRINT           shift and go to state 150
    RETURN          shift and go to state 151
    FOR             shift and go to state 153
    WHILE           shift and go to state 154
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    recstatement                   shift and go to state 134
    statement                      shift and go to state 136
    assign                         shift and go to state 137
    condition                      shift and go to state 138
    vars                           shift and go to state 139
    loop                           shift and go to state 140
    write                          shift and go to state 141
    return                         shift and go to state 142
    functioncall                   shift and go to state 143
    nestedassign                   shift and go to state 144
    specialfunction                shift and go to state 145
    for                            shift and go to state 148
    while                          shift and go to state 149
    nestedvalue                    shift and go to state 152
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 92

    (56) function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .

    VOID            reduce using rule 56 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    LIST            reduce using rule 56 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TINT            reduce using rule 56 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TFLOAT          reduce using rule 56 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TSTRING         reduce using rule 56 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TBOOL           reduce using rule 56 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    TOBJECT         reduce using rule 56 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)
    MAIN            reduce using rule 56 (function -> VOID FUNC ID startscope_action LEFTPAR recparams RIGHTPAR block .)


state 93

    (1) capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .

    $end            reduce using rule 1 (capi -> global recfunc MAIN COLON LEFTKEY start run RIGHTKEY SEMICOLON .)


state 94

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR . RIGHTPAR block

    RIGHTPAR        shift and go to state 155


state 95

    (6) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 156

state 96

    (8) vars -> VAR recids COLON type EQUAL expression . SEMICOLON vars
    (9) vars -> VAR recids COLON type EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 157


state 97

    (73) expression -> exp . RELOP exp
    (74) expression -> exp . LOGIC exp
    (75) expression -> exp .

    RELOP           shift and go to state 158
    LOGIC           shift and go to state 159
    SEMICOLON       reduce using rule 75 (expression -> exp .)
    RIGHTPAR        reduce using rule 75 (expression -> exp .)
    COMMA           reduce using rule 75 (expression -> exp .)
    RIGHTBRACKET    reduce using rule 75 (expression -> exp .)


state 98

    (76) exp -> term . exp_action recexp
    (77) exp -> term . exp_action
    (78) exp_action -> .

    EX              reduce using rule 78 (exp_action -> .)
    RELOP           reduce using rule 78 (exp_action -> .)
    LOGIC           reduce using rule 78 (exp_action -> .)
    SEMICOLON       reduce using rule 78 (exp_action -> .)
    RIGHTPAR        reduce using rule 78 (exp_action -> .)
    COMMA           reduce using rule 78 (exp_action -> .)
    RIGHTBRACKET    reduce using rule 78 (exp_action -> .)

    exp_action                     shift and go to state 160

state 99

    (80) term -> factor . term_action recterm
    (81) term -> factor . term_action
    (82) term_action -> .

    TERMS           reduce using rule 82 (term_action -> .)
    EX              reduce using rule 82 (term_action -> .)
    RELOP           reduce using rule 82 (term_action -> .)
    LOGIC           reduce using rule 82 (term_action -> .)
    SEMICOLON       reduce using rule 82 (term_action -> .)
    RIGHTPAR        reduce using rule 82 (term_action -> .)
    COMMA           reduce using rule 82 (term_action -> .)
    RIGHTBRACKET    reduce using rule 82 (term_action -> .)

    term_action                    shift and go to state 161

state 100

    (85) factor -> LEFTPAR . expression RIGHTPAR
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 162
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 101

    (86) factor -> EX . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    cte                            shift and go to state 163
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 102

    (87) factor -> cte .

    TERMS           reduce using rule 87 (factor -> cte .)
    EX              reduce using rule 87 (factor -> cte .)
    RELOP           reduce using rule 87 (factor -> cte .)
    LOGIC           reduce using rule 87 (factor -> cte .)
    SEMICOLON       reduce using rule 87 (factor -> cte .)
    RIGHTPAR        reduce using rule 87 (factor -> cte .)
    COMMA           reduce using rule 87 (factor -> cte .)
    RIGHTBRACKET    reduce using rule 87 (factor -> cte .)


state 103

    (98) cte -> STRING .

    TERMS           reduce using rule 98 (cte -> STRING .)
    EX              reduce using rule 98 (cte -> STRING .)
    RELOP           reduce using rule 98 (cte -> STRING .)
    LOGIC           reduce using rule 98 (cte -> STRING .)
    SEMICOLON       reduce using rule 98 (cte -> STRING .)
    RIGHTPAR        reduce using rule 98 (cte -> STRING .)
    COMMA           reduce using rule 98 (cte -> STRING .)
    RIGHTBRACKET    reduce using rule 98 (cte -> STRING .)


state 104

    (99) cte -> ID .
    (96) nestedvalue -> ID . DOT ID
    (69) functioncall -> ID . LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> ID . LEFTPAR RIGHTPAR
    (95) listaccess -> ID . LEFTBRACKET expression RIGHTBRACKET SEMICOLON

    TERMS           reduce using rule 99 (cte -> ID .)
    EX              reduce using rule 99 (cte -> ID .)
    RELOP           reduce using rule 99 (cte -> ID .)
    LOGIC           reduce using rule 99 (cte -> ID .)
    SEMICOLON       reduce using rule 99 (cte -> ID .)
    RIGHTPAR        reduce using rule 99 (cte -> ID .)
    COMMA           reduce using rule 99 (cte -> ID .)
    RIGHTBRACKET    reduce using rule 99 (cte -> ID .)
    DOT             shift and go to state 164
    LEFTPAR         shift and go to state 165
    LEFTBRACKET     shift and go to state 166


state 105

    (100) cte -> INT .

    TERMS           reduce using rule 100 (cte -> INT .)
    EX              reduce using rule 100 (cte -> INT .)
    RELOP           reduce using rule 100 (cte -> INT .)
    LOGIC           reduce using rule 100 (cte -> INT .)
    SEMICOLON       reduce using rule 100 (cte -> INT .)
    RIGHTPAR        reduce using rule 100 (cte -> INT .)
    COMMA           reduce using rule 100 (cte -> INT .)
    RIGHTBRACKET    reduce using rule 100 (cte -> INT .)


state 106

    (101) cte -> FLOAT .

    TERMS           reduce using rule 101 (cte -> FLOAT .)
    EX              reduce using rule 101 (cte -> FLOAT .)
    RELOP           reduce using rule 101 (cte -> FLOAT .)
    LOGIC           reduce using rule 101 (cte -> FLOAT .)
    SEMICOLON       reduce using rule 101 (cte -> FLOAT .)
    RIGHTPAR        reduce using rule 101 (cte -> FLOAT .)
    COMMA           reduce using rule 101 (cte -> FLOAT .)
    RIGHTBRACKET    reduce using rule 101 (cte -> FLOAT .)


state 107

    (102) cte -> BOOL .

    TERMS           reduce using rule 102 (cte -> BOOL .)
    EX              reduce using rule 102 (cte -> BOOL .)
    RELOP           reduce using rule 102 (cte -> BOOL .)
    LOGIC           reduce using rule 102 (cte -> BOOL .)
    SEMICOLON       reduce using rule 102 (cte -> BOOL .)
    RIGHTPAR        reduce using rule 102 (cte -> BOOL .)
    COMMA           reduce using rule 102 (cte -> BOOL .)
    RIGHTBRACKET    reduce using rule 102 (cte -> BOOL .)


state 108

    (103) cte -> nestedvalue .

    TERMS           reduce using rule 103 (cte -> nestedvalue .)
    EX              reduce using rule 103 (cte -> nestedvalue .)
    RELOP           reduce using rule 103 (cte -> nestedvalue .)
    LOGIC           reduce using rule 103 (cte -> nestedvalue .)
    SEMICOLON       reduce using rule 103 (cte -> nestedvalue .)
    RIGHTPAR        reduce using rule 103 (cte -> nestedvalue .)
    COMMA           reduce using rule 103 (cte -> nestedvalue .)
    RIGHTBRACKET    reduce using rule 103 (cte -> nestedvalue .)


state 109

    (104) cte -> functioncall .

    TERMS           reduce using rule 104 (cte -> functioncall .)
    EX              reduce using rule 104 (cte -> functioncall .)
    RELOP           reduce using rule 104 (cte -> functioncall .)
    LOGIC           reduce using rule 104 (cte -> functioncall .)
    SEMICOLON       reduce using rule 104 (cte -> functioncall .)
    RIGHTPAR        reduce using rule 104 (cte -> functioncall .)
    COMMA           reduce using rule 104 (cte -> functioncall .)
    RIGHTBRACKET    reduce using rule 104 (cte -> functioncall .)


state 110

    (105) cte -> listaccess .

    TERMS           reduce using rule 105 (cte -> listaccess .)
    EX              reduce using rule 105 (cte -> listaccess .)
    RELOP           reduce using rule 105 (cte -> listaccess .)
    LOGIC           reduce using rule 105 (cte -> listaccess .)
    SEMICOLON       reduce using rule 105 (cte -> listaccess .)
    RIGHTPAR        reduce using rule 105 (cte -> listaccess .)
    COMMA           reduce using rule 105 (cte -> listaccess .)
    RIGHTBRACKET    reduce using rule 105 (cte -> listaccess .)


state 111

    (106) cte -> specialfunction .

    TERMS           reduce using rule 106 (cte -> specialfunction .)
    EX              reduce using rule 106 (cte -> specialfunction .)
    RELOP           reduce using rule 106 (cte -> specialfunction .)
    LOGIC           reduce using rule 106 (cte -> specialfunction .)
    SEMICOLON       reduce using rule 106 (cte -> specialfunction .)
    RIGHTPAR        reduce using rule 106 (cte -> specialfunction .)
    COMMA           reduce using rule 106 (cte -> specialfunction .)
    RIGHTBRACKET    reduce using rule 106 (cte -> specialfunction .)


state 112

    (27) specialfunction -> draw .

    TERMS           reduce using rule 27 (specialfunction -> draw .)
    EX              reduce using rule 27 (specialfunction -> draw .)
    RELOP           reduce using rule 27 (specialfunction -> draw .)
    LOGIC           reduce using rule 27 (specialfunction -> draw .)
    SEMICOLON       reduce using rule 27 (specialfunction -> draw .)
    RIGHTPAR        reduce using rule 27 (specialfunction -> draw .)
    COMMA           reduce using rule 27 (specialfunction -> draw .)
    RIGHTBRACKET    reduce using rule 27 (specialfunction -> draw .)


state 113

    (28) specialfunction -> size .

    TERMS           reduce using rule 28 (specialfunction -> size .)
    EX              reduce using rule 28 (specialfunction -> size .)
    RELOP           reduce using rule 28 (specialfunction -> size .)
    LOGIC           reduce using rule 28 (specialfunction -> size .)
    SEMICOLON       reduce using rule 28 (specialfunction -> size .)
    RIGHTPAR        reduce using rule 28 (specialfunction -> size .)
    COMMA           reduce using rule 28 (specialfunction -> size .)
    RIGHTBRACKET    reduce using rule 28 (specialfunction -> size .)


state 114

    (29) specialfunction -> head .

    TERMS           reduce using rule 29 (specialfunction -> head .)
    EX              reduce using rule 29 (specialfunction -> head .)
    RELOP           reduce using rule 29 (specialfunction -> head .)
    LOGIC           reduce using rule 29 (specialfunction -> head .)
    SEMICOLON       reduce using rule 29 (specialfunction -> head .)
    RIGHTPAR        reduce using rule 29 (specialfunction -> head .)
    COMMA           reduce using rule 29 (specialfunction -> head .)
    RIGHTBRACKET    reduce using rule 29 (specialfunction -> head .)


state 115

    (30) specialfunction -> tail .

    TERMS           reduce using rule 30 (specialfunction -> tail .)
    EX              reduce using rule 30 (specialfunction -> tail .)
    RELOP           reduce using rule 30 (specialfunction -> tail .)
    LOGIC           reduce using rule 30 (specialfunction -> tail .)
    SEMICOLON       reduce using rule 30 (specialfunction -> tail .)
    RIGHTPAR        reduce using rule 30 (specialfunction -> tail .)
    COMMA           reduce using rule 30 (specialfunction -> tail .)
    RIGHTBRACKET    reduce using rule 30 (specialfunction -> tail .)


state 116

    (31) specialfunction -> last .

    TERMS           reduce using rule 31 (specialfunction -> last .)
    EX              reduce using rule 31 (specialfunction -> last .)
    RELOP           reduce using rule 31 (specialfunction -> last .)
    LOGIC           reduce using rule 31 (specialfunction -> last .)
    SEMICOLON       reduce using rule 31 (specialfunction -> last .)
    RIGHTPAR        reduce using rule 31 (specialfunction -> last .)
    COMMA           reduce using rule 31 (specialfunction -> last .)
    RIGHTBRACKET    reduce using rule 31 (specialfunction -> last .)


state 117

    (32) specialfunction -> set_title .

    TERMS           reduce using rule 32 (specialfunction -> set_title .)
    EX              reduce using rule 32 (specialfunction -> set_title .)
    RELOP           reduce using rule 32 (specialfunction -> set_title .)
    LOGIC           reduce using rule 32 (specialfunction -> set_title .)
    SEMICOLON       reduce using rule 32 (specialfunction -> set_title .)
    RIGHTPAR        reduce using rule 32 (specialfunction -> set_title .)
    COMMA           reduce using rule 32 (specialfunction -> set_title .)
    RIGHTBRACKET    reduce using rule 32 (specialfunction -> set_title .)


state 118

    (33) specialfunction -> set_dimension .

    TERMS           reduce using rule 33 (specialfunction -> set_dimension .)
    EX              reduce using rule 33 (specialfunction -> set_dimension .)
    RELOP           reduce using rule 33 (specialfunction -> set_dimension .)
    LOGIC           reduce using rule 33 (specialfunction -> set_dimension .)
    SEMICOLON       reduce using rule 33 (specialfunction -> set_dimension .)
    RIGHTPAR        reduce using rule 33 (specialfunction -> set_dimension .)
    COMMA           reduce using rule 33 (specialfunction -> set_dimension .)
    RIGHTBRACKET    reduce using rule 33 (specialfunction -> set_dimension .)


state 119

    (34) specialfunction -> set_color .

    TERMS           reduce using rule 34 (specialfunction -> set_color .)
    EX              reduce using rule 34 (specialfunction -> set_color .)
    RELOP           reduce using rule 34 (specialfunction -> set_color .)
    LOGIC           reduce using rule 34 (specialfunction -> set_color .)
    SEMICOLON       reduce using rule 34 (specialfunction -> set_color .)
    RIGHTPAR        reduce using rule 34 (specialfunction -> set_color .)
    COMMA           reduce using rule 34 (specialfunction -> set_color .)
    RIGHTBRACKET    reduce using rule 34 (specialfunction -> set_color .)


state 120

    (35) specialfunction -> create_object .

    TERMS           reduce using rule 35 (specialfunction -> create_object .)
    EX              reduce using rule 35 (specialfunction -> create_object .)
    RELOP           reduce using rule 35 (specialfunction -> create_object .)
    LOGIC           reduce using rule 35 (specialfunction -> create_object .)
    SEMICOLON       reduce using rule 35 (specialfunction -> create_object .)
    RIGHTPAR        reduce using rule 35 (specialfunction -> create_object .)
    COMMA           reduce using rule 35 (specialfunction -> create_object .)
    RIGHTBRACKET    reduce using rule 35 (specialfunction -> create_object .)


state 121

    (36) specialfunction -> create_text .

    TERMS           reduce using rule 36 (specialfunction -> create_text .)
    EX              reduce using rule 36 (specialfunction -> create_text .)
    RELOP           reduce using rule 36 (specialfunction -> create_text .)
    LOGIC           reduce using rule 36 (specialfunction -> create_text .)
    SEMICOLON       reduce using rule 36 (specialfunction -> create_text .)
    RIGHTPAR        reduce using rule 36 (specialfunction -> create_text .)
    COMMA           reduce using rule 36 (specialfunction -> create_text .)
    RIGHTBRACKET    reduce using rule 36 (specialfunction -> create_text .)


state 122

    (37) draw -> DRAW . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 167


state 123

    (38) size -> SIZE . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 168


state 124

    (39) head -> HEAD . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 169


state 125

    (40) tail -> TAIL . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 170


state 126

    (41) last -> LAST . LEFTPAR RIGHTPAR

    LEFTPAR         shift and go to state 171


state 127

    (42) set_title -> SET_TITLE . LEFTPAR expression RIGHTPAR

    LEFTPAR         shift and go to state 172


state 128

    (43) set_dimension -> SET_DIMENSION . LEFTPAR expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 173


state 129

    (44) set_color -> SET_COLOR . LEFTPAR expression COMMA expression COMMA expression RIGHTPAR

    LEFTPAR         shift and go to state 174


state 130

    (45) create_object -> CREATE_OBJECT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 175


state 131

    (46) create_text -> CREATE_TEXT . LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 176


state 132

    (10) vars -> VAR recids COLON type SEMICOLON vars .

    RIGHTKEY        reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    ID              reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    IF              reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    VAR             reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    PRINT           reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    RETURN          reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    FOR             reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    WHILE           reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    DRAW            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SIZE            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    HEAD            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    TAIL            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    LAST            reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_TITLE       reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    SET_COLOR       reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 10 (vars -> VAR recids COLON type SEMICOLON vars .)


state 133

    (60) recparams -> ID COLON type COMMA . recparams
    (59) recparams -> . ID COLON type
    (60) recparams -> . ID COLON type COMMA recparams

    ID              shift and go to state 63

    recparams                      shift and go to state 177

state 134

    (14) block -> COLON LEFTKEY recstatement . RIGHTKEY SEMICOLON

    RIGHTKEY        shift and go to state 178


state 135

    (15) block -> COLON LEFTKEY RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 179


state 136

    (16) recstatement -> statement . recstatement
    (17) recstatement -> statement .
    (16) recstatement -> . statement recstatement
    (17) recstatement -> . statement
    (18) statement -> . assign SEMICOLON
    (19) statement -> . condition
    (20) statement -> . vars
    (21) statement -> . loop
    (22) statement -> . write SEMICOLON
    (23) statement -> . return SEMICOLON
    (24) statement -> . functioncall SEMICOLON
    (25) statement -> . nestedassign SEMICOLON
    (26) statement -> . specialfunction SEMICOLON
    (47) assign -> . ID EQUAL expression
    (48) condition -> . IF startscope_action LEFTPAR expression RIGHTPAR block
    (49) condition -> . IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON
    (50) loop -> . for
    (51) loop -> . while
    (63) write -> . PRINT LEFTPAR recwrite RIGHTPAR
    (68) return -> . RETURN expression
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (97) nestedassign -> . nestedvalue EQUAL expression
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (52) for -> . FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block
    (53) while -> . WHILE startscope_action LEFTPAR expression RIGHTPAR block
    (96) nestedvalue -> . ID DOT ID
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTKEY        reduce using rule 17 (recstatement -> statement .)
    ID              shift and go to state 146
    IF              shift and go to state 147
    VAR             shift and go to state 39
    PRINT           shift and go to state 150
    RETURN          shift and go to state 151
    FOR             shift and go to state 153
    WHILE           shift and go to state 154
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    statement                      shift and go to state 136
    recstatement                   shift and go to state 180
    assign                         shift and go to state 137
    condition                      shift and go to state 138
    vars                           shift and go to state 139
    loop                           shift and go to state 140
    write                          shift and go to state 141
    return                         shift and go to state 142
    functioncall                   shift and go to state 143
    nestedassign                   shift and go to state 144
    specialfunction                shift and go to state 145
    for                            shift and go to state 148
    while                          shift and go to state 149
    nestedvalue                    shift and go to state 152
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 137

    (18) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 181


state 138

    (19) statement -> condition .

    ID              reduce using rule 19 (statement -> condition .)
    IF              reduce using rule 19 (statement -> condition .)
    VAR             reduce using rule 19 (statement -> condition .)
    PRINT           reduce using rule 19 (statement -> condition .)
    RETURN          reduce using rule 19 (statement -> condition .)
    FOR             reduce using rule 19 (statement -> condition .)
    WHILE           reduce using rule 19 (statement -> condition .)
    DRAW            reduce using rule 19 (statement -> condition .)
    SIZE            reduce using rule 19 (statement -> condition .)
    HEAD            reduce using rule 19 (statement -> condition .)
    TAIL            reduce using rule 19 (statement -> condition .)
    LAST            reduce using rule 19 (statement -> condition .)
    SET_TITLE       reduce using rule 19 (statement -> condition .)
    SET_DIMENSION   reduce using rule 19 (statement -> condition .)
    SET_COLOR       reduce using rule 19 (statement -> condition .)
    CREATE_OBJECT   reduce using rule 19 (statement -> condition .)
    CREATE_TEXT     reduce using rule 19 (statement -> condition .)
    RIGHTKEY        reduce using rule 19 (statement -> condition .)


state 139

    (20) statement -> vars .

    ID              reduce using rule 20 (statement -> vars .)
    IF              reduce using rule 20 (statement -> vars .)
    VAR             reduce using rule 20 (statement -> vars .)
    PRINT           reduce using rule 20 (statement -> vars .)
    RETURN          reduce using rule 20 (statement -> vars .)
    FOR             reduce using rule 20 (statement -> vars .)
    WHILE           reduce using rule 20 (statement -> vars .)
    DRAW            reduce using rule 20 (statement -> vars .)
    SIZE            reduce using rule 20 (statement -> vars .)
    HEAD            reduce using rule 20 (statement -> vars .)
    TAIL            reduce using rule 20 (statement -> vars .)
    LAST            reduce using rule 20 (statement -> vars .)
    SET_TITLE       reduce using rule 20 (statement -> vars .)
    SET_DIMENSION   reduce using rule 20 (statement -> vars .)
    SET_COLOR       reduce using rule 20 (statement -> vars .)
    CREATE_OBJECT   reduce using rule 20 (statement -> vars .)
    CREATE_TEXT     reduce using rule 20 (statement -> vars .)
    RIGHTKEY        reduce using rule 20 (statement -> vars .)


state 140

    (21) statement -> loop .

    ID              reduce using rule 21 (statement -> loop .)
    IF              reduce using rule 21 (statement -> loop .)
    VAR             reduce using rule 21 (statement -> loop .)
    PRINT           reduce using rule 21 (statement -> loop .)
    RETURN          reduce using rule 21 (statement -> loop .)
    FOR             reduce using rule 21 (statement -> loop .)
    WHILE           reduce using rule 21 (statement -> loop .)
    DRAW            reduce using rule 21 (statement -> loop .)
    SIZE            reduce using rule 21 (statement -> loop .)
    HEAD            reduce using rule 21 (statement -> loop .)
    TAIL            reduce using rule 21 (statement -> loop .)
    LAST            reduce using rule 21 (statement -> loop .)
    SET_TITLE       reduce using rule 21 (statement -> loop .)
    SET_DIMENSION   reduce using rule 21 (statement -> loop .)
    SET_COLOR       reduce using rule 21 (statement -> loop .)
    CREATE_OBJECT   reduce using rule 21 (statement -> loop .)
    CREATE_TEXT     reduce using rule 21 (statement -> loop .)
    RIGHTKEY        reduce using rule 21 (statement -> loop .)


state 141

    (22) statement -> write . SEMICOLON

    SEMICOLON       shift and go to state 182


state 142

    (23) statement -> return . SEMICOLON

    SEMICOLON       shift and go to state 183


state 143

    (24) statement -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 184


state 144

    (25) statement -> nestedassign . SEMICOLON

    SEMICOLON       shift and go to state 185


state 145

    (26) statement -> specialfunction . SEMICOLON

    SEMICOLON       shift and go to state 186


state 146

    (47) assign -> ID . EQUAL expression
    (69) functioncall -> ID . LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> ID . LEFTPAR RIGHTPAR
    (96) nestedvalue -> ID . DOT ID

    EQUAL           shift and go to state 187
    LEFTPAR         shift and go to state 165
    DOT             shift and go to state 164


state 147

    (48) condition -> IF . startscope_action LEFTPAR expression RIGHTPAR block
    (49) condition -> IF . startscope_action LEFTPAR expression RIGHTPAR block ELSE block
    (58) startscope_action -> .

    LEFTPAR         reduce using rule 58 (startscope_action -> .)

    startscope_action              shift and go to state 188

state 148

    (50) loop -> for .

    ID              reduce using rule 50 (loop -> for .)
    IF              reduce using rule 50 (loop -> for .)
    VAR             reduce using rule 50 (loop -> for .)
    PRINT           reduce using rule 50 (loop -> for .)
    RETURN          reduce using rule 50 (loop -> for .)
    FOR             reduce using rule 50 (loop -> for .)
    WHILE           reduce using rule 50 (loop -> for .)
    DRAW            reduce using rule 50 (loop -> for .)
    SIZE            reduce using rule 50 (loop -> for .)
    HEAD            reduce using rule 50 (loop -> for .)
    TAIL            reduce using rule 50 (loop -> for .)
    LAST            reduce using rule 50 (loop -> for .)
    SET_TITLE       reduce using rule 50 (loop -> for .)
    SET_DIMENSION   reduce using rule 50 (loop -> for .)
    SET_COLOR       reduce using rule 50 (loop -> for .)
    CREATE_OBJECT   reduce using rule 50 (loop -> for .)
    CREATE_TEXT     reduce using rule 50 (loop -> for .)
    RIGHTKEY        reduce using rule 50 (loop -> for .)


state 149

    (51) loop -> while .

    ID              reduce using rule 51 (loop -> while .)
    IF              reduce using rule 51 (loop -> while .)
    VAR             reduce using rule 51 (loop -> while .)
    PRINT           reduce using rule 51 (loop -> while .)
    RETURN          reduce using rule 51 (loop -> while .)
    FOR             reduce using rule 51 (loop -> while .)
    WHILE           reduce using rule 51 (loop -> while .)
    DRAW            reduce using rule 51 (loop -> while .)
    SIZE            reduce using rule 51 (loop -> while .)
    HEAD            reduce using rule 51 (loop -> while .)
    TAIL            reduce using rule 51 (loop -> while .)
    LAST            reduce using rule 51 (loop -> while .)
    SET_TITLE       reduce using rule 51 (loop -> while .)
    SET_DIMENSION   reduce using rule 51 (loop -> while .)
    SET_COLOR       reduce using rule 51 (loop -> while .)
    CREATE_OBJECT   reduce using rule 51 (loop -> while .)
    CREATE_TEXT     reduce using rule 51 (loop -> while .)
    RIGHTKEY        reduce using rule 51 (loop -> while .)


state 150

    (63) write -> PRINT . LEFTPAR recwrite RIGHTPAR

    LEFTPAR         shift and go to state 189


state 151

    (68) return -> RETURN . expression
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 190
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 152

    (97) nestedassign -> nestedvalue . EQUAL expression

    EQUAL           shift and go to state 191


state 153

    (52) for -> FOR . startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block
    (58) startscope_action -> .

    LEFTPAR         reduce using rule 58 (startscope_action -> .)

    startscope_action              shift and go to state 192

state 154

    (53) while -> WHILE . startscope_action LEFTPAR expression RIGHTPAR block
    (58) startscope_action -> .

    LEFTPAR         reduce using rule 58 (startscope_action -> .)

    startscope_action              shift and go to state 193

state 155

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 194

state 156

    (6) start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR block .

    VOID            reduce using rule 6 (start -> VOID FUNC START startscope_action LEFTPAR RIGHTPAR block .)


state 157

    (8) vars -> VAR recids COLON type EQUAL expression SEMICOLON . vars
    (9) vars -> VAR recids COLON type EQUAL expression SEMICOLON .
    (8) vars -> . VAR recids COLON type EQUAL expression SEMICOLON vars
    (9) vars -> . VAR recids COLON type EQUAL expression SEMICOLON
    (10) vars -> . VAR recids COLON type SEMICOLON vars
    (11) vars -> . VAR recids COLON type SEMICOLON

  ! shift/reduce conflict for VAR resolved as shift
    RIGHTKEY        reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    IF              reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    PRINT           reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    RETURN          reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    FOR             reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    WHILE           reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    DRAW            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SIZE            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    HEAD            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    TAIL            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    LAST            reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_TITLE       reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_DIMENSION   reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    SET_COLOR       reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_OBJECT   reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    CREATE_TEXT     reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .)
    VAR             shift and go to state 39

  ! VAR             [ reduce using rule 9 (vars -> VAR recids COLON type EQUAL expression SEMICOLON .) ]

    vars                           shift and go to state 195

state 158

    (73) expression -> exp RELOP . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    exp                            shift and go to state 196
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 159

    (74) expression -> exp LOGIC . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    exp                            shift and go to state 197
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 160

    (76) exp -> term exp_action . recexp
    (77) exp -> term exp_action .
    (79) recexp -> . EX add_operator exp

    RELOP           reduce using rule 77 (exp -> term exp_action .)
    LOGIC           reduce using rule 77 (exp -> term exp_action .)
    SEMICOLON       reduce using rule 77 (exp -> term exp_action .)
    RIGHTPAR        reduce using rule 77 (exp -> term exp_action .)
    COMMA           reduce using rule 77 (exp -> term exp_action .)
    RIGHTBRACKET    reduce using rule 77 (exp -> term exp_action .)
    EX              shift and go to state 199

    recexp                         shift and go to state 198

state 161

    (80) term -> factor term_action . recterm
    (81) term -> factor term_action .
    (83) recterm -> . TERMS add_operator term

    EX              reduce using rule 81 (term -> factor term_action .)
    RELOP           reduce using rule 81 (term -> factor term_action .)
    LOGIC           reduce using rule 81 (term -> factor term_action .)
    SEMICOLON       reduce using rule 81 (term -> factor term_action .)
    RIGHTPAR        reduce using rule 81 (term -> factor term_action .)
    COMMA           reduce using rule 81 (term -> factor term_action .)
    RIGHTBRACKET    reduce using rule 81 (term -> factor term_action .)
    TERMS           shift and go to state 201

    recterm                        shift and go to state 200

state 162

    (85) factor -> LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 202


state 163

    (86) factor -> EX cte .

    TERMS           reduce using rule 86 (factor -> EX cte .)
    EX              reduce using rule 86 (factor -> EX cte .)
    RELOP           reduce using rule 86 (factor -> EX cte .)
    LOGIC           reduce using rule 86 (factor -> EX cte .)
    SEMICOLON       reduce using rule 86 (factor -> EX cte .)
    RIGHTPAR        reduce using rule 86 (factor -> EX cte .)
    COMMA           reduce using rule 86 (factor -> EX cte .)
    RIGHTBRACKET    reduce using rule 86 (factor -> EX cte .)


state 164

    (96) nestedvalue -> ID DOT . ID

    ID              shift and go to state 203


state 165

    (69) functioncall -> ID LEFTPAR . recfuncexp RIGHTPAR
    (70) functioncall -> ID LEFTPAR . RIGHTPAR
    (71) recfuncexp -> . expression COMMA recfuncexp
    (72) recfuncexp -> . expression
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    RIGHTPAR        shift and go to state 205
    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    recfuncexp                     shift and go to state 204
    expression                     shift and go to state 206
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 166

    (95) listaccess -> ID LEFTBRACKET . expression RIGHTBRACKET SEMICOLON
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 207
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 167

    (37) draw -> DRAW LEFTPAR . recfuncexp RIGHTPAR
    (71) recfuncexp -> . expression COMMA recfuncexp
    (72) recfuncexp -> . expression
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    recfuncexp                     shift and go to state 208
    expression                     shift and go to state 206
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 168

    (38) size -> SIZE LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 209


state 169

    (39) head -> HEAD LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 210


state 170

    (40) tail -> TAIL LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 211


state 171

    (41) last -> LAST LEFTPAR . RIGHTPAR

    RIGHTPAR        shift and go to state 212


state 172

    (42) set_title -> SET_TITLE LEFTPAR . expression RIGHTPAR
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 213
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 173

    (43) set_dimension -> SET_DIMENSION LEFTPAR . expression COMMA expression RIGHTPAR
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 214
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 174

    (44) set_color -> SET_COLOR LEFTPAR . expression COMMA expression COMMA expression RIGHTPAR
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 215
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 175

    (45) create_object -> CREATE_OBJECT LEFTPAR . recfuncexp RIGHTPAR
    (71) recfuncexp -> . expression COMMA recfuncexp
    (72) recfuncexp -> . expression
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    recfuncexp                     shift and go to state 216
    expression                     shift and go to state 206
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 176

    (46) create_text -> CREATE_TEXT LEFTPAR . recfuncexp RIGHTPAR
    (71) recfuncexp -> . expression COMMA recfuncexp
    (72) recfuncexp -> . expression
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    recfuncexp                     shift and go to state 217
    expression                     shift and go to state 206
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 177

    (60) recparams -> ID COLON type COMMA recparams .

    RIGHTPAR        reduce using rule 60 (recparams -> ID COLON type COMMA recparams .)


state 178

    (14) block -> COLON LEFTKEY recstatement RIGHTKEY . SEMICOLON

    SEMICOLON       shift and go to state 218


state 179

    (15) block -> COLON LEFTKEY RIGHTKEY SEMICOLON .

    VOID            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    ID              reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    IF              reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 15 (block -> COLON LEFTKEY RIGHTKEY SEMICOLON .)


state 180

    (16) recstatement -> statement recstatement .

    RIGHTKEY        reduce using rule 16 (recstatement -> statement recstatement .)


state 181

    (18) statement -> assign SEMICOLON .

    ID              reduce using rule 18 (statement -> assign SEMICOLON .)
    IF              reduce using rule 18 (statement -> assign SEMICOLON .)
    VAR             reduce using rule 18 (statement -> assign SEMICOLON .)
    PRINT           reduce using rule 18 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 18 (statement -> assign SEMICOLON .)
    FOR             reduce using rule 18 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 18 (statement -> assign SEMICOLON .)
    DRAW            reduce using rule 18 (statement -> assign SEMICOLON .)
    SIZE            reduce using rule 18 (statement -> assign SEMICOLON .)
    HEAD            reduce using rule 18 (statement -> assign SEMICOLON .)
    TAIL            reduce using rule 18 (statement -> assign SEMICOLON .)
    LAST            reduce using rule 18 (statement -> assign SEMICOLON .)
    SET_TITLE       reduce using rule 18 (statement -> assign SEMICOLON .)
    SET_DIMENSION   reduce using rule 18 (statement -> assign SEMICOLON .)
    SET_COLOR       reduce using rule 18 (statement -> assign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 18 (statement -> assign SEMICOLON .)
    CREATE_TEXT     reduce using rule 18 (statement -> assign SEMICOLON .)
    RIGHTKEY        reduce using rule 18 (statement -> assign SEMICOLON .)


state 182

    (22) statement -> write SEMICOLON .

    ID              reduce using rule 22 (statement -> write SEMICOLON .)
    IF              reduce using rule 22 (statement -> write SEMICOLON .)
    VAR             reduce using rule 22 (statement -> write SEMICOLON .)
    PRINT           reduce using rule 22 (statement -> write SEMICOLON .)
    RETURN          reduce using rule 22 (statement -> write SEMICOLON .)
    FOR             reduce using rule 22 (statement -> write SEMICOLON .)
    WHILE           reduce using rule 22 (statement -> write SEMICOLON .)
    DRAW            reduce using rule 22 (statement -> write SEMICOLON .)
    SIZE            reduce using rule 22 (statement -> write SEMICOLON .)
    HEAD            reduce using rule 22 (statement -> write SEMICOLON .)
    TAIL            reduce using rule 22 (statement -> write SEMICOLON .)
    LAST            reduce using rule 22 (statement -> write SEMICOLON .)
    SET_TITLE       reduce using rule 22 (statement -> write SEMICOLON .)
    SET_DIMENSION   reduce using rule 22 (statement -> write SEMICOLON .)
    SET_COLOR       reduce using rule 22 (statement -> write SEMICOLON .)
    CREATE_OBJECT   reduce using rule 22 (statement -> write SEMICOLON .)
    CREATE_TEXT     reduce using rule 22 (statement -> write SEMICOLON .)
    RIGHTKEY        reduce using rule 22 (statement -> write SEMICOLON .)


state 183

    (23) statement -> return SEMICOLON .

    ID              reduce using rule 23 (statement -> return SEMICOLON .)
    IF              reduce using rule 23 (statement -> return SEMICOLON .)
    VAR             reduce using rule 23 (statement -> return SEMICOLON .)
    PRINT           reduce using rule 23 (statement -> return SEMICOLON .)
    RETURN          reduce using rule 23 (statement -> return SEMICOLON .)
    FOR             reduce using rule 23 (statement -> return SEMICOLON .)
    WHILE           reduce using rule 23 (statement -> return SEMICOLON .)
    DRAW            reduce using rule 23 (statement -> return SEMICOLON .)
    SIZE            reduce using rule 23 (statement -> return SEMICOLON .)
    HEAD            reduce using rule 23 (statement -> return SEMICOLON .)
    TAIL            reduce using rule 23 (statement -> return SEMICOLON .)
    LAST            reduce using rule 23 (statement -> return SEMICOLON .)
    SET_TITLE       reduce using rule 23 (statement -> return SEMICOLON .)
    SET_DIMENSION   reduce using rule 23 (statement -> return SEMICOLON .)
    SET_COLOR       reduce using rule 23 (statement -> return SEMICOLON .)
    CREATE_OBJECT   reduce using rule 23 (statement -> return SEMICOLON .)
    CREATE_TEXT     reduce using rule 23 (statement -> return SEMICOLON .)
    RIGHTKEY        reduce using rule 23 (statement -> return SEMICOLON .)


state 184

    (24) statement -> functioncall SEMICOLON .

    ID              reduce using rule 24 (statement -> functioncall SEMICOLON .)
    IF              reduce using rule 24 (statement -> functioncall SEMICOLON .)
    VAR             reduce using rule 24 (statement -> functioncall SEMICOLON .)
    PRINT           reduce using rule 24 (statement -> functioncall SEMICOLON .)
    RETURN          reduce using rule 24 (statement -> functioncall SEMICOLON .)
    FOR             reduce using rule 24 (statement -> functioncall SEMICOLON .)
    WHILE           reduce using rule 24 (statement -> functioncall SEMICOLON .)
    DRAW            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SIZE            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    HEAD            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    TAIL            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    LAST            reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SET_TITLE       reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SET_DIMENSION   reduce using rule 24 (statement -> functioncall SEMICOLON .)
    SET_COLOR       reduce using rule 24 (statement -> functioncall SEMICOLON .)
    CREATE_OBJECT   reduce using rule 24 (statement -> functioncall SEMICOLON .)
    CREATE_TEXT     reduce using rule 24 (statement -> functioncall SEMICOLON .)
    RIGHTKEY        reduce using rule 24 (statement -> functioncall SEMICOLON .)


state 185

    (25) statement -> nestedassign SEMICOLON .

    ID              reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    IF              reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    VAR             reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    PRINT           reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    RETURN          reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    FOR             reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    WHILE           reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    DRAW            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SIZE            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    HEAD            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    TAIL            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    LAST            reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SET_TITLE       reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SET_DIMENSION   reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    SET_COLOR       reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    CREATE_OBJECT   reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    CREATE_TEXT     reduce using rule 25 (statement -> nestedassign SEMICOLON .)
    RIGHTKEY        reduce using rule 25 (statement -> nestedassign SEMICOLON .)


state 186

    (26) statement -> specialfunction SEMICOLON .

    ID              reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    IF              reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    VAR             reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    PRINT           reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    RETURN          reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    FOR             reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    WHILE           reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    DRAW            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SIZE            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    HEAD            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    TAIL            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    LAST            reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SET_TITLE       reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SET_DIMENSION   reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    SET_COLOR       reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    CREATE_OBJECT   reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    CREATE_TEXT     reduce using rule 26 (statement -> specialfunction SEMICOLON .)
    RIGHTKEY        reduce using rule 26 (statement -> specialfunction SEMICOLON .)


state 187

    (47) assign -> ID EQUAL . expression
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 219
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 188

    (48) condition -> IF startscope_action . LEFTPAR expression RIGHTPAR block
    (49) condition -> IF startscope_action . LEFTPAR expression RIGHTPAR block ELSE block

    LEFTPAR         shift and go to state 220


state 189

    (63) write -> PRINT LEFTPAR . recwrite RIGHTPAR
    (64) recwrite -> . expression COMMA recwrite
    (65) recwrite -> . STRING COMMA recwrite
    (66) recwrite -> . expression
    (67) recwrite -> . STRING
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 223
    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    recwrite                       shift and go to state 221
    expression                     shift and go to state 222
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 190

    (68) return -> RETURN expression .

    SEMICOLON       reduce using rule 68 (return -> RETURN expression .)


state 191

    (97) nestedassign -> nestedvalue EQUAL . expression
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    nestedvalue                    shift and go to state 108
    expression                     shift and go to state 224
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 192

    (52) for -> FOR startscope_action . LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block

    LEFTPAR         shift and go to state 225


state 193

    (53) while -> WHILE startscope_action . LEFTPAR expression RIGHTPAR block

    LEFTPAR         shift and go to state 226


state 194

    (7) run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block .

    RIGHTKEY        reduce using rule 7 (run -> VOID FUNC RUN startscope_action LEFTPAR RIGHTPAR block .)


state 195

    (8) vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .

    RIGHTKEY        reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    ID              reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    IF              reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    VAR             reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    PRINT           reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    RETURN          reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    FOR             reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    WHILE           reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    DRAW            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SIZE            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    HEAD            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    TAIL            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    LAST            reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_TITLE       reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_DIMENSION   reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    SET_COLOR       reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_OBJECT   reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)
    CREATE_TEXT     reduce using rule 8 (vars -> VAR recids COLON type EQUAL expression SEMICOLON vars .)


state 196

    (73) expression -> exp RELOP exp .

    SEMICOLON       reduce using rule 73 (expression -> exp RELOP exp .)
    RIGHTPAR        reduce using rule 73 (expression -> exp RELOP exp .)
    COMMA           reduce using rule 73 (expression -> exp RELOP exp .)
    RIGHTBRACKET    reduce using rule 73 (expression -> exp RELOP exp .)


state 197

    (74) expression -> exp LOGIC exp .

    SEMICOLON       reduce using rule 74 (expression -> exp LOGIC exp .)
    RIGHTPAR        reduce using rule 74 (expression -> exp LOGIC exp .)
    COMMA           reduce using rule 74 (expression -> exp LOGIC exp .)
    RIGHTBRACKET    reduce using rule 74 (expression -> exp LOGIC exp .)


state 198

    (76) exp -> term exp_action recexp .

    RELOP           reduce using rule 76 (exp -> term exp_action recexp .)
    LOGIC           reduce using rule 76 (exp -> term exp_action recexp .)
    SEMICOLON       reduce using rule 76 (exp -> term exp_action recexp .)
    RIGHTPAR        reduce using rule 76 (exp -> term exp_action recexp .)
    COMMA           reduce using rule 76 (exp -> term exp_action recexp .)
    RIGHTBRACKET    reduce using rule 76 (exp -> term exp_action recexp .)


state 199

    (79) recexp -> EX . add_operator exp
    (84) add_operator -> .

    LEFTPAR         reduce using rule 84 (add_operator -> .)
    EX              reduce using rule 84 (add_operator -> .)
    STRING          reduce using rule 84 (add_operator -> .)
    ID              reduce using rule 84 (add_operator -> .)
    INT             reduce using rule 84 (add_operator -> .)
    FLOAT           reduce using rule 84 (add_operator -> .)
    BOOL            reduce using rule 84 (add_operator -> .)
    DRAW            reduce using rule 84 (add_operator -> .)
    SIZE            reduce using rule 84 (add_operator -> .)
    HEAD            reduce using rule 84 (add_operator -> .)
    TAIL            reduce using rule 84 (add_operator -> .)
    LAST            reduce using rule 84 (add_operator -> .)
    SET_TITLE       reduce using rule 84 (add_operator -> .)
    SET_DIMENSION   reduce using rule 84 (add_operator -> .)
    SET_COLOR       reduce using rule 84 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 84 (add_operator -> .)
    CREATE_TEXT     reduce using rule 84 (add_operator -> .)

    add_operator                   shift and go to state 227

state 200

    (80) term -> factor term_action recterm .

    EX              reduce using rule 80 (term -> factor term_action recterm .)
    RELOP           reduce using rule 80 (term -> factor term_action recterm .)
    LOGIC           reduce using rule 80 (term -> factor term_action recterm .)
    SEMICOLON       reduce using rule 80 (term -> factor term_action recterm .)
    RIGHTPAR        reduce using rule 80 (term -> factor term_action recterm .)
    COMMA           reduce using rule 80 (term -> factor term_action recterm .)
    RIGHTBRACKET    reduce using rule 80 (term -> factor term_action recterm .)


state 201

    (83) recterm -> TERMS . add_operator term
    (84) add_operator -> .

    LEFTPAR         reduce using rule 84 (add_operator -> .)
    EX              reduce using rule 84 (add_operator -> .)
    STRING          reduce using rule 84 (add_operator -> .)
    ID              reduce using rule 84 (add_operator -> .)
    INT             reduce using rule 84 (add_operator -> .)
    FLOAT           reduce using rule 84 (add_operator -> .)
    BOOL            reduce using rule 84 (add_operator -> .)
    DRAW            reduce using rule 84 (add_operator -> .)
    SIZE            reduce using rule 84 (add_operator -> .)
    HEAD            reduce using rule 84 (add_operator -> .)
    TAIL            reduce using rule 84 (add_operator -> .)
    LAST            reduce using rule 84 (add_operator -> .)
    SET_TITLE       reduce using rule 84 (add_operator -> .)
    SET_DIMENSION   reduce using rule 84 (add_operator -> .)
    SET_COLOR       reduce using rule 84 (add_operator -> .)
    CREATE_OBJECT   reduce using rule 84 (add_operator -> .)
    CREATE_TEXT     reduce using rule 84 (add_operator -> .)

    add_operator                   shift and go to state 228

state 202

    (85) factor -> LEFTPAR expression RIGHTPAR .

    TERMS           reduce using rule 85 (factor -> LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 85 (factor -> LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 85 (factor -> LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 85 (factor -> LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 85 (factor -> LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 85 (factor -> LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 85 (factor -> LEFTPAR expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 85 (factor -> LEFTPAR expression RIGHTPAR .)


state 203

    (96) nestedvalue -> ID DOT ID .

    TERMS           reduce using rule 96 (nestedvalue -> ID DOT ID .)
    EX              reduce using rule 96 (nestedvalue -> ID DOT ID .)
    RELOP           reduce using rule 96 (nestedvalue -> ID DOT ID .)
    LOGIC           reduce using rule 96 (nestedvalue -> ID DOT ID .)
    SEMICOLON       reduce using rule 96 (nestedvalue -> ID DOT ID .)
    EQUAL           reduce using rule 96 (nestedvalue -> ID DOT ID .)
    RIGHTPAR        reduce using rule 96 (nestedvalue -> ID DOT ID .)
    COMMA           reduce using rule 96 (nestedvalue -> ID DOT ID .)
    RIGHTBRACKET    reduce using rule 96 (nestedvalue -> ID DOT ID .)


state 204

    (69) functioncall -> ID LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 229


state 205

    (70) functioncall -> ID LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 70 (functioncall -> ID LEFTPAR RIGHTPAR .)
    EX              reduce using rule 70 (functioncall -> ID LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 70 (functioncall -> ID LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 70 (functioncall -> ID LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 70 (functioncall -> ID LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 70 (functioncall -> ID LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 70 (functioncall -> ID LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 70 (functioncall -> ID LEFTPAR RIGHTPAR .)


state 206

    (71) recfuncexp -> expression . COMMA recfuncexp
    (72) recfuncexp -> expression .

    COMMA           shift and go to state 230
    RIGHTPAR        reduce using rule 72 (recfuncexp -> expression .)


state 207

    (95) listaccess -> ID LEFTBRACKET expression . RIGHTBRACKET SEMICOLON

    RIGHTBRACKET    shift and go to state 231


state 208

    (37) draw -> DRAW LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 232


state 209

    (38) size -> SIZE LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    EX              reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 38 (size -> SIZE LEFTPAR RIGHTPAR .)


state 210

    (39) head -> HEAD LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    EX              reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 39 (head -> HEAD LEFTPAR RIGHTPAR .)


state 211

    (40) tail -> TAIL LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    EX              reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 40 (tail -> TAIL LEFTPAR RIGHTPAR .)


state 212

    (41) last -> LAST LEFTPAR RIGHTPAR .

    TERMS           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    EX              reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    RELOP           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    LOGIC           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    SEMICOLON       reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTPAR        reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    COMMA           reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 41 (last -> LAST LEFTPAR RIGHTPAR .)


state 213

    (42) set_title -> SET_TITLE LEFTPAR expression . RIGHTPAR

    RIGHTPAR        shift and go to state 233


state 214

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 234


state 215

    (44) set_color -> SET_COLOR LEFTPAR expression . COMMA expression COMMA expression RIGHTPAR

    COMMA           shift and go to state 235


state 216

    (45) create_object -> CREATE_OBJECT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 236


state 217

    (46) create_text -> CREATE_TEXT LEFTPAR recfuncexp . RIGHTPAR

    RIGHTPAR        shift and go to state 237


state 218

    (14) block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .

    VOID            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LIST            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TINT            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TFLOAT          reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TSTRING         reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TBOOL           reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TOBJECT         reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    MAIN            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RIGHTKEY        reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ELSE            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    ID              reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    IF              reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    VAR             reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    PRINT           reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    RETURN          reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    FOR             reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    WHILE           reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    DRAW            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SIZE            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    HEAD            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    TAIL            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    LAST            reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_TITLE       reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_DIMENSION   reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    SET_COLOR       reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_OBJECT   reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)
    CREATE_TEXT     reduce using rule 14 (block -> COLON LEFTKEY recstatement RIGHTKEY SEMICOLON .)


state 219

    (47) assign -> ID EQUAL expression .

    SEMICOLON       reduce using rule 47 (assign -> ID EQUAL expression .)


state 220

    (48) condition -> IF startscope_action LEFTPAR . expression RIGHTPAR block
    (49) condition -> IF startscope_action LEFTPAR . expression RIGHTPAR block ELSE block
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 238
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 221

    (63) write -> PRINT LEFTPAR recwrite . RIGHTPAR

    RIGHTPAR        shift and go to state 239


state 222

    (64) recwrite -> expression . COMMA recwrite
    (66) recwrite -> expression .

    COMMA           shift and go to state 240
    RIGHTPAR        reduce using rule 66 (recwrite -> expression .)


state 223

    (65) recwrite -> STRING . COMMA recwrite
    (67) recwrite -> STRING .
    (98) cte -> STRING .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RIGHTPAR resolved using rule 67 (recwrite -> STRING .)
    COMMA           shift and go to state 241
    RIGHTPAR        reduce using rule 67 (recwrite -> STRING .)
    TERMS           reduce using rule 98 (cte -> STRING .)
    EX              reduce using rule 98 (cte -> STRING .)
    RELOP           reduce using rule 98 (cte -> STRING .)
    LOGIC           reduce using rule 98 (cte -> STRING .)

  ! COMMA           [ reduce using rule 98 (cte -> STRING .) ]
  ! RIGHTPAR        [ reduce using rule 98 (cte -> STRING .) ]


state 224

    (97) nestedassign -> nestedvalue EQUAL expression .

    SEMICOLON       reduce using rule 97 (nestedassign -> nestedvalue EQUAL expression .)


state 225

    (52) for -> FOR startscope_action LEFTPAR . assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block
    (47) assign -> . ID EQUAL expression

    ID              shift and go to state 243

    assign                         shift and go to state 242

state 226

    (53) while -> WHILE startscope_action LEFTPAR . expression RIGHTPAR block
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 244
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 227

    (79) recexp -> EX add_operator . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    exp                            shift and go to state 245
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 228

    (83) recterm -> TERMS add_operator . term
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    term                           shift and go to state 246
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 229

    (69) functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 69 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 69 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 69 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 69 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 69 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 69 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 69 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 69 (functioncall -> ID LEFTPAR recfuncexp RIGHTPAR .)


state 230

    (71) recfuncexp -> expression COMMA . recfuncexp
    (71) recfuncexp -> . expression COMMA recfuncexp
    (72) recfuncexp -> . expression
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 206
    recfuncexp                     shift and go to state 247
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 231

    (95) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 248


state 232

    (37) draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 37 (draw -> DRAW LEFTPAR recfuncexp RIGHTPAR .)


state 233

    (42) set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .

    TERMS           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    EX              reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RELOP           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    LOGIC           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    SEMICOLON       reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    COMMA           reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 42 (set_title -> SET_TITLE LEFTPAR expression RIGHTPAR .)


state 234

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA . expression RIGHTPAR
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 249
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 235

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA . expression COMMA expression RIGHTPAR
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 250
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 236

    (45) create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 45 (create_object -> CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR .)


state 237

    (46) create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .

    TERMS           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    EX              reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RELOP           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    LOGIC           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    SEMICOLON       reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTPAR        reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    COMMA           reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 46 (create_text -> CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR .)


state 238

    (48) condition -> IF startscope_action LEFTPAR expression . RIGHTPAR block
    (49) condition -> IF startscope_action LEFTPAR expression . RIGHTPAR block ELSE block

    RIGHTPAR        shift and go to state 251


state 239

    (63) write -> PRINT LEFTPAR recwrite RIGHTPAR .

    SEMICOLON       reduce using rule 63 (write -> PRINT LEFTPAR recwrite RIGHTPAR .)


state 240

    (64) recwrite -> expression COMMA . recwrite
    (64) recwrite -> . expression COMMA recwrite
    (65) recwrite -> . STRING COMMA recwrite
    (66) recwrite -> . expression
    (67) recwrite -> . STRING
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 223
    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 222
    recwrite                       shift and go to state 252
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 241

    (65) recwrite -> STRING COMMA . recwrite
    (64) recwrite -> . expression COMMA recwrite
    (65) recwrite -> . STRING COMMA recwrite
    (66) recwrite -> . expression
    (67) recwrite -> . STRING
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    STRING          shift and go to state 223
    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    recwrite                       shift and go to state 253
    expression                     shift and go to state 222
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 242

    (52) for -> FOR startscope_action LEFTPAR assign . SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block

    SEMICOLON       shift and go to state 254


state 243

    (47) assign -> ID . EQUAL expression

    EQUAL           shift and go to state 187


state 244

    (53) while -> WHILE startscope_action LEFTPAR expression . RIGHTPAR block

    RIGHTPAR        shift and go to state 255


state 245

    (79) recexp -> EX add_operator exp .

    RELOP           reduce using rule 79 (recexp -> EX add_operator exp .)
    LOGIC           reduce using rule 79 (recexp -> EX add_operator exp .)
    SEMICOLON       reduce using rule 79 (recexp -> EX add_operator exp .)
    RIGHTPAR        reduce using rule 79 (recexp -> EX add_operator exp .)
    COMMA           reduce using rule 79 (recexp -> EX add_operator exp .)
    RIGHTBRACKET    reduce using rule 79 (recexp -> EX add_operator exp .)


state 246

    (83) recterm -> TERMS add_operator term .

    EX              reduce using rule 83 (recterm -> TERMS add_operator term .)
    RELOP           reduce using rule 83 (recterm -> TERMS add_operator term .)
    LOGIC           reduce using rule 83 (recterm -> TERMS add_operator term .)
    SEMICOLON       reduce using rule 83 (recterm -> TERMS add_operator term .)
    RIGHTPAR        reduce using rule 83 (recterm -> TERMS add_operator term .)
    COMMA           reduce using rule 83 (recterm -> TERMS add_operator term .)
    RIGHTBRACKET    reduce using rule 83 (recterm -> TERMS add_operator term .)


state 247

    (71) recfuncexp -> expression COMMA recfuncexp .

    RIGHTPAR        reduce using rule 71 (recfuncexp -> expression COMMA recfuncexp .)


state 248

    (95) listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .

    TERMS           reduce using rule 95 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    EX              reduce using rule 95 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RELOP           reduce using rule 95 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    LOGIC           reduce using rule 95 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 95 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTPAR        reduce using rule 95 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    COMMA           reduce using rule 95 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)
    RIGHTBRACKET    reduce using rule 95 (listaccess -> ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON .)


state 249

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 256


state 250

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression . COMMA expression RIGHTPAR

    COMMA           shift and go to state 257


state 251

    (48) condition -> IF startscope_action LEFTPAR expression RIGHTPAR . block
    (49) condition -> IF startscope_action LEFTPAR expression RIGHTPAR . block ELSE block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 258

state 252

    (64) recwrite -> expression COMMA recwrite .

    RIGHTPAR        reduce using rule 64 (recwrite -> expression COMMA recwrite .)


state 253

    (65) recwrite -> STRING COMMA recwrite .

    RIGHTPAR        reduce using rule 65 (recwrite -> STRING COMMA recwrite .)


state 254

    (52) for -> FOR startscope_action LEFTPAR assign SEMICOLON . expression SEMICOLON assign SEMICOLON RIGHTPAR block
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 259
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 255

    (53) while -> WHILE startscope_action LEFTPAR expression RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 260

state 256

    (43) set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 43 (set_dimension -> SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR .)


state 257

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA . expression RIGHTPAR
    (73) expression -> . exp RELOP exp
    (74) expression -> . exp LOGIC exp
    (75) expression -> . exp
    (76) exp -> . term exp_action recexp
    (77) exp -> . term exp_action
    (80) term -> . factor term_action recterm
    (81) term -> . factor term_action
    (85) factor -> . LEFTPAR expression RIGHTPAR
    (86) factor -> . EX cte
    (87) factor -> . cte
    (98) cte -> . STRING
    (99) cte -> . ID
    (100) cte -> . INT
    (101) cte -> . FLOAT
    (102) cte -> . BOOL
    (103) cte -> . nestedvalue
    (104) cte -> . functioncall
    (105) cte -> . listaccess
    (106) cte -> . specialfunction
    (96) nestedvalue -> . ID DOT ID
    (69) functioncall -> . ID LEFTPAR recfuncexp RIGHTPAR
    (70) functioncall -> . ID LEFTPAR RIGHTPAR
    (95) listaccess -> . ID LEFTBRACKET expression RIGHTBRACKET SEMICOLON
    (27) specialfunction -> . draw
    (28) specialfunction -> . size
    (29) specialfunction -> . head
    (30) specialfunction -> . tail
    (31) specialfunction -> . last
    (32) specialfunction -> . set_title
    (33) specialfunction -> . set_dimension
    (34) specialfunction -> . set_color
    (35) specialfunction -> . create_object
    (36) specialfunction -> . create_text
    (37) draw -> . DRAW LEFTPAR recfuncexp RIGHTPAR
    (38) size -> . SIZE LEFTPAR RIGHTPAR
    (39) head -> . HEAD LEFTPAR RIGHTPAR
    (40) tail -> . TAIL LEFTPAR RIGHTPAR
    (41) last -> . LAST LEFTPAR RIGHTPAR
    (42) set_title -> . SET_TITLE LEFTPAR expression RIGHTPAR
    (43) set_dimension -> . SET_DIMENSION LEFTPAR expression COMMA expression RIGHTPAR
    (44) set_color -> . SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR
    (45) create_object -> . CREATE_OBJECT LEFTPAR recfuncexp RIGHTPAR
    (46) create_text -> . CREATE_TEXT LEFTPAR recfuncexp RIGHTPAR

    LEFTPAR         shift and go to state 100
    EX              shift and go to state 101
    STRING          shift and go to state 103
    ID              shift and go to state 104
    INT             shift and go to state 105
    FLOAT           shift and go to state 106
    BOOL            shift and go to state 107
    DRAW            shift and go to state 122
    SIZE            shift and go to state 123
    HEAD            shift and go to state 124
    TAIL            shift and go to state 125
    LAST            shift and go to state 126
    SET_TITLE       shift and go to state 127
    SET_DIMENSION   shift and go to state 128
    SET_COLOR       shift and go to state 129
    CREATE_OBJECT   shift and go to state 130
    CREATE_TEXT     shift and go to state 131

    expression                     shift and go to state 261
    exp                            shift and go to state 97
    term                           shift and go to state 98
    factor                         shift and go to state 99
    cte                            shift and go to state 102
    nestedvalue                    shift and go to state 108
    functioncall                   shift and go to state 109
    listaccess                     shift and go to state 110
    specialfunction                shift and go to state 111
    draw                           shift and go to state 112
    size                           shift and go to state 113
    head                           shift and go to state 114
    tail                           shift and go to state 115
    last                           shift and go to state 116
    set_title                      shift and go to state 117
    set_dimension                  shift and go to state 118
    set_color                      shift and go to state 119
    create_object                  shift and go to state 120
    create_text                    shift and go to state 121

state 258

    (48) condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .
    (49) condition -> IF startscope_action LEFTPAR expression RIGHTPAR block . ELSE block

    ID              reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    IF              reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    VAR             reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    PRINT           reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    RETURN          reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    FOR             reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    WHILE           reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    DRAW            reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    SIZE            reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    HEAD            reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    TAIL            reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    LAST            reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    SET_TITLE       reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    SET_DIMENSION   reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    SET_COLOR       reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    CREATE_OBJECT   reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    CREATE_TEXT     reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    RIGHTKEY        reduce using rule 48 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block .)
    ELSE            shift and go to state 262


state 259

    (52) for -> FOR startscope_action LEFTPAR assign SEMICOLON expression . SEMICOLON assign SEMICOLON RIGHTPAR block

    SEMICOLON       shift and go to state 263


state 260

    (53) while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .

    ID              reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    IF              reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    VAR             reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    PRINT           reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    RETURN          reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    FOR             reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    WHILE           reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    DRAW            reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    SIZE            reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    HEAD            reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    TAIL            reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    LAST            reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    SET_TITLE       reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    SET_DIMENSION   reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    SET_COLOR       reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    CREATE_OBJECT   reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    CREATE_TEXT     reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)
    RIGHTKEY        reduce using rule 53 (while -> WHILE startscope_action LEFTPAR expression RIGHTPAR block .)


state 261

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression . RIGHTPAR

    RIGHTPAR        shift and go to state 264


state 262

    (49) condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 265

state 263

    (52) for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON . assign SEMICOLON RIGHTPAR block
    (47) assign -> . ID EQUAL expression

    ID              shift and go to state 243

    assign                         shift and go to state 266

state 264

    (44) set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .

    TERMS           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    EX              reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RELOP           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    LOGIC           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    SEMICOLON       reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTPAR        reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    COMMA           reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)
    RIGHTBRACKET    reduce using rule 44 (set_color -> SET_COLOR LEFTPAR expression COMMA expression COMMA expression RIGHTPAR .)


state 265

    (49) condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .

    ID              reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    IF              reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    VAR             reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    PRINT           reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    RETURN          reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    FOR             reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    WHILE           reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    DRAW            reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    SIZE            reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    HEAD            reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    TAIL            reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    LAST            reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    SET_TITLE       reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    SET_DIMENSION   reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    SET_COLOR       reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    CREATE_OBJECT   reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    CREATE_TEXT     reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)
    RIGHTKEY        reduce using rule 49 (condition -> IF startscope_action LEFTPAR expression RIGHTPAR block ELSE block .)


state 266

    (52) for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign . SEMICOLON RIGHTPAR block

    SEMICOLON       shift and go to state 267


state 267

    (52) for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON . RIGHTPAR block

    RIGHTPAR        shift and go to state 268


state 268

    (52) for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR . block
    (14) block -> . COLON LEFTKEY recstatement RIGHTKEY SEMICOLON
    (15) block -> . COLON LEFTKEY RIGHTKEY SEMICOLON

    COLON           shift and go to state 79

    block                          shift and go to state 269

state 269

    (52) for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .

    ID              reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    IF              reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    VAR             reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    PRINT           reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    RETURN          reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    FOR             reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    WHILE           reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    DRAW            reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    SIZE            reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    HEAD            reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    TAIL            reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    LAST            reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    SET_TITLE       reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    SET_DIMENSION   reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    SET_COLOR       reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    CREATE_OBJECT   reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    CREATE_TEXT     reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)
    RIGHTKEY        reduce using rule 52 (for -> FOR startscope_action LEFTPAR assign SEMICOLON expression SEMICOLON assign SEMICOLON RIGHTPAR block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 88 resolved as shift
WARNING: shift/reduce conflict for VAR in state 157 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 223 resolved as shift
WARNING: reduce/reduce conflict in state 223 resolved using rule (recwrite -> STRING)
WARNING: rejected rule (cte -> STRING) in state 223
